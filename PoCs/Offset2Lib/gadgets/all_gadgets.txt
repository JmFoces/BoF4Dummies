Gadgets information
============================================================
0x000000000016d39c : adc ah, 0xfb ; call rax
0x000000000016d3f1 : adc ah, bh ; call rax
0x000000000018c600 : adc ah, bh ; hlt ; jmp qword ptr [rcx]
0x000000000014cea8 : adc ah, bh ; in eax, dx ; jmp rax
0x000000000016d4d5 : adc ah, bh ; inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016d3d1 : adc ah, bh ; jmp rax
0x000000000016d4f5 : adc ah, bh ; push rax ; adc esp, edi ; call rax
0x000000000016d31c : adc ah, ch ; sti ; inc dword ptr [rax] ; out dx, al ; sti ; call rax
0x0000000000120d5f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120dc9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d2d2a : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x000000000017b3b8 : adc al, 0 ; add byte ptr [rax], al ; and al, 0x63 ; add byte ptr [rax], al ; nop ; ret
0x0000000000177490 : adc al, 0 ; add byte ptr [rax], al ; cld ; and eax, dword ptr [rax] ; add al, bh ; ret
0x0000000000181480 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000017b350 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x28000062 ; ret
0x0000000000184e50 : adc al, 0 ; add byte ptr [rax], al ; mov esp, 0x980000fd ; ret
0x0000000000183a38 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0xffffffffc3183a4b
0x0000000000181438 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001813f0 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001813d8 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001812f8 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x000000000018fef8 : adc al, 0 ; add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000000e0fde : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000181328 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000021c35 : adc al, 0 ; ret
0x00000000001861ac : adc al, 0x11 ; add dword ptr [rax], eax ; mov al, 2 ; call qword ptr [rax]
0x000000000012a0e5 : adc al, 0x13 ; jmp rdx
0x0000000000091db5 : adc al, 0x16 ; sub eax, edx ; ret
0x0000000000176fac : adc al, 0x1f ; add byte ptr [rax], al ; nop ; xchg eax, ebp ; jmp 0x176fba
0x00000000000e16ea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000db23d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000b6d3e : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000173000 : adc al, 0x25 ; clc ; jmp rsp
0x0000000000030417 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000009aff3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000001882ac : adc al, 0x32 ; add dword ptr [rax], eax ; jmp qword ptr [rbx]
0x0000000000178dac : adc al, 0x3d ; add byte ptr [rax], al ; nop ; std ; jmp 0x178dba
0x00000000001890ac : adc al, 0x40 ; add dword ptr [rax], eax ; adc byte ptr [rbx + rsi*8], cl ; jmp qword ptr [rcx]
0x0000000000078ec0 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001744d8 : adc al, 0x48 ; cli ; jmp rsp
0x0000000000098730 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000099583 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009177b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021b3a : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000191204 : adc al, 0x50 ; cmc ; jmp qword ptr [rdx]
0x00000000000ed8b3 : adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000018b4ac : adc al, 0x64 ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x0000000000174788 : adc al, 0x78 ; cli ; jmp rsp
0x00000000000c2a7d : adc al, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173df0 : adc al, 0x83 ; stc ; jmp rsp
0x000000000019d5ac : adc al, 0x85 ; add al, byte ptr [rax] ; nop ; add al, bh ; call rdx
0x0000000000171b30 : adc al, 0x88 ; cmc ; push rsp ; ret
0x00000000000e883e : adc al, 0x89 ; ret
0x00000000000ebc38 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000006e9fe : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000af324 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000016f718 : adc al, 0x90 ; out dx, eax ; jmp rsp
0x0000000000056d5d : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000001221f0 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000012091e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000012a0e1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000051bc9 : adc al, 0x95 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000000ae63d : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000056e76 : adc al, 0x98 ; add rax, rdx ; jmp rax
0x000000000016f058 : adc al, 0x99 ; in al, dx ; call rsp
0x00000000000bee87 : adc al, 0xa ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000080287 : adc al, 0xa ; jmp r10
0x0000000000091f23 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005f7ef : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000017b824 : adc al, 0xa4 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000bb89d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x0000000000033203 : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x000000000007cd77 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x00000000000c4266 : adc al, 0xbe ; cmove eax, ecx ; ret
0x0000000000046a2c : adc al, 0xc2 ; jmp 0x469d0
0x0000000000035954 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x0000000000035974 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001712a8 : adc al, 0xcc ; jmp rsp
0x00000000000aa312 : adc al, 0xe ; jne 0xaa30d ; ret
0x000000000011d3fb : adc al, 0xe ; mov byte ptr [rax + rcx], dl ; ret
0x000000000011ea31 : adc al, 0xe ; sub eax, edx ; ret
0x000000000018693c : adc al, 0xe0 ; int1 ; jmp qword ptr [rdx]
0x00000000001836c4 : adc al, 0xe2 ; add byte ptr [rax], al ; push rsp ; ret 0xffef
0x0000000000174bf0 : adc al, 0xe7 ; cli ; jmp rsp
0x0000000000002b63 : adc al, 0xe7 ; ret
0x00000000001939ac : adc al, 0xe9 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000014bc01 : adc al, 0xea ; test rdx, rdx ; je 0x14bc11 ; call rdx
0x000000000018079d : adc al, 0xef ; jmp qword ptr [rdx]
0x00000000000990f9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001841ac : adc al, 0xf1 ; add byte ptr [rax], al ; sbb sil, al ; call qword ptr [rcx]
0x000000000017f04c : adc al, 0xf4 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196dc0 : adc al, 0xf6 ; jmp qword ptr [rdi]
0x000000000016d4dd : adc al, 0xfc ; call qword ptr [rax]
0x000000000016d47d : adc al, 0xfc ; call rax
0x000000000014b808 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000091206 : adc al, 7 ; cmp edx, ecx ; je 0x91207 ; ret
0x0000000000091132 : adc al, 7 ; test dl, dl ; jne 0x9112f ; ret
0x000000000011d3fe : adc al, 8 ; ret
0x000000000017c0a0 : adc al, ah ; out dx, al ; jmp qword ptr [rax]
0x0000000000176335 : adc al, byte ptr [rax] ; add al, cl ; push rbp ; jmp 0x176341
0x000000000017c835 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x1d], ch ; out dx, al ; jmp rsi
0x0000000000120f07 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000120f71 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000046f35 : adc al, byte ptr [rax] ; call 0x731c4
0x000000000003e59a : adc al, byte ptr [rax] ; jmp 0x3e563
0x0000000000033427 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000002edbe : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000331ff : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000000780c : adc al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000fd2c : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 8
0x0000000000008784 : adc al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000007404 : adc al, byte ptr [rax] ; or al, 0 ; ret 0xd
0x00000000000543eb : adc al, byte ptr [rbx - 0x10ff43] ; call qword ptr [rax]
0x00000000000496f6 : adc al, byte ptr [rbx - 0x53743] ; call qword ptr [rax]
0x0000000000186355 : adc al, byte ptr [rcx] ; add al, cl ; adc esi, edx ; call rsi
0x0000000000093c24 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000de3a7 : adc al, ch ; ret
0x00000000000443a8 : adc al, ch ; ret 0x14
0x00000000000b01a8 : adc al, ch ; ret 0x59
0x00000000000affa8 : adc al, ch ; ret 0x5b
0x000000000016d334 : adc al, ch ; sti ; jmp rax
0x000000000017dc6c : adc al, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000016d304 : adc al, dh ; sti ; call qword ptr [rax]
0x000000000016d4d9 : adc bh, ah ; jmp qword ptr [rax]
0x0000000000003aa3 : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000014c1b6 : adc bh, byte ptr [rcx + 0x25] ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009d7b8 : adc bh, byte ptr [rcx] ; ja 0x9d7cc ; cmove rax, rcx ; ret
0x000000000016d390 : adc bh, cl ; sti ; jmp rax
0x00000000000fe7f3 : adc bh, dh ; ret 0x8080
0x000000000010b73d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x0000000000034b68 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000085d25 : adc bl, ch ; call 0xffffffffc3d8e67a
0x000000000007ff65 : adc bl, ch ; call 0xffffffffc40088ba
0x0000000000081765 : adc bl, ch ; call 0xffffffffc400a0ba
0x0000000000175e41 : adc bl, ch ; call rcx
0x00000000000446f2 : adc bl, ch ; jno 0x44748 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000085665 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000097d16 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000097086 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000970f7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000097057 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000e3107 : adc bl, dh ; ret
0x0000000000097d15 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000097085 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000007484a : adc byte ptr [r11 + 0xa], r14b ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000014c85d : adc byte ptr [r13 + 0x5b0575c0], r8b ; ret
0x00000000000f4ca1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x000000000007fb92 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000c22c2 : adc byte ptr [r8 + 0x39], cl ; ret
0x0000000000072642 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000b6428 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000007561e : adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x00000000000bc655 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000074081 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000009af6c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009af8e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afcc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009b04e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000ab5fd : adc byte ptr [r9], r13b ; ret 0x428d
0x000000000007e87d : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000c22c3 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000001124a7 : adc byte ptr [rax + 0x39], cl ; ret 0x1372
0x00000000000e9c5f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000c49a1 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x000000000007a3ac : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000cec17 : adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x00000000001124a6 : adc byte ptr [rax + 0x39], r9b ; ret 0x1372
0x00000000000e9c5e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000003449a : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x00000000000e73a1 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000010ecfe : adc byte ptr [rax + 1], bh ; ret
0x000000000009bf3e : adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000044d8e : adc byte ptr [rax + 1], cl ; ret
0x0000000000091776 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000072643 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000038ec7 : adc byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000038ec6 : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000001113f1 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021c34 : adc byte ptr [rax + rax], dl ; ret
0x00000000000b6429 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000009b174 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009b072 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009aff0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000ebc35 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002e0e3 : adc byte ptr [rax - 0x73], cl ; add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000f1643 : adc byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rbp - 0x77] ; ret
0x000000000008a854 : adc byte ptr [rax - 0x73], cl ; jg 0x8a871 ; jne 0x8a848 ; ret
0x00000000000eba03 : adc byte ptr [rax - 0x73], cl ; or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000ebc34 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000021b3d : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000f0b87 : adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000008ac7a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000010da93 : adc byte ptr [rax - 0x76be05ad], cl ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e5adb : adc byte ptr [rax - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret
0x0000000000096a6c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000032ff3 : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000006dee7 : adc byte ptr [rax - 0x77], cl ; jo 0x6df05 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e59c6 : adc byte ptr [rax - 0x77], cl ; jo 0xe59d8 ; ret
0x0000000000109fbb : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000006dea7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000e59fb : adc byte ptr [rax - 0x77], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; jo 0xe5a1d ; ret
0x000000000006deab : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007561f : adc byte ptr [rax - 0x77], cl ; ret 0x29e9
0x00000000000d2fe5 : adc byte ptr [rax - 0x77], cl ; ret 0x349
0x000000000007a953 : adc byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000003aea0 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f5655 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000007b19a : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011db44 : adc byte ptr [rax - 0x77], cl ; ret 0xf1eb
0x000000000013e7e7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000013e823 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000092814 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000090ae5 : adc byte ptr [rax - 0x7cb7e8f4], cl ; ret 0x4801
0x00000000000bc656 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000078473 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000007d574 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000008b0f6 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000008f4c6 : adc byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000018b6a0 : adc byte ptr [rax - 0xc], ch ; call rdx
0x0000000000187370 : adc byte ptr [rax - 0xe], ch ; jmp qword ptr [rcx]
0x000000000007486e : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000197b90 : adc byte ptr [rax - 5], cl ; jmp qword ptr [rdx]
0x00000000000e063b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006701c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000123181 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121111 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000074082 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000109b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000006582 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000000de360 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000038d0c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000010b6ca : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000109f05 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000009bc19 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001611cd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000067824 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x67839 ; ret
0x00000000000f51a3 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000119914 : adc byte ptr [rax], al ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x00000000000f0f23 : adc byte ptr [rax], al ; je 0xf0f36 ; xor eax, eax ; ret
0x00000000000555e7 : adc byte ptr [rax], al ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x0000000000041bf2 : adc byte ptr [rax], al ; ret
0x000000000009af6d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009af8f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afcd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009b04f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009b151 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000016d3f0 : adc byte ptr [rax], dl ; cld ; call rax
0x000000000008ea16 : adc byte ptr [rbp + 0x40e57fc9], al ; or byte ptr [rdi], dh ; ret
0x000000000014c85e : adc byte ptr [rbp + 0x5b0575c0], al ; ret
0x000000000009d6b7 : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000857e8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000008a858 : adc byte ptr [rbp - 0x1b], dh ; ret
0x00000000001053d7 : adc byte ptr [rbp - 0x49f0be37], al ; ret 0x48d
0x00000000000496fd : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x000000000015ef3c : adc byte ptr [rbp - 0x733f000d], cl ; call rax
0x000000000009eb19 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000000f4ca2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x000000000009d8d2 : adc byte ptr [rbp - 0xd], dh ; ret
0x00000000000dfdaf : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x00000000000f4db3 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000007b2cb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002b1b8 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001774fb : adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000007484b : adc byte ptr [rbx + 0xa], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000114f0e : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x00000000001890b0 : adc byte ptr [rbx + rsi*8], cl ; jmp qword ptr [rcx]
0x0000000000076ee2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000713e7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x71401 ; ret
0x00000000001954a0 : adc byte ptr [rbx - 0xa], dh ; call rdi
0x000000000018d6a0 : adc byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x00000000000344bd : adc byte ptr [rbx], 0 ; orpd xmm0, xmm1 ; ret
0x00000000000bbd86 : adc byte ptr [rbx], al ; add cl, ch ; ret 0xfffe
0x000000000019c190 : adc byte ptr [rbx], al ; sti ; jmp qword ptr [rdx]
0x000000000016d448 : adc byte ptr [rbx], bl ; cld ; call qword ptr [rax]
0x000000000016d478 : adc byte ptr [rbx], dl ; cld ; push rax ; adc al, 0xfc ; call rax
0x000000000009d6bb : adc byte ptr [rcx + 0x39], al ; ret
0x000000000003a9fe : adc byte ptr [rcx + 0x39], cl ; ret
0x000000000009d6ba : adc byte ptr [rcx + 0x39], r8b ; ret
0x0000000000100303 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000003a175 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000003a2a4 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000115066 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000009b0d2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009b0b2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000016de50 : adc byte ptr [rcx - 0x687f0004], dl ; cld ; call qword ptr [rax]
0x00000000000479c3 : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000033116 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x000000000011eab3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000122657 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000193920 : adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000016cef8 : adc byte ptr [rcx - 5], ch ; push rax ; push 0xfb ; call rax
0x00000000000a93e4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016d444 : adc byte ptr [rcx], bl ; cld ; call qword ptr [rax]
0x00000000000ab5fe : adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000038906 : adc byte ptr [rcx], ch ; ret 0xc269
0x0000000000076ee5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000181904 : adc byte ptr [rcx], dh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000002b189 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e10c0 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0xe10d9 ; ret
0x000000000011010f : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000016e0cc : adc byte ptr [rdi + 0x69b0fffc], al ; cld ; call rax
0x000000000018cb60 : adc byte ptr [rdi], 0xf5 ; jmp rcx
0x000000000002e4e5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000f8dc2 : adc byte ptr [rdi], cl ; mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x000000000007fb93 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000117799 : adc byte ptr [rdi], cl ; test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x00000000001418c8 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000149933 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000011fca1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fd91 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fbb1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001274bb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000125fbf : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001271bf : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001268bf : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000126bbf : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001262b7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001205f9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000120151 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011f8e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000120331 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fac1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000120511 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120421 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fd63 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fe53 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fc73 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126564 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000127164 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000127464 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126b64 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126864 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000012625c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f9d1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001238fd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012371d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001240f5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123015 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123f15 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011fb83 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f9a3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fa93 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f8b3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000d2671 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x0000000000003901 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000cdb24 : adc byte ptr [rdx + 0xf], al ; mov dh, 4 ; xor byte ptr [rcx], bh ; ret 0x1772
0x000000000012a5d9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000045d33 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001932ab : adc byte ptr [rdx], al ; ret
0x000000000014801b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147eca : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x00000000001474c5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000803d5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000861eb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000009726b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009726a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000017cb19 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x000000000017a539 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xecfb
0x00000000001965e9 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5fe
0x000000000016d4e0 : adc byte ptr [rsi], dl ; cld ; jmp rax
0x0000000000038b5a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000aa91a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000045adf : adc byte ptr [rsp - 4], al ; ret
0x0000000000045b25 : adc byte ptr [rsp - 8], al ; ret
0x0000000000126567 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017d0b4 : adc ch, al ; out dx, al ; jmp qword ptr [rdx]
0x000000000016d29c : adc ch, ch ; sti ; push rax ; out dx, al ; sti ; call rax
0x00000000000c218a : adc cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000ab35d : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000ab2e2 : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010d73b : adc cl, byte ptr [rax + 0x31] ; ret 0x8948
0x00000000000a8d2d : adc cl, byte ptr [rax + 0x63] ; adc dword ptr [rax + 1], ecx ; ret 0x8b41
0x00000000000b642d : adc cl, byte ptr [rax + 1] ; ret
0x000000000009205d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000007eb66 : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000e2528 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000c218b : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000007ff55 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000b6c13 : adc cl, ch ; ret
0x000000000017d734 : adc dh, al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000198591 : adc dh, bh ; jmp qword ptr [rbx]
0x0000000000172199 : adc dh, bh ; jmp rsp
0x0000000000085704 : adc dh, bh ; ret
0x000000000018182c : adc dh, byte ptr [rdx - 4] ; jmp qword ptr [rdx]
0x000000000010a6ca : adc dh, dh ; ret 0x7401
0x0000000000177870 : adc dh, dl ; jmp 0x177876
0x00000000000022d3 : adc dh, dl ; ret
0x000000000016d4d8 : adc dil, spl ; jmp qword ptr [rax]
0x000000000016d308 : adc dl, dh ; sti ; call qword ptr [rax]
0x00000000000a8c25 : adc dword ptr [rax + 0x63], ecx ; adc dword ptr [rax + 1], ecx ; ret 0x8b41
0x00000000000a8c28 : adc dword ptr [rax + 1], ecx ; ret 0x8b41
0x00000000000f4eab : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000060a2e : adc dword ptr [rax - 0x7d], ecx ; ret
0x000000000007fb97 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000c1e91 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x0000000000090bc5 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000124b0b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000017627d : adc dword ptr [rax], eax ; add al, dh ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000001210a7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123019 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c0fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000017622d : adc dword ptr [rax], eax ; add byte ptr [rax], dl ; push rsp ; jmp 0x176239
0x00000000000520af : adc dword ptr [rax], eax ; mov edx, 0x7ef ; call 0x2e2d9
0x0000000000052083 : adc dword ptr [rax], eax ; mov edx, 0x81e ; call 0x2e2d9
0x00000000000493ee : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r9 ; jmp rax
0x0000000000030d6e : adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000038ce4 : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001032b5 : adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000f447e : adc dword ptr [rbx - 0x876b], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001861f5 : adc dword ptr [rcx], eax ; add al, bh ; add dh, dl ; jmp rax
0x0000000000038596 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000041481 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000195e8e : adc dword ptr [rcx], eax ; idiv bh ; sbb al, 0xd ; push rbp ; stc ; cmc ; jmp qword ptr [rdx]
0x000000000019080c : adc dword ptr [rdi - 0xb], eax ; jmp qword ptr [rdx]
0x0000000000034584 : adc dword ptr [rdi], ecx ; ret
0x000000000003454d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00000000000348b2 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000172b1d : adc dword ptr [rdx], eax ; add ah, dl ; mov dh, 0xf7 ; jmp rsp
0x00000000000e4aef : adc dword ptr [rsp], ecx ; call 0x50da5
0x00000000001210a6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009bf3a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000016d45d : adc eax, 0x1700fffc ; cld ; jmp rax
0x000000000016d43d : adc eax, 0x1730fffc ; cld ; call qword ptr [rax]
0x000000000011b137 : adc eax, 0x28b5ec ; add rsp, 8 ; ret
0x0000000000113899 : adc eax, 0x296782 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010bba2 : adc eax, 0x298fd9 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000f54b9 : adc eax, 0x2b3ce2 ; pop rbp ; ret
0x00000000000e381e : adc eax, 0x2c494d ; add rsp, 8 ; ret
0x0000000000047219 : adc eax, 0x35f53a ; call qword ptr [rdx + rax*8 - 0x40]
0x0000000000035dcd : adc eax, 0x36f2ba ; ret
0x000000000002d5c9 : adc eax, 0x3794ef ; ret
0x00000000000d311e : adc eax, 0x39000001 ; ret 0x8e0f
0x000000000009cbca : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001600a4 : adc eax, 0x53fff5c1 ; ret 0xfff5
0x0000000000021618 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000002df26 : adc eax, 0x5d5bffff ; pop r12 ; ret
0x0000000000097a18 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000001765cd : adc eax, 0x70000000 ; jmp 0x1765d9
0x000000000009912c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000120c31 : adc eax, 0x83480000 ; ret 0xe910
0x000000000009ceca : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006a80a : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000012486e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122e39 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000344be : adc eax, dword ptr [rax] ; orpd xmm0, xmm1 ; ret
0x00000000000c37bc : adc eax, dword ptr [rbx + 0x67403f8] ; ret
0x0000000000106fe5 : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000d1e1d : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x0000000000093c28 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000012625f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000044069 : adc eax, eax ; ret
0x00000000000441a6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x000000000015b3e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000f84e9 : adc ebp, dword ptr [rdi - 0xe] ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000f8220 : adc ebp, ebx ; ret
0x000000000006cbdd : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e1d42 : adc ebx, dword ptr [rdi + rdi*8 - 0x763f7a01] ; ret
0x00000000000251d5 : adc ebx, ebp ; ret 0x8b48
0x000000000008ed60 : adc ebx, ebp ; ret 0xf41
0x0000000000192195 : adc ebx, edi ; jmp qword ptr [rdx]
0x00000000001891d1 : adc ebx, esi ; jmp qword ptr [rdx]
0x0000000000039dd0 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000076e8c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000014c141 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000fd802 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002fff3 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000009d59c : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002aad4 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000009fce7 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000c7215 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000000000093df4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x0000000000093e14 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x0000000000093e34 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x0000000000093c7e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000e4a39 : adc edi, dword ptr [rax] ; sub al, 0 ; add rsp, 8 ; ret
0x000000000016d459 : adc edi, esp ; jmp qword ptr [rax]
0x000000000016d479 : adc edi, esp ; push rax ; adc al, 0xfc ; call rax
0x000000000018812e : adc edx, dword ptr [rdi + 0xd1cfff2] ; out 0x95, al ; jmp qword ptr [rdx]
0x000000000009f550 : adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x000000000015c8fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000186359 : adc esi, edx ; call rsi
0x0000000000103296 : adc esi, esi ; ret 0x7507
0x0000000000076a41 : adc esi, esi ; ret 0xf02
0x000000000019488c : adc esp, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000186984 : adc esp, eax ; int1 ; jmp qword ptr [rdx]
0x000000000016d475 : adc esp, edi ; call qword ptr [rax]
0x000000000016d4f9 : adc esp, edi ; call rax
0x000000000016d455 : adc esp, edi ; inc dword ptr [rax + 0x13] ; cld ; jmp qword ptr [rax]
0x0000000000126442 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000085664 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000122fa0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000106fe4 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x00000000000441a5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000198590 : adc sil, dil ; jmp qword ptr [rbx]
0x0000000000085703 : adc sil, r15b ; ret
0x0000000000172197 : add ah, ah ; adc dh, bh ; jmp rsp
0x000000000017627b : add ah, ah ; adc dword ptr [rax], eax ; add al, dh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018b87b : add ah, ah ; add dword ptr [eax], eax ; loopne 0x18b828 ; hlt ; call qword ptr [rax]
0x000000000018947b : add ah, ah ; add dword ptr [r8], eax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018967b : add ah, ah ; add dword ptr [r8], r8d ; mov al, 0x23 ; jmp rdx
0x000000000016fd2f : add ah, ah ; cli ; out dx, eax ; jmp rsp
0x0000000000172457 : add ah, ah ; cmp al, 0xf7 ; call rsp
0x000000000017067f : add ah, ah ; fdiv st(0) ; call rsp
0x0000000000171357 : add ah, ah ; hlt ; jmp rsp
0x000000000016e74f : add ah, ah ; jmp 0x16e757
0x000000000016f4af : add ah, ah ; jo 0x16f4a4 ; call rsp
0x0000000000172637 : add ah, ah ; movsxd rsi, edi ; call rsp
0x0000000000173a57 : add ah, ah ; or cl, bh ; jmp rsp
0x000000000017404f : add ah, ah ; ret
0x0000000000171267 : add ah, ah ; ret 0xfff3
0x0000000000171e5f : add ah, ah ; ret 0xfff6
0x0000000000173f67 : add ah, ah ; scasd eax, dword ptr [rdi] ; stc ; jmp rsp
0x0000000000177a7b : add ah, ah ; sub dword ptr [rax], eax ; add al, ah ; fsubr st(3) ; jmp qword ptr [rdi]
0x000000000019d77b : add ah, ah ; xchg byte ptr [rdx], al ; add byte ptr [rax], dh ; add al, 0xf8 ; jmp qword ptr [rcx]
0x0000000000170fdf : add ah, al ; add al, 0xf3 ; jmp rsp
0x000000000017955b : add ah, al ; add byte ptr [rax], r8b ; nop ; push rdi ; in al, dx ; jmp rax
0x0000000000170abf : add ah, al ; cmp ecx, esi ; jmp rsp
0x00000000001706c7 : add ah, al ; in eax, -0x10 ; call rsp
0x000000000016f36f : add ah, al ; in eax, dx ; call rsp
0x000000000016e877 : add ah, al ; jmp 0x16e87f
0x000000000018c65b : add ah, al ; jne 0x18c668 ; add byte ptr [rax - 4], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001726a7 : add ah, al ; jno 0x1726a6 ; jmp rsp
0x000000000019c25b : add ah, al ; jno 0x19c269 ; add byte ptr [rax + 2], dh ; sti ; jmp qword ptr [rdx]
0x000000000017492f : add ah, al ; mov dl, bh ; jmp rsp
0x000000000017a85b : add ah, al ; push rdi ; add byte ptr [rax], al ; loopne 0x17a8a5 ; in eax, dx ; call qword ptr [rdi]
0x000000000016f997 : add ah, al ; ret 0xffef
0x0000000000171257 : add ah, al ; ret 0xfff3
0x0000000000171e57 : add ah, al ; ret 0xfff6
0x000000000019d55b : add ah, al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; push rdi ; call rcx
0x0000000000179e93 : add ah, bh ; add byte ptr [r8], r8b ; js 0x179e3e ; in al, dx ; jmp qword ptr [rsi]
0x0000000000189493 : add ah, bh ; add dword ptr [r8], eax ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000019377b : add ah, bh ; add dword ptr [rcx], 0xf646e000 ; call qword ptr [rcx]
0x000000000009bb8e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009bbb1 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000177493 : add ah, bh ; and eax, dword ptr [rax] ; add al, bh ; ret
0x000000000016d569 : add ah, bh ; call rax
0x000000000009bc68 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009bb6d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000018c593 : add ah, bh ; je 0x18c5a0 ; add al, bl ; cli ; hlt ; jmp qword ptr [rcx]
0x0000000000191093 : add ah, bh ; mov edi, 0xd8080001 ; cmc ; call rsp
0x000000000017ae93 : add ah, bh ; pop rbp ; add byte ptr [rax], al ; clc ; mov bh, 0xed ; call qword ptr [rax]
0x000000000019c273 : add ah, bl ; jno 0x19c27f ; add byte ptr [rax], cl ; ret 0xfff7
0x000000000018c973 : add ah, bl ; js 0x18c980 ; add byte ptr [rax], bl ; or ebp, esi ; jmp qword ptr [rcx]
0x000000000018e173 : add ah, bl ; nop ; add dword ptr [rax], eax ; js 0x18e1e5 ; cmc ; call qword ptr [rdx]
0x000000000018ed73 : add ah, bl ; pushfq ; add dword ptr [rax], eax ; clc ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000018188b : add ah, bl ; ret
0x0000000000181373 : add ah, bl ; ret 0
0x0000000000187e73 : add ah, bl ; sub eax, 0xeac80001 ; jmp qword ptr [rax]
0x0000000000185465 : add ah, byte ptr [rbx + 0xa] ; ret
0x0000000000093c7b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000018b683 : add ah, ch ; add dword ptr gs:[rax], eax ; or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x000000000018f883 : add ah, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018c783 : add ah, ch ; jbe 0x18c790 ; add byte ptr [rax], cl ; add al, 0xf5 ; jmp qword ptr [rcx]
0x000000000016ead9 : add ah, ch ; jmp rsp
0x0000000000185a83 : add ah, ch ; or dword ptr [rcx], eax ; add byte ptr [rax], cl ; mov dh, cl ; jmp rsi
0x000000000018c083 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x000000000018ee83 : add ah, ch ; popfq ; add dword ptr [rax], eax ; test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x0000000000181483 : add ah, ch ; ret
0x0000000000191383 : add ah, ch ; ret 1
0x000000000018ef83 : add ah, ch ; sahf ; add dword ptr [rax], eax ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x0000000000176a83 : add ah, ch ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], bl ; jmp 0x176a93
0x000000000019d683 : add ah, ch ; test dword ptr [rdx], eax ; add al, bh ; add edi, eax ; call qword ptr [rax]
0x000000000018e283 : add ah, ch ; xchg eax, ecx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000194d7b : add ah, cl ; clc ; add dword ptr [rax], eax ; ret
0x0000000000177a63 : add ah, cl ; sub dword ptr [rax], eax ; add al, cl ; fsubr st(3) ; jmp qword ptr [rcx]
0x0000000000174467 : add ah, dh ; cli ; jmp rsp
0x000000000017898b : add ah, dh ; cmp byte ptr [rax], al ; add byte ptr [rax], ah ; stc ; jmp 0x17899b
0x000000000016e92f : add ah, dh ; iretd ; jmp 0x16e937
0x000000000018c48b : add ah, dh ; jae 0x18c498 ; add al, al ; div esp ; jmp qword ptr [rcx]
0x000000000018c68b : add ah, dh ; jne 0x18c698 ; add al, dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000016ee47 : add ah, dh ; jno 0x16ee3b ; call rsp
0x000000000019c18b : add ah, dh ; jo 0x19c199 ; add byte ptr [rax], dl ; add edi, ebx ; jmp qword ptr [rdx]
0x00000000001835a3 : add ah, dh ; loopne 0x1835ad ; add al, bh ; ret 0xffef
0x000000000018a18b : add ah, dh ; push rax ; add dword ptr [rax], eax ; nop ; cwde ; jmp rdx
0x0000000000171e87 : add ah, dh ; ret
0x000000000018138b : add ah, dh ; ret 0
0x0000000000171e67 : add ah, dh ; ret 0xfff6
0x0000000000174047 : add ah, dh ; ret 0xfff9
0x0000000000173bff : add ah, dh ; stc ; call rsp
0x0000000000197b8b : add ah, dh ; sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; sti ; jmp qword ptr [rdx]
0x000000000018d58b : add ah, dh ; test byte ptr [rcx], al ; add byte ptr [rax + 0x41], al ; cmc ; jmp qword ptr [rbx]
0x0000000000172357 : add ah, dh ; xor edi, esi ; jmp rsp
0x000000000017766b : add ah, dl ; and eax, 0xd1700000 ; jmp 0x17767b
0x0000000000170cb7 : add ah, dl ; fdivrp st(1) ; call rsp
0x000000000018426b : add ah, dl ; int1 ; add byte ptr [rax], al ; xor byte ptr [rbx], al ; cli ; call qword ptr [rax]
0x000000000019206b : add ah, dl ; iretd ; add dword ptr [rax], eax ; nop ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018c76b : add ah, dl ; jbe 0x18c778 ; add al, dh ; add esi, ebp ; jmp qword ptr [rcx]
0x000000000018c16b : add ah, dl ; jo 0x18c178 ; add al, ah ; hlt ; jmp qword ptr [rsi]
0x000000000016f29f : add ah, dl ; loope 0x16f293 ; call rsp
0x0000000000172aaf : add ah, dl ; mov al, 0xf7 ; call rsp
0x0000000000172b1f : add ah, dl ; mov dh, 0xf7 ; jmp rsp
0x000000000016f18f : add ah, dl ; movsd dword ptr [rdi], dword ptr [rsi] ; in al, dx ; jmp rsp
0x000000000016fc9f : add ah, dl ; out dx, eax ; out dx, eax ; jmp rsp
0x0000000000173cef : add ah, dl ; pop rax ; stc ; call rsp
0x000000000018ee6b : add ah, dl ; popfq ; add dword ptr [rax], eax ; nop ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x0000000000174a1f : add ah, dl ; ret
0x000000000017125f : add ah, dl ; ret 0xfff3
0x0000000000176a6b : add ah, dl ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], dl ; jmp 0x176a7b
0x00000000001104ed : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000433d8 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011f1ed : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000123d39 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f211 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010a9df : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x000000000009cf53 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000c94b4 : add al, 0 ; add byte ptr [rbp - 0x7cb7feb5], cl ; ret
0x00000000001111bb : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000066dcf : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006021a : add al, 0 ; add byte ptr [rdi], cl ; ret
0x000000000003df2a : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x000000000019ea01 : add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000019e679 : add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000009699 : add al, 0 ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xd
0x00000000000f07e9 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000007401 : add al, 0 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret 0xd
0x00000000000910e4 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000091044 : add al, 0 ; mov rax, rdi ; ret
0x0000000000041bf1 : add al, 0x10 ; add bl, dh ; ret
0x000000000009bbed : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000aa8a2 : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000ebc3b : add al, 0x16 ; ret
0x0000000000091db1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008161a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001159fa : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000f72fd : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x00000000000a4670 : add al, 0x24 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x0000000000110065 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e13b1 : add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000000eb1d4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eb235 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000010add9 : add al, 0x24 ; call qword ptr [r11]
0x000000000002782e : add al, 0x24 ; call qword ptr [rbx]
0x00000000000d44c2 : add al, 0x24 ; call r12
0x0000000000022f26 : add al, 0x24 ; call rbx
0x000000000007e9de : add al, 0x24 ; je 0x7eaa8 ; call rax
0x000000000009d613 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002211a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e8623 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021b61 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000002eabb : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000017769c : add al, 0x26 ; add byte ptr [rax], al ; nop ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000018e084 : add al, 0x2b ; add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], bl ; jmp qword ptr [rbx]
0x00000000001032b1 : add al, 0x2b ; mov byte ptr [rbx + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103d2f : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000009ae29 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae3b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000083afe : add al, 0x31 ; ret
0x00000000001025e4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000839fa : add al, 0x37 ; ret
0x000000000019889c : add al, 0x38 ; add al, byte ptr [rax] ; mov al, 0x19 ; idiv edi ; ret 2
0x000000000006e8cf : add al, 0x3a ; ret
0x000000000009b928 : add al, 0x41 ; pop rsp ; ret
0x0000000000189ab4 : add al, 0x46 ; add dword ptr [rax], eax ; pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x000000000010c8db : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000da5e4 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000910f5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000091105 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000993cb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00000000000910a5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000010404e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x0000000000144039 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000014404b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000006e613 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c818 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000013449a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000006d2fc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d4b2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000006e214 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000091065 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000091005 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000081dd4 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021bda : add al, 0x49 ; lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000190fbc : add al, 0x4b ; cmc ; jmp qword ptr [rdx]
0x00000000000f1099 : add al, 0x4f ; lea ebp, dword ptr [rdi + rax] ; jmp 0xf10b2
0x00000000000f4534 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000174590 : add al, 0x54 ; cli ; jmp rsp
0x000000000016f400 : add al, 0x54 ; in eax, dx ; call rsp
0x00000000000c387b : add al, 0x5b ; ret
0x00000000000c663a : add al, 0x5d ; pop r12 ; ret
0x00000000001710b8 : add al, 0x5f ; call rsp
0x000000000018b69c : add al, 0x66 ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xc], ch ; call rdx
0x0000000000144047 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000093d0c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000017c09c : add al, 0x70 ; add byte ptr [rax], al ; adc al, ah ; out dx, al ; jmp qword ptr [rax]
0x000000000002e0fd : add al, 0x72 ; or bl, dh ; ret
0x00000000000c9303 : add al, 0x74 ; add al, 0xa8 ; add dword ptr [rbp + rax*4 - 0xa], esi ; ret 0x7408
0x00000000000c42c5 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xc42d9 ; xor eax, eax ; ret
0x00000000000c36bb : add al, 0x75 ; jb 0xc36b9 ; ret 0x7408
0x00000000000c92d9 : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x000000000002aad2 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000df922 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002e4c0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e4e0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e420 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002e4a0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e3c0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002e460 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e400 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002e440 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002e560 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002e3e0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002e480 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002e3a0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000c42b6 : add al, 0x7c ; out dx, eax ; ret
0x0000000000068d7a : add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000006866c : add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000cbf10 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000009bd75 : add al, 0x81 ; je 0x9bd55 ; ret
0x000000000012091b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000009bd71 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x9bd59 ; ret
0x00000000001221f3 : add al, 0x81 ; sub eax, edx ; ret
0x000000000018d29c : add al, 0x82 ; add dword ptr [rax], eax ; sar byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x0000000000090f1a : add al, 0x82 ; add r10, rax ; jmp r10
0x000000000002c8be : add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022450 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000009bd2a : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9bd18 ; ret
0x0000000000088037 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000003342b : add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000073524 : add al, 0x83 ; loopne 0x7352d ; ret
0x0000000000071282 : add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x0000000000106fe6 : add al, 0x83 ; ret
0x000000000009bdc2 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0x9bdc0 ; ret
0x000000000009d8ce : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x000000000018d69c : add al, 0x86 ; add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000043bbe : add al, 0x86 ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x00000000000b3496 : add al, 0x86 ; add rax, rsi ; jmp rax
0x0000000000068720 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x0000000000111140 : add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000009d5b6 : add al, 0x87 ; test r8d, r8d ; jne 0x9d590 ; ret
0x0000000000144036 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000093ceb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000090f77 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x000000000009bd2d : add al, 0x8a ; je 0x9bd15 ; ret
0x000000000009eb17 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000093cd4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000e9a19 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x000000000009d5a0 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000050260 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000068f05 : add al, 0x8e ; add rsi, rax ; jmp rsi
0x00000000000555eb : add al, 0x90 ; add rax, r14 ; jmp rax
0x00000000000493f2 : add al, 0x90 ; add rax, r9 ; jmp rax
0x000000000018e29c : add al, 0x92 ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018e79c : add al, 0x97 ; add dword ptr [rax], eax ; mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x000000000017e99c : add al, 0x99 ; add byte ptr [rax], al ; mov al, 0x1e ; out dx, eax ; jmp rbx
0x000000000018ef9c : add al, 0x9f ; add dword ptr [rax], eax ; mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x00000000000eba09 : add al, 0xa ; ret
0x000000000002edc2 : add al, 0xa2 ; add rdx, rax ; jmp rdx
0x0000000000173620 : add al, 0xa4 ; clc ; jmp rsp
0x00000000000c9305 : add al, 0xa8 ; add dword ptr [rbp + rax*4 - 0xa], esi ; ret 0x7408
0x000000000016e500 : add al, 0xaf ; cld ; push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x000000000002e0e6 : add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000001169d3 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e748 : add al, 0xb8 ; ret
0x000000000009bb39 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000018109c : add al, 0xc0 ; add byte ptr [rax], al ; nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x000000000010bba9 : add al, 0xc2 ; jmp rax
0x0000000000174040 : add al, 0xc2 ; stc ; lcall ptr [rbx + 2] ; add ah, dh ; ret 0xfff9
0x000000000009d7d3 : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001820b4 : add al, 0xcc ; add byte ptr [rax], al ; clc ; ret
0x000000000019209c : add al, 0xd0 ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00000000000b5803 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035997 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000002bc9b : add al, 0xd8 ; test rax, rax ; je 0x2bcab ; call rax
0x0000000000171e84 : add al, 0xd9 ; add dword ptr [rax], eax ; hlt ; ret
0x00000000000440fd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x44159
0x00000000000458ad : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x45909
0x0000000000174188 : add al, 0xe2 ; stc ; jmp rsp
0x00000000000e8835 : add al, 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000a83e7 : add al, 0xe8 ; ret
0x000000000003300d : add al, 0xe8 ; std ; ret
0x0000000000028432 : add al, 0xe9 ; ret 0xfffa
0x00000000000c2432 : add al, 0xeb ; ret 0xc883
0x00000000000da757 : add al, 0xeb ; ret 0xf66
0x000000000002e3c5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000011ea2d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000001244c5 : add al, 0xf ; sub rax, rdx ; ret
0x000000000009cad5 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000977eb : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000ca3a6 : add al, 0xf ; xchg dword ptr [rbx - 0x76fffff7], esp ; ret 0x8d48
0x00000000000cd03a : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000a9752 : add al, 0xf ; xchg eax, ebp ; ret 0xc0e9
0x00000000000a95a6 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x00000000000fd4ad : add al, 0xf ; xchg eax, esi ; ret
0x000000000018429c : add al, 0xf2 ; add byte ptr [rax], al ; sbb byte ptr [rbx], 0xf0 ; call qword ptr [rax]
0x0000000000170fe1 : add al, 0xf3 ; jmp rsp
0x0000000000134803 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006782b : add al, 0xf3 ; ret
0x000000000015fa6d : add al, 0xf5 ; call qword ptr [rdi]
0x000000000018c789 : add al, 0xf5 ; jmp qword ptr [rcx]
0x00000000001603bd : add al, 0xf6 ; jmp rsp
0x0000000000035a11 : add al, 0xf6 ; ret 0x7402
0x00000000000857a9 : add al, 0xf6 ; ret 0x7408
0x000000000019d781 : add al, 0xf8 ; jmp qword ptr [rcx]
0x0000000000173a28 : add al, 0xfd ; clc ; call rsp
0x000000000006c34b : add al, 0xff ; or dh, byte ptr [rbp + 0x23] ; mov eax, r8d ; pop rbx ; ret
0x000000000007117a : add al, 0xff ; or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071274 : add al, 0xff ; or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000071fcf : add al, 0xff ; or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x000000000006bfff : add al, 0xff ; or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067874 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000009cb08 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000677ca : add al, 1 ; ret
0x000000000006784a : add al, 1 ; xor eax, eax ; ret
0x000000000019549d : add al, 2 ; add byte ptr [rax], dl ; jae 0x19549f ; call rdi
0x0000000000148727 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000019549c : add al, 4 ; add al, byte ptr [rax] ; adc byte ptr [rbx - 0xa], dh ; call rdi
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000097938 : add al, 7 ; add byte ptr [rax], al ; ret
0x000000000007ffed : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002e0e9 : add al, 7 ; ret
0x00000000000911d6 : add al, 7 ; test r8b, r8b ; jne 0x911c8 ; ret
0x0000000000072de3 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000007a517 : add al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000091f1f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000aaa7e : add al, 8 ; ret
0x000000000017a85f : add al, ah ; cmp ebp, ebp ; call qword ptr [rdi]
0x000000000017badf : add al, ah ; fldz ; call qword ptr [rdx]
0x0000000000177a7f : add al, ah ; fsubr st(3) ; jmp qword ptr [rdi]
0x000000000018c16f : add al, ah ; hlt ; jmp qword ptr [rsi]
0x000000000018370f : add al, ah ; mov esp, edi ; call qword ptr [rdx]
0x000000000018ff5f : add al, ah ; ret
0x000000000018b87f : add al, ah ; sahf ; hlt ; call qword ptr [rax]
0x000000000018432f : add al, ah ; sbb dl, bh ; call qword ptr [rax]
0x0000000000191d9f : add al, ah ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000182eff : add al, ah ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x000000000000daf7 : add al, al ; call qword ptr [rax]
0x000000000018f1af : add al, al ; cdq ; cmc ; jmp qword ptr [rcx]
0x00000000001788ef : add al, al ; clc ; jmp 0x1788f7
0x000000000018d29f : add al, al ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001976bf : add al, al ; div dh ; call qword ptr [rsi]
0x000000000018c48f : add al, al ; div esp ; jmp qword ptr [rcx]
0x000000000018f8ff : add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f3ef : add al, al ; pushfq ; cmc ; jmp qword ptr [rcx]
0x000000000000ce4f : add al, al ; ret
0x00000000001839ff : add al, al ; ret 0xffef
0x000000000018f56f : add al, al ; sahf ; cmc ; jmp qword ptr [rcx]
0x00000000001920cf : add al, al ; sub dh, dh ; jmp qword ptr [rdi]
0x000000000019209f : add al, al ; sub dh, dh ; jmp qword ptr [rsi]
0x00000000001861f7 : add al, bh ; add dh, dl ; jmp rax
0x000000000019d687 : add al, bh ; add edi, eax ; call qword ptr [rax]
0x0000000000198b07 : add al, bh ; and bh, dh ; jmp rdx
0x000000000019d5b1 : add al, bh ; call rdx
0x0000000000187357 : add al, bh ; jmp qword ptr [ecx]
0x000000000017ae97 : add al, bh ; mov bh, 0xed ; call qword ptr [rax]
0x000000000018ed77 : add al, bh ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000001829f7 : add al, bh ; pop rsi ; out dx, eax ; call rax
0x0000000000177497 : add al, bh ; ret
0x000000000017b5a7 : add al, bh ; ret 0xffee
0x00000000001835a7 : add al, bh ; ret 0xffef
0x0000000000191db7 : add al, bh ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000188d37 : add al, bl ; add bl, dh ; call rsp
0x000000000018c597 : add al, bl ; cli ; hlt ; jmp qword ptr [rcx]
0x000000000018d2b7 : add al, bl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000018f0a7 : add al, bl ; cwde ; cmc ; jmp qword ptr [rcx]
0x0000000000177317 : add al, bl ; mov bh, 0xeb ; call qword ptr [rcx]
0x000000000018f917 : add al, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000097c3b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000017feb7 : add al, bl ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000187447 : add al, bl ; outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x000000000017ab47 : add al, bl ; pop rax ; in eax, dx ; call qword ptr [rsi]
0x00000000000eab28 : add al, bl ; ret
0x0000000000185307 : add al, bl ; sbb cl, dh ; jmp qword ptr [rbx]
0x000000000005dd21 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000127342 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d36a2 : add al, byte ptr [rax + 0x440f02e5] ; shr al, 1 ; ret 0x255
0x000000000007ff51 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000172ffe : add al, byte ptr [rax] ; adc al, 0x25 ; clc ; jmp rsp
0x00000000001744d6 : add al, byte ptr [rax] ; adc al, 0x48 ; cli ; jmp rsp
0x0000000000174786 : add al, byte ptr [rax] ; adc al, 0x78 ; cli ; jmp rsp
0x0000000000173dee : add al, byte ptr [rax] ; adc al, 0x83 ; stc ; jmp rsp
0x0000000000174bee : add al, byte ptr [rax] ; adc al, 0xe7 ; cli ; jmp rsp
0x0000000000196dbe : add al, byte ptr [rax] ; adc al, 0xf6 ; jmp qword ptr [rdi]
0x0000000000197b8e : add al, byte ptr [rax] ; adc byte ptr [rax - 5], cl ; jmp qword ptr [rdx]
0x000000000019549e : add al, byte ptr [rax] ; adc byte ptr [rbx - 0xa], dh ; call rdi
0x000000000019c18e : add al, byte ptr [rax] ; adc byte ptr [rbx], al ; sti ; jmp qword ptr [rdx]
0x000000000019858e : add al, byte ptr [rax] ; adc sil, dil ; jmp qword ptr [rbx]
0x000000000017458e : add al, byte ptr [rax] ; add al, 0x54 ; cli ; jmp rsp
0x000000000017361e : add al, byte ptr [rax] ; add al, 0xa4 ; clc ; jmp rsp
0x0000000000174186 : add al, byte ptr [rax] ; add al, 0xe2 ; stc ; jmp rsp
0x0000000000173a26 : add al, byte ptr [rax] ; add al, 0xfd ; clc ; call rsp
0x000000000002e517 : add al, byte ptr [rax] ; add bl, dh ; ret
0x00000000000e8626 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000084cf3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003dc62 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ad597 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010d865 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb43
0x000000000005dd22 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e2a0a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000011f38d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121fb1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f3b1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000033ed1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000003aeb9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000010f7ef : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000111d4f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000011149f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000011ccd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011393d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000010a934 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001159fc : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000ea7b5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000009cf33 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b5f27 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000106576 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000c7daf : add al, byte ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x6a7e
0x00000000000500b0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000006db60 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036229 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014af34 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000edd11 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000ba030 : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000022046 : add al, byte ptr [rax] ; add cl, ch ; ret 0xfffd
0x00000000000d2e1e : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000000000172eee : add al, byte ptr [rax] ; add r15d, eax ; call rsp
0x0000000000050e20 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x0000000000173c86 : add al, byte ptr [rax] ; and al, 0x52 ; stc ; jmp rsp
0x000000000017498e : add al, byte ptr [rax] ; and al, 0xa0 ; cli ; jmp rsp
0x0000000000172f4e : add al, byte ptr [rax] ; and al, 0xc ; clc ; call rsp
0x00000000001742be : add al, byte ptr [rax] ; and al, 0xc ; cli ; call rsp
0x00000000001740ee : add al, byte ptr [rax] ; and al, 0xd7 ; stc ; jmp rsp
0x0000000000174116 : add al, byte ptr [rax] ; and al, 0xd9 ; stc ; call rsp
0x0000000000199db6 : add al, byte ptr [rax] ; call 0x21199521
0x0000000000196826 : add al, byte ptr [rax] ; call 0xffffffffd3195ee7
0x000000000019d686 : add al, byte ptr [rax] ; clc ; add edi, eax ; call qword ptr [rax]
0x0000000000198b06 : add al, byte ptr [rax] ; clc ; and bh, dh ; jmp rdx
0x0000000000173196 : add al, byte ptr [rax] ; clc ; jmp rsp
0x000000000017451e : add al, byte ptr [rax] ; cli ; jmp qword ptr [rbx + rax*8]
0x00000000001746a6 : add al, byte ptr [rax] ; cli ; jmp rsp
0x000000000019c4f6 : add al, byte ptr [rax] ; cmp byte ptr [rax], al ; sti ; jmp qword ptr [rdx]
0x0000000000174466 : add al, byte ptr [rax] ; hlt ; cli ; jmp rsp
0x0000000000174a26 : add al, byte ptr [rax] ; hlt ; ret
0x0000000000174046 : add al, byte ptr [rax] ; hlt ; ret 0xfff9
0x0000000000173bfe : add al, byte ptr [rax] ; hlt ; stc ; call rsp
0x000000000017501e : add al, byte ptr [rax] ; in al, -0x23 ; std ; call rsp
0x000000000017404e : add al, byte ptr [rax] ; in al, -0x3d ; stc ; call rsp
0x0000000000173f66 : add al, byte ptr [rax] ; in al, -0x51 ; stc ; jmp rsp
0x000000000017368e : add al, byte ptr [rax] ; in al, -0x57 ; clc ; jmp rsp
0x0000000000173a56 : add al, byte ptr [rax] ; in al, 8 ; stc ; jmp rsp
0x0000000000173366 : add al, byte ptr [rax] ; in eax, -0x7d ; clc ; jmp rsp
0x0000000000174c66 : add al, byte ptr [rax] ; in eax, dx ; cli ; call rsp
0x000000000017380e : add al, byte ptr [rax] ; iretd ; clc ; call rsp
0x0000000000173ba6 : add al, byte ptr [rax] ; je 0x173bd8 ; stc ; call rsp
0x0000000000173cae : add al, byte ptr [rax] ; je 0x173d0d ; stc ; call rsp
0x0000000000174c96 : add al, byte ptr [rax] ; je 0x174c92 ; cli ; call rsp
0x00000000001732e6 : add al, byte ptr [rax] ; jnp 0x1732e8 ; jmp rsp
0x00000000001732e5 : add al, byte ptr [rax] ; jnp 0x1732e9 ; jmp rsp
0x00000000001736be : add al, byte ptr [rax] ; jns 0x173678 ; clc ; jmp rsp
0x000000000019c25e : add al, byte ptr [rax] ; jo 0x19c269 ; sti ; jmp qword ptr [rdx]
0x00000000000910c5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017448e : add al, byte ptr [rax] ; mov ah, 0x42 ; cli ; jmp rsp
0x000000000017428e : add al, byte ptr [rax] ; mov ah, 5 ; cli ; call rsp
0x000000000019889e : add al, byte ptr [rax] ; mov al, 0x19 ; idiv edi ; ret 2
0x000000000019c0be : add al, byte ptr [rax] ; mov al, 3 ; sti ; jmp qword ptr [rdx]
0x0000000000091025 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x0000000000174ab6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; retf ; cli ; call rsp
0x000000000014743b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000019d5ae : add al, byte ptr [rax] ; nop ; add al, bh ; call rdx
0x000000000019c88e : add al, byte ptr [rax] ; nop ; loop 0x19c88f ; call rsi
0x0000000000173eb6 : add al, byte ptr [rax] ; nop ; sahf ; stc ; call rsp
0x0000000000174b06 : add al, byte ptr [rax] ; or esi, 0xfffffffa ; jmp rsp
0x00000000000fd81b : add al, byte ptr [rax] ; pop r12 ; ret
0x00000000000732e0 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000e7302 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000017422e : add al, byte ptr [rax] ; push rsp ; idiv ecx ; call rsp
0x000000000019631e : add al, byte ptr [rax] ; ret
0x000000000019c2be : add al, byte ptr [rax] ; ret 0xfff7
0x00000000001733be : add al, byte ptr [rax] ; retf ; mov eax, edi ; call rsp
0x00000000001976be : add al, byte ptr [rax] ; sal dh, 0xf6 ; call qword ptr [rsi]
0x0000000000173c66 : add al, byte ptr [rax] ; stc ; jmp rsp
0x000000000019a13e : add al, byte ptr [rax] ; sub byte ptr [rax - 9], 0xff ; ret
0x00000000001729be : add al, byte ptr [rax] ; test al, 0xf7 ; call rsp
0x0000000000174a06 : add al, byte ptr [rax] ; test al, cl ; cli ; call rsp
0x0000000000174536 : add al, byte ptr [rax] ; test byte ptr [rdi - 6], cl ; push rsp ; ret
0x00000000001730c6 : add al, byte ptr [rax] ; test byte ptr [rdi - 8], bl ; jmp rsp
0x0000000000174c16 : add al, byte ptr [rax] ; test ch, ah ; cli ; jmp rsp
0x00000000001748ee : add al, byte ptr [rax] ; xchg dl, r15b ; jmp rsp
0x0000000000172ade : add al, byte ptr [rax] ; xchg eax, esp ; mov bl, 0xf7 ; jmp rsp
0x000000000017461e : add al, byte ptr [rax] ; xchg eax, esp ; pop rbp ; cli ; jmp rsp
0x000000000017376e : add al, byte ptr [rax] ; xchg eax, esp ; ret
0x0000000000173ab6 : add al, byte ptr [rax] ; xchg eax, esp ; sbb cl, bh ; call rsp
0x0000000000174376 : add al, byte ptr [rax] ; xor al, 0x1b ; cli ; call rsp
0x0000000000174b66 : add al, byte ptr [rax] ; xor al, 0xd1 ; cli ; jmp rsp
0x0000000000174b8e : add al, byte ptr [rax] ; xor al, 0xd5 ; cli ; jmp rsp
0x00000000001741f6 : add al, byte ptr [rax] ; xor al, 0xeb ; stc ; jmp rsp
0x0000000000174cf6 : add al, byte ptr [rax] ; xor al, 0xfb ; cli ; call rsp
0x000000000019d77e : add al, byte ptr [rax] ; xor byte ptr [rax + rdi*8], al ; jmp qword ptr [rcx]
0x000000000019a31e : add al, byte ptr [rax] ; xor byte ptr [rcx - 9], dh ; jmp qword ptr [rax]
0x00000000000280ae : add al, byte ptr [rbx + 0x394907e0] ; ret
0x00000000000f4bee : add al, byte ptr [rcx + 0x39] ; ret
0x0000000000108316 : add al, byte ptr [rcx + 0x5c] ; sub eax, 1 ; pop r13 ; ret
0x000000000017d830 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000185305 : add al, byte ptr [rcx] ; add al, bl ; sbb cl, dh ; jmp qword ptr [rbx]
0x000000000007a562 : add al, byte ptr [rdi + rcx + 0x46] ; ret 0x1ae9
0x0000000000172715 : add al, byte ptr [rdx] ; add byte ptr [rsi + rdi*2 - 9], dh ; jmp rsp
0x000000000018282d : add al, byte ptr [rdx] ; clc ; ret
0x000000000018c0ad : add al, byte ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000183735 : add al, byte ptr [rdx] ; ret
0x000000000017d2fd : add al, byte ptr [rdx] ; xchg eax, edi ; ret
0x0000000000097a3a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000001976bd : add al, byte ptr es:[rax] ; sal dh, 0xf6 ; call qword ptr [rsi]
0x000000000017380d : add al, byte ptr fs:[rax] ; iretd ; clc ; call rsp
0x00000000001730c5 : add al, byte ptr ss:[rax] ; test byte ptr [rdi - 8], bl ; jmp rsp
0x00000000000e1d40 : add al, ch ; adc ebx, dword ptr [rdi + rdi*8 - 0x763f7a01] ; ret
0x0000000000038249 : add al, ch ; add dword ptr [rbx + 6], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000018c6a7 : add al, ch ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018d717 : add al, ch ; cmc ; jmp qword ptr [rcx]
0x00000000000acc2e : add al, ch ; cmp al, 0x6b ; cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f5963 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x000000000018b4c7 : add al, ch ; hlt ; jmp qword ptr [rcx]
0x00000000000e72a1 : add al, ch ; imul eax, esi, 0x3948fff9 ; ret
0x0000000000196827 : add al, ch ; mov ch, 0xf6 ; call rdx
0x00000000000ba0be : add al, ch ; mov eax, ss ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000383bc : add al, ch ; mov esi, 0x5b00065b ; ret
0x000000000018c947 : add al, ch ; or ch, dh ; jmp qword ptr [rcx]
0x000000000018dc47 : add al, ch ; push rbx ; cmc ; jmp qword ptr [rcx]
0x000000000006bef7 : add al, ch ; ret
0x00000000000a99c8 : add al, ch ; ret 0x4b1
0x00000000000728c8 : add al, ch ; ret 0x822
0x00000000000d5e08 : add al, ch ; ret 0xf60f
0x00000000000d7b18 : add al, ch ; ret 0xf6e4
0x00000000000de738 : add al, ch ; ret 0xffcd
0x0000000000183ac7 : add al, ch ; ret 0xffef
0x0000000000052089 : add al, ch ; ret 0xfffd
0x000000000018ab07 : add al, ch ; retf ; jmp rdi
0x00000000000e987d : add al, ch ; sbb eax, 0x89ffffff ; ret 0xfa83
0x00000000000f5911 : add al, ch ; stc ; ret 0xfff8
0x000000000018f377 : add al, ch ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000186357 : add al, cl ; adc esi, edx ; call rsi
0x0000000000178907 : add al, cl ; clc ; jmp 0x17890f
0x0000000000177a67 : add al, cl ; fsubr st(3) ; jmp qword ptr [rcx]
0x000000000018c157 : add al, cl ; hlt ; jmp qword ptr [rcx]
0x000000000018b2b7 : add al, cl ; hlt ; jmp qword ptr [rdi]
0x000000000018ed47 : add al, cl ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000018f4c7 : add al, cl ; popfq ; cmc ; call qword ptr [rsi]
0x0000000000176337 : add al, cl ; push rbp ; jmp 0x17633f
0x000000000018cc47 : add al, cl ; sbb dh, ch ; jmp rdi
0x0000000000191d87 : add al, cl ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000019c40f : add al, dh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000018c76f : add al, dh ; add esi, ebp ; jmp qword ptr [rcx]
0x00000000001884df : add al, dh ; call rsp
0x000000000018d63f : add al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018e32f : add al, dh ; cmc ; jmp qword ptr [rdx]
0x000000000018d2cf : add al, dh ; cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000018f0bf : add al, dh ; cwde ; cmc ; jmp qword ptr [rcx]
0x000000000018f92f : add al, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000017d504 : add al, dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000017627f : add al, dh ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018f41f : add al, dh ; pushfq ; cmc ; jmp qword ptr [rcx]
0x0000000000009fcf : add al, dh ; ret 0xe
0x000000000000ff6f : add al, dh ; ret 0xf
0x000000000018c68f : add al, dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018e23f : add al, dl ; cmc ; jmp qword ptr [rcx]
0x000000000018b4af : add al, dl ; hlt ; jmp qword ptr [rcx]
0x000000000018dc2f : add al, dl ; push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000017d47 : add al, dl ; ret
0x000000000000fd17 : add al, dl ; ret 0xd
0x000000000019885f : add al, dl ; sbb bh, dh ; call qword ptr [rdi]
0x0000000000178e0f : add al, dl ; std ; jmp 0x178e17
0x0000000000191e8f : add al, dl ; sub esi, esi ; jmp qword ptr [rsi]
0x000000000018efcf : add al, dl ; xchg eax, edi ; cmc ; call qword ptr [rax]
0x000000000018282e : add bh, al ; ret
0x000000000014c80f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bbed4 : add bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000019d91f : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000010ec3c : add bh, bh ; loope 0x10ebd5 ; ret
0x000000000004721d : add bh, bh ; push rsp ; ret 0x4cc0
0x00000000000aa2b5 : add bh, bh ; ret
0x000000000019c261 : add bh, bl ; jmp qword ptr [rdx]
0x00000000000db1d2 : add bh, byte ptr [rax + 0x16] ; jbe 0xdb1e9 ; ret
0x00000000000d2cac : add bh, byte ptr [rax + 0xf] ; je 0xd2cc9 ; ret
0x0000000000045a74 : add bh, byte ptr [rax + 1] ; ret
0x00000000000dbfab : add bh, byte ptr [rax - 1] ; ret
0x000000000016e240 : add bh, byte ptr [rcx - 0x476d0004] ; cld ; jmp qword ptr [rdx]
0x000000000014b302 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000019016e : add bh, byte ptr [rip + 0xd1cfff5] ; ja 0x1901bb ; cmc ; jmp qword ptr [rdx]
0x00000000001835ef : add bh, cl ; ret 0xffef
0x0000000000172169 : add bh, dh ; call rsp
0x00000000000e0a2f : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000b9ac1 : add bh, dh ; fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rdi ; ret
0x00000000000c3699 : add bh, dh ; ret
0x00000000000348a7 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x000000000009cc50 : add bl, al ; lea rax, qword ptr [rip + 0xaa147] ; ret
0x000000000009d824 : add bl, al ; lea rax, qword ptr [rip + 0xadaf3] ; ret
0x0000000000084fe4 : add bl, al ; lea rax, qword ptr [rip + 0xc4bc3] ; ret
0x00000000000c1efe : add bl, al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000bc61c : add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000091b51 : add bl, al ; mov r10, r8 ; jmp 0x91b4d
0x00000000000bb58c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000e063d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000000c4211 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000011d96a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000183a40 : add bl, al ; out dx, eax ; jmp qword ptr [rcx]
0x000000000009eaf5 : add bl, al ; ret
0x000000000011161e : add bl, al ; xor eax, eax ; ret
0x0000000000174d41 : add bl, bh ; call rsp
0x0000000000160df7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x000000000019c411 : add bl, bh ; jmp qword ptr [rdx]
0x00000000000bed86 : add bl, byte ptr [r11 + 0x5d] ; ret
0x0000000000191c85 : add bl, byte ptr [rbp + 0xa] ; ret
0x0000000000103cab : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bed87 : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000000bfcbb : add bl, byte ptr [rcx - 0x7c0608bf] ; ret 0x8d01
0x0000000000021557 : add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x000000000006b38c : add bl, ch ; or eax, 0xaa35b10f ; ret
0x00000000000b61c7 : add bl, ch ; ret
0x0000000000050b61 : add bl, ch ; ret 0x2dbe
0x000000000003e59b : add bl, ch ; ret 0x8b44
0x000000000007a34f : add bl, ch ; ret 0x8d48
0x000000000011b7b9 : add bl, ch ; ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x000000000016d2b8 : add bl, ch ; sti ; jmp rax
0x00000000001733bf : add bl, cl ; mov eax, edi ; call rsp
0x00000000001820ff : add bl, cl ; ret
0x0000000000188d39 : add bl, dh ; call rsp
0x0000000000097fef : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000097fff : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000021882 : add bl, dh ; ret
0x00000000000685f6 : add bl, sil ; ret
0x000000000007ec92 : add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000bb727 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b6ade : add byte ptr [r13 - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e5ade : add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000b957d : add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000105bfb : add byte ptr [r8 - 0x7d], r9b ; ret 0x3108
0x0000000000028dad : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000006e00 : add byte ptr [r8], al ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x00000000000d6909 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000008078 : add byte ptr [r8], r8b ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret
0x0000000000179e95 : add byte ptr [r8], r8b ; js 0x179e3c ; in al, dx ; jmp qword ptr [rsi]
0x0000000000071a3b : add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x71a05
0x0000000000179855 : add byte ptr [r8], r8b ; pop rax ; ja 0x17984d ; call qword ptr [rsi]
0x0000000000079cb0 : add byte ptr [r8], r8b ; pop rbx ; ret
0x0000000000175e3f : add byte ptr [rax + 0x10], dh ; jmp 0x175e47
0x00000000001891cf : add byte ptr [rax + 0x11], al ; jmp qword ptr [rdx]
0x000000000018947f : add byte ptr [rax + 0x1b], al ; jmp qword ptr [rcx]
0x0000000000189497 : add byte ptr [rax + 0x1b], bl ; jmp qword ptr [rcx]
0x000000000018950f : add byte ptr [rax + 0x1b], dh ; jmp qword ptr [rcx]
0x000000000016f5cf : add byte ptr [rax + 0x1c], bh ; out dx, al ; call rsp
0x000000000003483b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000bb64f : add byte ptr [rax + 0x20], bh ; ret
0x000000000017f397 : add byte ptr [rax + 0x27], cl ; out dx, eax ; call qword ptr [rcx]
0x00000000000743ff : add byte ptr [rax + 0x29], cl ; ret
0x00000000000cd6dd : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000aec98 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000004e213 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007bdd5 : add byte ptr [rax + 0x29], cl ; ret 0x8944
0x0000000000077e95 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x0000000000198f47 : add byte ptr [rax + 0x30], cl ; idiv edi ; ret 1
0x000000000010d4cc : add byte ptr [rax + 0x31], cl ; ret 0x8949
0x00000000000f82b3 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xfa5c
0x00000000000266db : add byte ptr [rax + 0x39], cl ; ret
0x000000000007bd4d : add byte ptr [rax + 0x39], cl ; ret 0x1374
0x000000000002b034 : add byte ptr [rax + 0x39], cl ; ret 0x7773
0x0000000000078f02 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000f4d80 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000007a5ba : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000091cee : add byte ptr [rax + 0x39], cl ; sal dword ptr [rbp - 0xc], 1 ; ret
0x000000000018d35f : add byte ptr [rax + 0x3b], al ; cmc ; jmp rdi
0x0000000000186bff : add byte ptr [rax + 0x3c], al ; call qword ptr [rcx]
0x000000000018d47f : add byte ptr [rax + 0x3d], al ; cmc ; jmp qword ptr [rcx]
0x00000000000bb69f : add byte ptr [rax + 0x40], bh ; ret
0x000000000018d58f : add byte ptr [rax + 0x41], al ; cmc ; jmp qword ptr [rbx]
0x000000000016cd1d : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000018d7f7 : add byte ptr [rax + 0x46], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000187123 : add byte ptr [rax + 0x47480001], cl ; jmp qword ptr [rcx]
0x0000000000187127 : add byte ptr [rax + 0x47], cl ; jmp qword ptr [rcx]
0x0000000000179907 : add byte ptr [rax + 0x49], cl ; cli ; jmp qword ptr [rcx]
0x00000000001806c7 : add byte ptr [rax + 0x4b], bh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018b23f : add byte ptr [rax + 0x4c], ah ; hlt ; jmp qword ptr [rax]
0x0000000000185217 : add byte ptr [rax + 0x4d], cl ; sti ; call qword ptr [rax]
0x0000000000180ecf : add byte ptr [rax + 0x50], dl ; out dx, eax ; jmp qword ptr [rcx]
0x000000000018dcf7 : add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rax]
0x000000000001f500 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000001829a7 : add byte ptr [rax + 0x5e], bl ; out dx, eax ; jmp rcx
0x00000000000db7ef : add byte ptr [rax + 0x5f], bh ; syscall ; ret
0x00000000000e8628 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001815e7 : add byte ptr [rax + 0x62], cl ; out dx, eax ; call qword ptr [rsi]
0x000000000018e177 : add byte ptr [rax + 0x63], bh ; cmc ; call qword ptr [rdx]
0x00000000000af321 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000bbbfa : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000033200 : add byte ptr [rax + 0x63], cl ; adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x000000000007cd74 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000005f64a : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000033428 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000011113d : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x0000000000068f02 : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x00000000000555e8 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r14 ; jmp rax
0x00000000000493ef : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r9 ; jmp rax
0x000000000009bb36 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x0000000000068e38 : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rax, rcx ; jmp rax
0x0000000000033199 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000681ca : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000c363f : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000000c90d9 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000c41df : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000c14df : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x0000000000124303 : add byte ptr [rax + 0x63], cl ; ret 0xf66
0x0000000000006edf : add byte ptr [rax + 0x65], al ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018e1f7 : add byte ptr [rax + 0x65], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018e20f : add byte ptr [rax + 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018e2cf : add byte ptr [rax + 0x66], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000badef : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000018e2b7 : add byte ptr [rax + 0x66], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000bae0f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x0000000000197dd7 : add byte ptr [rax + 0x6a], ch ; clc ; call qword ptr [rax]
0x00000000000badff : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000bae1f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000baddf : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x0000000000185247 : add byte ptr [rax + 0x6e], ch ; sti ; call qword ptr [rax]
0x00000000000bb01f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x000000000007ff4f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000043047 : add byte ptr [rax + 0x752fff78], al ; xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x0000000000179857 : add byte ptr [rax + 0x77], bl ; in al, dx ; call qword ptr [rsi]
0x000000000009853f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000017671f : add byte ptr [rax + 0x79], dh ; jmp 0x176727
0x000000000018e8e7 : add byte ptr [rax + 0x7a], bh ; cmc ; jmp rax
0x0000000000176a9f : add byte ptr [rax + 0x7c], ah ; jmp 0x176aa7
0x0000000000176aff : add byte ptr [rax + 0x7c], ah ; jmp 0x176b07
0x0000000000176a3f : add byte ptr [rax + 0x7c], al ; jmp 0x176a47
0x0000000000176b47 : add byte ptr [rax + 0x7c], bh ; jmp 0x176b4f
0x0000000000176a87 : add byte ptr [rax + 0x7c], bl ; jmp 0x176a8f
0x0000000000176ab7 : add byte ptr [rax + 0x7c], ch ; jmp 0x176abf
0x0000000000176b17 : add byte ptr [rax + 0x7c], ch ; jmp 0x176b1f
0x0000000000176a57 : add byte ptr [rax + 0x7c], cl ; jmp 0x176a5f
0x0000000000176b2f : add byte ptr [rax + 0x7c], dh ; jmp 0x176b37
0x0000000000176a6f : add byte ptr [rax + 0x7c], dl ; jmp 0x176a77
0x00000000000bb587 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000bb4da : add byte ptr [rax + 0x7f], bh ; ret
0x000000000018905f : add byte ptr [rax + 0xb], ah ; call qword ptr [rdx]
0x00000000000e89df : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x00000000001774f8 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000002e464 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x0000000000083965 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007fa57 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x00000000000855c2 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000004c9c7 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ac684 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000105832 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000bb59f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000de41c : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000002ad6f : add byte ptr [rax + 1], bh ; ret
0x000000000018f103 : add byte ptr [rax + 1], ch ; add byte ptr [rax], bl ; cdq ; cmc ; jmp qword ptr [rcx]
0x0000000000084cf5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000039fde : add byte ptr [rax + 1], cl ; ret
0x000000000009f5cf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000008f7d7 : add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000aa6d7 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000008f5b4 : add byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x8301
0x000000000010bd5f : add byte ptr [rax + 2], bh ; ret
0x000000000019c25f : add byte ptr [rax + 2], dh ; sti ; jmp qword ptr [rdx]
0x000000000019d617 : add byte ptr [rax + 3], ch ; clc ; call qword ptr [rdi]
0x000000000017e2b7 : add byte ptr [rax + 3], ch ; out dx, eax ; call qword ptr [rax]
0x000000000000e09f : add byte ptr [rax + 5], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bb7b6 : add byte ptr [rax + 7], bh ; ret
0x0000000000179137 : add byte ptr [rax + 7], cl ; in al, dx ; call qword ptr [rdx]
0x000000000017911f : add byte ptr [rax + 7], dl ; in al, dx ; call qword ptr [rax]
0x000000000018c9d7 : add byte ptr [rax + 9], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019d817 : add byte ptr [rax + 9], ch ; clc ; call qword ptr [rcx]
0x000000000018c9a7 : add byte ptr [rax + 9], cl ; cmc ; jmp qword ptr [rcx]
0x000000000017fccf : add byte ptr [rax + rax - 0x16], ah ; call rdx
0x0000000000174d3f : add byte ptr [rax + rax - 5], dl ; call rsp
0x0000000000179133 : add byte ptr [rax + rax*2 + 0x7480000], bl ; in al, dx ; call qword ptr [rdx]
0x000000000017911b : add byte ptr [rax + rax*2 + 0x7500000], al ; in al, dx ; call qword ptr [rax]
0x000000000017914b : add byte ptr [rax + rax*2 + 0x7500000], dh ; in al, dx ; call qword ptr [rax]
0x00000000001890ab : add byte ptr [rax + rax*2], dl ; add dword ptr [rax], eax ; adc byte ptr [rbx + rsi*8], cl ; jmp qword ptr [rcx]
0x000000000019111b : add byte ptr [rax + rax*8 - 0x24dfffff], al ; cmc ; jmp qword ptr [rdi]
0x000000000002ffef : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000b8117 : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000018109b : add byte ptr [rax + rax*8], al ; add byte ptr [rax], al ; nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x0000000000097bbc : add byte ptr [rax + rax], 0 ; ret
0x000000000017b5a3 : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; clc ; ret 0xffee
0x0000000000181887 : add byte ptr [rax + rax], al ; add ah, bl ; ret
0x0000000000194d77 : add byte ptr [rax + rax], al ; add ah, cl ; clc ; add dword ptr [rax], eax ; ret
0x0000000000066dce : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000060219 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret
0x000000000019133f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x000000000018133f : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019137f : add byte ptr [rax + rax], cl ; add ah, ch ; ret 1
0x0000000000181387 : add byte ptr [rax + rax], cl ; add ah, dh ; ret 0
0x000000000007b121 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007b2e1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000005f4d : add byte ptr [rax + rax], cl ; nop ; ret
0x000000000000fd2d : add byte ptr [rax + rax], cl ; push rax ; ret 8
0x0000000000008785 : add byte ptr [rax + rax], cl ; ret
0x0000000000007405 : add byte ptr [rax + rax], cl ; ret 0xd
0x00000000001913ef : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000016ead7 : add byte ptr [rax + rax], dh ; in al, dx ; jmp rsp
0x000000000018147f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000181437 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001813ef : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001813d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001812f7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000181327 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000009d4f5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000018f8fb : add byte ptr [rax + rbp*4 + 1], ah ; add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f913 : add byte ptr [rax + rbp*4 + 1], bh ; add al, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f943 : add byte ptr [rax + rbp*4 - 0x59f7ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018f92b : add byte ptr [rax + rbp*4 - 0x5a0fffff], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001729bf : add byte ptr [rax + rbp*4 - 9], ah ; call rsp
0x000000000018f8b3 : add byte ptr [rax + rbp*4], bl ; add dword ptr [rax], eax ; js 0x18f867 ; cmc ; jmp qword ptr [rcx]
0x0000000000176933 : add byte ptr [rax + rbx + 0x7c180000], bl ; jmp 0x176943
0x0000000000171c0f : add byte ptr [rax + rbx - 0xa], dl ; jmp rsp
0x000000000018e8e3 : add byte ptr [rax + rbx*4 + 1], cl ; add byte ptr [rax + 0x7a], bh ; cmc ; jmp rax
0x00000000000ed87d : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000018591b : add byte ptr [rax + rcx - 0x7c0fffff], al ; int1 ; call qword ptr [rsi]
0x00000000000e3bcd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000041d76 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000179903 : add byte ptr [rax + rcx*2], ch ; add byte ptr [rax + 0x49], cl ; cli ; jmp qword ptr [rcx]
0x00000000001744d7 : add byte ptr [rax + rcx*2], dl ; cli ; jmp rsp
0x000000000018d923 : add byte ptr [rax + rcx*4 + 0x47880001], cl ; cmc ; jmp rdx
0x0000000000171d9f : add byte ptr [rax + rcx*4 - 0xa], ah ; jmp rsp
0x0000000000171b2f : add byte ptr [rax + rcx*4], dl ; cmc ; push rsp ; ret
0x0000000000170c4f : add byte ptr [rax + rcx*8 - 0xf], dl ; jmp rsp
0x000000000018c943 : add byte ptr [rax + rdi*2 + 0x8e80001], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000174787 : add byte ptr [rax + rdi*2], dl ; cli ; jmp rsp
0x000000000019889b : add byte ptr [rax + rdi], al ; add al, byte ptr [rax] ; mov al, 0x19 ; idiv edi ; ret 2
0x0000000000178903 : add byte ptr [rax + rdi], ch ; add al, cl ; clc ; jmp 0x178913
0x00000000001788eb : add byte ptr [rax + rdi], dl ; add al, al ; clc ; jmp 0x1788fb
0x000000000019a13b : add byte ptr [rax + rdx*2 + 0x68800002], ah ; idiv edi ; ret
0x000000000018e11b : add byte ptr [rax + rdx*4 + 0x62f00001], al ; cmc ; call qword ptr [rax]
0x000000000016f717 : add byte ptr [rax + rdx*4], dl ; out dx, eax ; jmp rsp
0x0000000000171f57 : add byte ptr [rax + rdx*8 - 0xa], dh ; call rsp
0x000000000019209b : add byte ptr [rax + rdx*8], al ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001920cb : add byte ptr [rax + rdx*8], dh ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rdi]
0x000000000018c153 : add byte ptr [rax + rsi*2 - 0xd37ffff], bh ; hlt ; jmp qword ptr [rcx]
0x000000000018c123 : add byte ptr [rax + rsi*2 - 0xd77ffff], cl ; hlt ; jmp qword ptr [rax]
0x000000000019c0bb : add byte ptr [rax + rsi*2], ah ; add al, byte ptr [rax] ; mov al, 3 ; sti ; jmp qword ptr [rdx]
0x000000000017c09b : add byte ptr [rax + rsi*2], al ; add byte ptr [rax], al ; adc al, ah ; out dx, al ; jmp qword ptr [rax]
0x000000000017c113 : add byte ptr [rax + rsi*2], bh ; add byte ptr [rax - 0x20], bl ; out dx, al ; call qword ptr [rax]
0x000000000018acdf : add byte ptr [rax - 0x11], dl ; call qword ptr [rcx]
0x00000000001765d0 : add byte ptr [rax - 0x15], dh ; call qword ptr [rax]
0x00000000001011e0 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894c
0x000000000018becf : add byte ptr [rax - 0x16], ah ; hlt ; call qword ptr [rsi]
0x00000000000302bc : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x000000000017cc2f : add byte ptr [rax - 0x17], al ; out dx, al ; jmp rsp
0x0000000000187c37 : add byte ptr [rax - 0x19], bh ; call qword ptr [rbx]
0x0000000000187c07 : add byte ptr [rax - 0x19], ch ; call qword ptr [rsi]
0x0000000000187c1f : add byte ptr [rax - 0x19], dh ; call qword ptr [rbx]
0x000000000011073a : add byte ptr [rax - 0x1a8b7f80], 0x89 ; ret 0x8948
0x000000000017c837 : add byte ptr [rax - 0x1d], ch ; out dx, al ; jmp rsi
0x000000000017c117 : add byte ptr [rax - 0x20], bl ; out dx, al ; call qword ptr [rax]
0x00000000001842ff : add byte ptr [rax - 0x21], dl ; stc ; call qword ptr [rax]
0x0000000000183bd7 : add byte ptr [rax - 0x24], ch ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017bc7f : add byte ptr [rax - 0x27], ah ; out dx, al ; call qword ptr [rax]
0x0000000000177ab7 : add byte ptr [rax - 0x27], ch ; jmp 0x177abf
0x0000000000035b31 : add byte ptr [rax - 0x2d], cl ; loopne 0x35b87 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000017766f : add byte ptr [rax - 0x2f], dh ; jmp 0x177677
0x0000000000033947 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000ab244 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000ab194 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x00000000000b7cbf : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009cf3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000009cf1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000009cf7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009cf2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000009cf6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000018423f : add byte ptr [rax - 0x3c], ah ; stc ; call qword ptr [rax]
0x000000000017b3a7 : add byte ptr [rax - 0x3d], bh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000177457 : add byte ptr [rax - 0x3d], cl ; jmp 0x17745f
0x0000000000034b45 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x0000000000034a9e : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x000000000003489a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002af2d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000017b2ef : add byte ptr [rax - 0x40], ah ; out dx, al ; call qword ptr [rdx]
0x000000000017a3bf : add byte ptr [rax - 0x45], ah ; in al, dx ; jmp qword ptr [rbx]
0x000000000017a3a7 : add byte ptr [rax - 0x45], bl ; in al, dx ; call qword ptr [rdi]
0x00000000000aeaf5 : add byte ptr [rax - 0x46], cl ; ret
0x0000000000183747 : add byte ptr [rax - 0x47], bl ; out dx, eax ; call qword ptr [rdx]
0x000000000003a300 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000018bb27 : add byte ptr [rax - 0x49], bl ; hlt ; jmp rdx
0x0000000000058991 : add byte ptr [rax - 0x49f0a206], al ; ret 0x840f
0x000000000018faff : add byte ptr [rax - 0x50], dl ; cmc ; call qword ptr [rdx]
0x00000000001716cf : add byte ptr [rax - 0x58], bh ; hlt ; jmp rsp
0x000000000018f89f : add byte ptr [rax - 0x5b], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018f8b7 : add byte ptr [rax - 0x5b], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018f887 : add byte ptr [rax - 0x5b], cl ; cmc ; jmp qword ptr [rcx]
0x000000000000657f : add byte ptr [rax - 0x5e], dl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001923af : add byte ptr [rax - 0x61], ah ; sti ; jmp qword ptr [rsi]
0x00000000001874e7 : add byte ptr [rax - 0x61], bh ; call qword ptr [rax]
0x00000000001874ff : add byte ptr [rax - 0x61], dh ; call qword ptr [rax]
0x000000000018f527 : add byte ptr [rax - 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018f3bf : add byte ptr [rax - 0x64], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000179e97 : add byte ptr [rax - 0x64], bh ; in al, dx ; jmp qword ptr [rsi]
0x000000000018f3a7 : add byte ptr [rax - 0x64], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018f2ff : add byte ptr [rax - 0x65], al ; cmc ; jmp qword ptr [rcx]
0x000000000018f14b : add byte ptr [rax - 0x669fffff], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018f227 : add byte ptr [rax - 0x66], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018f133 : add byte ptr [rax - 0x66b7ffff], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018f11b : add byte ptr [rax - 0x66cfffff], al ; cmc ; jmp qword ptr [rcx]
0x000000000018f14f : add byte ptr [rax - 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018f167 : add byte ptr [rax - 0x67], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018f137 : add byte ptr [rax - 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018ef57 : add byte ptr [rax - 0x69], ch ; cmc ; jmp qword ptr [rcx]
0x000000000015f004 : add byte ptr [rax - 0x6fef000d], dl ; jmp qword ptr [rax]
0x0000000000021c2f : add byte ptr [rax - 0x73], cl ; add eax, 0x141094 ; ret
0x0000000000021c3f : add byte ptr [rax - 0x73], cl ; add eax, 0x1431c1 ; ret
0x0000000000022936 : add byte ptr [rax - 0x73], cl ; and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x000000000009d53f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009d54f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000010081f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a9035 ; call rax
0x000000000009d52f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000021af2 : add byte ptr [rax - 0x73], cl ; jl 0x21b22 ; and al, ch ; ret
0x000000000004122d : add byte ptr [rax - 0x73], cl ; xor eax, 0x19b ; call rax
0x000000000006b4f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x0000000000076df8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe910 ; call rax
0x00000000000769f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffed10 ; call rax
0x0000000000075bd8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffb30 ; call rax
0x000000000006b7a0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd88 ; call rax
0x0000000000075970 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd98 ; call rax
0x00000000000c22bf : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007846f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e13ae : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x28 ; ret
0x000000000010bba6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000b957a : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000038281 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000aca8f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011b28f : add byte ptr [rax - 0x75], cl ; add eax, 0x287869 ; jmp rax
0x000000000011b2f0 : add byte ptr [rax - 0x75], cl ; add eax, 0x28b430 ; call qword ptr [rax]
0x000000000011acd4 : add byte ptr [rax - 0x75], cl ; add eax, 0x28ba4c ; call qword ptr [rax]
0x000000000007712f : add byte ptr [rax - 0x75], cl ; add eax, 0x32ef09 ; ret
0x000000000002af5f : add byte ptr [rax - 0x75], cl ; add eax, 0x37b9b9 ; ret
0x000000000002310f : add byte ptr [rax - 0x75], cl ; add eax, 0x3872b1 ; ret
0x00000000000230ff : add byte ptr [rax - 0x75], cl ; add eax, 0x3872d1 ; ret
0x00000000000e208e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000002e1e5 : add byte ptr [rax - 0x75], cl ; cmp al, ch ; ret 0x3b8
0x000000000006f710 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000762c6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000023058 : add byte ptr [rax - 0x75], cl ; jnp 0x2307a ; call rax
0x000000000007083f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000e77bf : add byte ptr [rax - 0x75], cl ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000116457 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000011da86 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000e77b7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007a077 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000012ba0f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000eab31 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000056891 : add byte ptr [rax - 0x75], cl ; xor eax, 0x34e6c7 ; call rax
0x0000000000051305 : add byte ptr [rax - 0x75], cl ; xor eax, 0x353c53 ; call rax
0x000000000004bc51 : add byte ptr [rax - 0x75], cl ; xor eax, 0x359307 ; call rax
0x0000000000046405 : add byte ptr [rax - 0x75], cl ; xor eax, 0x35eb53 ; call rax
0x00000000000e3386 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000006bcb6 : add byte ptr [rax - 0x76b80000], al ; ret 0x2975
0x000000000006a4f1 : add byte ptr [rax - 0x76b80000], al ; ret 0x3675
0x00000000000f72ff : add byte ptr [rax - 0x76b80000], al ; ret 0x3875
0x000000000018edbf : add byte ptr [rax - 0x77], al ; cmc ; jmp qword ptr [rcx]
0x000000000010add6 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x0000000000083ce0 : add byte ptr [rax - 0x77], cl ; add eax, 0x323c20 ; ret
0x000000000007fa1e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000f76ef : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003820f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x00000000000e31e8 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f607f : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x000000000007715f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000456dc : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000009eae7 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x0000000000074cd7 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006701e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007c3d1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000000cfcf0 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x21e8
0x000000000007077f : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x000000000006e725 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e605 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000c38ff : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c0ba7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000011d541 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000010b389 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x0000000000069aa5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfb59
0x000000000007c66f : add byte ptr [rax - 0x77], cl ; imul ecx ; ret
0x000000000006c3cf : add byte ptr [rax - 0x77], cl ; jmp 0x48f54d28
0x00000000000b0929 : add byte ptr [rax - 0x77], cl ; jmp 0x49cd927f
0x00000000000b0e76 : add byte ptr [rax - 0x77], cl ; jmp 0x49cd97cc
0x0000000000069fe5 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000073aa3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x000000000007f58b : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010a9e2 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x000000000010c01c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f419a : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r12 ; call rax
0x0000000000116732 : add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000007c4e9 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000025953 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000106c3a : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000a5c4f : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000433da : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006bcb9 : add byte ptr [rax - 0x77], cl ; ret 0x2975
0x000000000006a4f4 : add byte ptr [rax - 0x77], cl ; ret 0x3675
0x00000000000f7302 : add byte ptr [rax - 0x77], cl ; ret 0x3875
0x000000000006a80c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000042ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000106cb5 : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x00000000000bdde1 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000d2cdf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d947 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000002b41f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000004d73e : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000000680ac : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007ee0a : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000004cf4d : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002d02f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006b3d8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ae82f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000e242a : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000010d867 : add byte ptr [rax - 0x77], cl ; ret 0xb43
0x000000000005252d : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000000ee282 : add byte ptr [rax - 0x77], cl ; ret 0xb9
0x00000000000b869e : add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x0000000000020fb8 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d9a2a : add byte ptr [rax - 0x77], cl ; ret 0xc889
0x00000000000e383b : add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000a114e : add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000b5a58 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000041d7a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000004df54 : add byte ptr [rax - 0x77], cl ; ret 0xe5e9
0x000000000003aebd : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x00000000000b68ca : add byte ptr [rax - 0x77], cl ; ret 0xeee9
0x000000000008b997 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000005d57c : add byte ptr [rax - 0x77], cl ; ret 0xfbe8
0x000000000007f962 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000003824e : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000005907f : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000091342 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x0000000000076165 : add byte ptr [rax - 0x77], cl ; sti ; je 0x76177 ; pop rbx ; ret
0x000000000011156c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x111584 ; ret
0x0000000000111584 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x11159c ; ret
0x0000000000111dcc : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x111de4 ; ret
0x0000000000111de4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x111dfc ; ret
0x0000000000111e14 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x111e2c ; ret
0x000000000007e92f : add byte ptr [rax - 0x77], cl ; xor eax, 0x328f39 ; ret
0x00000000000f8cc7 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000018ece7 : add byte ptr [rax - 0x78], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000185a1f : add byte ptr [rax - 0x79], dl ; int1 ; jmp qword ptr [rcx]
0x00000000000a8a64 : add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000117d39 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000060cc0 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x35
0x00000000000944e3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001143f3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000145bf7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x000000000007c3fc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002e223 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007ac27 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000004af83 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ae66 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000dbb2f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000fef1f : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000014c376 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x14c387 ; ret
0x0000000000022b87 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000007a307 : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x0000000000105bfc : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000009b35f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000e28eb : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000006b5d4 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000031094 : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000022f3e : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000632ef : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000039e97 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000ea07a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000009163f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000028360 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000ad7ef : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000011eaaf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000063057 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000103837 : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x0000000000077e3c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x0000000000084eef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084e7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000a3657 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000ca87f : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000000f900e : add byte ptr [rax - 0x7d], cl ; ret 0x901
0x00000000000ff9c0 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000120a93 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005ac2f : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000011ead3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000033ed3 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000091e5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002a9f3 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000043bef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002bd5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x00000000000ef637 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000003b40f : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000016cf28 : add byte ptr [rax - 0x7e2f0005], 0xfb ; jmp qword ptr [rax]
0x00000000000ab2fc : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000006dabd : add byte ptr [rax - 0x7f], cl ; ret
0x000000000002e824 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000013202b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000011bf82 : add byte ptr [rax - 0x9ffffff], al ; ret
0x000000000018c3f7 : add byte ptr [rax - 0xa], cl ; hlt ; jmp rbx
0x00000000001882af : add byte ptr [rax - 0xe], al ; jmp qword ptr [rbx]
0x0000000000178fbf : add byte ptr [rax - 1], al ; jmp 0x178fc7
0x0000000000178fef : add byte ptr [rax - 1], al ; jmp 0x178ff7
0x000000000011ccba : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033bed : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000350bd : add byte ptr [rax - 1], bh ; ret
0x00000000000774de : add byte ptr [rax - 1], dil ; ret
0x0000000000178f17 : add byte ptr [rax - 2], bl ; jmp 0x178f1f
0x000000000018c62f : add byte ptr [rax - 4], al ; hlt ; jmp qword ptr [rcx]
0x000000000018c647 : add byte ptr [rax - 4], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018c65f : add byte ptr [rax - 4], dh ; hlt ; jmp qword ptr [rcx]
0x000000000014ce9f : add byte ptr [rax - 4], dh ; in eax, dx ; inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x0000000000174dff : add byte ptr [rax - 5], al ; jmp rsp
0x0000000000183db7 : add byte ptr [rax - 5], bl ; out dx, eax ; jmp rdx
0x0000000000178cc7 : add byte ptr [rax - 6], cl ; jmp 0x178ccf
0x0000000000172877 : add byte ptr [rax - 9], dl ; jmp rsp
0x000000000019d5ab : add byte ptr [rax*4 + 0x900002], dl ; clc ; call rdx
0x000000000006bef4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000a99c5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x4b1
0x00000000000728c5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x822
0x00000000000b3434 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d9a52 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014c80b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000001169eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000013480b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000e77b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009d7c3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001057f3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002c7b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000dfdbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000008c73b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000051bcb : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000147741 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000069840 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000034def : add byte ptr [rax], 0 ; ret
0x000000000016d568 : add byte ptr [rax], 0xfc ; call rax
0x000000000018c79f : add byte ptr [rax], ah ; add al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000f0bd7 : add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017498f : add byte ptr [rax], ah ; cli ; jmp rsp
0x000000000018c30f : add byte ptr [rax], ah ; cmc ; hlt ; jmp qword ptr [rcx]
0x00000000001926ef : add byte ptr [rax], ah ; cmp dh, dh ; call qword ptr [rax]
0x000000000019111f : add byte ptr [rax], ah ; fcomi st(5) ; jmp qword ptr [rdi]
0x00000000001769df : add byte ptr [rax], ah ; jl 0x1769d2 ; call qword ptr [rbx]
0x00000000001771bf : add byte ptr [rax], ah ; lodsd eax, dword ptr [rsi] ; jmp 0x1771c7
0x000000000002e4a4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x0000000000188fdf : add byte ptr [rax], ah ; or dh, bl ; jmp qword ptr [rcx]
0x000000000017a9ff : add byte ptr [rax], ah ; push rdi ; in eax, dx ; call rdi
0x000000000000a44f : add byte ptr [rax], ah ; ret 0xb
0x000000000018c7cf : add byte ptr [rax], ah ; sbb edi, ecx ; call qword ptr [rax]
0x000000000017898f : add byte ptr [rax], ah ; stc ; jmp 0x178997
0x000000000018a02f : add byte ptr [rax], ah ; xchg eax, ebp ; jmp rdx
0x000000000018147e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000181436 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001813ee : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001813d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001812f6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000181326 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001861aa : add byte ptr [rax], al ; adc al, 0x11 ; add dword ptr [rax], eax ; mov al, 2 ; call qword ptr [rax]
0x0000000000176faa : add byte ptr [rax], al ; adc al, 0x1f ; add byte ptr [rax], al ; nop ; xchg eax, ebp ; jmp 0x176fbc
0x00000000001882aa : add byte ptr [rax], al ; adc al, 0x32 ; add dword ptr [rax], eax ; jmp qword ptr [rbx]
0x0000000000178daa : add byte ptr [rax], al ; adc al, 0x3d ; add byte ptr [rax], al ; nop ; std ; jmp 0x178dbc
0x00000000001890aa : add byte ptr [rax], al ; adc al, 0x40 ; add dword ptr [rax], eax ; adc byte ptr [rbx + rsi*8], cl ; jmp qword ptr [rcx]
0x000000000018b4aa : add byte ptr [rax], al ; adc al, 0x64 ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000019d5aa : add byte ptr [rax], al ; adc al, 0x85 ; add al, byte ptr [rax] ; nop ; add al, bh ; call rdx
0x000000000016f716 : add byte ptr [rax], al ; adc al, 0x90 ; out dx, eax ; jmp rsp
0x000000000016f056 : add byte ptr [rax], al ; adc al, 0x99 ; in al, dx ; call rsp
0x00000000001836c2 : add byte ptr [rax], al ; adc al, 0xe2 ; add byte ptr [rax], al ; push rsp ; ret 0xffef
0x00000000001939aa : add byte ptr [rax], al ; adc al, 0xe9 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x00000000001841aa : add byte ptr [rax], al ; adc al, 0xf1 ; add byte ptr [rax], al ; sbb sil, al ; call qword ptr [rcx]
0x000000000017c09e : add byte ptr [rax], al ; adc al, ah ; out dx, al ; jmp qword ptr [rax]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000780a : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000fd2a : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 8
0x0000000000008782 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000007402 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret 0xd
0x000000000017786e : add byte ptr [rax], al ; adc dh, dl ; jmp 0x177878
0x0000000000191479 : add byte ptr [rax], al ; add ah, ah ; ret
0x0000000000177491 : add byte ptr [rax], al ; add ah, bh ; and eax, dword ptr [rax] ; add al, bh ; ret
0x000000000019c271 : add byte ptr [rax], al ; add ah, bl ; jno 0x19c281 ; add byte ptr [rax], cl ; ret 0xfff7
0x0000000000181889 : add byte ptr [rax], al ; add ah, bl ; ret
0x0000000000181371 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x0000000000181481 : add byte ptr [rax], al ; add ah, ch ; ret
0x0000000000191381 : add byte ptr [rax], al ; add ah, ch ; ret 1
0x0000000000194d79 : add byte ptr [rax], al ; add ah, cl ; clc ; add dword ptr [rax], eax ; ret
0x00000000001835a1 : add byte ptr [rax], al ; add ah, dh ; loopne 0x1835af ; add al, bh ; ret 0xffef
0x0000000000181389 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x0000000000181469 : add byte ptr [rax], al ; add ah, dl ; ret
0x000000000017769a : add byte ptr [rax], al ; add al, 0x26 ; add byte ptr [rax], al ; nop ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000018e082 : add byte ptr [rax], al ; add al, 0x2b ; add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], bl ; jmp qword ptr [rbx]
0x0000000000189ab2 : add byte ptr [rax], al ; add al, 0x46 ; add dword ptr [rax], eax ; pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x000000000016f3fe : add byte ptr [rax], al ; add al, 0x54 ; in eax, dx ; call rsp
0x000000000018b69a : add byte ptr [rax], al ; add al, 0x66 ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xc], ch ; call rdx
0x000000000017c09a : add byte ptr [rax], al ; add al, 0x70 ; add byte ptr [rax], al ; adc al, ah ; out dx, al ; jmp qword ptr [rax]
0x000000000018d29a : add byte ptr [rax], al ; add al, 0x82 ; add dword ptr [rax], eax ; sar byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x000000000018d69a : add byte ptr [rax], al ; add al, 0x86 ; add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018e29a : add byte ptr [rax], al ; add al, 0x92 ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018e79a : add byte ptr [rax], al ; add al, 0x97 ; add dword ptr [rax], eax ; mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x000000000017e99a : add byte ptr [rax], al ; add al, 0x99 ; add byte ptr [rax], al ; mov al, 0x1e ; out dx, eax ; jmp rbx
0x000000000018ef9a : add byte ptr [rax], al ; add al, 0x9f ; add dword ptr [rax], eax ; mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x000000000018109a : add byte ptr [rax], al ; add al, 0xc0 ; add byte ptr [rax], al ; nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x00000000001820b2 : add byte ptr [rax], al ; add al, 0xcc ; add byte ptr [rax], al ; clc ; ret
0x000000000019209a : add byte ptr [rax], al ; add al, 0xd0 ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x000000000018429a : add byte ptr [rax], al ; add al, 0xf2 ; add byte ptr [rax], al ; sbb byte ptr [rbx], 0xf0 ; call qword ptr [rax]
0x000000000019549a : add byte ptr [rax], al ; add al, 4 ; add al, byte ptr [rax] ; adc byte ptr [rbx - 0xa], dh ; call rdi
0x000000000017b5a5 : add byte ptr [rax], al ; add al, bh ; ret 0xffee
0x00000000000f5961 : add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x000000000006bef5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000a99c6 : add byte ptr [rax], al ; add al, ch ; ret 0x4b1
0x00000000000728c6 : add byte ptr [rax], al ; add al, ch ; ret 0x822
0x00000000000d5e06 : add byte ptr [rax], al ; add al, ch ; ret 0xf60f
0x00000000000de736 : add byte ptr [rax], al ; add al, ch ; ret 0xffcd
0x00000000000f590f : add byte ptr [rax], al ; add al, ch ; stc ; ret 0xfff8
0x0000000000017d45 : add byte ptr [rax], al ; add al, dl ; ret
0x000000000014c80d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000010ec3a : add byte ptr [rax], al ; add bh, bh ; loope 0x10ebd7 ; ret
0x00000000000c3697 : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000348a5 : add byte ptr [rax], al ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000bc61a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000111edb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000183a3e : add byte ptr [rax], al ; add bl, al ; out dx, eax ; jmp qword ptr [rcx]
0x000000000009eaf3 : add byte ptr [rax], al ; add bl, al ; ret
0x000000000011161c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000b61c5 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000007a34d : add byte ptr [rax], al ; add bl, ch ; ret 0x8d48
0x0000000000097fed : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x0000000000097ffd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002c7b5 : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000cd6db : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000aec96 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000004e211 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007bdd3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8944
0x0000000000077e93 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000010d4ca : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; ret 0x8949
0x00000000000f82b1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret 0xfa5c
0x00000000000266d9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000016cd1b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000c363d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000000c90d7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000c91de : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000009853d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000bb4d8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x000000000011ac22 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000074084 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000105830 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000bb59d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000de41a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000000459f3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000000000009be70 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000039fdc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000009f5cd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000008f7d5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8348
0x000000000008f5b2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x8301
0x000000000010bd5d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000bb7b4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x000000000002ffed : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000b94f5 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000017b5a1 : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; clc ; ret 0xffee
0x0000000000181885 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, bl ; ret
0x000000000019133d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x000000000018133d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000019137d : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, ch ; ret 1
0x0000000000181385 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, dh ; ret 0
0x00000000001913ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000018147d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000181435 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001813ed : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001813d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001812f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x0000000000181325 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000009d4f3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ed87b : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001765ce : add byte ptr [rax], al ; add byte ptr [rax - 0x15], dh ; call qword ptr [rax]
0x0000000000033945 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000034898 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002af2b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000009d53d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009d54d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009d52d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000021af0 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x21b24 ; and al, ch ; ret
0x00000000000c22bd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007846d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000aca8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000e208c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000762c4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000e77b5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007a075 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000010add4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000007715d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007077d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x00000000000c38fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007f589 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000010a9e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x000000000010c01a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000116730 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000003b533 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000106c38 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000a5c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000d2cdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002b41d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000ae50d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000006b3d6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000ae82d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000020fb6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d9a28 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x00000000000a114c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000b5a56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000003aebb : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000005d57a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xfbe8
0x0000000000060cbe : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x35
0x00000000001143f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x000000000002d15d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b35d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000006b5d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000022f3c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003ef3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000ea078 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000002835e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001205d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000084eed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084e7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000122151 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000005ac2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000001205fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000091e5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000043bed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x000000000002bd5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x00000000000ef635 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000003b40d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000133824 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033beb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000350bb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000018147c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x0000000000181434 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001813ec : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001813d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001812f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x0000000000181324 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000017d43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x00000000000b61c3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000097ffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000007118b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000c363b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x000000000011a28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000009d53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009d54b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009d52b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007715b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d2cdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002b41b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000ae50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ae82b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000005d578 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xfbe8
0x000000000002d15b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b35b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000f13bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003ef3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000084eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000084e7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000005af6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000017d41 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret
0x000000000001a0e1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019fde4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000017ce1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000006692 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000000d052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000016c56a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000017cca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x14
0x0000000000004052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x0000000000017c9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x000000000000a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001af52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1630
0x0000000000018582 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1639
0x000000000000b8e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000007292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00000000001558e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000155dd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000019f9aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000019fde6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000019f28a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000009adbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000017ce3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000181884 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bl ; ret
0x0000000000181384 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x00000000000c78eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x2948
0x00000000000426bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x000000000008ccef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000383e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000e4a4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000009b59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000b666b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000011ea8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008038b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016c56b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000b6459 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000069eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000009cefc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000b571c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035e44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x00000000000e236c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010a467 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000014c80c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000015790c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000156abc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000019133c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000001031ac : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1f476
0x000000000006315a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5f407
0x00000000000b61c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xb6192
0x000000000000d054 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000049db5 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000009d1b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x9d1af ; ret
0x0000000000149b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000149b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000149b7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000149b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000149b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000149adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000149aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000149afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000149b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000149b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000149b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000149b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009d52c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009d54c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009d53c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000149acc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000019ebb0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000015ed3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 0x89 ; cld ; call rax
0x0000000000141c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000359e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009853c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000096f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000097f0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000097c0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000141cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000141cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000141cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da95c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000097f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000097f4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000097f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000bb59c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00000000000770dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000459f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010bd5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001169ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000f8d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x00000000000f821b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf81ed
0x000000000013480c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000141cec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000116d98 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000097f6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x0000000000097f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000010b7aa : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e77b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007714c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007715c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000b666c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000141c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000097f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000097fec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000097ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000013495c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000b645a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000002188b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000ea807 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000383ea : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000763f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b6aa : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016c56c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000016cd1a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000017ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x14
0x0000000000004054 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x0000000000017c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x000000000000a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001af54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1630
0x0000000000018584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1639
0x000000000000b8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x00000000001568dc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000157074 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000007294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x00000000001558e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000155dd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000008954 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000006584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000ec84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000019f28c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000018133c : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001913ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000009adbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000382f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000035ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c73c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000009adbd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000017ce5 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000181886 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bl ; ret
0x000000000019137e : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret 1
0x0000000000181386 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x00000000000c78ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; ret 0x2948
0x0000000000073bd0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000b1540 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000426bd : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000074281 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x0000000000116d04 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x000000000010d1b6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x000000000009e047 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000c1221 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x68], cl ; add ch, cl ; ret
0x0000000000182219 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*8], ch ; add byte ptr [rbx], bl ; ret
0x0000000000184e09 : add byte ptr [rax], al ; add byte ptr [rbp + rdi*8], dh ; add byte ptr [rax], al ; ret
0x000000000009d1b3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000001814fe : add byte ptr [rax], al ; add byte ptr [rbp - 0x11], bl ; jmp qword ptr [rax]
0x00000000000c6101 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; jmp 0xc60e9
0x00000000000e750c : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000045cc6 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000067825 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000009bbac : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000f5436 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x00000000001340ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000036040 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021c84 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000024216 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007522d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000004bbe4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x000000000009f54b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0x9f529
0x00000000000a1a9b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa1a79
0x00000000000a3efb : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa3ed9
0x0000000000149878 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000117f30 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000054484 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10ff43], al ; call qword ptr [rax]
0x00000000000530a7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x0000000000182abe : add byte ptr [rax], al ; add byte ptr [rbx - 0x11], ah ; call qword ptr [rsi]
0x00000000000c3cc7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x71f0fe06], al ; ret
0x00000000000383eb : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002044d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006baa2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc362fc12
0x00000000000b34e5 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fbb5], cl ; ret
0x0000000000102bad : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000c28bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ce7dbb4], cl ; ret
0x00000000000e4a4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000017b3b9 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; add byte ptr [rax], al ; nop ; ret
0x00000000000280b8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000141cdd : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000003bd7d : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000f6530 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000e461f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000740a4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000141cbd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x0000000000097f4d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000006cdd0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000502bf : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x00000000000501f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000000d349f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; ret
0x000000000009b59d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000051bcc : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001839f9 : add byte ptr [rax], al ; add byte ptr [rcx + rbp*8], ah ; add al, al ; ret 0xffef
0x00000000000efd8d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000066967 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001137b7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000009e276 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000009e871 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000006fc7e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x00000000000b666d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000000da95d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000cebed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000cec11 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x0000000000041f94 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000008b45a : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000008e88c : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x000000000003b4f1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000005600f : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000010e67d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x000000000003d185 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000011ea8d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008038d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000016c56d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000085010 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000085036 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000ca2de : add byte ptr [rax], al ; add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000d2d2b : add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd2d3f ; ret
0x0000000000042d6c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x37e9
0x00000000000c2513 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xc24a4
0x00000000000d46cd : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000083e67 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000d26b6 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2975
0x00000000000d26a8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x3775
0x00000000000d269a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x4575
0x00000000000b4a5e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000b2801 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b289b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b49c2 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000e0fdf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x000000000009f571 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9f526
0x00000000000a1ac1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa1a76
0x00000000000a3f21 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa3ed6
0x0000000000037d7a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000081b24 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000011e22d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000000d908b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000009cc12 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000014b922 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000017b3d1 : add byte ptr [rax], al ; add byte ptr [rdi + rbx*2], ah ; add byte ptr [rax], al ; cmc ; ret
0x00000000001348ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000abf18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x000000000011bc97 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 5 ; jmp rsp
0x000000000013495d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000275dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000084f2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000009bb05 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000428fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x54e9
0x00000000000f558d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000011ce9c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8964
0x000000000004226b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000d36d3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xbde9
0x00000000000c4143 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x00000000000b21e3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000671a9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000bdb0b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000be739 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe283
0x000000000019c2b9 : add byte ptr [rax], al ; add byte ptr [rdx + rsi*2], ah ; add al, byte ptr [rax] ; ret 0xfff7
0x0000000000006e01 : add byte ptr [rax], al ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x0000000000008079 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret
0x00000000001836c1 : add byte ptr [rax], al ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; push rsp ; ret 0xffef
0x0000000000147742 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084e42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000db1d5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000000b645b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000da937 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000000d2caf : add byte ptr [rax], al ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x00000000001820b1 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*8], al ; add byte ptr [rax], al ; clc ; ret
0x00000000001820f9 : add byte ptr [rax], al ; add byte ptr [rsp + rcx*8], cl ; add bl, cl ; ret
0x000000000002b142 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000bf61c : add byte ptr [rax], al ; add cl, ch ; ret 0xfff9
0x0000000000029cdc : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000006315b : add byte ptr [rax], al ; add cl, ch ; sahf ; ret 0xffff
0x00000000000d7b11 : add byte ptr [rax], al ; add dh, al ; and al, 0x74 ; add al, ch ; ret 0xf6e4
0x0000000000056aad : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000011d3e0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000000000069eed : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000014ad91 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000072db4 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000ccca2 : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x00000000000924c0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000924c9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000f2250 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000017fcce : add byte ptr [rax], al ; add dl, ch ; call rdx
0x00000000000d2d2c : add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x00000000000c2514 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001895fa : add byte ptr [rax], al ; add dword ptr fs:[r8], r8d ; mov al, 0x21 ; jmp qword ptr [rdi]
0x000000000018b4da : add byte ptr [rax], al ; add dword ptr fs:[rax], eax ; add byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000011a0a4 : add byte ptr [rax], al ; add edx, eax ; jmp 0x11a03d
0x000000000009cefe : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000084cf4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000010f7f1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000111d51 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001114a1 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000010ec34 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000b571e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035e46 : add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x00000000000b5746 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000035589 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035008 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000f01f6 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000da97e : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e9ab0 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000034dca : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f8cbb : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000352c0 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000041d81 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x0000000000083d6a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000438c0 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; ret
0x0000000000023167 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000347c2 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000017b5a2 : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; clc ; ret 0xffee
0x0000000000196dba : add byte ptr [rax], al ; and al, 0x1d ; add al, byte ptr [rax] ; adc al, 0xf6 ; jmp qword ptr [rdi]
0x00000000001976ba : add byte ptr [rax], al ; and al, 0x26 ; add al, byte ptr [rax] ; sal dh, 0xf6 ; call qword ptr [rsi]
0x000000000017b3d2 : add byte ptr [rax], al ; and al, 0x5f ; add byte ptr [rax], al ; cmc ; ret
0x000000000017b3ba : add byte ptr [rax], al ; and al, 0x63 ; add byte ptr [rax], al ; nop ; ret
0x000000000019c0ba : add byte ptr [rax], al ; and al, 0x70 ; add al, byte ptr [rax] ; mov al, 3 ; sti ; jmp qword ptr [rdx]
0x000000000019c2ba : add byte ptr [rax], al ; and al, 0x72 ; add al, byte ptr [rax] ; ret 0xfff7
0x000000000018edba : add byte ptr [rax], al ; and al, 0x9d ; add dword ptr [rax], eax ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000001821d2 : add byte ptr [rax], al ; and al, 0xcd ; add byte ptr [rax], al ; ret
0x0000000000182aba : add byte ptr [rax], al ; and al, 0xda ; add byte ptr [rax], al ; add byte ptr [rbx - 0x11], ah ; call qword ptr [rsi]
0x00000000001874e2 : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax - 0x61], bh ; call qword ptr [rax]
0x00000000001874fa : add byte ptr [rax], al ; and al, 1 ; add byte ptr [rax - 0x61], dh ; call qword ptr [rax]
0x0000000000005f4a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000b0c2 : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x000000000000969a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret 0xd
0x0000000000159c4e : add byte ptr [rax], al ; and byte ptr [rax - 0x5ff70012], ah ; out dx, al ; call rax
0x000000000017a9fe : add byte ptr [rax], al ; and byte ptr [rdi - 0x13], dl ; call rdi
0x000000000017898e : add byte ptr [rax], al ; and cl, bh ; jmp 0x178998
0x00000000000e878f : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000002e77b : add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000084f2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000081e77 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000083964 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001781d6 : add byte ptr [rax], al ; call 0x11176dca
0x00000000001803e6 : add byte ptr [rax], al ; call 0x1117f331
0x0000000000183b56 : add byte ptr [rax], al ; call 0x11182b3c
0x00000000000ab18e : add byte ptr [rax], al ; call 0x11e1a9
0x0000000000052088 : add byte ptr [rax], al ; call 0x2e2d4
0x00000000000364f9 : add byte ptr [rax], al ; call 0x727b4
0x000000000007bea9 : add byte ptr [rax], al ; call 0x780c4
0x00000000000f5910 : add byte ptr [rax], al ; call 0x81c14
0x00000000000b8964 : add byte ptr [rax], al ; call 0xf4b94
0x00000000000b8980 : add byte ptr [rax], al ; call 0xf4bc4
0x0000000000175b46 : add byte ptr [rax], al ; call 0xffffffffd1174644
0x000000000010a469 : add byte ptr [rax], al ; call qword ptr [rax]
0x000000000014c80e : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000154da2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021b65 : add byte ptr [rax], al ; call rax
0x000000000015790e : add byte ptr [rax], al ; call rdi
0x000000000003041b : add byte ptr [rax], al ; call rdx
0x0000000000156abe : add byte ptr [rax], al ; call rsp
0x000000000018e8e2 : add byte ptr [rax], al ; cdqe ; add dword ptr [rax], eax ; js 0x18e96d ; cmc ; jmp rax
0x000000000017ae96 : add byte ptr [rax], al ; clc ; mov bh, 0xed ; call qword ptr [rax]
0x00000000001829f6 : add byte ptr [rax], al ; clc ; pop rsi ; out dx, eax ; call rax
0x0000000000177496 : add byte ptr [rax], al ; clc ; ret
0x000000000017b5a6 : add byte ptr [rax], al ; clc ; ret 0xffee
0x00000000001835a6 : add byte ptr [rax], al ; clc ; ret 0xffef
0x0000000000179e92 : add byte ptr [rax], al ; cld ; add byte ptr [r8], r8b ; js 0x179e3f ; in al, dx ; jmp qword ptr [rsi]
0x0000000000189492 : add byte ptr [rax], al ; cld ; add dword ptr [r8], eax ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000019377a : add byte ptr [rax], al ; cld ; add dword ptr [rcx], 0xf646e000 ; call qword ptr [rcx]
0x0000000000177492 : add byte ptr [rax], al ; cld ; and eax, dword ptr [rax] ; add al, bh ; ret
0x000000000018c592 : add byte ptr [rax], al ; cld ; je 0x18c5a1 ; add al, bl ; cli ; hlt ; jmp qword ptr [rcx]
0x0000000000191092 : add byte ptr [rax], al ; cld ; mov edi, 0xd8080001 ; cmc ; call rsp
0x000000000017ae92 : add byte ptr [rax], al ; cld ; pop rbp ; add byte ptr [rax], al ; clc ; mov bh, 0xed ; call qword ptr [rax]
0x0000000000178cc6 : add byte ptr [rax], al ; cli ; jmp 0x178cd0
0x0000000000179906 : add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x000000000016fa9e : add byte ptr [rax], al ; cli ; salc ; out dx, eax ; jmp rsp
0x000000000017b3d6 : add byte ptr [rax], al ; cmc ; ret
0x0000000000112db3 : add byte ptr [rax], al ; cmovne eax, edx ; add rsp, 0x78 ; ret
0x000000000019133e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x00000000001781d2 : add byte ptr [rax], al ; cmp al, 0x31 ; add byte ptr [rax], al ; call 0x11176dce
0x00000000001789d2 : add byte ptr [rax], al ; cmp al, 0x39 ; add byte ptr [rax], al ; test al, 0xf9 ; jmp 0x1789e4
0x0000000000178fd2 : add byte ptr [rax], al ; cmp al, 0x3f ; add byte ptr [rax], al ; cmp bh, bh ; jmp 0x178fe4
0x000000000018c9d2 : add byte ptr [rax], al ; cmp al, 0x79 ; add dword ptr [rax], eax ; js 0x18c9ec ; cmc ; jmp qword ptr [rcx]
0x000000000018dad2 : add byte ptr [rax], al ; cmp al, 0x8a ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rsi]
0x0000000000191ed2 : add byte ptr [rax], al ; cmp al, 0xce ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x0000000000178fd6 : add byte ptr [rax], al ; cmp bh, bh ; jmp 0x178fe0
0x0000000000179006 : add byte ptr [rax], al ; cmp bh, bh ; jmp 0x179010
0x0000000000178846 : add byte ptr [rax], al ; cmp bh, dh ; jmp 0x178850
0x0000000000145bf6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000175f7e : add byte ptr [rax], al ; cmp byte ptr [rcx], 0xeb ; jmp qword ptr [rbx]
0x000000000017ada6 : add byte ptr [rax], al ; cmp byte ptr [rdx - 0x13], ah ; call rdx
0x000000000009f54c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0x9f568 ; mov edx, eax ; jmp 0x9f528
0x00000000000a1a9c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa1ab8 ; mov edx, eax ; jmp 0xa1a78
0x00000000000a3efc : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa3f18 ; mov edx, eax ; jmp 0xa3ed8
0x0000000000178dda : add byte ptr [rax], al ; cmp eax, 0xfdb00000 ; jmp 0x178dec
0x00000000000700e7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x700f8 ; pop rbx ; ret
0x00000000000700e6 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x700f9 ; pop rbx ; ret
0x00000000000ba290 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xba2a3 ; ret
0x00000000000b53ee : add byte ptr [rax], al ; cmp esi, 1 ; je 0xb5409 ; xor eax, eax ; ret
0x00000000000bb618 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xbb658 ; ret
0x0000000000183636 : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffef
0x0000000000184e56 : add byte ptr [rax], al ; cwde ; ret
0x00000000001839e6 : add byte ptr [rax], al ; cwde ; ret 0xffef
0x00000000001776b6 : add byte ptr [rax], al ; cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000018e172 : add byte ptr [rax], al ; fcom qword ptr [rax + 0x63780001] ; cmc ; call qword ptr [rdx]
0x000000000017ab46 : add byte ptr [rax], al ; fcomp dword ptr [rax - 0x13] ; call qword ptr [rsi]
0x000000000018ed72 : add byte ptr [rax], al ; fcomp qword ptr [rcx + rax - 0xa770800] ; jmp qword ptr [rcx]
0x0000000000192e8a : add byte ptr [rax], al ; fcomp st(0), st(1) ; add dword ptr [rax], eax ; ret 0xf641
0x000000000017feb6 : add byte ptr [rax], al ; fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019c272 : add byte ptr [rax], al ; fdiv qword ptr [rcx + 2] ; add byte ptr [rax], cl ; ret 0xfff7
0x000000000018c972 : add byte ptr [rax], al ; fdivr qword ptr [rax + 1] ; add byte ptr [rax], bl ; or ebp, esi ; jmp qword ptr [rcx]
0x0000000000182efa : add byte ptr [rax], al ; fiadd word ptr fs:[rax] ; add al, ah ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x000000000019dcb2 : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000034d7e : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000034d2e : add byte ptr [rax], al ; fstp st(1) ; ret
0x000000000018f672 : add byte ptr [rax], al ; fsub qword ptr [rbp - 0x5ed7ffff] ; cmc ; jmp qword ptr [rcx]
0x000000000018f372 : add byte ptr [rax], al ; fsub qword ptr [rdx - 0x6417ffff] ; cmc ; jmp qword ptr [rcx]
0x0000000000187e72 : add byte ptr [rax], al ; fsubr qword ptr [rip - 0x1537ffff] ; jmp qword ptr [rax]
0x000000000017898a : add byte ptr [rax], al ; hlt ; cmp byte ptr [rax], al ; add byte ptr [rax], ah ; stc ; jmp 0x17899c
0x000000000016e92e : add byte ptr [rax], al ; hlt ; iretd ; jmp 0x16e938
0x000000000018c48a : add byte ptr [rax], al ; hlt ; jae 0x18c499 ; add al, al ; div esp ; jmp qword ptr [rcx]
0x000000000018b4df : add byte ptr [rax], al ; hlt ; jmp qword ptr [rcx]
0x000000000018c68a : add byte ptr [rax], al ; hlt ; jne 0x18c699 ; add al, dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000016ee46 : add byte ptr [rax], al ; hlt ; jno 0x16ee3c ; call rsp
0x000000000019c18a : add byte ptr [rax], al ; hlt ; jo 0x19c19a ; add byte ptr [rax], dl ; add edi, ebx ; jmp qword ptr [rdx]
0x00000000001835a2 : add byte ptr [rax], al ; hlt ; loopne 0x1835ae ; add al, bh ; ret 0xffef
0x000000000018a18a : add byte ptr [rax], al ; hlt ; push rax ; add dword ptr [rax], eax ; nop ; cwde ; jmp rdx
0x000000000018138a : add byte ptr [rax], al ; hlt ; ret 0
0x0000000000197b8a : add byte ptr [rax], al ; hlt ; sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; sti ; jmp qword ptr [rdx]
0x000000000018d58a : add byte ptr [rax], al ; hlt ; test byte ptr [rcx], al ; add byte ptr [rax + 0x41], al ; cmc ; jmp qword ptr [rbx]
0x000000000016e9b6 : add byte ptr [rax], al ; imul bl ; jmp rsp
0x0000000000175bee : add byte ptr [rax], al ; imul edx ; call qword ptr [rbx]
0x000000000019397a : add byte ptr [rax], al ; in al, -0x18 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000018f17a : add byte ptr [rax], al ; in al, -0x60 ; add dword ptr [rax], eax ; nop ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000019d77a : add byte ptr [rax], al ; in al, -0x7a ; add al, byte ptr [rax] ; xor byte ptr [rax + rdi*8], al ; jmp qword ptr [rcx]
0x000000000016fd2e : add byte ptr [rax], al ; in al, -6 ; out dx, eax ; jmp rsp
0x0000000000177a7a : add byte ptr [rax], al ; in al, 0x29 ; add byte ptr [rax], al ; loopne 0x177a63 ; jmp 0x177a8c
0x000000000016e74e : add byte ptr [rax], al ; in al, 0x36 ; jmp 0x16e758
0x000000000018947a : add byte ptr [rax], al ; in al, 0x43 ; add dword ptr [rax], eax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018967a : add byte ptr [rax], al ; in al, 0x45 ; add dword ptr [rax], eax ; mov al, 0x23 ; jmp rdx
0x000000000018b87a : add byte ptr [rax], al ; in al, 0x67 ; add dword ptr [rax], eax ; loopne 0x18b829 ; hlt ; call qword ptr [rax]
0x000000000016f4ae : add byte ptr [rax], al ; in al, 0x70 ; in eax, dx ; call rsp
0x0000000000175f7a : add byte ptr [rax], al ; in al, 0xe ; add byte ptr [rax], al ; cmp byte ptr [rcx], 0xeb ; jmp qword ptr [rbx]
0x000000000018b682 : add byte ptr [rax], al ; in al, dx ; add dword ptr gs:[rax], eax ; or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x000000000018f882 : add byte ptr [rax], al ; in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018c782 : add byte ptr [rax], al ; in al, dx ; jbe 0x18c791 ; add byte ptr [rax], cl ; add al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000185a82 : add byte ptr [rax], al ; in al, dx ; or dword ptr [rcx], eax ; add byte ptr [rax], cl ; mov dh, cl ; jmp rsi
0x000000000018c082 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x000000000018ee82 : add byte ptr [rax], al ; in al, dx ; popfq ; add dword ptr [rax], eax ; test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x0000000000181482 : add byte ptr [rax], al ; in al, dx ; ret
0x0000000000191382 : add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000018ef82 : add byte ptr [rax], al ; in al, dx ; sahf ; add dword ptr [rax], eax ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x0000000000176a82 : add byte ptr [rax], al ; in al, dx ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], bl ; jmp 0x176a94
0x000000000019d682 : add byte ptr [rax], al ; in al, dx ; test dword ptr [rdx], eax ; add al, bh ; add edi, eax ; call qword ptr [rax]
0x000000000018e282 : add byte ptr [rax], al ; in al, dx ; xchg eax, ecx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000185302 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add al, byte ptr [rcx] ; add al, bl ; sbb cl, dh ; jmp qword ptr [rbx]
0x0000000000179902 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x0000000000189402 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [r8], eax ; sub byte ptr [rdx], bl ; jmp qword ptr [rcx]
0x0000000000177602 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and eax, 0xcf880000 ; jmp 0x177614
0x0000000000198b02 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp al, byte ptr [rdx] ; add al, bh ; and bh, dh ; jmp rdx
0x0000000000178902 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add al, cl ; clc ; jmp 0x178914
0x000000000018ab02 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; pop rdx ; add dword ptr [rax], eax ; call 0xffffffffe8189ee1
0x0000000000187c02 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], ch ; call qword ptr [rsi]
0x00000000000db1d6 : add byte ptr [rax], al ; jbe 0xdb1e5 ; ret
0x000000000010d1b7 : add byte ptr [rax], al ; je 0x10d1c8 ; add rsp, 0x48 ; ret
0x000000000016e8e6 : add byte ptr [rax], al ; je 0x16e8af ; jmp 0x16e8ee
0x000000000016ee96 : add byte ptr [rax], al ; je 0x16ef14 ; in al, dx ; jmp rsp
0x0000000000178e0a : add byte ptr [rax], al ; je 0x178e54 ; add byte ptr [rax], al ; sar ch, 1 ; jmp 0x178e1c
0x000000000017ea0a : add byte ptr [rax], al ; je 0x17e9b0 ; add byte ptr [rax], al ; xor byte ptr [rdi], bl ; out dx, eax ; call rcx
0x000000000018370a : add byte ptr [rax], al ; je 0x1836fd ; add byte ptr [rax], al ; loopne 0x1836a4 ; cld ; call qword ptr [rdx]
0x000000000018950a : add byte ptr [rax], al ; je 0x18955b ; add dword ptr [rax], eax ; jo 0x189536 ; jmp qword ptr [rcx]
0x000000000018b50a : add byte ptr [rax], al ; je 0x18b57b ; add dword ptr [rax], eax ; xor byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018c30a : add byte ptr [rax], al ; je 0x18c389 ; add dword ptr [rax], eax ; and ch, dh ; hlt ; jmp qword ptr [rcx]
0x000000000018e20a : add byte ptr [rax], al ; je 0x18e1a8 ; add dword ptr [rax], eax ; jo 0x18e280 ; cmc ; jmp qword ptr [rcx]
0x000000000007df8a : add byte ptr [rax], al ; je 0x7df94 ; ret
0x000000000007f656 : add byte ptr [rax], al ; je 0x7f664 ; ret
0x000000000008cc82 : add byte ptr [rax], al ; je 0x8cc98 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d4f4 : add byte ptr [rax], al ; je 0x9d568 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000d2cb0 : add byte ptr [rax], al ; je 0xd2cc5 ; ret
0x00000000000da938 : add byte ptr [rax], al ; je 0xda945 ; ret
0x00000000000ed87c : add byte ptr [rax], al ; je 0xed890 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014b923 : add byte ptr [rax], al ; jg 0x14b936 ; neg eax ; ret
0x000000000009cc13 : add byte ptr [rax], al ; jg 0x9cc1f ; neg eax ; ret
0x000000000016f3ae : add byte ptr [rax], al ; jge 0x16f409 ; in eax, dx ; call rsp
0x0000000000149879 : add byte ptr [rax], al ; jl 0x149886 ; neg eax ; ret
0x0000000000176a3e : add byte ptr [rax], al ; jl 0x176a33 ; call qword ptr [rbx]
0x0000000000176a56 : add byte ptr [rax], al ; jl 0x176a4b ; call qword ptr [rbx]
0x000000000017c112 : add byte ptr [rax], al ; jl 0x17c18f ; add byte ptr [rax], al ; pop rax ; loopne 0x17c112 ; call qword ptr [rax]
0x0000000000185212 : add byte ptr [rax], al ; jl 0x185220 ; add dword ptr [rax], eax ; sti ; call qword ptr [rax]
0x000000000018c612 : add byte ptr [rax], al ; jl 0x18c694 ; add dword ptr [rax], eax ; sub ah, bh ; hlt ; jmp qword ptr [rcx]
0x000000000018d712 : add byte ptr [rax], al ; jl 0x18d6a5 ; add dword ptr [rax], eax ; call 0x2218cc69
0x0000000000191e12 : add byte ptr [rax], al ; jl 0x191dec ; add dword ptr [rax], eax ; pop rax ; sub esi, esi ; jmp qword ptr [rsi]
0x00000000001031ae : add byte ptr [rax], al ; jmp 0x1f474
0x000000000006315c : add byte ptr [rax], al ; jmp 0x5f405
0x000000000006b38b : add byte ptr [rax], al ; jmp 0x6b3a4
0x000000000006b417 : add byte ptr [rax], al ; jmp 0x6b42e
0x000000000007a34e : add byte ptr [rax], al ; jmp 0x7a317
0x00000000000b61c6 : add byte ptr [rax], al ; jmp 0xb6190
0x00000000000cc20d : add byte ptr [rax], al ; jmp 0xcbe7e
0x000000000016fa76 : add byte ptr [rax], al ; jmp 0xffffffffd516ea56
0x000000000000d056 : add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000002eabf : add byte ptr [rax], al ; jmp rax
0x000000000010ec3b : add byte ptr [rax], al ; jmp rcx
0x0000000000116d05 : add byte ptr [rax], al ; jne 0x116d14 ; ret
0x0000000000116d45 : add byte ptr [rax], al ; jne 0x116d54 ; ret
0x000000000018c5fa : add byte ptr [rax], al ; jne 0x18c609 ; add byte ptr [rax], dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000003991f : add byte ptr [rax], al ; jne 0x39960 ; add rsp, 8 ; ret
0x000000000003c0df : add byte ptr [rax], al ; jne 0x3c120 ; add rsp, 8 ; ret
0x000000000003e8cf : add byte ptr [rax], al ; jne 0x3e910 ; add rsp, 8 ; ret
0x000000000009d1b4 : add byte ptr [rax], al ; jne 0x9d1ad ; ret
0x000000000009f76f : add byte ptr [rax], al ; jne 0x9f7b0 ; add rsp, 8 ; ret
0x00000000000a1cbf : add byte ptr [rax], al ; jne 0xa1d00 ; add rsp, 8 ; ret
0x00000000000a411f : add byte ptr [rax], al ; jne 0xa4160 ; add rsp, 8 ; ret
0x00000000000f5bc5 : add byte ptr [rax], al ; jne 0xf5bd4 ; call 0x21dd6
0x000000000016fc86 : add byte ptr [rax], al ; jns 0x16fc7e ; out dx, eax ; jmp rsp
0x000000000014ce9e : add byte ptr [rax], al ; jo 0x14cea7 ; in eax, dx ; inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x0000000000175e3e : add byte ptr [rax], al ; jo 0x175e57 ; jmp 0x175e48
0x00000000001765cf : add byte ptr [rax], al ; jo 0x1765c2 ; call qword ptr [rax]
0x000000000017671e : add byte ptr [rax], al ; jo 0x1767a0 ; jmp 0x176728
0x0000000000176b2e : add byte ptr [rax], al ; jo 0x176bb3 ; jmp 0x176b38
0x000000000017766e : add byte ptr [rax], al ; jo 0x177648 ; jmp 0x177678
0x000000000016ef0e : add byte ptr [rax], al ; jp 0x16ef04 ; jmp rsp
0x000000000016f5ce : add byte ptr [rax], al ; js 0x16f5f3 ; out dx, al ; call rsp
0x0000000000176b46 : add byte ptr [rax], al ; js 0x176bcb ; jmp 0x176b50
0x0000000000179e96 : add byte ptr [rax], al ; js 0x179e3b ; in al, dx ; jmp qword ptr [rsi]
0x000000000017b3a6 : add byte ptr [rax], al ; js 0x17b372 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001806c6 : add byte ptr [rax], al ; js 0x18071a ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000bb7b5 : add byte ptr [rax], al ; js 0xbb7c5 ; ret
0x00000000001815e2 : add byte ptr [rax], al ; lds r8, ptr [rax] ; add byte ptr [rax + 0x62], cl ; out dx, eax ; call qword ptr [rsi]
0x000000000009e048 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000149b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000149b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000149b7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000149b8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000149b9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000149abd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000149ade : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000149aee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000149afe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149b0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000149b1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000149b2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000149a6a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000149b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009d3cb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009d52e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009d54e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x000000000009d53e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000149ace : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000021c2e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x141094] ; ret
0x0000000000021c3e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x1431c1] ; ret
0x000000000010081e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a9035] ; call rax
0x000000000004122c : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x19b] ; call rax
0x000000000006b4f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x00000000000769f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x12f0] ; call rax
0x0000000000076df7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x16f0] ; call rax
0x000000000007596f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006b79f : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x278] ; call rax
0x0000000000075bd7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x00000000001822ae : add byte ptr [rax], al ; leave ; ret 0xffef
0x0000000000185242 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rax + 0x6e], ch ; sti ; call qword ptr [rax]
0x000000000017d92a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, dword ptr [rax] ; add al, dh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187442 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, dword ptr [rcx] ; add al, bl ; outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x000000000018c642 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jne 0x18c651 ; add byte ptr [rax - 4], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018cc42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jnp 0x18cc51 ; add al, cl ; sbb dh, ch ; jmp rdi
0x000000000018c942 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; js 0x18c951 ; add al, ch ; or ch, dh ; jmp qword ptr [rcx]
0x000000000018355a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; loopne 0x183566 ; add byte ptr [rcx], ah ; ret
0x000000000018da42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov dword ptr [rcx], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rsi]
0x000000000018dc42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov eax, dword ptr [rcx] ; add al, ch ; push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000183742 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out 0, al ; add byte ptr [rax - 0x47], bl ; out dx, eax ; call qword ptr [rdx]
0x000000000017ab42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rdx ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0x13] ; call qword ptr [rsi]
0x0000000000181342 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000191342 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000176b42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], bh ; jmp 0x176b54
0x0000000000177c42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; fsub st(3), st(0) ; jmp qword ptr [rcx]
0x000000000018f942 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test al, 1 ; add byte ptr [rax], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000177a7e : add byte ptr [rax], al ; loopne 0x177a5f ; jmp 0x177a88
0x000000000017a85e : add byte ptr [rax], al ; loopne 0x17a8a2 ; in eax, dx ; call qword ptr [rdi]
0x000000000017bade : add byte ptr [rax], al ; loopne 0x17bac0 ; out dx, al ; call qword ptr [rdx]
0x0000000000182efe : add byte ptr [rax], al ; loopne 0x182e9b ; out dx, eax ; call qword ptr [rdi]
0x000000000018370e : add byte ptr [rax], al ; loopne 0x1836a0 ; cld ; call qword ptr [rdx]
0x000000000018432e : add byte ptr [rax], al ; loopne 0x18434f ; cli ; call qword ptr [rax]
0x000000000018432d : add byte ptr [rax], al ; loopne 0x184350 ; cli ; call qword ptr [rax]
0x000000000016f5ee : add byte ptr [rax], al ; mov ah, 0x1d ; out dx, al ; call rsp
0x000000000016ed66 : add byte ptr [rax], al ; mov ah, 0x67 ; in al, dx ; jmp rsp
0x000000000016f6ee : add byte ptr [rax], al ; mov ah, 0x8a ; out dx, eax ; jmp rsp
0x000000000016f0c6 : add byte ptr [rax], al ; mov ah, 0x9d ; in al, dx ; jmp rsp
0x0000000000182262 : add byte ptr [rax], al ; mov ah, 0xcd ; add byte ptr [rax], al ; ret 0xffef
0x000000000019394a : add byte ptr [rax], al ; mov ah, 0xe8 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000019ebb2 : add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000017e99e : add byte ptr [rax], al ; mov al, 0x1e ; out dx, eax ; jmp rbx
0x000000000017fbfe : add byte ptr [rax], al ; mov al, 0x31 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001763ee : add byte ptr [rax], al ; mov al, 0x57 ; std ; jmp qword ptr [rax]
0x000000000015ed3e : add byte ptr [rax], al ; mov al, 0x89 ; cld ; call rax
0x0000000000178dde : add byte ptr [rax], al ; mov al, 0xfd ; jmp 0x178de8
0x0000000000143fde : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000013fcae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000177606 : add byte ptr [rax], al ; mov bh, cl ; jmp 0x177610
0x0000000000141c7e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000090fee : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000359e6 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009853e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000096f3e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000097f0e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000001058c6 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000097c0e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000251d2 : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; jmp 0x2519f
0x0000000000141cbe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000141cde : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000141cce : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000141cae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000da95e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000097f2e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009102e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000097f4e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000097f5e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000097f3e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000050c55 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000459c4 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000010b74e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000010b78e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000010b77e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000db0f4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000b7808 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x0000000000096f4e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000bb64e : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000db7ee : add byte ptr [rax], al ; mov eax, 0x5f ; syscall ; ret
0x00000000000badee : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000bae0e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000badfe : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000bae1e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000badde : add byte ptr [rax], al ; mov eax, 0x6e ; syscall ; ret
0x00000000000bb01e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000bb4d9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000e89de : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000bb59e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011ccb9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033bec : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000350bc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000de41b : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000002ad6e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010bd5e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000001473ce : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000076eae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000010b6bc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001169ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000da94e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000072e0e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000006eade : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000035d9e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x36f2e2] ; ret
0x0000000000035d8e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x36f2f6] ; ret
0x00000000000740a5 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0f76 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e4620 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e8b0 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000f8d3e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x00000000000225ba : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000ede13 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000f6531 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679e9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000067d2e : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000f6710 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000096f7e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000d908c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000192022 : add byte ptr [rax], al ; mov edi, cs ; add dword ptr [rax], eax ; sub sil, sil ; jmp qword ptr [rsi]
0x000000000005f506 : add byte ptr [rax], al ; mov edi, r13d ; call 0xeb7d7
0x00000000000f821d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf81eb
0x00000000001340ee : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000096f6e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000006c59f : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6c549
0x000000000006c765 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6c72d
0x000000000006c900 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6c8bf
0x000000000006d241 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d206
0x000000000006d3eb : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d3a8
0x000000000006d59c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d55d
0x00000000000714c7 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7148b
0x00000000000714c6 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7148c
0x0000000000071a3c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71a04
0x0000000000071ba8 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71b66
0x0000000000071e97 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71e5b
0x0000000000071e96 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71e5c
0x000000000017b352 : add byte ptr [rax], al ; mov esp, 0x28000062 ; ret
0x0000000000186e52 : add byte ptr [rax], al ; mov esp, 0x2800011d ; jmp qword ptr [rcx]
0x0000000000189a6a : add byte ptr [rax], al ; mov esp, 0x37000145 ; hlt ; jmp qword ptr [rax]
0x000000000019c352 : add byte ptr [rax], al ; mov esp, 0x38000272 ; ret
0x0000000000176a52 : add byte ptr [rax], al ; mov esp, 0x48000019 ; jl 0x176a4f ; call qword ptr [rbx]
0x0000000000177452 : add byte ptr [rax], al ; mov esp, 0x48000023 ; ret
0x0000000000179852 : add byte ptr [rax], al ; mov esp, 0x58000047 ; ja 0x179850 ; call qword ptr [rsi]
0x000000000018ef52 : add byte ptr [rax], al ; mov esp, 0x6800019e ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x0000000000192052 : add byte ptr [rax], al ; mov esp, 0x780001cf ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018ab52 : add byte ptr [rax], al ; mov esp, 0x8800015a ; salc ; call rcx
0x0000000000184e52 : add byte ptr [rax], al ; mov esp, 0x980000fd ; ret
0x000000000018c352 : add byte ptr [rax], al ; mov esp, 0x98000172 ; cmc ; hlt ; jmp qword ptr [rcx]
0x0000000000191d52 : add byte ptr [rax], al ; mov esp, 0x980001cc ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000186352 : add byte ptr [rax], al ; mov esp, 0xc8000112 ; adc esi, edx ; call rsi
0x000000000018c152 : add byte ptr [rax], al ; mov esp, 0xc8000170 ; hlt ; jmp qword ptr [rcx]
0x000000000018e252 : add byte ptr [rax], al ; mov esp, 0xe8000191 ; cmc ; jmp qword ptr [rcx]
0x0000000000187352 : add byte ptr [rax], al ; mov esp, 0xf8000122 ; jmp qword ptr [ecx]
0x0000000000183d22 : add byte ptr [rax], al ; mov esp, gs ; add byte ptr [rax], al ; test al, 0xe0 ; out dx, eax ; jmp qword ptr [rax]
0x00000000000f4199 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r12 ; call rax
0x0000000000141cfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000141d1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000141d2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000141d3e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141d4e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141d5e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141d6e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000141d0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000141cee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000116731 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000010cd4c : add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rdx ; ret
0x000000000008afc6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000116d9a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000097f6e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x0000000000097f8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000097fae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000097fbe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000097fce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000097fde : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000097f9e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000097f7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000071c6c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000011156b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000007e92e : add byte ptr [rax], al ; mov qword ptr [rip + 0x328f39], rsi ; ret
0x000000000010b6fc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000038e03 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000da87c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000010b6cc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000077eb8 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x00000000000f8cc6 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000010add5 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000002e82a : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000011393f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000001f90d : add byte ptr [rax], al ; mov r12d, eax ; call 0xebc07
0x0000000000035024 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000009cf1e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000009cf2e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000009cf3e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000009cf4e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000009cf5e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000009cf6e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x000000000009cf7e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000075f39 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000070100 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000762c5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000e77b6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000038280 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000b635e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007083e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007714e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000011b2ef : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28b430] ; call qword ptr [rax]
0x000000000011acd3 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28ba4c] ; call qword ptr [rax]
0x000000000007712e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x32ef09] ; ret
0x000000000002310e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3872b1] ; ret
0x00000000000230fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3872d1] ; ret
0x00000000000e208d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007bf19 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x00000000000fda56 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074cd6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006701d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000038598 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033b7c : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000033b86 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f76ee : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000007715e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000011b416 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000007c4e8 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a863 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000009e872 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000023057 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000001137b8 : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000007ed9f : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, r15 ; call rax
0x00000000000b666e : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000010a9e1 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x000000000010c01b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010a816 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000068bec : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000001159fe : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000096fae : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009e277 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000006fc7f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000056890 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x34e6c7] ; call rax
0x0000000000051304 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x353c53] ; call rax
0x000000000004bc50 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x359307] ; call rax
0x0000000000046404 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35eb53] ; call rax
0x000000000007f58a : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000018d922 : add byte ptr [rax], al ; mov word ptr [rax + 0x47880001], cs ; cmc ; jmp rdx
0x0000000000187122 : add byte ptr [rax], al ; mov word ptr [rax], fs ; add dword ptr [rax], eax ; jmp qword ptr [rcx]
0x000000000018f522 : add byte ptr [rax], al ; mov word ptr [rcx + rax - 0xa618800], fs ; jmp qword ptr [rcx]
0x0000000000189522 : add byte ptr [rax], al ; mov word ptr [rcx + rax], es ; mov byte ptr [rbx], bl ; jmp qword ptr [rcx]
0x000000000018f222 : add byte ptr [rax], al ; mov word ptr [rcx - 0x6597ffff], fs ; cmc ; jmp qword ptr [rcx]
0x0000000000141c9e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000141c8e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000097f1e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000910ae : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009100e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000196822 : add byte ptr [rax], al ; mov word ptr [rdi], ss ; add al, byte ptr [rax] ; call 0xffffffffd3195eeb
0x000000000018bb22 : add byte ptr [rax], al ; mov word ptr [rdx + 1], gs ; add byte ptr [rax - 0x49], bl ; hlt ; jmp rdx
0x0000000000038e4d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000038e94 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000097fee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x0000000000097ffe : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000016fe5e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, esi ; jmp rsp
0x0000000000183a3a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0xffffffffc3183a49
0x000000000018f53a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000175e3a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0x10700000 ; jmp 0x175e4c
0x000000000016f686 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, edi ; call rsp
0x000000000018143a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000176a3a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], al ; jmp 0x176a4c
0x000000000018d63a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], eax ; add al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018e23a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ecx ; add dword ptr [rax], eax ; shl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000e4aeb : add byte ptr [rax], al ; movsd qword ptr [rsp], xmm1 ; call 0x50da9
0x0000000000182abf : add byte ptr [rax], al ; movsxd rbp, edi ; call qword ptr [rsi]
0x0000000000103bc6 : add byte ptr [rax], al ; movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x0000000000075fd6 : add byte ptr [rax], al ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000d2d4e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000013427e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000013495e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001348ee : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000114a5d : add byte ptr [rax], al ; nop ; mov eax, 2 ; ret
0x00000000000b645c : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x00000000000f8d4d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000018109e : add byte ptr [rax], al ; nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x000000000017955e : add byte ptr [rax], al ; nop ; push rdi ; in al, dx ; jmp rax
0x000000000002188d : add byte ptr [rax], al ; nop ; ret
0x000000000017769e : add byte ptr [rax], al ; nop ; shr ebx, 1 ; call qword ptr [rdx]
0x0000000000178dae : add byte ptr [rax], al ; nop ; std ; jmp 0x178db8
0x0000000000176fae : add byte ptr [rax], al ; nop ; xchg eax, ebp ; jmp 0x176fb8
0x00000000000edb49 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000017ada2 : add byte ptr [rax], al ; or al, 0x5d ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0x13], ah ; call rdx
0x000000000017b3a2 : add byte ptr [rax], al ; or al, 0x63 ; add byte ptr [rax], al ; js 0x17b376 ; out dx, al ; jmp qword ptr [rcx]
0x000000000018c6a2 : add byte ptr [rax], al ; or al, 0x76 ; add dword ptr [rax], eax ; call 0x2218bbb2
0x000000000018c9a2 : add byte ptr [rax], al ; or al, 0x79 ; add dword ptr [rax], eax ; or rbp, rsi ; jmp qword ptr [rcx]
0x000000000018f3a2 : add byte ptr [rax], al ; or al, 0xa3 ; add dword ptr [rax], eax ; pushfq ; cmc ; jmp qword ptr [rcx]
0x0000000000191ea2 : add byte ptr [rax], al ; or al, 0xce ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x00000000001829a2 : add byte ptr [rax], al ; or al, 0xd9 ; add byte ptr [rax], al ; pop rax ; pop rsi ; out dx, eax ; jmp rcx
0x00000000000e0916 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x00000000000352f9 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x000000000017d92e : add byte ptr [rax], al ; out dx, al ; jmp qword ptr [rdx]
0x000000000006cdd1 : add byte ptr [rax], al ; pop r12 ; ret
0x00000000000502c0 : add byte ptr [rax], al ; pop r13 ; ret
0x00000000000501f2 : add byte ptr [rax], al ; pop r14 ; ret
0x00000000000d34a0 : add byte ptr [rax], al ; pop r15 ; ret
0x0000000000179856 : add byte ptr [rax], al ; pop rax ; ja 0x17984c ; call qword ptr [rsi]
0x0000000000176a86 : add byte ptr [rax], al ; pop rax ; jl 0x176a7b ; call qword ptr [rbx]
0x000000000017c116 : add byte ptr [rax], al ; pop rax ; loopne 0x17c10e ; call qword ptr [rax]
0x00000000000e8627 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001829a6 : add byte ptr [rax], al ; pop rax ; pop rsi ; out dx, eax ; jmp rcx
0x000000000017b386 : add byte ptr [rax], al ; pop rax ; ret
0x0000000000183db6 : add byte ptr [rax], al ; pop rax ; sti ; out dx, eax ; jmp rdx
0x000000000009b8f4 : add byte ptr [rax], al ; pop rbp ; lea rax, qword ptr [r8 + 1] ; pop r12 ; ret
0x00000000001814ff : add byte ptr [rax], al ; pop rbp ; out dx, eax ; jmp qword ptr [rax]
0x00000000000ea7b7 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000009bbad : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000383ec : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006baa3 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000006b19f : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f5437 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000500b1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000001fdfd : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002161a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024217 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007522e : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002b6ac : add byte ptr [rax], al ; pop rbx ; ret
0x000000000017a9fa : add byte ptr [rax], al ; pop rcx ; add byte ptr [rax], al ; and byte ptr [rdi - 0x13], dl ; call rdi
0x000000000016c56e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001861f2 : add byte ptr [rax], al ; pop rsp ; adc dword ptr [rcx], eax ; add al, bh ; add dh, dl ; jmp rax
0x000000000018acda : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], eax ; push rax ; out dx, eax ; call qword ptr [rcx]
0x00000000001894f2 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], r8d ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018b4f2 : add byte ptr [rax], al ; pop rsp ; add dword ptr fs:[rax], eax ; sbb byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001829f2 : add byte ptr [rax], al ; pop rsp ; fld dword ptr [rax] ; add al, bh ; pop rsi ; out dx, eax ; call rax
0x000000000018c3f2 : add byte ptr [rax], al ; pop rsp ; jae 0x18c401 ; add byte ptr [rax - 0xa], cl ; hlt ; jmp rbx
0x000000000018c2f2 : add byte ptr [rax], al ; pop rsp ; jb 0x18c301 ; add byte ptr [rax], cl ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000019c4f2 : add byte ptr [rax], al ; pop rsp ; je 0x19c502 ; add byte ptr [rax], bh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000018dcf2 : add byte ptr [rax], al ; pop rsp ; mov word ptr [rcx], es ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rax]
0x00000000001813f2 : add byte ptr [rax], al ; pop rsp ; ret
0x00000000001912f2 : add byte ptr [rax], al ; pop rsp ; ret 1
0x0000000000186af2 : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rcx] ; add byte ptr [rax], ch ; cld ; jmp qword ptr [rbx]
0x00000000001769f2 : add byte ptr [rax], al ; pop rsp ; sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; jl 0x1769ef ; call qword ptr [rdx]
0x0000000000186df2 : add byte ptr [rax], al ; pop rsp ; sbb eax, 0x43080001 ; jmp qword ptr [rax]
0x000000000018d7f2 : add byte ptr [rax], al ; pop rsp ; xchg dword ptr [rcx], eax ; add byte ptr [rax + 0x46], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018e1f2 : add byte ptr [rax], al ; pop rsp ; xchg eax, ecx ; add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000017bada : add byte ptr [rax], al ; push 0 ; add al, ah ; fldz ; call qword ptr [rdx]
0x000000000016f94e : add byte ptr [rax], al ; push 0xbf ; out dx, eax ; call rsp
0x0000000000176a6e : add byte ptr [rax], al ; push rax ; jl 0x176a63 ; call qword ptr [rdx]
0x000000000016cd1c : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000180ece : add byte ptr [rax], al ; push rax ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000017cce : add byte ptr [rax], al ; push rax ; ret 0x14
0x000000000019d55f : add byte ptr [rax], al ; push rdi ; call rcx
0x000000000016eb26 : add byte ptr [rax], al ; push rsp ; add esp, ebp ; call rsp
0x00000000001788ea : add byte ptr [rax], al ; push rsp ; cmp byte ptr [rax], al ; add al, al ; clc ; jmp 0x1788fc
0x000000000018998f : add byte ptr [rax], al ; push rsp ; jmp qword ptr [rbx]
0x000000000016f99e : add byte ptr [rax], al ; push rsp ; ret
0x00000000001836c6 : add byte ptr [rax], al ; push rsp ; ret 0xffef
0x000000000016f636 : add byte ptr [rax], al ; push rsp ; sub ch, dh ; jmp rsp
0x0000000000176332 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rax] ; add al, cl ; push rbp ; jmp 0x176344
0x000000000018b632 : add byte ptr [rax], al ; pushfq ; add dword ptr gs:[rax], eax ; sbb byte ptr [rax - 0xc], ch ; call qword ptr [rdi]
0x0000000000188d32 : add byte ptr [rax], al ; pushfq ; cmp al, 1 ; add al, bl ; add bl, dh ; call rsp
0x000000000019454a : add byte ptr [rax], al ; pushfq ; lock add dword ptr [rax], eax ; ret
0x0000000000176932 : add byte ptr [rax], al ; pushfq ; sbb byte ptr [rax], al ; add byte ptr [rax], bl ; jl 0x17692f ; call qword ptr [rsi]
0x0000000000187c32 : add byte ptr [rax], al ; pushfq ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], bh ; call qword ptr [rbx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000014dc66 : add byte ptr [rax], al ; ret 0
0x0000000000009786 : add byte ptr [rax], al ; ret 0x10
0x0000000000154ea6 : add byte ptr [rax], al ; ret 0x12
0x0000000000017c9e : add byte ptr [rax], al ; ret 0x14
0x000000000000a30e : add byte ptr [rax], al ; ret 0x16
0x000000000001af56 : add byte ptr [rax], al ; ret 0x1630
0x0000000000018586 : add byte ptr [rax], al ; ret 0x1639
0x000000000000b8e6 : add byte ptr [rax], al ; ret 0x1a
0x00000000001568de : add byte ptr [rax], al ; ret 0x1d4
0x0000000000157076 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000007296 : add byte ptr [rax], al ; ret 0x21
0x000000000000e86e : add byte ptr [rax], al ; ret 0x23
0x00000000001558e6 : add byte ptr [rax], al ; ret 0x24
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000005b56 : add byte ptr [rax], al ; ret 0x2f
0x0000000000155dd6 : add byte ptr [rax], al ; ret 0x33
0x0000000000007236 : add byte ptr [rax], al ; ret 0x3a
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x0000000000010a76 : add byte ptr [rax], al ; ret 0x51
0x00000000001546a6 : add byte ptr [rax], al ; ret 0xc
0x000000000018245e : add byte ptr [rax], al ; ret 0xefc1
0x000000000016fa46 : add byte ptr [rax], al ; ret 0xefd2
0x0000000000154aa6 : add byte ptr [rax], al ; ret 0xf
0x0000000000182266 : add byte ptr [rax], al ; ret 0xffef
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x000000000000ec86 : add byte ptr [rax], al ; ret 3
0x00000000001582a2 : add byte ptr [rax], al ; ret 4
0x0000000000153ece : add byte ptr [rax], al ; ret 5
0x00000000001586a2 : add byte ptr [rax], al ; ret 6
0x00000000000018ea : add byte ptr [rax], al ; ret 7
0x0000000000158aa2 : add byte ptr [rax], al ; ret 8
0x00000000001542a6 : add byte ptr [rax], al ; ret 9
0x000000000015829e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000019e006 : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000182146 : add byte ptr [rax], al ; sahf ; ret
0x000000000016fbde : add byte ptr [rax], al ; salc ; out 0xef, al ; jmp rsp
0x00000000001788ee : add byte ptr [rax], al ; sar al, 0xeb ; call qword ptr [rcx]
0x0000000000178e0e : add byte ptr [rax], al ; sar ch, 1 ; jmp 0x178e18
0x0000000000177c46 : add byte ptr [rax], al ; sbb ah, bl ; jmp 0x177c50
0x00000000001776b2 : add byte ptr [rax], al ; sbb al, 0x26 ; add byte ptr [rax], al ; cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x0000000000199db2 : add byte ptr [rax], al ; sbb al, 0x4d ; add al, byte ptr [rax] ; call 0x21199525
0x000000000018d2b2 : add byte ptr [rax], al ; sbb al, 0x82 ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; cmc ; jmp qword ptr [rcx]
0x000000000018d6b2 : add byte ptr [rax], al ; sbb al, 0x86 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018e2b2 : add byte ptr [rax], al ; sbb al, 0x92 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x000000000018f8b2 : add byte ptr [rax], al ; sbb al, 0xa8 ; add dword ptr [rax], eax ; js 0x18f868 ; cmc ; jmp qword ptr [rcx]
0x000000000017feb2 : add byte ptr [rax], al ; sbb al, 0xae ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000191db2 : add byte ptr [rax], al ; sbb al, 0xcd ; add dword ptr [rax], eax ; clc ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000183db2 : add byte ptr [rax], al ; sbb al, 0xed ; add byte ptr [rax], al ; pop rax ; sti ; out dx, eax ; jmp rdx
0x00000000001759b2 : add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; sub byte ptr [rcx - 3], ah ; jmp qword ptr [rdx]
0x0000000000176afa : add byte ptr [rax], al ; sbb al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7c], ah ; jmp 0x176b0c
0x000000000018429e : add byte ptr [rax], al ; sbb byte ptr [rbx], 0xf0 ; call qword ptr [rax]
0x00000000001769da : add byte ptr [rax], al ; sbb dword ptr [rax], r8d ; add byte ptr [rax], ah ; jl 0x1769d7 ; call qword ptr [rbx]
0x0000000000186bfa : add byte ptr [rax], al ; sbb eax, dword ptr fs:[rcx] ; add byte ptr [rax + 0x3c], al ; call qword ptr [rcx]
0x00000000001841ae : add byte ptr [rax], al ; sbb sil, al ; call qword ptr [rcx]
0x000000000018fefa : add byte ptr [rax], al ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000000d2d3e : add byte ptr [rax], al ; setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x000000000018fafa : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; mov al, 0xf5 ; call qword ptr [rdx]
0x000000000016f98e : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; ret 0xffef
0x000000000017fbfa : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; mov al, 0x31 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018133e : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001861c2 : add byte ptr [rax], al ; sub al, 0x11 ; add dword ptr [rax], eax ; test al, 2 ; call qword ptr [rax]
0x00000000001782c2 : add byte ptr [rax], al ; sub al, 0x32 ; add byte ptr [rax], al ; sub bh, ch ; jmp 0x1782d4
0x0000000000178cc2 : add byte ptr [rax], al ; sub al, 0x3c ; add byte ptr [rax], al ; cli ; jmp 0x178cd4
0x0000000000178dc2 : add byte ptr [rax], al ; sub al, 0x3d ; add byte ptr [rax], al ; test al, 0xfd ; jmp 0x178dd4
0x000000000018b4c2 : add byte ptr [rax], al ; sub al, 0x64 ; add dword ptr [rax], eax ; call 0x2218a93c
0x000000000018d7c2 : add byte ptr [rax], al ; sub al, 0x87 ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x00000000001806c2 : add byte ptr [rax], al ; sub al, 0xb6 ; add byte ptr [rax], al ; js 0x18071e ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001939c2 : add byte ptr [rax], al ; sub al, 0xe9 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x00000000001782c6 : add byte ptr [rax], al ; sub bh, ch ; jmp 0x1782d0
0x00000000001759b6 : add byte ptr [rax], al ; sub byte ptr [rcx - 3], ah ; jmp qword ptr [rdx]
0x0000000000191fdf : add byte ptr [rax], al ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000014818c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000e0fe0 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034b2d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000ae411 : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000016f2d6 : add byte ptr [rax], al ; sub ebp, r13d ; jmp rsp
0x0000000000076776 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000081831 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fef1e : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000db20b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000000f4bd5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bade3 : add byte ptr [rax], al ; syscall ; ret
0x0000000000183632 : add byte ptr [rax], al ; test ah, cl ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffef
0x0000000000183d26 : add byte ptr [rax], al ; test al, 0xe0 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001789d6 : add byte ptr [rax], al ; test al, 0xf9 ; jmp 0x1789e0
0x0000000000178dc6 : add byte ptr [rax], al ; test al, 0xfd ; jmp 0x178dd0
0x000000000018f8fa : add byte ptr [rax], al ; test al, 1 ; add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019111a : add byte ptr [rax], al ; test al, al ; add dword ptr [rax], eax ; and bl, bl ; cmc ; jmp qword ptr [rdi]
0x000000000016f586 : add byte ptr [rax], al ; test bh, ch ; in eax, dx ; call rsp
0x000000000016ea26 : add byte ptr [rax], al ; test bh, ch ; jmp 0x16ea30
0x000000000018e11a : add byte ptr [rax], al ; test byte ptr [rax + 0x62f00001], dl ; cmc ; call qword ptr [rax]
0x000000000018f11a : add byte ptr [rax], al ; test byte ptr [rax - 0x66cfffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017911a : add byte ptr [rax], al ; test byte ptr [rax], al ; add byte ptr [rax + 7], dl ; in al, dx ; call qword ptr [rax]
0x000000000018f41a : add byte ptr [rax], al ; test byte ptr [rbx - 0x630fffff], ah ; cmc ; jmp qword ptr [rcx]
0x0000000000187c1a : add byte ptr [rax], al ; test byte ptr [rbx], ch ; add dword ptr [rax], eax ; jo 0x187c12 ; call qword ptr [rbx]
0x0000000000185a1a : add byte ptr [rax], al ; test byte ptr [rcx], cl ; add dword ptr [rax], eax ; push rax ; xchg ecx, esi ; jmp qword ptr [rcx]
0x000000000019a31a : add byte ptr [rax], al ; test byte ptr [rdx + 2], dl ; add byte ptr [rax], dh ; jno 0x19a323 ; jmp qword ptr [rax]
0x000000000017671a : add byte ptr [rax], al ; test byte ptr [rsi], dl ; add byte ptr [rax], al ; jo 0x1767a4 ; jmp 0x17672c
0x000000000019391a : add byte ptr [rax], al ; test ch, al ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x0000000000067826 : add byte ptr [rax], al ; test ecx, ecx ; je 0x67837 ; ret
0x00000000000c6102 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; jmp 0xc60e8
0x00000000000e750d : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x00000000001143f2 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x1143e8 ; pop rbx ; ret
0x000000000018d35a : add byte ptr [rax], al ; vpshufb xmm0, xmm15, xmmword ptr [r8 + 0x3b] ; cmc ; jmp rdi
0x000000000016efe6 : add byte ptr [rax], al ; xchg ax, bx ; in al, dx ; jmp rsp
0x000000000018d7da : add byte ptr [rax], al ; xchg dword ptr [rcx], r8d ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x000000000017622a : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; push rsp ; jmp 0x17623c
0x000000000018432a : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr [rax], al ; loopne 0x184353 ; cli ; call qword ptr [rax]
0x000000000018c62a : add byte ptr [rax], al ; xchg eax, esp ; jne 0x18c639 ; add byte ptr [rax - 4], al ; hlt ; jmp qword ptr [rcx]
0x000000000017cc2a : add byte ptr [rax], al ; xchg eax, esp ; jnp 0x17cc38 ; add byte ptr [rax - 0x17], al ; out dx, al ; jmp rsp
0x000000000018dc2a : add byte ptr [rax], al ; xchg eax, esp ; mov eax, dword ptr [rcx] ; add al, dl ; push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000181842 : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000018132a : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x0000000000176b2a : add byte ptr [rax], al ; xchg eax, esp ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], dh ; jmp 0x176b3c
0x000000000018f92a : add byte ptr [rax], al ; xchg eax, esp ; test al, 1 ; add al, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001913ee : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x000000000016ead6 : add byte ptr [rax], al ; xor al, 0 ; in al, dx ; jmp rsp
0x00000000001765ca : add byte ptr [rax], al ; xor al, 0x15 ; add byte ptr [rax], al ; add byte ptr [rax - 0x15], dh ; call qword ptr [rax]
0x0000000000178eca : add byte ptr [rax], al ; xor al, 0x3e ; add byte ptr [rax], al ; xor dh, bh ; jmp 0x178edc
0x00000000001891ca : add byte ptr [rax], al ; xor al, 0x41 ; add dword ptr [rax], eax ; adc ebx, esi ; jmp qword ptr [rdx]
0x000000000016ec56 : add byte ptr [rax], al ; xor al, 0x51 ; in al, dx ; jmp rsp
0x000000000016ee0e : add byte ptr [rax], al ; xor al, 0x6f ; in al, dx ; call rsp
0x000000000018c7ca : add byte ptr [rax], al ; xor al, 0x77 ; add dword ptr [rax], eax ; and byte ptr [rbx], bl ; stc ; call qword ptr [rax]
0x000000000017fcca : add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; add dl, ch ; call rdx
0x0000000000180eca : add byte ptr [rax], al ; xor al, 0xbe ; add byte ptr [rax], al ; push rax ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001920ca : add byte ptr [rax], al ; xor al, 0xd0 ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rdi]
0x00000000001884da : add byte ptr [rax], al ; xor al, 1 ; add al, dh ; call rsp
0x00000000000db1e4 : add byte ptr [rax], al ; xor al, al ; ret
0x000000000017882e : add byte ptr [rax], al ; xor bh, dh ; jmp 0x178838
0x000000000018426e : add byte ptr [rax], al ; xor byte ptr [rbx], al ; cli ; call qword ptr [rax]
0x00000000000e06da : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x000000000017ea0e : add byte ptr [rax], al ; xor byte ptr [rdi], bl ; out dx, eax ; call rcx
0x000000000009adbe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000178ece : add byte ptr [rax], al ; xor dh, bh ; jmp 0x178ed8
0x000000000007d9cc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000011e22e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000007cc7e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000010be0e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010bdc7 : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000037d7b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011abef : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003791a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000035cce : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000038b3b : add byte ptr [rax], al ; xor eax, edx ; ret
0x000000000009f572 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9f525
0x00000000000a1ac2 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa1a75
0x00000000000a3f22 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa3ed5
0x0000000000083cc1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000084edd : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000019c4f7 : add byte ptr [rax], bh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000018d3c7 : add byte ptr [rax], bh ; cmp al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000178847 : add byte ptr [rax], bh ; imul ebx ; call qword ptr [rcx]
0x0000000000176a27 : add byte ptr [rax], bh ; jl 0x176a1a ; call qword ptr [rbx]
0x000000000019c357 : add byte ptr [rax], bh ; ret
0x000000000018f107 : add byte ptr [rax], bl ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000018d7c7 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000192707 : add byte ptr [rax], bl ; cmp dh, dh ; call qword ptr [rax]
0x0000000000177c47 : add byte ptr [rax], bl ; fsub st(3), st(0) ; jmp qword ptr [rcx]
0x000000000018b4f7 : add byte ptr [rax], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000176937 : add byte ptr [rax], bl ; jl 0x17692a ; call qword ptr [rsi]
0x00000000001769c7 : add byte ptr [rax], bl ; jl 0x1769ba ; call qword ptr [rdx]
0x000000000018c977 : add byte ptr [rax], bl ; or ebp, esi ; jmp qword ptr [rcx]
0x000000000018f4f7 : add byte ptr [rax], bl ; sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000191ff7 : add byte ptr [rax], bl ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018c617 : add byte ptr [rax], ch ; cld ; hlt ; jmp qword ptr [rcx]
0x0000000000186af7 : add byte ptr [rax], ch ; cld ; jmp qword ptr [rbx]
0x000000000018d6b7 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001769f7 : add byte ptr [rax], ch ; jl 0x1769ea ; call qword ptr [rdx]
0x0000000000186e57 : add byte ptr [rax], ch ; jmp qword ptr [rcx]
0x00000000001782c7 : add byte ptr [rax], ch ; out dx, eax ; jmp 0x1782cf
0x000000000018e087 : add byte ptr [rax], ch ; pop rbp ; cmc ; jmp qword ptr [rbx]
0x000000000017b357 : add byte ptr [rax], ch ; ret
0x0000000000189407 : add byte ptr [rax], ch ; sbb dh, bl ; jmp qword ptr [rcx]
0x0000000000191de7 : add byte ptr [rax], ch ; sub esi, esi ; jmp qword ptr [rsi]
0x000000000018f2e7 : add byte ptr [rax], ch ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000018c787 : add byte ptr [rax], cl ; add al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000e987b : add byte ptr [rax], cl ; add al, ch ; sbb eax, 0x89ffffff ; ret 0xfa83
0x000000000018c2f7 : add byte ptr [rax], cl ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018da47 : add byte ptr [rax], cl ; cmc ; jmp qword ptr [rsi]
0x000000000018f947 : add byte ptr [rax], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000191097 : add byte ptr [rax], cl ; fdiv st(5) ; call rsp
0x0000000000186df7 : add byte ptr [rax], cl ; jmp qword ptr [rax]
0x0000000000185a87 : add byte ptr [rax], cl ; mov dh, cl ; jmp rsi
0x000000000002e404 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x0000000000181377 : add byte ptr [rax], cl ; pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018f437 : add byte ptr [rax], cl ; popfq ; cmc ; jmp qword ptr [rcx]
0x000000000019c277 : add byte ptr [rax], cl ; ret 0xfff7
0x000000000019a8b7 : add byte ptr [rax], cl ; xchg edi, esi ; call rdi
0x000000000019d77f : add byte ptr [rax], dh ; add al, 0xf8 ; jmp qword ptr [rcx]
0x0000000000022044 : add byte ptr [rax], dh ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfffd
0x000000000018426f : add byte ptr [rax], dh ; add edi, edx ; call qword ptr [rax]
0x000000000018f11f : add byte ptr [rax], dh ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000018d7df : add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018b50f : add byte ptr [rax], dh ; hlt ; jmp qword ptr [rcx]
0x000000000017882f : add byte ptr [rax], dh ; imul ebx ; call qword ptr [rdx]
0x000000000009adbf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000176a0f : add byte ptr [rax], dh ; jl 0x176a02 ; call qword ptr [rbx]
0x000000000019a31f : add byte ptr [rax], dh ; jno 0x19a31e ; jmp qword ptr [rax]
0x000000000018f86f : add byte ptr [rax], dh ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000008f7f : add byte ptr [rax], dh ; ret
0x000000000019200f : add byte ptr [rax], dh ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000000977f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a307 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000f51a2 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000067165 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000067173 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000019c18f : add byte ptr [rax], dl ; add edi, ebx ; jmp qword ptr [rdx]
0x000000000018c5ff : add byte ptr [rax], dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018d69f : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x000000000019549f : add byte ptr [rax], dl ; jae 0x19549d ; call rdi
0x000000000017c09f : add byte ptr [rax], dl ; loopne 0x17c095 ; jmp qword ptr [rax]
0x000000000018ed8f : add byte ptr [rax], dl ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000002e4e4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001890af : add byte ptr [rax], dl ; or al, 0xf3 ; jmp qword ptr [rcx]
0x000000000017622f : add byte ptr [rax], dl ; push rsp ; jmp 0x176237
0x0000000000017ce7 : add byte ptr [rax], dl ; ret
0x000000000000be5f : add byte ptr [rax], dl ; ret 0xd
0x000000000017786f : add byte ptr [rax], dl ; salc ; jmp 0x177877
0x0000000000197b8f : add byte ptr [rax], dl ; sti ; jmp qword ptr [rdx]
0x0000000000191dcf : add byte ptr [rax], dl ; sub esi, esi ; jmp qword ptr [rsi]
0x000000000018f2cf : add byte ptr [rax], dl ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000019c270 : add byte ptr [rax], r8b ; add ah, bl ; jno 0x19c282 ; add byte ptr [rax], cl ; ret 0xfff7
0x0000000000181888 : add byte ptr [rax], r8b ; add ah, bl ; ret
0x0000000000191380 : add byte ptr [rax], r8b ; add ah, ch ; ret 1
0x0000000000194d78 : add byte ptr [rax], r8b ; add ah, cl ; clc ; add dword ptr [rax], eax ; ret
0x00000000001835a0 : add byte ptr [rax], r8b ; add ah, dh ; loopne 0x1835b0 ; add al, bh ; ret 0xffef
0x0000000000181388 : add byte ptr [rax], r8b ; add ah, dh ; ret 0
0x0000000000182218 : add byte ptr [rax], r8b ; add byte ptr [rbp + rcx*8], ch ; add byte ptr [rbx], bl ; ret
0x000000000017b3d0 : add byte ptr [rax], r8b ; add byte ptr [rdi + rbx*2], ah ; add byte ptr [rax], al ; cmc ; ret
0x000000000019c2b8 : add byte ptr [rax], r8b ; add byte ptr [rdx + rsi*2], ah ; add al, byte ptr [rax] ; ret 0xfff7
0x00000000001836c0 : add byte ptr [rax], r8b ; add byte ptr [rdx], dl ; add byte ptr [rax], al ; push rsp ; ret 0xffef
0x00000000001820b0 : add byte ptr [rax], r8b ; add byte ptr [rsp + rcx*8], al ; add byte ptr [rax], al ; clc ; ret
0x00000000001820f8 : add byte ptr [rax], r8b ; add byte ptr [rsp + rcx*8], cl ; add bl, cl ; ret
0x00000000000f01f5 : add byte ptr [rax], r8b ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014ba75 : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014bad5 : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000034d2d : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000001058c5 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000009102d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000bb64d : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x0000000000035dd5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000002ad6d : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000001143fd : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000006eadd : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x000000000005f505 : add byte ptr [rax], r8b ; mov edi, r13d ; call 0xeb7d8
0x0000000000096f6d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000071ba7 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x71b67
0x0000000000071ba6 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x71b68
0x000000000008afc5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000000f8cc5 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000b635d : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000043075 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000033b85 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000008a785 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x0000000000096fad : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009100d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x0000000000075fd5 : add byte ptr [rax], r8b ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000017955d : add byte ptr [rax], r8b ; nop ; push rdi ; in al, dx ; jmp rax
0x000000000004306d : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000002d615 : add byte ptr [rax], r8b ; ret
0x00000000000cf39d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000c527d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003831d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000037a45 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000009cc1d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000014c7ab : add byte ptr [rbp + 0x1e], dh ; ret
0x000000000011b6d7 : add byte ptr [rbp + 0x23], dh ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000c78ef : add byte ptr [rbp + 0x29], al ; ret 0x2948
0x0000000000073bd2 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000000b1542 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000039920 : add byte ptr [rbp + 0x35], dh ; add rsp, 8 ; ret
0x00000000000420be : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000083d3e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x00000000000670fe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x000000000009b8f5 : add byte ptr [rbp + 0x49], bl ; lea eax, dword ptr [rax + 1] ; pop r12 ; ret
0x0000000000074283 : add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000016f3af : add byte ptr [rbp + 0x52], bh ; in eax, dx ; call rsp
0x00000000000ca64a : add byte ptr [rbp + 0x634c0143], cl ; ret
0x0000000000103f97 : add byte ptr [rbp + 0x63], cl ; ret
0x000000000005038a : add byte ptr [rbp + 0x67], dh ; mov eax, edx ; pop rbx ; ret
0x000000000018b633 : add byte ptr [rbp + 0x68180001], bl ; hlt ; call qword ptr [rdi]
0x0000000000197dd3 : add byte ptr [rbp + 0x6a680002], bh ; clc ; call qword ptr [rax]
0x0000000000104835 : add byte ptr [rbp + 0x6f], dh ; add rsp, 8 ; ret
0x000000000002ec02 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x18 ; ret
0x000000000004485f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000004474f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000003822a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000000c3879 : add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x000000000011dac8 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000000000f5bc6 : add byte ptr [rbp + 5], dh ; call 0x21dd5
0x00000000000f2eed : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116d06 : add byte ptr [rbp + 7], dh ; ret
0x00000000000e21c5 : add byte ptr [rbp + 8], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010d1b8 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x0000000000189a6b : add byte ptr [rbp + rax*2 + 0x65370001], bh ; hlt ; jmp qword ptr [rax]
0x000000000018d63b : add byte ptr [rbp + rax*4 + 0x41f00001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019d613 : add byte ptr [rbp + rax*4 + 2], bh ; add byte ptr [rax + 3], ch ; clc ; call qword ptr [rdi]
0x00000000001815e3 : add byte ptr [rbp + rax*8], cl ; add byte ptr [rax + 0x62], cl ; out dx, eax ; call qword ptr [rsi]
0x00000000000bb728 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000170d47 : add byte ptr [rbp + rbp*8 - 0xf], dl ; jmp rsp
0x0000000000174c67 : add byte ptr [rbp + rbp*8 - 6], al ; call rsp
0x0000000000186e53 : add byte ptr [rbp + rbx + 0x44280001], bh ; jmp qword ptr [rcx]
0x0000000000186df3 : add byte ptr [rbp + rbx + 1], bl ; add byte ptr [rax], cl ; jmp qword ptr [rax]
0x0000000000175e3b : add byte ptr [rbp + rcx + 0x10700000], ah ; jmp 0x175e4b
0x0000000000033e23 : add byte ptr [rbp + rcx*4 + 0x1c], cl ; sbb byte ptr [rax - 0x77], cl ; ret 0x394d
0x000000000009e049 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000c1223 : add byte ptr [rbp + rcx*4 + 0x68], cl ; add ch, cl ; ret
0x00000000000c4957 : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000fa36e : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2aef
0x0000000000191de3 : add byte ptr [rbp + rcx*8 + 1], cl ; add byte ptr [rax], ch ; sub esi, esi ; jmp qword ptr [rsi]
0x000000000018221b : add byte ptr [rbp + rcx*8], ch ; add byte ptr [rbx], bl ; ret
0x0000000000184e0b : add byte ptr [rbp + rdi*8], dh ; add byte ptr [rax], al ; ret
0x0000000000178e0b : add byte ptr [rbp + rdi], dh ; add al, dl ; std ; jmp 0x178e1b
0x000000000018c5fb : add byte ptr [rbp + rsi*2 + 1], ah ; add byte ptr [rax], dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018c613 : add byte ptr [rbp + rsi*2 + 1], bh ; add byte ptr [rax], ch ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000016ee97 : add byte ptr [rbp + rsi*2 - 0x14], dh ; jmp rsp
0x000000000018c643 : add byte ptr [rbp + rsi*2 - 0x3a7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018c62b : add byte ptr [rbp + rsi*2 - 0x3bfffff], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000190643 : add byte ptr [rbp + rsi*4 - 0x3547ffff], ch ; cmc ; call rsp
0x000000000009d1b5 : add byte ptr [rbp - 0x10], dh ; ret
0x0000000000181500 : add byte ptr [rbp - 0x11], bl ; jmp qword ptr [rax]
0x00000000000e44b3 : add byte ptr [rbp - 0x17fa8b40], al ; ret
0x000000000014c0d8 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x00000000000c6103 : add byte ptr [rbp - 0x3dbaf02e], al ; jmp 0xc60e7
0x00000000000e750e : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000015ef50 : add byte ptr [rbp - 0x72ef000d], cl ; jmp qword ptr [rax]
0x00000000000505a1 : add byte ptr [rbp - 0x73], al ; jl 0x505cb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b6adf : add byte ptr [rbp - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000043ca0 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000057993 : add byte ptr [rbp - 0x78], al ; je 0x579bd ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000073d2f : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x0000000000106578 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000c94b6 : add byte ptr [rbp - 0x7cb7feb5], cl ; ret
0x00000000000c273f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000007d2e5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000034f65 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000067827 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000017226f : add byte ptr [rbp - 9], al ; jmp rsp
0x0000000000183db3 : add byte ptr [rbp*8 - 0x4a80000], bl ; out dx, eax ; jmp rdx
0x0000000000010a6f : add byte ptr [rbp], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000120919 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000072e0f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x000000000009bbae : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000700e8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000ea85d : add byte ptr [rbx + 0x2bdbbc0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000771b5 : add byte ptr [rbx + 0x3305c705], al ; add byte ptr [rcx], al ; ret
0x0000000000030786 : add byte ptr [rbx + 0x37a0430d], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000303c4 : add byte ptr [rbx + 0x37a40535], cl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c7db1 : add byte ptr [rbx + 0x394104c0], al ; ret 0x6a7e
0x00000000000bafb0 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f5438 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000096f7f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000014401f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00000000001473cf : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000353f5 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000b9c93 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; ret
0x000000000009939f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x0000000000069edf : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000001340ef : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000500b2 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000002411d : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fdfe : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002161b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000024218 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007522f : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000007352f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000010ea3e : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000097669 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000018b44b : add byte ptr [rbx + 0x66800001], dh ; hlt ; jmp qword ptr [rax]
0x00000000000da94f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x0000000000187443 : add byte ptr [rbx + 0x6ed80001], ch ; call qword ptr [rdx]
0x000000000004bbe6 : add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000072ddf : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000b53ef : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x000000000009f54d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0x9f527
0x00000000000a1a9d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa1a77
0x00000000000a3efd : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa3ed7
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000018f3eb : add byte ptr [rbx + 1], dl ; add al, al ; pushfq ; cmc ; jmp qword ptr [rcx]
0x000000000019e003 : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x000000000014987a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x0000000000189403 : add byte ptr [rbx + rax*2 + 1], ch ; add byte ptr [rax], ch ; sbb dh, bl ; jmp qword ptr [rcx]
0x0000000000173def : add byte ptr [rbx + rax*4], dl ; stc ; jmp rsp
0x0000000000187c03 : add byte ptr [rbx + rbp + 1], ch ; add byte ptr [rax - 0x19], ch ; call qword ptr [rsi]
0x0000000000187c33 : add byte ptr [rbx + rbp - 0x1887ffff], bl ; call qword ptr [rbx]
0x0000000000187c1b : add byte ptr [rbx + rbp - 0x188fffff], al ; call qword ptr [rbx]
0x0000000000177c43 : add byte ptr [rbx + rbp - 0x23e80000], ch ; jmp 0x177c53
0x00000000001741f7 : add byte ptr [rbx + rbp*8], dh ; stc ; jmp rsp
0x000000000018e083 : add byte ptr [rbx + rbp], al ; add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], bl ; jmp qword ptr [rbx]
0x0000000000186c4b : add byte ptr [rbx + rbx + 0x3c800001], dh ; jmp qword ptr [rcx]
0x0000000000186bfb : add byte ptr [rbx + rbx + 1], ah ; add byte ptr [rax + 0x3c], al ; call qword ptr [rcx]
0x000000000017022f : add byte ptr [rbx + rbx*2 - 0x10], dh ; call rsp
0x0000000000171a3f : add byte ptr [rbx + rbx*2 - 0xb], ah ; jmp rsp
0x0000000000171b47 : add byte ptr [rbx + rbx*4 - 0xb], dh ; jmp rsp
0x0000000000174377 : add byte ptr [rbx + rbx], dh ; cli ; call rsp
0x0000000000185c2b : add byte ptr [rbx + rcx - 0x702fffff], dl ; int1 ; call qword ptr [rdx]
0x0000000000170137 : add byte ptr [rbx + rcx*2 - 0x10], dh ; jmp rsp
0x0000000000117f32 : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x000000000018dc2b : add byte ptr [rbx + rcx*4 + 0x53d00001], dl ; cmc ; jmp qword ptr [rcx]
0x000000000018dc43 : add byte ptr [rbx + rcx*4 + 0x53e80001], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000045947 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000044197 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000018cc43 : add byte ptr [rbx + rdi*2 + 0x1ac80001], ch ; cmc ; jmp rdi
0x000000000017cc2b : add byte ptr [rbx + rdi*2 - 0x16c00000], dl ; out dx, al ; jmp rsp
0x00000000001732e7 : add byte ptr [rbx + rdi*2 - 8], ah ; jmp rsp
0x0000000000174cf7 : add byte ptr [rbx + rdi*8], dh ; cli ; call rsp
0x000000000018c3f3 : add byte ptr [rbx + rsi*2 + 1], bl ; add byte ptr [rax - 0xa], cl ; hlt ; jmp rbx
0x000000000019c40b : add byte ptr [rbx + rsi*2 + 2], dh ; add al, dh ; add bl, bh ; jmp qword ptr [rdx]
0x0000000000174c97 : add byte ptr [rbx + rsi*8 - 6], dh ; call rsp
0x0000000000054486 : add byte ptr [rbx - 0x10ff43], al ; call qword ptr [rax]
0x00000000000530a9 : add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x0000000000182ac0 : add byte ptr [rbx - 0x11], ah ; call qword ptr [rsi]
0x00000000000bada7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xbadba ; ret
0x000000000002d0bf : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x0000000000070067 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000177453 : add byte ptr [rbx - 0x3cb80000], bh ; jmp 0x177463
0x000000000009bc38 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000009bc31 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000009bc2a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000009bc23 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000009bc1c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000009bc3f : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000002b6ad : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x2b681 ; pop rbx ; ret
0x0000000000107136 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x107148 ; ret
0x00000000000f4c9f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0xf4cb9 ; ret
0x000000000016e36c : add byte ptr [rbx - 0x456f0004], bh ; cld ; jmp qword ptr [rax]
0x000000000018f433 : add byte ptr [rbx - 0x62f7ffff], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018f41b : add byte ptr [rbx - 0x630fffff], al ; cmc ; jmp qword ptr [rcx]
0x00000000000c3cc9 : add byte ptr [rbx - 0x71f0fe06], al ; ret
0x00000000000425df : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000038284 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000119916 : add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x0000000000021ecc : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x00000000000e883a : add byte ptr [rbx - 0x76ebdbb4], cl ; ret
0x000000000002044f : add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006baa4 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc362fc10
0x0000000000021a7f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000b4a7e : add byte ptr [rbx - 0x7af09807], al ; ret 3
0x0000000000048d61 : add byte ptr [rbx - 0x7af0fe40], al ; ret
0x000000000014af36 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000cda59 : add byte ptr [rbx - 0x7bf0fb07], al ; ret
0x00000000000de06b : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000fe6c0 : add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000b34e7 : add byte ptr [rbx - 0x7cb7fbb5], cl ; ret
0x0000000000102baf : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000d0d87 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4408
0x00000000000c28bf : add byte ptr [rbx - 0x7ce7dbb4], cl ; ret
0x000000000007a513 : add byte ptr [rbx - 0x7d], cl ; add al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000007a447 : add byte ptr [rbx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000e4a4f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000171a97 : add byte ptr [rbx - 0xb], dh ; call rsp
0x000000000017d92b : add byte ptr [rbx - 0xd100000], ch ; out dx, al ; jmp qword ptr [rdx]
0x000000000016db80 : add byte ptr [rbx - 4], ah ; push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000017ada3 : add byte ptr [rbx*2 + 0x62380000], cl ; in eax, dx ; call rdx
0x000000000018edbb : add byte ptr [rbx*4 - 0x76bfffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000017b3bb : add byte ptr [rbx], ah ; add byte ptr [rax], al ; nop ; ret
0x0000000000171687 : add byte ptr [rbx], ah ; hlt ; call rsp
0x00000000000dac00 : add byte ptr [rbx], bh ; or al, 0x74 ; ret 0x7fbf
0x000000000018221f : add byte ptr [rbx], bl ; ret
0x000000000017b3a3 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; js 0x17b375 ; out dx, al ; jmp qword ptr [rcx]
0x000000000018f3a3 : add byte ptr [rbx], cl ; add dword ptr [rax], eax ; pushfq ; cmc ; jmp qword ptr [rcx]
0x0000000000050c56 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000280a8 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000141cdf : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000003bd7f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000000858e6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005680c : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f6532 : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000e4621 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006c412 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000740a6 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000141cbf : add byte ptr [rcx + 0x4518811], cl ; ret
0x0000000000097f4f : add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000076436 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000018b23b : add byte ptr [rcx + 0x4c600001], ah ; hlt ; jmp qword ptr [rax]
0x000000000007a21b : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x000000000011b1e6 : add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000021720 : add byte ptr [rcx + 0x5c], al ; ret
0x00000000000502c1 : add byte ptr [rcx + 0x5d], al ; ret
0x00000000000501f3 : add byte ptr [rcx + 0x5e], al ; ret
0x00000000000d34a1 : add byte ptr [rcx + 0x5f], al ; ret
0x000000000012a0de : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000068d77 : add byte ptr [rcx + 0x63], cl ; add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000014743c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000096df8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000bff28 : add byte ptr [rcx + 0x63], cl ; ret 0x348b
0x000000000002e5af : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000ca0fb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000435f2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x0000000000077eed : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000000abd19 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x00000000000ea5b8 : add byte ptr [rcx + 1], cl ; fisttp qword ptr [rax + 0x39] ; ret
0x000000000009b59f : add byte ptr [rcx + 1], cl ; ret
0x0000000000051bce : add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000185243 : add byte ptr [rcx + rax + 0x6e680001], ch ; sti ; call qword ptr [rax]
0x0000000000185213 : add byte ptr [rcx + rax + 1], bh ; add byte ptr [rax + 0x4d], cl ; sti ; call qword ptr [rax]
0x000000000016eb27 : add byte ptr [rcx + rax - 0x14], dl ; call rsp
0x000000000007d0c6 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x0000000000170917 : add byte ptr [rcx + rax - 0xf], dl ; call rsp
0x00000000001891cb : add byte ptr [rcx + rax*2], dh ; add dword ptr [rax], eax ; adc ebx, esi ; jmp qword ptr [rdx]
0x000000000016f2d7 : add byte ptr [rcx + rbp - 0x13], al ; jmp rsp
0x000000000009d0bf : add byte ptr [rcx + rbp - 0x40], al ; ret
0x0000000000173ba7 : add byte ptr [rcx + rbp - 7], dh ; call rsp
0x00000000001716ff : add byte ptr [rcx + rbp*4], dh ; hlt ; jmp rsp
0x0000000000183a3b : add byte ptr [rcx + rbp*8 - 0x3d000000], ah ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001839fb : add byte ptr [rcx + rbp*8], ah ; add al, al ; ret 0xffef
0x00000000001939c3 : add byte ptr [rcx + rbp*8], ch ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x00000000001939ab : add byte ptr [rcx + rbp*8], dl ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x0000000000176a23 : add byte ptr [rcx + rbx + 0x7c380000], cl ; jmp 0x176a33
0x0000000000176a3b : add byte ptr [rcx + rbx + 0x7c400000], ah ; jmp 0x176a4b
0x0000000000176a53 : add byte ptr [rcx + rbx + 0x7c480000], bh ; jmp 0x176a63
0x000000000017a9fb : add byte ptr [rcx + rbx*2], ah ; add byte ptr [rax], ah ; push rdi ; in eax, dx ; call rdi
0x000000000017e99b : add byte ptr [rcx + rbx*4], al ; add byte ptr [rax], al ; mov al, 0x1e ; out dx, eax ; jmp rbx
0x000000000016f057 : add byte ptr [rcx + rbx*4], dl ; in al, dx ; call rsp
0x0000000000174117 : add byte ptr [rcx + rbx*8], ah ; stc ; call rsp
0x00000000001829f3 : add byte ptr [rcx + rbx*8], bl ; add al, bh ; pop rsi ; out dx, eax ; call rax
0x00000000001829a3 : add byte ptr [rcx + rbx*8], cl ; add byte ptr [rax], al ; pop rax ; pop rsi ; out dx, eax ; jmp rcx
0x00000000001712df : add byte ptr [rcx + rbx*8], dh ; jmp rsp
0x00000000001769db : add byte ptr [rcx + rbx], al ; add byte ptr [rax], ah ; jl 0x1769d6 ; call qword ptr [rbx]
0x00000000001769f3 : add byte ptr [rcx + rbx], bl ; add byte ptr [rax], ch ; jl 0x1769ee ; call qword ptr [rdx]
0x0000000000176a0b : add byte ptr [rcx + rbx], dh ; add byte ptr [rax], dh ; jl 0x176a06 ; call qword ptr [rbx]
0x000000000015429f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000185a1b : add byte ptr [rcx + rcx - 0x78afffff], al ; int1 ; jmp qword ptr [rcx]
0x00000000000f455c : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000efd8f : add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000066969 : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7809 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000b78b7 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x000000000018da43 : add byte ptr [rcx + rcx*4 + 0x49080001], ch ; cmc ; jmp qword ptr [rsi]
0x000000000008afc7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000007a949 : add byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x28 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000005f507 : add byte ptr [rcx + rcx*4 - 0x11], al ; call 0xeb7d6
0x00000000000add9f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x6a0a6
0x00000000001137b9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000005e5c5 : add byte ptr [rcx + rcx*4 - 0x12], cl ; mov rdi, r9 ; call 0x8a7e9
0x000000000009e278 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x000000000009e873 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000007bf1a : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000006fc80 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x00000000000b666f : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000002392c : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000007eda0 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x00000000000e372f : add byte ptr [rcx + rcx*8 - 0x7cb7848c], al ; ret
0x00000000001759b3 : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], al ; sub byte ptr [rcx - 3], ah ; jmp qword ptr [rdx]
0x000000000007f2e4 : add byte ptr [rcx + rdi*2 + 0x48], dh ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000018c9d3 : add byte ptr [rcx + rdi*2], bh ; add dword ptr [rax], eax ; js 0x18c9eb ; cmc ; jmp qword ptr [rcx]
0x000000000018c9a3 : add byte ptr [rcx + rdi*2], cl ; add dword ptr [rax], eax ; or rbp, rsi ; jmp qword ptr [rcx]
0x00000000001789d3 : add byte ptr [rcx + rdi], bh ; add byte ptr [rax], al ; test al, 0xf9 ; jmp 0x1789e3
0x000000000017622b : add byte ptr [rcx + rdx + 0x54100000], dl ; jmp 0x17623b
0x00000000001861f3 : add byte ptr [rcx + rdx + 1], bl ; add al, bh ; add dh, dl ; jmp rax
0x000000000016ec57 : add byte ptr [rcx + rdx*2], dh ; in al, dx ; jmp rsp
0x000000000018e23b : add byte ptr [rcx + rdx*4 + 0x65d00001], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018e253 : add byte ptr [rcx + rdx*4 + 0x65e80001], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018e1f3 : add byte ptr [rcx + rdx*4 + 1], bl ; add byte ptr [rax + 0x65], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018e20b : add byte ptr [rcx + rdx*4 + 1], dh ; add byte ptr [rax + 0x65], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000174b67 : add byte ptr [rcx + rdx*8], dh ; cli ; jmp rsp
0x00000000001861c3 : add byte ptr [rcx + rdx], ch ; add dword ptr [rax], eax ; test al, 2 ; call qword ptr [rax]
0x00000000001861ab : add byte ptr [rcx + rdx], dl ; add dword ptr [rax], eax ; mov al, 2 ; call qword ptr [rax]
0x000000000018c243 : add byte ptr [rcx + rsi*2 - 0xb67ffff], ch ; hlt ; jmp qword ptr [rcx]
0x000000000018c22b : add byte ptr [rcx + rsi*2 - 0xb7fffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000018423b : add byte ptr [rcx + rsi*8 - 0x3ba00000], ah ; stc ; call qword ptr [rax]
0x00000000001841ab : add byte ptr [rcx + rsi*8], dl ; add byte ptr [rax], al ; sbb sil, al ; call qword ptr [rcx]
0x00000000001781d3 : add byte ptr [rcx + rsi], bh ; add byte ptr [rax], al ; call 0x11176dcd
0x000000000016fc87 : add byte ptr [rcx - 0x11], bh ; out dx, eax ; jmp rsp
0x000000000016ecc7 : add byte ptr [rcx - 0x14], ah ; jmp rsp
0x000000000000245f : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x0000000000041bee : add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000b5f11 : add byte ptr [rcx - 0x3b7cb739], cl ; or cl, ch ; ret
0x00000000000ce5ac : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4cfdbc3
0x00000000000de4fa : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d0db11
0x00000000000da95f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000001736bf : add byte ptr [rcx - 0x4f], bh ; clc ; jmp rsp
0x000000000018f253 : add byte ptr [rcx - 0x6567ffff], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018f23b : add byte ptr [rcx - 0x657fffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018f223 : add byte ptr [rcx - 0x6597ffff], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000c772c : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000bd009 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000005bd93 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000cebef : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000cec13 : add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x000000000011926f : add byte ptr [rcx - 0x75], cl ; push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000001177f7 : add byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000041f96 : add byte ptr [rcx - 0x75], cl ; ret
0x000000000009102f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000f4be7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000005ea2a : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x0000000000046961 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000043ba4 : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x000000000008e88e : add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x00000000000322b5 : add byte ptr [rcx - 0x77], cl ; ret 0x65e9
0x000000000003b4f3 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000056011 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000005dd62 : add byte ptr [rcx - 0x77], cl ; ret 0xabe9
0x000000000010e67f : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x0000000000060fcc : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000002b5c4 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000075117 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000ae354 : add byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x000000000002436e : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c459f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000003d187 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000011ea8f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000008038f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007a358 : add byte ptr [rcx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000015ee40 : add byte ptr [rcx - 0x7eef000d], al ; jmp qword ptr [rax]
0x00000000000badaa : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000016c56f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000173117 : add byte ptr [rcx - 8], ah ; call rsp
0x0000000000085012 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000085038 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000011779c : add byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret 0x894c
0x000000000011bf83 : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x000000000017cb16 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x000000000017a536 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xecfb
0x00000000001965e6 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5fe
0x0000000000172d37 : add byte ptr [rcx], ah ; loope 0x172d36 ; call rsp
0x000000000018355f : add byte ptr [rcx], ah ; ret
0x000000000016ce28 : add byte ptr [rcx], ah ; sti ; call rax
0x00000000001611cb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000000722f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x000000000002b140 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002e779 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000113243 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084b41 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008182f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000d65b0 : add byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ca2e0 : add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000f9da0 : add byte ptr [rcx], al ; jmp 0xf9b73
0x00000000000fa158 : add byte ptr [rcx], al ; jmp 0xf9f43
0x00000000000d2d2d : add byte ptr [rcx], al ; jne 0xd2d3d ; ret
0x000000000002e4c4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000077c86 : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000001169df : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000771bb : add byte ptr [rcx], al ; ret
0x0000000000042d6e : add byte ptr [rcx], al ; ret 0x37e9
0x000000000011779f : add byte ptr [rcx], al ; ret 0x894c
0x000000000011a0a5 : add byte ptr [rcx], al ; ret 0x90eb
0x00000000000c2515 : add byte ptr [rcx], al ; setg dl ; jmp 0xc24a2
0x000000000016d654 : add byte ptr [rcx], bh ; cld ; jmp rax
0x0000000000021cc4 : add byte ptr [rcx], bh ; ret
0x00000000000ca15b : add byte ptr [rcx], bh ; ret 0x4e0f
0x00000000000d46cf : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000d3121 : add byte ptr [rcx], bh ; ret 0x8e0f
0x000000000007adf1 : add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000081b2d : add byte ptr [rcx], ch ; ret
0x00000000000d26b8 : add byte ptr [rcx], ch ; ret 0x2975
0x00000000000d26aa : add byte ptr [rcx], ch ; ret 0x3775
0x00000000000d269c : add byte ptr [rcx], ch ; ret 0x4575
0x00000000000b4a60 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000b2803 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000b289d : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000b49c4 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000e0fe1 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000040f7e : add byte ptr [rcx], cl ; ret 0x840f
0x0000000000034adc : add byte ptr [rcx], cl ; ret 0xd089
0x00000000000ac35d : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000007889f : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x000000000007884e : add byte ptr [rcx], dh ; dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x000000000009f573 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9f524
0x00000000000a1ac3 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa1a74
0x00000000000a3f23 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa3ed4
0x000000000010f9f0 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000037d7c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000081b26 : add byte ptr [rcx], dh ; ret
0x000000000005f8b9 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000002e5bf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x0000000000026057 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000009f5e7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000037bbb : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011e22f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000011c38d : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000083cc2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000002809d : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret
0x0000000000103372 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000c372f : add byte ptr [rcx], dh ; sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x0000000000131f3a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001715a7 : add byte ptr [rdi + 0x64fff490], ah ; wait ; add dword ptr [rax], eax ; ret 0xf490
0x000000000007bea5 : add byte ptr [rdi + 0x8b8], bh ; call 0x780c8
0x00000000000d908d : add byte ptr [rdi + 1], bh ; call rax
0x000000000000668f : add byte ptr [rdi + 1], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000009cc14 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x000000000014b924 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000185843 : add byte ptr [rdi + rax - 0x7f67ffff], ch ; int1 ; call qword ptr [rsi]
0x000000000018582b : add byte ptr [rdi + rax - 0x7f7fffff], dl ; int1 ; jmp qword ptr [rdi]
0x0000000000179853 : add byte ptr [rdi + rax*2 + 0x77580000], bh ; in al, dx ; call qword ptr [rsi]
0x000000000018d7db : add byte ptr [rdi + rax*4 + 1], al ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018d7f3 : add byte ptr [rdi + rax*4 + 1], bl ; add byte ptr [rax + 0x46], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019d813 : add byte ptr [rdi + rax*4 + 2], bh ; add byte ptr [rax + 9], ch ; clc ; call qword ptr [rcx]
0x000000000018d7c3 : add byte ptr [rdi + rax*4], ch ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x000000000016ee0f : add byte ptr [rdi + rbp*2], dh ; in al, dx ; call rsp
0x0000000000193fa3 : add byte ptr [rdi + rbp*8], cl ; add dword ptr [rax], eax ; cwde ; push rdx ; idiv bh ; ret 3
0x000000000017b3d3 : add byte ptr [rdi + rbx*2], ah ; add byte ptr [rax], al ; cmc ; ret
0x00000000001710b7 : add byte ptr [rdi + rbx*2], al ; call rsp
0x000000000016f0e7 : add byte ptr [rdi + rbx*4 - 0x5c5b0014], ah ; add byte ptr [rax], al ; ret
0x000000000018ef9b : add byte ptr [rdi + rbx*4], al ; add dword ptr [rax], eax ; mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x0000000000172d17 : add byte ptr [rdi + rbx*8 - 9], bh ; jmp rsp
0x0000000000176fab : add byte ptr [rdi + rbx], dl ; add byte ptr [rax], al ; nop ; xchg eax, ebp ; jmp 0x176fbb
0x0000000000154a9f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x000000000018a02b : add byte ptr [rdi + rcx*2 - 0x6adfffff], dl ; jmp rdx
0x0000000000191fdb : add byte ptr [rdi + rcx*8 + 1], al ; add byte ptr [rax], al ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000191ff3 : add byte ptr [rdi + rcx*8 + 1], bl ; add byte ptr [rax], bl ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000019200b : add byte ptr [rdi + rcx*8 + 1], dh ; add byte ptr [rax], dh ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000017380f : add byte ptr [rdi + rcx*8 - 8], ah ; call rsp
0x000000000002e3c4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000007ec7e : add byte ptr [rdi + rdi + 0x4c], dh ; mov esi, esp ; mov rdi, rbx ; call rax
0x0000000000188fdb : add byte ptr [rdi + rdi + 1], al ; add byte ptr [rax], ah ; or dh, bl ; jmp qword ptr [rcx]
0x0000000000171d87 : add byte ptr [rdi + rdi*2 - 0xa], dh ; jmp rsp
0x0000000000178fd3 : add byte ptr [rdi + rdi], bh ; add byte ptr [rax], al ; cmp bh, bh ; jmp 0x178fe3
0x0000000000178feb : add byte ptr [rdi + rdi], dl ; add byte ptr [rax - 1], al ; jmp 0x178ffb
0x000000000018e79b : add byte ptr [rdi + rdx*4], al ; add dword ptr [rax], eax ; mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x00000000001740ef : add byte ptr [rdi + rdx*8], ah ; stc ; jmp rsp
0x000000000016ffd7 : add byte ptr [rdi + rsi - 0x10], ah ; call rsp
0x0000000000178843 : add byte ptr [rdi + rsi - 0x8c80000], ch ; jmp 0x178853
0x000000000017882b : add byte ptr [rdi + rsi - 0x8d00000], dl ; jmp 0x17883b
0x0000000000171447 : add byte ptr [rdi + rsi*2 - 0xc], dh ; call rsp
0x000000000018c7cb : add byte ptr [rdi + rsi*2], dh ; add dword ptr [rax], eax ; and byte ptr [rbx], bl ; stc ; call qword ptr [rax]
0x000000000017422f : add byte ptr [rdi + rsi*8 - 7], dl ; call rsp
0x0000000000178dc3 : add byte ptr [rdi - 0x2580000], ch ; jmp 0x178dd3
0x0000000000178dab : add byte ptr [rdi - 0x2700000], dl ; jmp 0x178dbb
0x0000000000177823 : add byte ptr [rdi - 0x2a480000], cl ; jmp 0x177833
0x000000000015ed88 : add byte ptr [rdi - 0x5f8f0004], bl ; cld ; jmp rax
0x000000000016dc5c : add byte ptr [rdi - 0x696f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000001715df : add byte ptr [rdi - 0x6d], dl ; hlt ; call rsp
0x000000000018b4e0 : add byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000015ec24 : add byte ptr [rdi - 0xe], bh ; call qword ptr [rax]
0x000000000016d770 : add byte ptr [rdi - 4], ch ; call qword ptr [rax + 0x20fffc6e]
0x0000000000034a1e : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001338b6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000189ab7 : add byte ptr [rdi], cl ; hlt ; jmp qword ptr [rax]
0x00000000001348ef : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000abf1a : add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x00000000000e9c31 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e55d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2e4ee ; loopne 0x2e56e ; ret
0x00000000000eb40c : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xeb39d ; loopne 0xeb41d ; ret
0x000000000011bc99 : add byte ptr [rdi], cl ; mov bh, 5 ; jmp rsp
0x0000000000075fd7 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000013495f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000003a48f : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000275df : add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000032030 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000008162f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000014744f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000850bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000916ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009170f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000916ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008c6ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000084f4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000084f3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000084f2f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000009bb07 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000034857 : add byte ptr [rdi], cl ; push rsp ; ret
0x000000000006021c : add byte ptr [rdi], cl ; ret
0x00000000000428ff : add byte ptr [rdi], cl ; ret 0x54e9
0x0000000000112db4 : add byte ptr [rdi], cl ; ret 0x8348
0x000000000011ce9e : add byte ptr [rdi], cl ; ret 0x8964
0x000000000004226d : add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000302d9 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000d36d5 : add byte ptr [rdi], cl ; ret 0xbde9
0x000000000003df2c : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000c4145 : add byte ptr [rdi], cl ; ret 0xc931
0x000000000009b94e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000000b21e5 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x000000000009ed3e : add byte ptr [rdi], cl ; test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009f1de : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000079cac : add byte ptr [rdi], cl ; test dword ptr [rcx + 0x5b000045], esp ; ret
0x00000000000771f1 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x00000000000e3b9d : add byte ptr [rdi], cl ; test dword ptr [rsi + 9], ebx ; add byte ptr [rax], al ; ret
0x00000000000787f5 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xcffffa7], ecx ; ret
0x0000000000075786 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0xcffffe6], ebp ; ret
0x000000000006b561 : add byte ptr [rdi], cl ; test eax, esi ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000000435fc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000000000101459 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000818fa : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x00000000000cccb2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x00000000000671ac : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000bdb0e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000be73c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe283
0x000000000004ffc4 : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000189a6f : add byte ptr [rdi], dh ; hlt ; jmp qword ptr [rax]
0x000000000016d460 : add byte ptr [rdi], dl ; cld ; jmp rax
0x0000000000174bef : add byte ptr [rdi], dl ; cli ; jmp rsp
0x0000000000143fdf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000013fcaf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009935f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000748a6 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000005f7ec : add byte ptr [rdx + 0x63], cl ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000002edbf : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x0000000000187353 : add byte ptr [rdx + 0x67f80001], bh ; jmp qword ptr [rcx]
0x00000000001765cb : add byte ptr [rdx + 0x70000000], dh ; jmp 0x1765db
0x000000000007f653 : add byte ptr [rdx + 0x74000032], 6 ; ret
0x00000000000520b0 : add byte ptr [rdx + 0x7ef], bh ; call 0x2e2d8
0x0000000000052084 : add byte ptr [rdx + 0x81e], bh ; call 0x2e2d8
0x000000000018f2fb : add byte ptr [rdx + 1], ah ; add byte ptr [rax - 0x65], al ; cmc ; jmp qword ptr [rcx]
0x000000000018f2e3 : add byte ptr [rdx + 1], cl ; add byte ptr [rax], ch ; wait ; cmc ; jmp qword ptr [rcx]
0x000000000019ea03 : add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000019e67b : add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x000000000018531b : add byte ptr [rdx + rax + 0x1ef00001], al ; int1 ; call rsp
0x00000000000e5532 : add byte ptr [rdx + rax + 0x5b], dh ; ret
0x0000000000185303 : add byte ptr [rdx + rax + 1], ch ; add al, bl ; sbb cl, dh ; jmp qword ptr [rbx]
0x000000000018d29b : add byte ptr [rdx + rax*4], al ; add dword ptr [rax], eax ; sar byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x000000000018d2b3 : add byte ptr [rdx + rax*4], bl ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; cmc ; jmp qword ptr [rcx]
0x00000000001717e7 : add byte ptr [rdx + rax*8 - 0xc], dh ; call rsp
0x000000000016f637 : add byte ptr [rdx + rbp - 0x12], dl ; jmp rsp
0x000000000018bb23 : add byte ptr [rdx + rbp*2 - 0x48a7ffff], cl ; hlt ; jmp rdx
0x000000000017badb : add byte ptr [rdx + rbp*2], al ; add al, ah ; fldz ; call qword ptr [rdx]
0x000000000018fafb : add byte ptr [rdx + rbp*4 + 1], ah ; add byte ptr [rax - 0x50], dl ; cmc ; call qword ptr [rdx]
0x0000000000183b53 : add byte ptr [rdx + rbp*8 - 0x25180000], bh ; out dx, eax ; call qword ptr [rax]
0x0000000000186b53 : add byte ptr [rdx + rbx + 0x37c80001], bh ; call qword ptr [rax]
0x0000000000176b2b : add byte ptr [rdx + rbx + 0x7c700000], dl ; jmp 0x176b3b
0x0000000000176b43 : add byte ptr [rdx + rbx + 0x7c780000], ch ; jmp 0x176b53
0x0000000000186af3 : add byte ptr [rdx + rbx + 1], bl ; add byte ptr [rax], ch ; cld ; jmp qword ptr [rbx]
0x000000000017ab43 : add byte ptr [rdx + rbx*2 + 0x58d80000], ch ; in eax, dx ; call qword ptr [rsi]
0x000000000018ab03 : add byte ptr [rdx + rbx*2 + 1], ch ; add al, ch ; retf ; jmp rdi
0x000000000018ab53 : add byte ptr [rdx + rbx*2 - 0x2977ffff], bh ; call rcx
0x0000000000174ecf : add byte ptr [rdx + rbx*8 - 4], al ; call rsp
0x0000000000182abb : add byte ptr [rdx + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx - 0x11], ah ; call qword ptr [rsi]
0x0000000000176afb : add byte ptr [rdx + rbx], ah ; add byte ptr [rax + 0x7c], ah ; jmp 0x176b0b
0x0000000000176b13 : add byte ptr [rdx + rbx], bh ; add byte ptr [rax + 0x7c], ch ; jmp 0x176b23
0x000000000008cc83 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000185b53 : add byte ptr [rdx + rcx - 0x7027ffff], bh ; int1 ; call qword ptr [rax]
0x0000000000185b3b : add byte ptr [rdx + rcx - 0x703fffff], ah ; int1 ; jmp qword ptr [rdx]
0x000000000018dad3 : add byte ptr [rdx + rcx*4], bh ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rsi]
0x0000000000174a8f : add byte ptr [rdx + rcx*8 - 6], al ; call rsp
0x0000000000170977 : add byte ptr [rdx + rcx], dh ; int1 ; call rsp
0x0000000000198b03 : add byte ptr [rdx + rdi + 2], ch ; add al, bh ; and bh, dh ; jmp rdx
0x000000000017034f : add byte ptr [rdx + rdi*2 - 0x10], dh ; call rsp
0x000000000016ef0f : add byte ptr [rdx + rdi*2 - 0x14], al ; jmp rsp
0x0000000000154e9f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x0000000000186353 : add byte ptr [rdx + rdx + 0x13c80001], bh ; call rsi
0x0000000000176333 : add byte ptr [rdx + rdx + 0x55c80000], bl ; jmp 0x176343
0x000000000017c833 : add byte ptr [rdx + rdx - 0x1c980000], dh ; out dx, al ; jmp rsi
0x0000000000173c87 : add byte ptr [rdx + rdx*2], ah ; stc ; jmp rsp
0x000000000018e32b : add byte ptr [rdx + rdx*4 + 0x66f00001], dl ; cmc ; jmp qword ptr [rdx]
0x000000000018e29b : add byte ptr [rdx + rdx*4], al ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018e2b3 : add byte ptr [rdx + rdx*4], bl ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000bcf7b : add byte ptr [rdx + rsi + 0xf], dh ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000018c2f3 : add byte ptr [rdx + rsi*2 + 1], bl ; add byte ptr [rax], cl ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018c30b : add byte ptr [rdx + rsi*2 + 1], dh ; add byte ptr [rax], ah ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018c353 : add byte ptr [rdx + rsi*2 - 0xa67ffff], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019c2bb : add byte ptr [rdx + rsi*2], ah ; add al, byte ptr [rax] ; ret 0xfff7
0x000000000018432b : add byte ptr [rdx + rsi*8 + 0x18e00000], dl ; cli ; call qword ptr [rax]
0x0000000000170f6f : add byte ptr [rdx + rsi*8 - 0xe], dh ; call rsp
0x00000000001842fb : add byte ptr [rdx + rsi*8], ah ; add byte ptr [rax - 0x21], dl ; stc ; call qword ptr [rax]
0x000000000018429b : add byte ptr [rdx + rsi*8], al ; add byte ptr [rax], al ; sbb byte ptr [rbx], 0xf0 ; call qword ptr [rax]
0x00000000001782c3 : add byte ptr [rdx + rsi], ch ; add byte ptr [rax], al ; sub bh, ch ; jmp 0x1782d3
0x00000000001882ab : add byte ptr [rdx + rsi], dl ; add dword ptr [rax], eax ; jmp qword ptr [rbx]
0x0000000000170287 : add byte ptr [rdx - 0x10], al ; jmp rsp
0x000000000016f94f : add byte ptr [rdx - 0x41], ch ; out dx, eax ; call rsp
0x00000000000ede1f : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000ede1e : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x00000000001728bf : add byte ptr [rdx - 9], ah ; call rsp
0x000000000019e9ff : add byte ptr [rdx], ah ; add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000005f4b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000000b0c3 : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret
0x000000000000969b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xd
0x000000000002e828 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002e516 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000106d46 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000f07eb : add byte ptr [rdx], al ; call rax
0x000000000002e424 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000174187 : add byte ptr [rdx], al ; stc ; jmp rsp
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000177313 : add byte ptr [rdx], bh ; add al, bl ; mov bh, 0xeb ; call qword ptr [rcx]
0x000000000016d6b8 : add byte ptr [rdx], bh ; cld ; jmp rax
0x00000000000f0bbd : add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e633f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000780b : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000000fd2b : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 8
0x0000000000008783 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret
0x0000000000007403 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret 0xd
0x000000000017b2eb : add byte ptr [rdx], dl ; add byte ptr [rax - 0x40], ah ; out dx, al ; call qword ptr [rdx]
0x00000000001836c3 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; push rsp ; ret 0xffef
0x000000000006a860 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000e8790 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000ba291 : add byte ptr [rip - 0xfff], bh ; jae 0xba2a2 ; ret
0x0000000000113627 : add byte ptr [rsi + 0xe], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000147744 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e4dc6 : add byte ptr [rsi + 0xf], ah ; ret
0x000000000009160c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084e44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000172eef : add byte ptr [rsi + 3], al ; clc ; call rsp
0x000000000010a9dd : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000db1d7 : add byte ptr [rsi + 6], dh ; ret
0x000000000006e37f : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x0000000000189ab3 : add byte ptr [rsi + rax*2], al ; add dword ptr [rax], eax ; pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x000000000018d713 : add byte ptr [rsi + rax*4 + 1], bh ; add al, ch ; cmc ; jmp qword ptr [rcx]
0x00000000001748ef : add byte ptr [rsi + rax*4 - 6], al ; jmp rsp
0x000000000018d69b : add byte ptr [rsi + rax*4], al ; add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018d6b3 : add byte ptr [rsi + rax*4], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000019e88f : add byte ptr [rsi + rax], ch ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000172677 : add byte ptr [rsi + rbp*2 - 9], dh ; jmp rsp
0x000000000017170f : add byte ptr [rsi + rbp*4 - 0xc], dl ; call rsp
0x000000000017feb3 : add byte ptr [rsi + rbp*4], bl ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000170e0f : add byte ptr [rsi + rbp], ah ; call rsp
0x000000000018ef53 : add byte ptr [rsi + rbx*4 - 0x6897ffff], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000182efb : add byte ptr [rsi + rbx*8], ah ; add al, ah ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x0000000000173c67 : add byte ptr [rsi + rcx*2 - 7], al ; jmp rsp
0x0000000000191eeb : add byte ptr [rsi + rcx*8 + 1], dl ; add al, dl ; sub esi, esi ; jmp qword ptr [rsi]
0x0000000000191f33 : add byte ptr [rsi + rcx*8 - 0x37c7ffff], bl ; clc ; jmp qword ptr [rsi]
0x0000000000172c0f : add byte ptr [rsi + rcx*8 - 9], dl ; jmp rsp
0x0000000000191ed3 : add byte ptr [rsi + rcx*8], bh ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x0000000000191ea3 : add byte ptr [rsi + rcx*8], cl ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x0000000000198f43 : add byte ptr [rsi + rdi + 0x30480002], ch ; idiv edi ; ret 1
0x0000000000172717 : add byte ptr [rsi + rdi*2 - 9], dh ; jmp rsp
0x0000000000180ecb : add byte ptr [rsi + rdi*4], dh ; add byte ptr [rax], al ; push rax ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000178f13 : add byte ptr [rsi + rdi], bh ; add byte ptr [rax - 2], bl ; jmp 0x178f23
0x0000000000178ecb : add byte ptr [rsi + rdi], dh ; add byte ptr [rax], al ; xor dh, bh ; jmp 0x178edb
0x000000000017671b : add byte ptr [rsi + rdx + 0x79700000], al ; jmp 0x17672b
0x0000000000173caf : add byte ptr [rsi + rdx*2 - 7], dh ; call rsp
0x00000000000cfd43 : add byte ptr [rsi + rdx*8 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000192703 : add byte ptr [rsi + rdx*8 + 1], ch ; add byte ptr [rax], bl ; cmp dh, dh ; call qword ptr [rax]
0x00000000001926eb : add byte ptr [rsi + rdx*8 + 1], dl ; add byte ptr [rax], ah ; cmp dh, dh ; call qword ptr [rax]
0x0000000000170eaf : add byte ptr [rsi + rdx*8], dh ; call rsp
0x0000000000171cef : add byte ptr [rsi + rsi - 0xa], dh ; jmp rsp
0x000000000018c6a3 : add byte ptr [rsi + rsi*2], cl ; add dword ptr [rax], eax ; call 0x2218bbb1
0x00000000001806c3 : add byte ptr [rsi + rsi*4], ch ; add byte ptr [rax], al ; js 0x18071d ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016e9b7 : add byte ptr [rsi + rsi*8 - 0x15], ah ; jmp rsp
0x00000000001820e4 : add byte ptr [rsi - 0x11], bl ; jmp qword ptr [rdx]
0x000000000016e154 : add byte ptr [rsi - 0x426f0004], bh ; cld ; jmp qword ptr [rax]
0x0000000000183743 : add byte ptr [rsi - 0x46a80000], ch ; out dx, eax ; call qword ptr [rdx]
0x000000000015f1d8 : add byte ptr [rsi - 0x59ef000d], ah ; jmp qword ptr [rax]
0x000000000018f753 : add byte ptr [rsi - 0x5d57ffff], bh ; cmc ; jmp qword ptr [rbx]
0x000000000016efe7 : add byte ptr [rsi - 0x6d], ah ; in al, dx ; jmp rsp
0x00000000000230ed : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b645d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rdi] ; ret
0x000000000015ef8c : add byte ptr [rsi - 0x71ef000d], cl ; jmp qword ptr [rax]
0x000000000017cb1b : add byte ptr [rsi], 0xd ; ret
0x000000000017a53b : add byte ptr [rsi], 0xd ; ret 0xecfb
0x00000000001965eb : add byte ptr [rsi], 0xd ; ret 0xf5fe
0x00000000001976bb : add byte ptr [rsi], ah ; add al, byte ptr [rax] ; sal dh, 0xf6 ; call qword ptr [rsi]
0x000000000017769b : add byte ptr [rsi], al ; add byte ptr [rax], al ; nop ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000018b69b : add byte ptr [rsi], al ; add dword ptr [rax], eax ; adc byte ptr [rax - 0xc], ch ; call rdx
0x000000000016ff77 : add byte ptr [rsi], al ; xor esi, eax ; call rsp
0x00000000001776b3 : add byte ptr [rsi], bl ; add byte ptr [rax], al ; cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000018370b : add byte ptr [rsi], dh ; add al, ah ; mov esp, edi ; call qword ptr [rdx]
0x00000000001874fb : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x61], dh ; call qword ptr [rax]
0x000000000018b4db : add byte ptr [rsp + 1], al ; add byte ptr [rax], al ; hlt ; jmp qword ptr [rcx]
0x000000000018b4f3 : add byte ptr [rsp + 1], bl ; add byte ptr [rax], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018f4f3 : add byte ptr [rsp + 1], bl ; add byte ptr [rax], bl ; sahf ; cmc ; jmp qword ptr [rcx]
0x00000000001874e3 : add byte ptr [rsp + 1], cl ; add byte ptr [rax - 0x61], bh ; call qword ptr [rax]
0x000000000018b50b : add byte ptr [rsp + 1], dh ; add byte ptr [rax], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000da939 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x0000000000189523 : add byte ptr [rsp + rax*2 + 0x1b880001], cl ; jmp qword ptr [rcx]
0x000000000018953b : add byte ptr [rsp + rax*2 + 0x1ba00001], ah ; jmp qword ptr [rcx]
0x00000000001894f3 : add byte ptr [rsp + rax*2 + 1], bl ; add byte ptr [rax + 0x1b], bl ; jmp qword ptr [rcx]
0x000000000018950b : add byte ptr [rsp + rax*2 + 1], dh ; add byte ptr [rax + 0x1b], dh ; jmp qword ptr [rcx]
0x000000000005af8d : add byte ptr [rsp + rax*2 - 0x75], ah ; sub cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x0000000000174a37 : add byte ptr [rsp + rax*8 - 6], al ; call rsp
0x00000000001814fb : add byte ptr [rsp + rax*8], ah ; add byte ptr [rax], al ; pop rbp ; out dx, eax ; jmp qword ptr [rax]
0x000000000019549b : add byte ptr [rsp + rax], al ; add al, byte ptr [rax] ; adc byte ptr [rbx - 0xa], dh ; call rdi
0x000000000017fd3b : add byte ptr [rsp + rbp*4 + 0x34800000], ah ; out dx, eax ; jmp qword ptr [rax]
0x000000000017fccb : add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; add dl, ch ; call rdx
0x0000000000183d23 : add byte ptr [rsp + rbp*8 - 0x1f580000], cl ; out dx, eax ; jmp qword ptr [rax]
0x000000000018acdb : add byte ptr [rsp + rbx*2 + 1], al ; add byte ptr [rax - 0x11], dl ; call qword ptr [rcx]
0x000000000018ece3 : add byte ptr [rsp + rbx*4 + 1], cl ; add byte ptr [rax - 0x78], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018ed43 : add byte ptr [rsp + rbx*4 - 0x7737ffff], ch ; cmc ; jmp qword ptr [rcx]
0x000000000015469f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000000d2cb1 : add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000017451f : add byte ptr [rsp + rcx*2 - 6], al ; jmp qword ptr [rbx + rax*8]
0x000000000018dcf3 : add byte ptr [rsp + rcx*4 + 1], bl ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rax]
0x00000000001820b3 : add byte ptr [rsp + rcx*8], al ; add byte ptr [rax], al ; clc ; ret
0x00000000001820fb : add byte ptr [rsp + rcx*8], cl ; add bl, cl ; ret
0x00000000001712a7 : add byte ptr [rsp + rcx*8], dl ; jmp rsp
0x0000000000172f4f : add byte ptr [rsp + rcx], ah ; clc ; call rsp
0x00000000001742bf : add byte ptr [rsp + rcx], ah ; cli ; call rsp
0x0000000000188d33 : add byte ptr [rsp + rdi + 0xd80001], bl ; call rsp
0x000000000016de74 : add byte ptr [rsp + rdi*8 - 0x36c6f01], dl ; jmp qword ptr [rax]
0x0000000000178cc3 : add byte ptr [rsp + rdi], ch ; add byte ptr [rax], al ; cli ; jmp 0x178cd3
0x0000000000170207 : add byte ptr [rsp + rdx*2 - 0x10], al ; jmp rsp
0x000000000017458f : add byte ptr [rsp + rdx*2], al ; cli ; jmp rsp
0x000000000016f3ff : add byte ptr [rsp + rdx*2], al ; in eax, dx ; call rsp
0x00000000001884db : add byte ptr [rsp + rsi + 1], al ; add al, dh ; call rsp
0x000000000019c4f3 : add byte ptr [rsp + rsi*2 + 2], bl ; add byte ptr [rax], bh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000018f53b : add byte ptr [rsp - 0x616fffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018f523 : add byte ptr [rsp - 0x6187ffff], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000172087 : add byte ptr [rsp - 0xa], ah ; call rsp
0x00000000001746a7 : add byte ptr [rsp - 6], al ; jmp rsp
0x0000000000173197 : add byte ptr [rsp - 8], ah ; jmp rsp
0x000000000017361f : add byte ptr [rsp], al ; clc ; jmp rsp
0x000000000018b4c3 : add byte ptr [rsp], ch ; add dword ptr [rax], eax ; call 0x2218a93b
0x000000000018b4ab : add byte ptr [rsp], dl ; add dword ptr [rax], eax ; shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x00000000000b7235 : add byte ptr cs:[rax - 0x77], cl ; ret 0x8948
0x00000000000b869d : add byte ptr cs:[rax - 0x77], cl ; ret 0xbae9
0x00000000000b68c9 : add byte ptr cs:[rax - 0x77], cl ; ret 0xeee9
0x0000000000178ecd : add byte ptr ds:[rax], al ; xor dh, bh ; jmp 0x178ed9
0x00000000000e5531 : add byte ptr ds:[rdx + rax + 0x5b], dh ; ret
0x0000000000035bea : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001776b5 : add byte ptr es:[rax], al ; cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000017769d : add byte ptr es:[rax], al ; nop ; shr ebx, 1 ; call qword ptr [rdx]
0x00000000000e750b : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x0000000000075210 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d26a7 : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret 0x3775
0x0000000000102213 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003828f : add byte ptr ss:[rax + 0x39], cl ; ret
0x0000000000041d75 : add byte ptr ss:[rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000041bed : add byte ptr ss:[rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x000000000019e77f : add ch, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x0000000000034d2f : add ch, bl ; fpatan ; ret
0x000000000015d43c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000015d43d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000010cb0a : add ch, byte ptr [rcx] ; int1 ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000000ab5eb : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000006e99a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000019338e : add ch, byte ptr [rdi + 0xd1cfff5] ; stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x0000000000063c5e : add ch, cl ; cmc ; in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000c1227 : add ch, cl ; ret
0x00000000000f7518 : add ch, cl ; ret 0xf932
0x000000000017b3d7 : add ch, dh ; ret
0x000000000007127f : add cl, al ; out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x00000000000e51a7 : add cl, bl ; ret 0xcad9
0x00000000000e72f5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000093cbc : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000bcf80 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000aa571 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003a360 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000010331b : add cl, byte ptr [rax + 0x39] ; ret 0x1f72
0x000000000010330d : add cl, byte ptr [rax + 0x39] ; ret 0x2d72
0x000000000006dc6a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x00000000000e72f6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000079fe1 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x0000000000093cbd : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000090f57 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000076e92 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000e3812 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000bcf81 : add cl, byte ptr [rax - 0x7d] ; ret
0x000000000007fee0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000685ab : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000001faf7 : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x0000000000116729 : add cl, byte ptr [rax - 0x7d] ; ret 0xb804
0x0000000000068a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x000000000007ff43 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000116755 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000045e84 : add cl, byte ptr [rbp + 0x39] ; ret
0x0000000000134732 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000003a339 : add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x000000000003d342 : add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x0000000000045bf8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x45c14
0x000000000016df40 : add cl, byte ptr [rcx - 0x778d0004] ; cld ; jmp rdx
0x000000000010d7f7 : add cl, byte ptr [rcx - 0x77] ; ret
0x00000000000426d0 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x0000000000041dd9 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000002e3e4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000dbf87 : add cl, byte ptr [rdi] ; ret 0x48c3
0x00000000000d36a5 : add cl, byte ptr [rdi] ; shr al, 1 ; ret 0x255
0x00000000000650e3 : add cl, byte ptr [rdi] ; test dword ptr [rax], esp ; ret
0x000000000012426b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000e44d4 : add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000002b144 : add cl, ch ; ret
0x00000000000bf61e : add cl, ch ; ret 0xfff9
0x0000000000022048 : add cl, ch ; ret 0xfffd
0x0000000000022569 : add cl, ch ; ret 0xfffe
0x000000000006315d : add cl, ch ; sahf ; ret 0xffff
0x00000000001822af : add cl, cl ; ret 0xffef
0x00000000001708e1 : add cl, dh ; jmp rsp
0x00000000001058c7 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000f9d9a : add dh, al ; add eax, 0x2af51e ; add ecx, ebp ; ret
0x00000000000d7b13 : add dh, al ; and al, 0x74 ; add al, ch ; ret 0xf6e4
0x0000000000160dfb : add dh, bh ; jmp rdi
0x00000000001711cf : add dh, bh ; mov bh, 0xf3 ; jmp rsp
0x0000000000157907 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001348e3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000035317 : add dh, bl ; ret
0x000000000009adfb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001109c2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016cfb4 : add dh, byte ptr [rcx - 0x4e2d0003] ; std ; call rdx
0x000000000016d81c : add dh, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x22fffc70]
0x00000000000c91ad : add dh, byte ptr [rcx] ; imul al ; imul eax, esp, -5 ; call rcx
0x00000000000a5c7a : add dh, byte ptr [rcx] ; shr bl, cl ; seto byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000001109c1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015f83d : add dh, ch ; call rax
0x000000000016d320 : add dh, ch ; sti ; call rax
0x00000000001604a5 : add dh, dh ; jmp rsp
0x0000000000056aaf : add dh, dh ; ret
0x000000000011d3e2 : add dh, dh ; ret 0x7402
0x0000000000085798 : add dh, dh ; ret 0x7404
0x0000000000069eef : add dh, dh ; ret 0x7420
0x0000000000149967 : add dh, dh ; ret 0x7501
0x0000000000149974 : add dh, dh ; ret 0x7502
0x0000000000149981 : add dh, dh ; ret 0x7504
0x0000000000072db6 : add dh, dh ; ret 0x7508
0x0000000000149939 : add dh, dh ; ret 0x7510
0x0000000000149946 : add dh, dh ; ret 0x7520
0x0000000000149953 : add dh, dh ; ret 0x7540
0x00000000000d2e20 : add dh, dh ; ret 0xf01
0x00000000000cc54b : add dh, dh ; ret 0xf10
0x00000000000924c2 : add dh, dh ; ret 0xf20
0x00000000000924cb : add dh, dh ; ret 0xf40
0x00000000000f1db9 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f2252 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000001861b1 : add dh, dl ; call qword ptr [rax]
0x00000000001861f9 : add dh, dl ; jmp rax
0x000000000016fbdf : add dh, dl ; out 0xef, al ; jmp rsp
0x00000000000aa2b4 : add dil, r15b ; ret
0x0000000000185450 : add dl, bh ; ret
0x000000000016fa9f : add dl, bh ; salc ; out dx, eax ; jmp rsp
0x0000000000186bc6 : add dl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000197716 : add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x000000000019e677 : add dl, ch ; add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x000000000017fcd1 : add dl, ch ; call rdx
0x00000000000e4aec : add dl, dh ; movups xmmword ptr [rsp], xmm1 ; call 0x50da8
0x0000000000182267 : add dl, dh ; ret 0xffef
0x000000000018b87d : add dword ptr [eax], eax ; loopne 0x18b826 ; hlt ; call qword ptr [rax]
0x0000000000170dc5 : add dword ptr [eax], eax ; test byte ptr [rbx], ch ; jmp rsp
0x00000000001843ec : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00000000000bd00c : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000003a492 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000001891cd : add dword ptr [r8], eax ; adc ebx, esi ; jmp qword ptr [rdx]
0x00000000000f60ef : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000189495 : add dword ptr [r8], eax ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018947d : add dword ptr [r8], eax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x0000000000189405 : add dword ptr [r8], eax ; sub byte ptr [rdx], bl ; jmp qword ptr [rcx]
0x00000000001895fd : add dword ptr [r8], r8d ; mov al, 0x21 ; jmp qword ptr [rdi]
0x000000000018967d : add dword ptr [r8], r8d ; mov al, 0x23 ; jmp rdx
0x00000000000c4574 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000732f4 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000c1fa8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000143fe1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000460fa : add dword ptr [rax + 0x29], ecx ; ret 0x148
0x00000000000430a9 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x000000000002775b : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000090e0c : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000008c224 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000008c0fd : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x00000000000451ad : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000003b87a : add dword ptr [rax + 0x39], ecx ; ret 0x8e0f
0x0000000000039357 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000a689d : add dword ptr [rax + 0x39], ecx ; ret 0xed77
0x0000000000090bc9 : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x00000000000a7c7c : add dword ptr [rax + 0x39], ecx ; ret 0xee77
0x000000000008f303 : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000a78db : add dword ptr [rax + 0x39], ecx ; ret 0xef77
0x00000000000921c0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000043e8b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000010ea41 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x00000000000efd27 : add dword ptr [rax + 0xf], eax ; ret 0xc3f3
0x00000000000a03be : add dword ptr [rax + 0xf], ecx ; ret 0xc148
0x0000000000060fd0 : add dword ptr [rax + 1], ecx ; ret
0x00000000000338a6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000c1f23 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000010c645 : add dword ptr [rax + rcx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000091d25 : add dword ptr [rax + rcx*4 + 1], eax ; jne 0x91d17 ; ret
0x00000000000bc495 : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x000000000002f7b3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000e72f2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000010c905 : add dword ptr [rax - 0x75], ecx ; outsd dx, dword ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x8b48
0x00000000000edff3 : add dword ptr [rax - 0x76b7ffd5], ecx ; ret 0x8948
0x0000000000093c96 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000013fc42 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000090f2e : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000b3394 : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x000000000007609b : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007357d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000819d1 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000103bf0 : add dword ptr [rax - 0x78], eax ; ja 0x103bfb ; ret
0x0000000000056d47 : add dword ptr [rax - 0x78f0d106], eax ; call qword ptr [rbx]
0x00000000000c33cd : add dword ptr [rax - 0x7cb7e9f4], ecx ; ret 0x4401
0x00000000000fd4a9 : add dword ptr [rax - 0x7d], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000145bfa : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x000000000008d2f8 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000002225a : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000102bb2 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x0000000000030b62 : add dword ptr [rax - 0x7d], ecx ; ret 0x3908
0x00000000000ead97 : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x0000000000026d27 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000004214c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000010219c : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000d0d8a : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x0000000000036779 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000025466 : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000000000025f71 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000036a11 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000b56d9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000ca46f : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000000d1f4f : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000002d0c5 : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000abb23 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000df5de : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000001708e0 : add dword ptr [rax], -0xf ; jmp rsp
0x000000000016ead5 : add dword ptr [rax], 0 ; xor al, 0 ; in al, dx ; jmp rsp
0x000000000016ea25 : add dword ptr [rax], 0xebfd8400 ; call rsp
0x00000000000d65af : add dword ptr [rax], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000eaaeb : add dword ptr [rax], 1 ; ret
0x000000000018c5fe : add dword ptr [rax], eax ; adc ah, bh ; hlt ; jmp qword ptr [rcx]
0x0000000000171b2e : add dword ptr [rax], eax ; adc al, 0x88 ; cmc ; push rsp ; ret
0x00000000001712a6 : add dword ptr [rax], eax ; adc al, 0xcc ; jmp rsp
0x000000000018b69e : add dword ptr [rax], eax ; adc byte ptr [rax - 0xc], ch ; call rdx
0x000000000018736e : add dword ptr [rax], eax ; adc byte ptr [rax - 0xe], ch ; jmp qword ptr [rcx]
0x00000000001890ae : add dword ptr [rax], eax ; adc byte ptr [rbx + rsi*8], cl ; jmp qword ptr [rcx]
0x000000000018d69e : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000019391e : add dword ptr [rax], eax ; adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000018cb5e : add dword ptr [rax], eax ; adc byte ptr [rdi], 0xf5 ; jmp rcx
0x00000000001891ce : add dword ptr [rax], eax ; adc ebx, esi ; jmp qword ptr [rdx]
0x00000000001710b6 : add dword ptr [rax], eax ; add al, 0x5f ; call rsp
0x000000000017b6b5 : add dword ptr [rax], eax ; add al, bl ; ret
0x0000000000141c6c : add dword ptr [rax], eax ; add bl, al ; ret
0x0000000000069fea : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000681c8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000a5b03 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000117208 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000b5527 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cd638 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002d02d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000008b995 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000a8a62 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000007c3fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000024bd3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e28e9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000031092 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000066707 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000011f52d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000077e3a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x00000000001259cf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f481 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002a9f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006dabb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000015790a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000156aba : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001568e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001568da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000157072 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000009d1b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000000e740a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007f013 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d908f : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000014b921 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x14b938 ; neg eax ; ret
0x000000000009cc11 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x9cc21 ; neg eax ; ret
0x0000000000149877 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x149888 ; neg eax ; ret
0x000000000007a34c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x7a319
0x000000000004664b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000116d03 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x116d16 ; ret
0x0000000000116d43 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x116d56 ; ret
0x00000000000bb7b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xbb7c7 ; ret
0x000000000009e046 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000459c2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000010edbb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000007e8ae : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000011672f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x000000000010cd4a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x20], rdx ; ret
0x000000000010b6fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000010a814 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000068bea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000006cdcf : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x00000000000502be : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x00000000000501f0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x00000000000d349e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r15 ; ret
0x000000000010faf2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024215 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000006e401 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002ad71 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006783e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f570 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9f527
0x00000000000a1ac0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa1a77
0x00000000000a3f20 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa3ed7
0x00000000000fa36c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2aef
0x00000000000c9dc0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006c164 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000db764 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021619 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cda57 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fb07], al ; ret
0x00000000000de069 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000280a6 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000ca0f9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000007ed9e : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x000000000005ea28 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000008c35d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000002436c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000011779d : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x00000000000ca159 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x00000000000d311f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8e0f
0x00000000000c2988 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000026055 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000018b4de : add dword ptr [rax], eax ; add byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000000ca0ec : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000cccb0 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x000000000009160a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000011be1b : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x000000000011bf84 : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000149965 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000149972 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000014997f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000149937 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000149944 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000149951 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000001708de : add dword ptr [rax], eax ; add dword ptr [rax], -0xf ; jmp rsp
0x00000000000e0b04 : add dword ptr [rax], eax ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000e0601 : add dword ptr [rax], eax ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000050eb5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x0000000000170e0e : add dword ptr [rax], eax ; and al, 0x2e ; call rsp
0x0000000000171686 : add dword ptr [rax], eax ; and al, 0xa3 ; hlt ; call rsp
0x000000000019111e : add dword ptr [rax], eax ; and bl, bl ; cmc ; jmp qword ptr [rdi]
0x0000000000174dfe : add dword ptr [rax], eax ; and bl, r15b ; jmp rsp
0x000000000018c7ce : add dword ptr [rax], eax ; and byte ptr [rbx], bl ; stc ; call qword ptr [rax]
0x000000000019394e : add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x0000000000188fde : add dword ptr [rax], eax ; and byte ptr [rdx], cl ; jmp qword ptr [rcx]
0x0000000000193c3e : add dword ptr [rax], eax ; and byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x000000000018c30e : add dword ptr [rax], eax ; and ch, dh ; hlt ; jmp qword ptr [rcx]
0x0000000000193036 : add dword ptr [rax], eax ; call 0x11192683
0x000000000018b4c6 : add dword ptr [rax], eax ; call 0x2218a938
0x000000000018c6a6 : add dword ptr [rax], eax ; call 0x2218bbae
0x000000000018c946 : add dword ptr [rax], eax ; call 0x2218be5a
0x000000000018d716 : add dword ptr [rax], eax ; call 0x2218cc65
0x000000000018dc46 : add dword ptr [rax], eax ; call 0x2218d1a5
0x000000000018e256 : add dword ptr [rax], eax ; call 0x2218d7c7
0x000000000018f376 : add dword ptr [rax], eax ; call 0x2218e91d
0x000000000018ab06 : add dword ptr [rax], eax ; call 0xffffffffe8189edd
0x00000000001884de : add dword ptr [rax], eax ; call rsp
0x00000000001861f6 : add dword ptr [rax], eax ; clc ; add dh, dl ; jmp rax
0x0000000000187356 : add dword ptr [rax], eax ; clc ; jmp qword ptr [ecx]
0x000000000018ed76 : add dword ptr [rax], eax ; clc ; mov ch, dh ; jmp qword ptr [rcx]
0x0000000000191db6 : add dword ptr [rax], eax ; clc ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018c62e : add dword ptr [rax], eax ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018d58e : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rbx]
0x000000000018d7f6 : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x0000000000186bfe : add dword ptr [rax], eax ; cmp al, 0xf2 ; call qword ptr [rcx]
0x0000000000191ea6 : add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x000000000018d35e : add dword ptr [rax], eax ; cmp esi, ebp ; jmp rdi
0x0000000000091ced : add dword ptr [rax], eax ; cmp rcx, rdx ; jne 0x91cf0 ; ret
0x000000000018f136 : add dword ptr [rax], eax ; cqo ; cmc ; jmp qword ptr [rcx]
0x000000000018c356 : add dword ptr [rax], eax ; cwde ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018dad6 : add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rsi]
0x000000000018c246 : add dword ptr [rax], eax ; cwde ; hlt ; hlt ; jmp qword ptr [rcx]
0x000000000018c086 : add dword ptr [rax], eax ; cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x0000000000185366 : add dword ptr [rax], eax ; cwde ; int1 ; jmp rbx
0x0000000000193fa6 : add dword ptr [rax], eax ; cwde ; push rdx ; idiv bh ; ret 3
0x0000000000191d56 : add dword ptr [rax], eax ; cwde ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018ef86 : add dword ptr [rax], eax ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x000000000018c3f6 : add dword ptr [rax], eax ; div spl ; jmp rbx
0x0000000000188d36 : add dword ptr [rax], eax ; fadd dword ptr [rax] ; call rsp
0x0000000000185306 : add dword ptr [rax], eax ; fcomp dword ptr [rax] ; int1 ; jmp qword ptr [rbx]
0x000000000018d2b6 : add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; cmc ; jmp qword ptr [rcx]
0x000000000018c596 : add dword ptr [rax], eax ; fdivr st(2) ; hlt ; jmp qword ptr [rcx]
0x0000000000187446 : add dword ptr [rax], eax ; fsubr dword ptr [rsi - 0xe] ; call qword ptr [rdx]
0x0000000000171e86 : add dword ptr [rax], eax ; hlt ; ret
0x0000000000171e66 : add dword ptr [rax], eax ; hlt ; ret 0xfff6
0x0000000000172356 : add dword ptr [rax], eax ; hlt ; xor edi, esi ; jmp rsp
0x0000000000171b76 : add dword ptr [rax], eax ; in al, -0x48 ; cmc ; call rsp
0x0000000000172086 : add dword ptr [rax], eax ; in al, -0xa ; call rsp
0x0000000000171356 : add dword ptr [rax], eax ; in al, -0xc ; jmp rsp
0x000000000017074e : add dword ptr [rax], eax ; int 0xfa
0x0000000000170f6e : add dword ptr [rax], eax ; je 0x170f69 ; call rsp
0x0000000000171446 : add dword ptr [rax], eax ; je 0x1714c6 ; hlt ; call rsp
0x00000000001717e6 : add dword ptr [rax], eax ; je 0x1717b1 ; hlt ; call rsp
0x0000000000171b46 : add dword ptr [rax], eax ; je 0x171aea ; cmc ; jmp rsp
0x0000000000171a96 : add dword ptr [rax], eax ; je 0x171b02 ; cmc ; call rsp
0x0000000000050b60 : add dword ptr [rax], eax ; jmp 0x50b29
0x00000000001882ae : add dword ptr [rax], eax ; jmp qword ptr [rbx]
0x0000000000187126 : add dword ptr [rax], eax ; jmp qword ptr [rcx]
0x00000000001874fe : add dword ptr [rax], eax ; jo 0x1874a6 ; call qword ptr [rax]
0x0000000000187c1e : add dword ptr [rax], eax ; jo 0x187c0e ; call qword ptr [rbx]
0x000000000018950e : add dword ptr [rax], eax ; jo 0x189532 ; jmp qword ptr [rcx]
0x000000000018c65e : add dword ptr [rax], eax ; jo 0x18c663 ; hlt ; jmp qword ptr [rcx]
0x000000000018e20e : add dword ptr [rax], eax ; jo 0x18e27c ; cmc ; jmp qword ptr [rcx]
0x00000000001716ce : add dword ptr [rax], eax ; js 0x17167f ; hlt ; jmp rsp
0x00000000001874e6 : add dword ptr [rax], eax ; js 0x18748e ; call qword ptr [rax]
0x0000000000187c36 : add dword ptr [rax], eax ; js 0x187c26 ; call qword ptr [rbx]
0x000000000018c9d6 : add dword ptr [rax], eax ; js 0x18c9e8 ; cmc ; jmp qword ptr [rcx]
0x000000000018e176 : add dword ptr [rax], eax ; js 0x18e1e2 ; cmc ; call qword ptr [rdx]
0x000000000018e8e6 : add dword ptr [rax], eax ; js 0x18e969 ; cmc ; jmp rax
0x000000000018f166 : add dword ptr [rax], eax ; js 0x18f108 ; cmc ; jmp qword ptr [rcx]
0x000000000018f526 : add dword ptr [rax], eax ; js 0x18f4cd ; cmc ; jmp qword ptr [rcx]
0x000000000018f8b6 : add dword ptr [rax], eax ; js 0x18f864 ; cmc ; jmp qword ptr [rcx]
0x000000000018b87e : add dword ptr [rax], eax ; loopne 0x18b825 ; hlt ; call qword ptr [rax]
0x000000000018c16e : add dword ptr [rax], eax ; loopne 0x18c169 ; hlt ; jmp qword ptr [rsi]
0x0000000000174e46 : add dword ptr [rax], eax ; mov ah, 0x75 ; sti ; call rsp
0x0000000000171106 : add dword ptr [rax], eax ; mov ah, 0x90 ; jmp rsp
0x000000000017120e : add dword ptr [rax], eax ; mov ah, 0xbc ; jmp rsp
0x0000000000174e7e : add dword ptr [rax], eax ; mov ah, 0xc ; cld ; jmp rsp
0x0000000000170c9e : add dword ptr [rax], eax ; mov ah, 0xd7 ; int1 ; jmp rsp
0x0000000000171396 : add dword ptr [rax], eax ; mov ah, 0xfc ; call rsp
0x000000000017102e : add dword ptr [rax], eax ; mov ah, 5 ; call rsp
0x00000000001895fe : add dword ptr [rax], eax ; mov al, 0x21 ; jmp qword ptr [rdi]
0x000000000018967e : add dword ptr [rax], eax ; mov al, 0x23 ; jmp rdx
0x000000000018e79e : add dword ptr [rax], eax ; mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x000000000018ef9e : add dword ptr [rax], eax ; mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x000000000018f26e : add dword ptr [rax], eax ; mov al, 0x9a ; cmc ; jmp qword ptr [rcx]
0x000000000018c36e : add dword ptr [rax], eax ; mov al, 0xf5 ; hlt ; jmp qword ptr [rdi]
0x00000000001861ae : add dword ptr [rax], eax ; mov al, 2 ; call qword ptr [rax]
0x000000000018d6e6 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000189526 : add dword ptr [rax], eax ; mov byte ptr [rbx], bl ; jmp qword ptr [rcx]
0x000000000018d926 : add dword ptr [rax], eax ; mov byte ptr [rdi - 0xb], al ; jmp rdx
0x0000000000186ce6 : add dword ptr [rax], eax ; mov byte ptr [rdx + rsi*8], bh ; call qword ptr [rcx]
0x000000000018b466 : add dword ptr [rax], eax ; mov byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x0000000000171d9e : add dword ptr [rax], eax ; mov dh, dh ; jmp rsp
0x000000000018ab56 : add dword ptr [rax], eax ; mov dh, dl ; call rcx
0x000000000018c0f6 : add dword ptr [rax], eax ; mov dl, dh ; hlt ; call qword ptr [rcx]
0x000000000018c126 : add dword ptr [rax], eax ; mov dl, dh ; hlt ; jmp qword ptr [rax]
0x000000000018edbe : add dword ptr [rax], eax ; mov ebp, esi ; jmp qword ptr [rcx]
0x0000000000091415 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000f60f0 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000091341 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000172166 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; call rsp
0x0000000000171086 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; call rsp
0x0000000000171b0e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jl 0x171b0f ; push rsp ; ret 1
0x00000000001702ee : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1702e8 ; jmp rsp
0x000000000018f886 : add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f17e : add dword ptr [rax], eax ; nop ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000018a18e : add dword ptr [rax], eax ; nop ; cwde ; jmp rdx
0x000000000018f53e : add dword ptr [rax], eax ; nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000019206e : add dword ptr [rax], eax ; nop ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000018ee6e : add dword ptr [rax], eax ; nop ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x0000000000191096 : add dword ptr [rax], eax ; or al, bl ; cmc ; call rsp
0x000000000018b686 : add dword ptr [rax], eax ; or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x0000000000186df6 : add dword ptr [rax], eax ; or byte ptr [rbx - 0xe], al ; jmp qword ptr [rax]
0x00000000001939f6 : add dword ptr [rax], eax ; or byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000018da46 : add dword ptr [rax], eax ; or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rsi]
0x00000000001873f6 : add dword ptr [rax], eax ; or byte ptr [rcx - 0xe], ch ; call rsi
0x0000000000193bf6 : add dword ptr [rax], eax ; or byte ptr [rsi - 0xa], cl ; call qword ptr [rdi]
0x000000000018c2f6 : add dword ptr [rax], eax ; or ch, dh ; hlt ; jmp qword ptr [rcx]
0x000000000018c9a6 : add dword ptr [rax], eax ; or rbp, rsi ; jmp qword ptr [rcx]
0x0000000000189ab6 : add dword ptr [rax], eax ; pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x000000000018c646 : add dword ptr [rax], eax ; pop rax ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018e1f6 : add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000018bb26 : add dword ptr [rax], eax ; pop rax ; mov bh, 0xf4 ; jmp rdx
0x0000000000189496 : add dword ptr [rax], eax ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x0000000000191e16 : add dword ptr [rax], eax ; pop rax ; sub esi, esi ; jmp qword ptr [rsi]
0x0000000000171a3e : add dword ptr [rax], eax ; pop rbx ; cmc ; jmp rsp
0x000000000018fafe : add dword ptr [rax], eax ; push rax ; mov al, 0xf5 ; call qword ptr [rdx]
0x000000000018acde : add dword ptr [rax], eax ; push rax ; out dx, eax ; call qword ptr [rcx]
0x0000000000185a1e : add dword ptr [rax], eax ; push rax ; xchg ecx, esi ; jmp qword ptr [rcx]
0x00000000001715de : add dword ptr [rax], eax ; push rdi ; xchg eax, ebx ; hlt ; call rsp
0x0000000000174d3e : add dword ptr [rax], eax ; push rsp ; add bl, bh ; call rsp
0x0000000000170916 : add dword ptr [rax], eax ; push rsp ; add ecx, esi ; call rsp
0x0000000000170d46 : add dword ptr [rax], eax ; push rsp ; in eax, dx ; int1 ; jmp rsp
0x0000000000171c0e : add dword ptr [rax], eax ; push rsp ; sbb dh, dh ; jmp rsp
0x000000000017170e : add dword ptr [rax], eax ; push rsp ; scasb al, byte ptr [rdi] ; hlt ; call rsp
0x000000000018f3a6 : add dword ptr [rax], eax ; pushfq ; cmc ; jmp qword ptr [rcx]
0x000000000018dc2e : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000007fda9 : add dword ptr [rax], eax ; ret
0x00000000001715ae : add dword ptr [rax], eax ; ret 0xf490
0x0000000000192e8e : add dword ptr [rax], eax ; ret 0xf641
0x0000000000171236 : add dword ptr [rax], eax ; ret 0xfff3
0x000000000018fefe : add dword ptr [rax], eax ; ret 0xfff5
0x000000000018c48e : add dword ptr [rax], eax ; sal bh, 0xf4 ; jmp qword ptr [rcx]
0x000000000018c68e : add dword ptr [rax], eax ; sar ah, 1 ; hlt ; jmp qword ptr [rcx]
0x000000000018d29e : add dword ptr [rax], eax ; sar byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x000000000018b636 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xc], ch ; call qword ptr [rdi]
0x0000000000193966 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000018c976 : add dword ptr [rax], eax ; sbb byte ptr [rcx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018b4f6 : add dword ptr [rax], eax ; sbb byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018e286 : add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018d7c6 : add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x000000000018947e : add dword ptr [rax], eax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018e23e : add dword ptr [rax], eax ; shl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000018b4ae : add dword ptr [rax], eax ; shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x00000000001920ce : add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rdi]
0x000000000019209e : add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x0000000000185216 : add dword ptr [rax], eax ; sti ; call qword ptr [rax]
0x000000000018c616 : add dword ptr [rax], eax ; sub ah, bh ; hlt ; jmp qword ptr [rcx]
0x0000000000186af6 : add dword ptr [rax], eax ; sub byte ptr [rax - 4], cl ; jmp qword ptr [rbx]
0x0000000000191d3e : add dword ptr [rax], eax ; sub byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x000000000018e086 : add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], bl ; jmp qword ptr [rbx]
0x000000000018d6b6 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x0000000000189406 : add dword ptr [rax], eax ; sub byte ptr [rdx], bl ; jmp qword ptr [rcx]
0x0000000000191dfe : add dword ptr [rax], eax ; sub esi, esi ; jmp qword ptr [rsi]
0x0000000000192026 : add dword ptr [rax], eax ; sub sil, sil ; jmp qword ptr [rsi]
0x000000000018ee86 : add dword ptr [rax], eax ; test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x000000000018f196 : add dword ptr [rax], eax ; test al, 0x99 ; cmc ; jmp qword ptr [rcx]
0x000000000018f756 : add dword ptr [rax], eax ; test al, 0xa2 ; cmc ; jmp qword ptr [rbx]
0x00000000001861c6 : add dword ptr [rax], eax ; test al, 2 ; call qword ptr [rax]
0x0000000000170b66 : add dword ptr [rax], eax ; test byte ptr [rbp - 0xf], ch ; call rsp
0x0000000000170dc6 : add dword ptr [rax], eax ; test byte ptr [rbx], ch ; jmp rsp
0x000000000017104e : add dword ptr [rax], eax ; test byte ptr [rsi], cl ; call rsp
0x000000000018f2fe : add dword ptr [rax], eax ; wait ; cmc ; jmp qword ptr [rcx]
0x0000000000170096 : add dword ptr [rax], eax ; xchg byte ptr [rdx - 0x10], al ; call rsp
0x00000000001706a6 : add dword ptr [rax], eax ; xchg eax, esp ; fcompi st(0) ; call rsp
0x0000000000170d5e : add dword ptr [rax], eax ; xchg eax, esp ; out dx, eax ; int1 ; call rsp
0x0000000000171246 : add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfff3
0x000000000018c22e : add dword ptr [rax], eax ; xor ah, 0xf4 ; jmp qword ptr [rcx]
0x0000000000170976 : add dword ptr [rax], eax ; xor al, 0xa ; int1 ; call rsp
0x00000000001716fe : add dword ptr [rax], eax ; xor al, 0xa9 ; hlt ; jmp rsp
0x0000000000170eae : add dword ptr [rax], eax ; xor al, 0xd6 ; call rsp
0x00000000001712de : add dword ptr [rax], eax ; xor al, 0xd9 ; jmp rsp
0x000000000018b50e : add dword ptr [rax], eax ; xor byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018e29e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018d7de : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x000000000008a773 : add dword ptr [rax], edi ; ret 0x4788
0x00000000001065fc : add dword ptr [rax], esp ; je 0x1065e5 ; ret
0x000000000018950d : add dword ptr [rax], r8d ; jo 0x189533 ; jmp qword ptr [rcx]
0x0000000000189525 : add dword ptr [rax], r8d ; mov byte ptr [rbx], bl ; jmp qword ptr [rcx]
0x0000000000189ab5 : add dword ptr [rax], r8d ; pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x00000000001894f5 : add dword ptr [rax], r8d ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x00000000000c7acb : add dword ptr [rbp + 0x39], eax ; ret 0x8e0f
0x00000000000c0d41 : add dword ptr [rbp + 0x75], ebx ; jmp 0xc0d94
0x00000000000359da : add dword ptr [rbp + 0xb], esi ; xor eax, eax ; nop ; ret
0x00000000000f60cc : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000b21a6 : add dword ptr [rbp + 1], ecx ; ret
0x00000000000d2d2e : add dword ptr [rbp + 7], esi ; ret
0x00000000000c9307 : add dword ptr [rbp + rax*4 - 0xa], esi ; ret 0x7408
0x000000000008f425 : add dword ptr [rbp + rcx*4 + 0x72], eax ; add dword ptr [rcx], edi ; ret
0x000000000009d1e7 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000000000091d28 : add dword ptr [rbp - 0x1b], esi ; ret
0x0000000000043eb4 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000b58c1 : add dword ptr [rbp - 0x24], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091b01 : add dword ptr [rbp - 0x3c], esi ; nop dword ptr [rax] ; ret
0x0000000000077f6f : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000c3734 : add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000000f74f9 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x000000000008d2fc : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001347a2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000007adeb : add dword ptr [rbx + 0x32a39e05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000032b33 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x000000000003824b : add dword ptr [rbx + 6], ebx ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000101aa9 : add dword ptr [rbx - 0x1f37b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002d0c2 : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000000c7302 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x0000000000077c87 : add dword ptr [rbx - 0xd], ebx ; ret
0x000000000019d925 : add dword ptr [rbx], eax ; ret
0x00000000000c4264 : add dword ptr [rbx], edi ; adc al, 0xbe ; cmove eax, ecx ; ret
0x0000000000111591 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x000000000009d6ef : add dword ptr [rcx + 0x39], eax ; ret
0x000000000008b2f8 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000840f7 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x0000000000115bbc : add dword ptr [rcx + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009b8fa : add dword ptr [rcx + 0x5c], eax ; ret
0x000000000010831b : add dword ptr [rcx + 0x5d], eax ; ret
0x00000000000c2216 : add dword ptr [rcx + 0x5e], eax ; neg eax ; pop r15 ; ret
0x00000000000c21d3 : add dword ptr [rcx + 0x5f], eax ; ret
0x0000000000091b33 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000003e42f : add dword ptr [rcx + 1], ecx ; ret 0xf49
0x000000000009d1e4 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x9d1d7 ; ret
0x0000000000103dd4 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x00000000000c420a : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x00000000000420e4 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x0000000000076109 : add dword ptr [rcx - 0x3b7cb7fd], ecx ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000093cd6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000010eda9 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000005e0f4 : add dword ptr [rcx - 0x77], ecx ; ret 0x19e9
0x00000000000c7e57 : add dword ptr [rcx - 0x77], ecx ; ret 0x6348
0x0000000000041dd6 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000000a759d : add dword ptr [rcx - 0x7d], eax ; ret
0x00000000000b151d : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000103d9f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a4672 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x000000000003e437 : add dword ptr [rcx - 0x7d], ecx ; ret 0xeb01
0x000000000002b5c8 : add dword ptr [rcx - 0x7d], ecx ; shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000019377d : add dword ptr [rcx], 0xf646e000 ; call qword ptr [rcx]
0x0000000000185215 : add dword ptr [rcx], eax ; add byte ptr [rax + 0x4d], cl ; sti ; call qword ptr [rax]
0x0000000000185245 : add dword ptr [rcx], eax ; add byte ptr [rax + 0x6e], ch ; sti ; call qword ptr [rax]
0x000000000009d42b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000c7476 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4cf6a8d
0x00000000000c7478 : add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4cf6a8b
0x000000000006065b : add dword ptr [rcx], ebp ; ret
0x000000000008f3c6 : add dword ptr [rcx], edi ; ret
0x00000000000cf54c : add dword ptr [rcx], edi ; ret 0x8c0f
0x00000000000c7730 : add dword ptr [rcx], edi ; ret 0x8e0f
0x0000000000043bf3 : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000000c7e12 : add dword ptr [rcx], edi ; ret 0xe97f
0x000000000010bcd3 : add dword ptr [rcx], edi ; ret 0xf077
0x00000000000c5bf6 : add dword ptr [rcx], edi ; ret 0xf57f
0x0000000000061259 : add dword ptr [rcx], esi ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000103333 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000028910 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000028551 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000001169d0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x00000000001169e0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000014c37a : add dword ptr [rdi + 3], esi ; ret
0x000000000008bd17 : add dword ptr [rdi - 0x1a], edi ; ret
0x000000000008ce4c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104eef : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000c2516 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002e4c5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000105bf8 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000ae358 : add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x0000000000141abe : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000042345 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000009bd72 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x0000000000093c94 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000000677c8 : add dword ptr [rdx + 4], 1 ; ret
0x0000000000067848 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000ea89b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000000eeeb7 : add dword ptr [rdx + rdx*8 + 0x3948ec75], eax ; ret
0x000000000017750d : add dword ptr [rdx], 0x44 ; ret
0x00000000001878c4 : add dword ptr [rdx], 0x4a ; ret
0x00000000001832cc : add dword ptr [rdx], 0x51 ; ret
0x0000000000192295 : add dword ptr [rdx], 0x57 ; ret
0x0000000000179cbc : add dword ptr [rdx], 0x63 ; ret
0x00000000001832d5 : add dword ptr [rdx], 0x65 ; ret
0x000000000018282c : add dword ptr [rdx], 2 ; clc ; ret
0x000000000018c0ac : add dword ptr [rdx], 2 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000183734 : add dword ptr [rdx], 2 ; ret
0x000000000017d2fc : add dword ptr [rdx], 2 ; xchg eax, edi ; ret
0x0000000000077c81 : add dword ptr [rip + 0x32fb70], 1 ; pop rbx ; ret
0x00000000000771b6 : add dword ptr [rip + 0x3305c7], 1 ; ret
0x000000000004c2d1 : add dword ptr [rip - 0x7d000000], ebp ; ret 0x8b01
0x0000000000093c25 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000124549 : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; ret 0xf66
0x00000000000221b8 : add dword ptr [rsi - 0x13], edi ; mov byte ptr [rdi], 0 ; ret
0x00000000000fca73 : add dword ptr [rsi - 0x76b7ffd6], ebx ; ret 0x8948
0x00000000000eab25 : add dword ptr [rsi - 0x77], esp ; add al, bl ; ret
0x0000000000093ca7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000182c98 : add dword ptr [rsi], 2 ; out 0xa, al ; ret
0x0000000000191a70 : add dword ptr [rsi], 2 ; push rdx ; ret
0x00000000001843ed : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x000000000017cb17 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x000000000017a537 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xecfb
0x00000000001965e7 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret 0xf5fe
0x0000000000113973 : add dword ptr [rsi], edx ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000127467 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001895fc : add dword ptr fs:[r8], r8d ; mov al, 0x21 ; jmp qword ptr [rdi]
0x000000000018b4dd : add dword ptr fs:[rax], eax ; add byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018b4c5 : add dword ptr fs:[rax], eax ; call 0x2218a939
0x0000000000170d45 : add dword ptr fs:[rax], eax ; push rsp ; in eax, dx ; int1 ; jmp rsp
0x000000000018b4f5 : add dword ptr fs:[rax], eax ; sbb byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018b4ad : add dword ptr fs:[rax], eax ; shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000018b50d : add dword ptr fs:[rax], eax ; xor byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018b685 : add dword ptr gs:[rax], eax ; or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x000000000018b635 : add dword ptr gs:[rax], eax ; sbb byte ptr [rax - 0xc], ch ; call qword ptr [rdi]
0x0000000000170d5d : add dword ptr gs:[rax], eax ; xchg eax, esp ; out dx, eax ; int1 ; call rsp
0x000000000000e0a1 : add eax, 0 ; add byte ptr [rax], al ; ret
0x0000000000103356 : add eax, 0x10 ; ret
0x0000000000035f3a : add eax, 0x10c48348 ; ret
0x0000000000082026 : add eax, 0x11e35 ; ret
0x000000000007fda6 : add eax, 0x12495 ; ret
0x000000000003e597 : add eax, 0x12e7b4 ; jmp 0x3e566
0x0000000000021c32 : add eax, 0x141094 ; ret
0x0000000000021c42 : add eax, 0x1431c1 ; ret
0x0000000000042c81 : add eax, 0x15b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000000000adc47 : add eax, 0x16e ; ret
0x0000000000084fcc : add eax, 0x1f ; ret
0x00000000001785b4 : add eax, 0x2300e44 ; ret
0x000000000017fe1c : add eax, 0x2700e44 ; ret 0xe0a
0x000000000011b292 : add eax, 0x287869 ; jmp rax
0x000000000011b242 : add eax, 0x2878b1 ; pop r12 ; jmp rax
0x000000000011b1e2 : add eax, 0x287909 ; pop r12 ; jmp rax
0x000000000011b2f3 : add eax, 0x28b430 ; call qword ptr [rax]
0x000000000011acd7 : add eax, 0x28ba4c ; call qword ptr [rax]
0x0000000000083e66 : add eax, 0x29000000 ; ret
0x0000000000113a02 : add eax, 0x291481 ; add rsp, 8 ; ret
0x00000000001139d2 : add eax, 0x291519 ; add rsp, 8 ; ret
0x0000000000113972 : add eax, 0x291601 ; add rsp, 8 ; ret
0x00000000001139a2 : add eax, 0x291641 ; add rsp, 8 ; ret
0x0000000000107412 : add eax, 0x29dbd9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000019e781 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000010a57a : add eax, 0x29f99d ; add rsp, 8 ; ret
0x000000000010a561 : add eax, 0x29f9b6 ; test eax, eax ; je 0x10a579 ; ret
0x0000000000109956 : add eax, 0x2a0545 ; add rsp, 8 ; ret
0x0000000000109926 : add eax, 0x2a0575 ; add rsp, 8 ; ret
0x000000000010990a : add eax, 0x2a0591 ; add rsp, 8 ; ret
0x0000000000106d2b : add eax, 0x2a2e94 ; test eax, eax ; je 0x106d41 ; ret
0x0000000000101072 : add eax, 0x2a5839 ; ret
0x00000000001007a0 : add eax, 0x2a60f3 ; add rsp, 8 ; ret
0x00000000000f9d9c : add eax, 0x2af51e ; add ecx, ebp ; ret
0x00000000000f8ca7 : add eax, 0x2b051c ; add rsp, 0x28 ; jmp rax
0x00000000000ee358 : add eax, 0x2b84a3 ; call 0x6a5f7
0x00000000000eb172 : add eax, 0x2b9ce9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e4fef : add eax, 0x2c32ac ; add rsp, 0x18 ; ret
0x00000000000e4f8c : add eax, 0x2c334f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4a38 : add eax, 0x2c3813 ; add rsp, 8 ; ret
0x00000000000e49d9 : add eax, 0x2c3892 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2426 : add eax, 0x2c4395 ; mov rdx, rax ; jmp 0xe23c6
0x00000000000e2390 : add eax, 0x2c442b ; add rsp, 8 ; ret
0x00000000000e38ab : add eax, 0x2c48c0 ; add rsp, 8 ; ret
0x00000000000e3837 : add eax, 0x2c4934 ; mov rdx, rax ; jmp 0xe3817
0x0000000000141b44 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000ac1c0 : add eax, 0x2fe3d3 ; add rsp, 8 ; ret
0x00000000001843eb : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000083d25 : add eax, 0x323bde ; add rsp, 8 ; ret
0x0000000000083ce3 : add eax, 0x323c20 ; ret
0x000000000007bfa0 : add eax, 0x328f2b ; mov qword ptr [rax], rdi ; ret
0x000000000007ac00 : add eax, 0x32a1b3 ; xor edi, edi ; call qword ptr [rax]
0x000000000007bfb1 : add eax, 0x32b82e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000077132 : add eax, 0x32ef09 ; ret
0x0000000000077c82 : add eax, 0x32fb70 ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000077218 : add eax, 0x33 ; add byte ptr [rax], al ; ret
0x0000000000077216 : add eax, 0x330569 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000670c4 : add eax, 0x340657 ; pop rbx ; pop rbp ; ret
0x0000000000035de4 : add eax, 0x36f29f ; mov eax, edx ; ret
0x0000000000035da1 : add eax, 0x36f2e2 ; ret
0x0000000000035d91 : add eax, 0x36f2f6 ; ret
0x0000000000038c52 : add eax, 0x3718bf ; add rsp, 8 ; ret
0x000000000002e04e : add eax, 0x376d85 ; mov qword ptr [rax], rdx ; ret
0x000000000002af62 : add eax, 0x37b9b9 ; ret
0x000000000002171c : add eax, 0x383ab7 ; pop r12 ; ret
0x0000000000023112 : add eax, 0x3872b1 ; ret
0x0000000000023102 : add eax, 0x3872d1 ; ret
0x000000000001f4fc : add eax, 0x3873e7 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022101 : add eax, 0x38827a ; ret
0x0000000000021e73 : add eax, 0x388508 ; pop rbx ; ret
0x000000000011daca : add eax, 0x38c48348 ; ret
0x00000000000f5bf6 : add eax, 0x3c2a5 ; ret
0x00000000000f5c96 : add eax, 0x3ecd5 ; ret
0x000000000019eead : add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000000d730e : add eax, 0x41000000 ; pop rsp ; ret
0x000000000006a861 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x0000000000144078 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000013fd28 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000097006 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000022935 : add eax, 0x488d4800 ; and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x0000000000104ef1 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000010d1ba : add eax, 0x48c48348 ; ret
0x0000000000090f8a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x00000000001440f9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013fd69 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000153ec9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x000000000015849d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000081a23 : add eax, 0x5c415d5b ; ret
0x000000000008a7b3 : add eax, 0x7868 ; ret
0x0000000000085db2 : add eax, 0x79 ; ret
0x000000000002594e : add eax, 0x7d3b4d00 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015f9e1 : add eax, 0x7e8fff5 ; cmc ; call qword ptr [rsi]
0x000000000009780e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000dcccc : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f11d : add eax, 0x83480000 ; ret 0x4910
0x0000000000121c71 : add eax, 0x83480000 ; ret 0xe910
0x000000000011f071 : add eax, 0x83480000 ; ret 0xeb10
0x000000000014407b : add eax, 0x8428d48 ; ret
0x00000000000e328e : add eax, 0x8548fff9 ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000011abaf : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000f5393 : add eax, 0x89c78944 ; ret
0x0000000000098eb2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000008a7c7 : add eax, 0x9f7c4 ; ret
0x00000000001139c6 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000083fa3 : add eax, 0xa04d8 ; ret
0x0000000000083c23 : add eax, 0xa0738 ; ret
0x0000000000081793 : add eax, 0xa2a88 ; ret
0x00000000001139f6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009cc54 : add eax, 0xaa147 ; ret
0x000000000009d820 : add eax, 0xab23b ; ret
0x000000000009d828 : add eax, 0xadaf3 ; ret
0x0000000000085756 : add eax, 0xaf225 ; ret
0x00000000000a4bcf : add eax, 0xb8480000 ; ret 0xffff
0x0000000000083906 : add eax, 0xbc4b5 ; ret
0x0000000000085c46 : add eax, 0xbccf5 ; ret
0x0000000000081686 : add eax, 0xbcf85 ; ret
0x0000000000085d66 : add eax, 0xbe3e5 ; ret
0x000000000011abee : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x000000000014847a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x0000000000084fe0 : add eax, 0xc243b ; ret
0x00000000001440fd : add eax, 0xc428d48 ; ret
0x000000000009864d : add eax, 0xc478d48 ; ret
0x0000000000023c7f : add eax, 0xc4834800 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000084fe8 : add eax, 0xc4bc3 ; ret
0x000000000003b19c : add eax, 0xc7480000 ; ret
0x0000000000030ef5 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000007ff93 : add eax, 0xc98f8 ; ret
0x000000000009d80c : add eax, 0xca4f ; ret
0x000000000009948d : add eax, 0xd478d48 ; ret
0x000000000009cc4c : add eax, 0xd69f ; ret
0x0000000000029cdb : add eax, 0xe9000000 ; ret 0xfffe
0x0000000000134793 : add eax, 0xf7f0ff3 ; ret
0x000000000004af82 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ae65 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f520a : add eax, 0xfff0003d ; dec dword ptr [rax - 0x77] ; ret 0x1376
0x000000000008bce3 : add eax, 0xfffffae8 ; add rsp, 8 ; ret
0x000000000008bccc : add eax, 0xfffffaff ; ret
0x00000000000abeea : add eax, 0xffffffd ; mov bh, 0x7d ; ret 0xb70f
0x0000000000043bf1 : add eax, 1 ; cmp edx, eax ; jg 0x43bb8 ; ret
0x00000000000eaac3 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000eab23 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000085beb : add eax, 1 ; ret
0x0000000000022f22 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x000000000009cee8 : add eax, 2 ; ret
0x000000000009cf01 : add eax, 3 ; ret
0x00000000000801f6 : add eax, 5 ; ret
0x0000000000085e15 : add eax, 6 ; ret
0x0000000000103e80 : add eax, 8 ; ret
0x0000000000082072 : add eax, 9 ; ret
0x0000000000022119 : add eax, dword ptr [0] ; ret
0x000000000006b565 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000000ca76b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000011f2bd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121e11 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f2e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ea4a6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001137b6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000e78d7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000009cf43 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000102564 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000c83ff : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000b4a7c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7af09807], al ; ret 3
0x00000000000fe6be : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000f4be5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000011a0a3 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x90eb
0x00000000000bcf65 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009b94c : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000005f49 : add eax, dword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x00000000000b9b05 : add eax, dword ptr [rax] ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000bbf32 : add eax, dword ptr [rax] ; jmp 0xbbc58
0x00000000000e1e87 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000009bb90 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009bbb3 : add eax, dword ptr [rax] ; ret
0x00000000001028d6 : add eax, dword ptr [rbx + 0x2948fce0] ; ret
0x00000000000c2492 : add eax, dword ptr [rbx - 0x6bf0f903] ; ret 0xfd83
0x0000000000032ab2 : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x2ce9
0x0000000000103bed : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x103bfe ; ret
0x000000000001fb29 : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x0000000000141b09 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000190524 : add eax, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x0000000000033b68 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000018543a : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rbx + 0xac90204], al ; ret
0x000000000011e220 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000eba08 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000141c09 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000177b0a : add eax, dword ptr [rsi + rcx + 0x30] ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000000ebc3a : add eax, dword ptr [rsi + rdx] ; ret
0x000000000009bc55 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000068d7d : add eax, eax ; jmp rax
0x000000000004bea0 : add eax, eax ; mov eax, r8d ; ret
0x0000000000091828 : add eax, eax ; ret
0x000000000007d0c8 : add eax, ebp ; jmp rax
0x00000000000eadb4 : add eax, ebp ; ret
0x0000000000160060 : add eax, ebx ; cmc ; dec dword ptr [rip + 0x19fff5c3] ; ret
0x00000000000db2fd : add eax, ebx ; cmp rdi, rsi ; ja 0xdb2a0 ; pop rbx ; ret
0x000000000003342e : add eax, ebx ; jmp rax
0x00000000000493f5 : add eax, ecx ; jmp rax
0x000000000017cadc : add eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000084cfa : add eax, ecx ; ret
0x0000000000091825 : add eax, edi ; add rax, r8 ; ret
0x0000000000084cf7 : add eax, edi ; add rax, rcx ; ret
0x000000000008396b : add eax, edi ; ret
0x000000000012427a : add eax, edi ; sub rax, rsi ; ret
0x000000000010c5ed : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015fffc : add eax, edx ; cmc ; dec dword ptr [rip + 0x17fff5c2] ; ret 0xfff5
0x00000000000db32d : add eax, edx ; cmp rdi, rsi ; ja 0xdb328 ; ret
0x000000000002c8c1 : add eax, edx ; jmp r8
0x0000000000056e79 : add eax, edx ; jmp rax
0x000000000010c60e : add eax, edx ; ret
0x000000000003449d : add eax, edx ; shr rax, 0x3f ; ret
0x0000000000081dbe : add eax, edx ; sub rax, rdi ; ret
0x00000000000e1e85 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000043bc1 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x00000000000555ee : add eax, esi ; jmp rax
0x00000000000ab441 : add eax, esi ; ret
0x00000000001948d4 : add eax, esp ; cmc ; jmp qword ptr [rdx]
0x000000000004bdcf : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000aa9c9 : add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000109b7f : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000000365fe : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x000000000017e2b9 : add ebp, edi ; call qword ptr [rax]
0x000000000000314a : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000dd939 : add ebp, esp ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000010690a : add ebx, dword ptr [r11 + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000010690b : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e85a4 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000f453c : add ebx, eax ; nop ; xor eax, eax ; ret
0x00000000000441e1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000eab39 : add ebx, eax ; ret
0x000000000000374a : add ebx, ebp ; in al, -0x12 ; jne 0x3730 ; ret 0x975
0x000000000007b5e6 : add ebx, ebp ; ret
0x00000000000ceeec : add ebx, ecx ; jmp r11
0x0000000000134953 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000856d8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x856c9 ; ret
0x00000000000c4262 : add ecx, 1 ; cmp edx, dword ptr [rsi + rdi*4] ; cmove eax, ecx ; ret
0x00000000000f74f7 : add ecx, 1 ; test r8d, r8d ; jne 0xf74f1 ; ret
0x0000000000093d2a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011322d : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000000fe7c7 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000078b54 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000ff994 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000d2d8c : add ecx, dword ptr [rax + 1] ; ret
0x000000000007fb25 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x000000000009b7c3 : add ecx, dword ptr [rax - 0x2f] ; call 0xffffffffc316451f
0x00000000000dd2d4 : add ecx, dword ptr [rax - 0x68] ; ret
0x000000000010401c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000e3104 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x0000000000091bfa : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x91c14 ; ret
0x000000000009d98a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x9d9a4 ; ret
0x0000000000090f6a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008cc69 : add ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000e6d8b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000006af9a : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000f1648 : add ecx, dword ptr [rbp - 0x77] ; ret
0x00000000001346c2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000117674 : add ecx, dword ptr [rbx + 0x408b8c55] ; or byte ptr [rcx], bh ; ret 0x1d75
0x0000000000022253 : add ecx, dword ptr [rbx - 0x7cb77efc] ; ret 0x4801
0x0000000000043b38 : add ecx, dword ptr [rcx + 0x29] ; ret
0x0000000000096fa4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000007fa70 : add ecx, dword ptr [rcx + rcx*4 + 0x4b] ; mov rdi, r9 ; call rcx
0x00000000000f1f3f : add ecx, dword ptr [rcx + rcx*4 - 0x5b] ; push -0x76000001 ; ret 0x8948
0x0000000000093d2b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000ce6b9 : add ecx, dword ptr [rcx] ; ret 0xf983
0x00000000000977d0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000032ab5 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x000000000006c19a : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000c747a : add ecx, eax ; jmp 0x4cf6a89
0x00000000000cbf13 : add ecx, eax ; jmp rcx
0x00000000000ab68a : add ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x00000000000b2d97 : add ecx, ebp ; ret
0x000000000011deed : add ecx, ebx ; call rax
0x0000000000129fab : add ecx, ebx ; jmp r9
0x0000000000147442 : add ecx, ebx ; jmp rcx
0x00000000000e54a4 : add ecx, ebx ; ret
0x0000000000056d60 : add ecx, edx ; jmp rcx
0x0000000000170919 : add ecx, esi ; call rsp
0x000000000009bc14 : add ecx, esi ; jmp rcx
0x000000000010f7cd : add edi, 0x10 ; jmp rcx
0x0000000000109ef0 : add edi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000010be0a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x000000000010bdc3 : add edi, 0x23b0 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000111d54 : add edi, 0x58 ; jmp rcx
0x00000000001114a4 : add edi, 0x68 ; jmp rcx
0x000000000010ec37 : add edi, 0xc8 ; jmp rcx
0x0000000000090f2c : add edi, 1 ; mov rax, rdi ; ret
0x00000000000bc6b3 : add edi, 1 ; test dl, dl ; jne 0xbc6a1 ; ret
0x0000000000090f55 : add edi, 2 ; mov rax, rdi ; ret
0x0000000000090f68 : add edi, 3 ; mov rax, rdi ; ret
0x0000000000090f75 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000090f88 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000090fa2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x00000000000eed19 : add edi, dword ptr [rdx + rdi] ; jne 0xeed34 ; jmp 0xeed38
0x000000000019d689 : add edi, eax ; call qword ptr [rax]
0x000000000019d619 : add edi, eax ; call qword ptr [rdi]
0x0000000000172ef1 : add edi, eax ; call rsp
0x0000000000111143 : add edi, eax ; jmp rdi
0x0000000000103de4 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000019c0c1 : add edi, ebx ; jmp qword ptr [rdx]
0x00000000001155ac : add edi, edi ; movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x0000000000129fa8 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000184271 : add edi, edx ; call qword ptr [rax]
0x00000000000357a5 : add edi, esi ; ret 0
0x0000000000103859 : add edx, 0xc ; cmp rdx, r8 ; jne 0x10384a ; ret
0x0000000000103e2e : add edx, 2 ; mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000103da1 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000001921dc : add edx, dword ptr [rcx] ; sti ; jmp qword ptr [rdx]
0x00000000000b0609 : add edx, dword ptr [rsi] ; std ; dec dword ptr [rax - 0x77] ; jmp 0x48cd8f65
0x0000000000091728 : add edx, eax ; jl 0x91797 ; add rax, rdi ; ret
0x0000000000091738 : add edx, eax ; jl 0x91799 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000091758 : add edx, eax ; jl 0x91799 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000091778 : add edx, eax ; jl 0x91799 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000011a0a6 : add edx, eax ; jmp 0x11a03b
0x0000000000090f1d : add edx, eax ; jmp r10
0x0000000000022453 : add edx, eax ; jmp rdx
0x0000000000044dd2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000001f5b2 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f58c
0x00000000000c2973 : add edx, ecx ; jmp rdx
0x0000000000033206 : add edx, edi ; jmp rdx
0x000000000009bbd4 : add edx, esi ; jmp rdx
0x0000000000051919 : add edx, esp ; call qword ptr [r11 + rax*8]
0x00000000001107b5 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000005f54f : add esi, 1 ; call 0xeb7d5
0x0000000000103331 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000021460 : add esi, 8 ; jmp 0x21425
0x000000000009ae59 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000103ffd : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000112ee0 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000081916 : add esi, dword ptr [rdi + rbx + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x000000000010bb92 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c37bf : add esi, dword ptr [rsi + rax - 0xd] ; ret
0x0000000000091413 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000f0eba : add esi, eax ; and al, 0xc ; add ecx, ebp ; ret
0x00000000000ef63b : add esi, eax ; jmp qword ptr [rax]
0x0000000000068723 : add esi, eax ; jmp rsi
0x00000000001166f3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000017d664 : add esi, eax ; out dx, al ; jmp qword ptr [rdx]
0x000000000018c771 : add esi, ebp ; jmp qword ptr [rcx]
0x0000000000134873 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014987c : add esi, edi ; fadd st(3) ; ret
0x000000000009bc6b : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000129fa5 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001603f1 : add esi, esi ; call rsp
0x00000000001603c1 : add esi, esi ; jmp rsp
0x00000000000c2257 : add esi, esi ; or esi, r10d ; jne 0xc2268 ; ret
0x0000000000085508 : add esi, esi ; ret
0x00000000000359ca : add esi, esi ; ret 0xf304
0x00000000000e1d8f : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000e739f : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x000000000007ef54 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000100301 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010c837 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e502c : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000006bbd7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002b1b6 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041ce2 : add esp, 0x10 ; pop rbx ; ret
0x0000000000035e3a : add esp, 0x10 ; ret
0x00000000000d65c4 : add esp, 0x10 ; xor al, al ; pop rbx ; ret
0x000000000002b187 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076f51 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000084b3f : add esp, 0x100 ; ret
0x000000000008182d : add esp, 0x100 ; sub rax, rdx ; ret
0x0000000000067163 : add esp, 0x1000 ; pop rbx ; ret
0x0000000000067171 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003558c : add esp, 0x108 ; ret
0x00000000000dcb0e : add esp, 0x120 ; pop rbx ; ret
0x00000000000357d2 : add esp, 0x140 ; pop rbx ; ret
0x000000000003500b : add esp, 0x148 ; ret
0x0000000000021d79 : add esp, 0x18 ; jmp rax
0x000000000003552d : add esp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000676aa : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000d64ee : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007eba6 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000db240 : add esp, 0x18 ; mov rax, rdx ; ret
0x00000000000676d6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000116bdc : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000115c15 : add esp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000007fbd8 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023c4d : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000043128 : add esp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x00000000000230ab : add esp, 0x18 ; ret
0x0000000000043156 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dc167 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000e0604 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000046102 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006b488 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034d83 : add esp, 0x20 ; pop rbx ; ret
0x00000000000b8836 : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006a223 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc112 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000021dcb : add esp, 0x28 ; jmp rax
0x0000000000035ed9 : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e94ee : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ab1a4 : add esp, 0x28 ; mov rax, rdx ; ret
0x0000000000113da3 : add esp, 0x28 ; pop rbp ; pop r12 ; ret
0x00000000000219c9 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000067099 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000382d2 : add esp, 0x28 ; ret
0x00000000000f5579 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bbc51 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001098eb : add esp, 0x30 ; pop rbx ; ret
0x0000000000101dc1 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f998c : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000112ee4 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b710a : add esp, 0x38 ; ret
0x00000000000b799d : add esp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x0000000000035849 : add esp, 0x40 ; pop rbx ; ret
0x00000000000eb238 : add esp, 0x40 ; ret
0x0000000000110234 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6708 : add esp, 0x408 ; ret
0x0000000000045fac : add esp, 0x440 ; pop rbx ; ret
0x00000000000dd1c2 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000007346c : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000104ef3 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000e1f7c : add esp, 0x48 ; ret
0x000000000010a94c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a898 : add esp, 0x50 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1914 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000dbfeb : add esp, 0x58 ; ret
0x00000000000e0d3f : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000d01c2 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a1eb : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dc02a : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000113e1c : add esp, 0x68 ; ret
0x000000000007dff7 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dba80 : add esp, 0x70 ; pop rbx ; ret
0x000000000007e0e6 : add esp, 0x70 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112db9 : add esp, 0x78 ; ret
0x0000000000035642 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001142e5 : add esp, 0x88 ; ret
0x00000000000e9cc2 : add esp, 0x90 ; pop rbx ; ret
0x00000000000742a0 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000671b3 : add esp, 0x98 ; ret
0x0000000000112b27 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000003613d : add esp, 0xa8 ; ret
0x0000000000067d2a : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000ab375 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000035201 : add esp, 0xd0 ; ret
0x0000000000041d84 : add esp, 0xd8 ; ret
0x00000000000f303c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010fa83 : add esp, 8 ; add eax, 2 ; ret
0x0000000000083d6d : add esp, 8 ; jmp rax
0x0000000000103d2b : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000bed81 : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000bec76 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004bd52 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a9458 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000067e80 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000438c3 : add esp, 8 ; mov eax, edx ; ret
0x0000000000069ce8 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007337c : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000325cb : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006be87 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007e7b4 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000037cd6 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011598c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000225a5 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000414b6 : add esp, 8 ; movzx eax, al ; ret
0x00000000001064ea : add esp, 8 ; movzx eax, ax ; ret
0x000000000006c67d : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000010cfa9 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000010c609 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006e250 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000245c9 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000230f1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000354b3 : add esp, 8 ; pop rbx ; ret
0x00000000000c4853 : add esp, 8 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x000000000003477a : add esp, 8 ; ret
0x000000000011aa31 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000116cd4 : add esp, 8 ; shr eax, 0x1f ; ret
0x00000000000241f0 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d1cbc : add esp, 8 ; xor eax, eax ; ret
0x0000000000186834 : add esp, eax ; int1 ; jmp qword ptr [rdx]
0x000000000016eb29 : add esp, ebp ; call rsp
0x000000000016d56d : add esp, edi ; jmp qword ptr [rax]
0x00000000000df35a : add esp, esi ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fd4a8 : add qword ptr [r8 - 0x7d], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000c5a7d : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000000d65ae : add qword ptr [r8], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002890f : add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001065fb : add qword ptr [rax], r12 ; je 0x1065e6 ; ret
0x00000000001065fa : add qword ptr [rax], r12 ; je 0x1065e7 ; ret
0x0000000000170915 : add qword ptr [rax], r8 ; push rsp ; add ecx, esi ; call rsp
0x00000000001706a5 : add qword ptr [rax], rax ; xchg eax, esp ; fcompi st(0) ; call rsp
0x0000000000091b00 : add qword ptr [rbp - 0x3c], rsi ; nop dword ptr [rax] ; ret
0x000000000008fe76 : add qword ptr [rcx], rdi ; ret
0x0000000000028550 : add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000141abd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000090f1c : add r10, rax ; jmp r10
0x00000000000ceeeb : add r11, r9 ; jmp r11
0x0000000000134952 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000005f54e : add r14, 1 ; call 0xeb7d6
0x00000000001348e2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134872 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172ef0 : add r15d, eax ; call rsp
0x0000000000123ea0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ca76a : add r8, qword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000120334 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002c8c0 : add r8, rdx ; jmp r8
0x0000000000043bc0 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x0000000000199db5 : add r8b, byte ptr [r8] ; call 0x21199522
0x0000000000173365 : add r8b, byte ptr [r8] ; in eax, -0x7d ; clc ; jmp rsp
0x00000000000910c4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000091024 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00000000001733bd : add r8b, byte ptr [r8] ; retf ; mov eax, edi ; call rsp
0x000000000004be9f : add r8d, eax ; mov eax, r8d ; ret
0x000000000011deec : add r9, r11 ; call rax
0x0000000000129faa : add r9, r11 ; jmp r9
0x0000000000045bf7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x45c15
0x000000000010330c : add r9b, byte ptr [rax + 0x39] ; ret 0x2d72
0x0000000000127042 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000141b43 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000043bf0 : add rax, 1 ; cmp edx, eax ; jg 0x43bb9 ; ret
0x000000000009cef0 : add rax, 1 ; ret
0x000000000009cee7 : add rax, 2 ; ret
0x000000000009cf00 : add rax, 3 ; ret
0x0000000000022118 : add rax, qword ptr [0] ; ret
0x0000000000033b67 : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000011e21f : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000022117 : add rax, qword ptr fs:[0] ; ret
0x000000000007d0c7 : add rax, r13 ; jmp rax
0x00000000000555ed : add rax, r14 ; jmp rax
0x0000000000068d7c : add rax, r8 ; jmp rax
0x0000000000091827 : add rax, r8 ; ret
0x00000000000493f4 : add rax, r9 ; jmp rax
0x000000000003342d : add rax, rbx ; jmp rax
0x000000000006866e : add rax, rcx ; jmp rax
0x0000000000084cf9 : add rax, rcx ; ret
0x0000000000091824 : add rax, rdi ; add rax, r8 ; ret
0x0000000000084cf6 : add rax, rdi ; add rax, rcx ; ret
0x000000000008396a : add rax, rdi ; ret
0x0000000000124279 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000056e78 : add rax, rdx ; jmp rax
0x000000000003449c : add rax, rdx ; shr rax, 0x3f ; ret
0x0000000000081dbd : add rax, rdx ; sub rax, rdi ; ret
0x00000000000b3498 : add rax, rsi ; jmp rax
0x00000000000365fd : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x0000000000147441 : add rcx, r11 ; jmp rcx
0x00000000000cbf12 : add rcx, rax ; jmp rcx
0x00000000000ab689 : add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x0000000000056d5f : add rcx, rdx ; jmp rcx
0x000000000009bc13 : add rcx, rsi ; jmp rcx
0x000000000010f7cc : add rdi, 0x10 ; jmp rcx
0x0000000000109eef : add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000010be09 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000111d53 : add rdi, 0x58 ; jmp rcx
0x00000000001114a3 : add rdi, 0x68 ; jmp rcx
0x000000000010ec36 : add rdi, 0xc8 ; jmp rcx
0x0000000000090f2b : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000bc6b2 : add rdi, 1 ; test dl, dl ; jne 0xbc6a2 ; ret
0x0000000000090f54 : add rdi, 2 ; mov rax, rdi ; ret
0x0000000000090f67 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000111142 : add rdi, rax ; jmp rdi
0x0000000000103de3 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000129fa7 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000051918 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000044dd1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000091727 : add rdx, rax ; jl 0x91798 ; add rax, rdi ; ret
0x0000000000091726 : add rdx, rax ; jl 0x91799 ; add rax, rdi ; ret
0x0000000000022452 : add rdx, rax ; jmp rdx
0x00000000000c2972 : add rdx, rcx ; jmp rdx
0x0000000000033205 : add rdx, rdi ; jmp rdx
0x000000000009bbd3 : add rdx, rsi ; jmp rdx
0x00000000001107b4 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000103330 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000002145f : add rsi, 8 ; jmp 0x21426
0x0000000000068722 : add rsi, rax ; jmp rsi
0x00000000001166f2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000007ef53 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000010c836 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e502b : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000006bbd6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002b1b5 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000041ce1 : add rsp, 0x10 ; pop rbx ; ret
0x0000000000035e39 : add rsp, 0x10 ; ret
0x00000000000d65c3 : add rsp, 0x10 ; xor al, al ; pop rbx ; ret
0x0000000000076f50 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000084b3e : add rsp, 0x100 ; ret
0x0000000000067162 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003558b : add rsp, 0x108 ; ret
0x00000000000dcb0d : add rsp, 0x120 ; pop rbx ; ret
0x00000000000357d1 : add rsp, 0x140 ; pop rbx ; ret
0x000000000003500a : add rsp, 0x148 ; ret
0x0000000000021d78 : add rsp, 0x18 ; jmp rax
0x000000000003552c : add rsp, 0x18 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000676a9 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000d64ed : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007eba5 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000db23f : add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000676d5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000116bdb : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000115c14 : add rsp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000023c4c : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000043127 : add rsp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x00000000000230aa : add rsp, 0x18 ; ret
0x0000000000043155 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000e0603 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000046101 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006b487 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034d82 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000b8835 : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000dc111 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000021dca : add rsp, 0x28 ; jmp rax
0x0000000000035ed8 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e94ed : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000ab1a3 : add rsp, 0x28 ; mov rax, rdx ; ret
0x0000000000113da2 : add rsp, 0x28 ; pop rbp ; pop r12 ; ret
0x0000000000067098 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000382d1 : add rsp, 0x28 ; ret
0x00000000000f5578 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000bbc50 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001098ea : add rsp, 0x30 ; pop rbx ; ret
0x0000000000112ee3 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000b7109 : add rsp, 0x38 ; ret
0x00000000000b799c : add rsp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x0000000000035848 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000eb237 : add rsp, 0x40 ; ret
0x00000000000e6707 : add rsp, 0x408 ; ret
0x0000000000045fab : add rsp, 0x440 ; pop rbx ; ret
0x00000000000dd1c1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000104ef2 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000e1f7b : add rsp, 0x48 ; ret
0x000000000010a94b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e1913 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000dbfea : add rsp, 0x58 ; ret
0x00000000000e0d3e : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000d01c1 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc029 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000000000113e1b : add rsp, 0x68 ; ret
0x000000000007dff6 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dba7f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000112db8 : add rsp, 0x78 ; ret
0x0000000000035641 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000000001142e4 : add rsp, 0x88 ; ret
0x00000000000e9cc1 : add rsp, 0x90 ; pop rbx ; ret
0x000000000007429f : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000671b2 : add rsp, 0x98 ; ret
0x0000000000112b26 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000003613c : add rsp, 0xa8 ; ret
0x00000000000ab374 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035200 : add rsp, 0xd0 ; ret
0x0000000000041d83 : add rsp, 0xd8 ; ret
0x00000000000f303b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010fa82 : add rsp, 8 ; add eax, 2 ; ret
0x0000000000083d6c : add rsp, 8 ; jmp rax
0x0000000000103d2a : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004bd51 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a9457 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000067e7f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000438c2 : add rsp, 8 ; mov eax, edx ; ret
0x0000000000069ce7 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007337b : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000325ca : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006be86 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000007e7b3 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000037cd5 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011598b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000225a4 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000000414b5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001064e9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000006c67c : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000010cfa8 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000010c608 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000006e24f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000230f0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000354b2 : add rsp, 8 ; pop rbx ; ret
0x00000000000c4852 : add rsp, 8 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x0000000000034779 : add rsp, 8 ; ret
0x000000000011aa30 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000116cd3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000241ef : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d1cbb : add rsp, 8 ; xor eax, eax ; ret
0x000000000008a80e : add sil, sil ; ret 0x7404
0x00000000000cbfbe : add sil, sil ; ret 0x7508
0x00000000000eab36 : add word ptr [rax], 1 ; ret
0x000000000018b69d : add word ptr [rax], ax ; adc byte ptr [rax - 0xc], ch ; call rdx
0x00000000000ea89a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000000944e1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000aea62 : and al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000022f3a : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008cc9c : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000017b5a4 : and al, 0 ; add byte ptr [rax], al ; clc ; ret 0xffee
0x000000000011d548 : and al, 0x10 ; call rax
0x000000000007ab80 : and al, 0x10 ; call rdx
0x0000000000034b67 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000e5a67 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000109fba : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000009e3cb : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000081b2b : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000021dc8 : and al, 0x18 ; add rsp, 0x28 ; jmp rax
0x000000000002ad18 : and al, 0x18 ; call r15
0x0000000000021b41 : and al, 0x18 ; call rax
0x0000000000022e86 : and al, 0x18 ; call rbx
0x000000000010f177 : and al, 0x18 ; call rcx
0x00000000000f3dbe : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f3e3e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000090f45 : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000f07e6 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x000000000011db39 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x00000000000aa09d : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x00000000000f06e9 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007c0ed : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000196dbc : and al, 0x1d ; add al, byte ptr [rax] ; adc al, 0xf6 ; jmp qword ptr [rdi]
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x000000000009e04d : and al, 0x20 ; call rbx
0x000000000010ef80 : and al, 0x20 ; call rcx
0x00000000000ba563 : and al, 0x20 ; jmp 0xba52d
0x00000000000ba562 : and al, 0x20 ; jmp 0xba52e
0x000000000009e0db : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000007ab7b : and al, 0x20 ; mov qword ptr [rsp + 0x10], rax ; call rdx
0x000000000007e06f : and al, 0x20 ; mov rbx, rbp ; call 0x6a2e7
0x000000000007e06e : and al, 0x20 ; mov rbx, rbp ; call 0x6a2e8
0x000000000002ad13 : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x000000000009dc8c : and al, 0x20 ; mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000001976bc : and al, 0x26 ; add al, byte ptr [rax] ; sal dh, 0xf6 ; call qword ptr [rsi]
0x000000000015b584 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000011dac6 : and al, 0x28 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000007a97c : and al, 0x28 ; call rax
0x000000000007cbb7 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000007a94d : and al, 0x28 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000e5438 : and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x0000000000170e10 : and al, 0x2e ; call rsp
0x00000000000435f0 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000cd636 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000116b69 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000009e57f : and al, 0x30 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000435fa : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000aaeda : and al, 0x38 ; call rax
0x00000000000e1f77 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000797eb : and al, 0x3f ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x000000000002523e : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025a0c : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025154 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000aaed5 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000000257b8 : and al, 0x40 ; xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000010adda : and al, 0x41 ; call qword ptr [rbx]
0x00000000000d44c3 : and al, 0x41 ; call rsp
0x0000000000113a5d : and al, 0x41 ; pop rsp ; ret
0x00000000000a3baa : and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000002b1b4 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e16eb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000db23e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000110066 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006b486 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e13b2 : and al, 0x48 ; add esp, 0x28 ; ret
0x00000000000eb1d5 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000eb236 : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000006d13d : and al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000027129 : and al, 0x48 ; call rax
0x000000000009db48 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000b61c0 : and al, 0x48 ; mov dword ptr [rax], 0 ; jmp 0xb6196
0x0000000000027711 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000011d98d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x000000000009d614 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b6d3f : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x000000000008cadc : and al, 0x48 ; test esi, esi ; jne 0x8caf3 ; jmp 0x8caad
0x000000000019104c : and al, 0x4b ; cmc ; jmp qword ptr [rdx]
0x00000000000fd5e3 : and al, 0x4c ; mov edi, esp ; call rax
0x00000000000ca0f7 : and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000027e60 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000028623 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029721 : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000173c88 : and al, 0x52 ; stc ; jmp rsp
0x0000000000040f7a : and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000291be : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026ba0 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000017b3d4 : and al, 0x5f ; add byte ptr [rax], al ; cmc ; ret
0x000000000017b3bc : and al, 0x63 ; add byte ptr [rax], al ; nop ; ret
0x000000000019c0bc : and al, 0x70 ; add al, byte ptr [rax] ; mov al, 3 ; sti ; jmp qword ptr [rdx]
0x00000000000ca157 : and al, 0x71 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x000000000019c2bc : and al, 0x72 ; add al, byte ptr [rax] ; ret 0xfff7
0x00000000000ed8b1 : and al, 0x74 ; adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000d7b16 : and al, 0x74 ; add al, ch ; ret 0xf6e4
0x00000000000ca0ea : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x000000000002782a : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000d9a51 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001186ad : and al, 0x85 ; ror byte ptr [rdi], 0x89 ; ret
0x0000000000042d6a : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x37e9
0x000000000002b497 : and al, 0x89 ; ret
0x0000000000103629 : and al, 0x89 ; ret 0xc148
0x00000000000dc045 : and al, 0x8b ; jl 0xdc073 ; or al, 0x89 ; ret
0x00000000000290f9 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000266d7 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018edbc : and al, 0x9d ; add dword ptr [rax], eax ; mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000f590d : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; stc ; ret 0xfff8
0x0000000000174990 : and al, 0xa0 ; cli ; jmp rsp
0x0000000000171688 : and al, 0xa3 ; hlt ; call rsp
0x000000000002704f : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000f595f : and al, 0xb0 ; add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x00000000000e2092 : and al, 0xb0 ; ret
0x00000000000d9a26 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x000000000007bd70 : and al, 0xb8 ; or byte ptr [rax], al ; add al, ch ; ret
0x00000000000f0ebd : and al, 0xc ; add ecx, ebp ; ret
0x00000000000676a7 : and al, 0xc ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000023c4a : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000038609 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000b9c96 : and al, 0xc ; add rsp, 0x28 ; ret
0x000000000011daef : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000172f50 : and al, 0xc ; clc ; call rsp
0x00000000001742c0 : and al, 0xc ; cli ; call rsp
0x0000000000042269 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000021c5 : and al, 0xc7 ; jno 0x2216 ; ret 0x1dd4
0x00000000001821d4 : and al, 0xcd ; add byte ptr [rax], al ; ret
0x00000000001740f0 : and al, 0xd7 ; stc ; jmp rsp
0x0000000000174118 : and al, 0xd9 ; stc ; call rsp
0x0000000000182abc : and al, 0xda ; add byte ptr [rax], al ; add byte ptr [rbx - 0x11], ah ; call qword ptr [rsi]
0x00000000000dbf85 : and al, 0xe8 ; add cl, byte ptr [rdi] ; ret 0x48c3
0x0000000000034bcd : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034c6b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000105419 : and al, 0xe8 ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000002b467 : and al, 0xe8 ; ret
0x0000000000045b68 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000180c1d : and al, 0xef ; jmp qword ptr [rdx]
0x000000000006dab9 : and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000034deb : and al, 0xf0 ; and eax, 0x8000 ; ret
0x0000000000034c67 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034c47 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034d21 : and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000aa916 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000aa91c : and al, 0xf0 ; ret
0x000000000015eb79 : and al, 0xf2 ; jmp qword ptr [rax - 0x1f000ddb]
0x00000000000defd9 : and al, 0xf6 ; ret
0x000000000008a916 : and al, 0xf8 ; jne 0x8a7f2 ; ret
0x0000000000045b21 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000045b27 : and al, 0xf8 ; ret
0x000000000016ce39 : and al, 0xfb ; call qword ptr [rax]
0x0000000000045adb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000045ae1 : and al, 0xfc ; ret
0x0000000000034e17 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000034e1b : and al, 0xfe ; ret
0x00000000000e6d0d : and al, 0xff ; jmp 0xe6cd7
0x00000000000e6d0c : and al, 0xff ; jmp 0xe6cd8
0x00000000001874e5 : and al, 1 ; add byte ptr [rax - 0x61], bh ; call qword ptr [rax]
0x00000000001874fd : and al, 1 ; add byte ptr [rax - 0x61], dh ; call qword ptr [rax]
0x00000000000da756 : and al, 4 ; jmp 0xda71f
0x0000000000097918 : and al, 7 ; add byte ptr [rax], al ; ret
0x000000000010a465 : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000042343 : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000a9136 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000021d76 : and al, 8 ; add rsp, 0x18 ; jmp rax
0x000000000002ec1f : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000e1268 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000007887b : and al, 8 ; and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x00000000000788a5 : and al, 8 ; call qword ptr [rax]
0x000000000007fa22 : and al, 8 ; call qword ptr [rdx]
0x0000000000027e64 : and al, 8 ; call r12
0x0000000000025242 : and al, 8 ; call r14
0x0000000000025a10 : and al, 8 ; call r15
0x00000000000f06ee : and al, 8 ; call rax
0x0000000000025158 : and al, 8 ; call rbx
0x000000000010b390 : and al, 8 ; call rcx
0x0000000000034c9a : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000053a87 : and al, 8 ; jmp 0x53a50
0x0000000000107fb3 : and al, 8 ; jne 0x107fa8 ; add rsp, 0x18 ; ret
0x000000000006a118 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000027124 : and al, 8 ; mov rdi, qword ptr [rsp + 0x48] ; call rax
0x0000000000113062 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000036600 : and al, 8 ; mov rsi, rbp ; call r12
0x00000000000c6635 : and al, 8 ; pop rbx ; mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x0000000000034b6b : and al, 8 ; ret
0x0000000000116b6e : and al, 8 ; xor eax, eax ; call rdx
0x000000000019ea00 : and al, byte ptr [rax + rax] ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000177315 : and al, byte ptr [rax] ; add al, bl ; mov bh, 0xeb ; call qword ptr [rcx]
0x0000000000034dc8 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000347c0 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000005f4c : and al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000b0c4 : and al, byte ptr [rax] ; or al, 0 ; ret
0x000000000000969c : and al, byte ptr [rax] ; or al, 0 ; ret 0xd
0x0000000000187355 : and al, byte ptr [rcx] ; add al, bh ; jmp qword ptr [ecx]
0x000000000007ff5a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000050b5c : and al, ch ; mov esi, 0xeb0001d6 ; ret 0x2dbe
0x0000000000021af7 : and al, ch ; ret
0x000000000002e4c2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e4e2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e422 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002e4a2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e3c2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002e462 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e402 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002e442 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000016d2d0 : and bh, ah ; sti ; jmp rax
0x000000000004c2cf : and bh, al ; add dword ptr [rip - 0x7d000000], ebp ; ret 0x8b01
0x0000000000002f60 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000198b09 : and bh, dh ; jmp rdx
0x000000000015ecbc : and bl, al ; inc dword ptr [rax - 0x3d] ; jmp qword ptr [rax - 0x3d]
0x0000000000097ef7 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000000cfb2c : and bl, bh ; dec dword ptr [rax - 0x77] ; jmp 0x4ccf8486
0x000000000016ce25 : and bl, bh ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x0000000000174e01 : and bl, bh ; jmp rsp
0x0000000000191120 : and bl, bl ; cmc ; jmp qword ptr [rdi]
0x00000000000ba564 : and bl, ch ; ret
0x0000000000174e00 : and bl, r15b ; jmp rsp
0x00000000000ab68e : and byte ptr [r11 + 0x5d], r11b ; ret
0x000000000007ea4f : and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x00000000000792eb : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000007254a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000cf192 : and byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000009b176 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000075ea4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000007ea50 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000792ec : and byte ptr [rax + 0x39], cl ; ret
0x000000000007856d : and byte ptr [rax + 1], cl ; ret
0x0000000000091756 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000159c50 : and byte ptr [rax - 0x5ff70012], ah ; out dx, al ; call rax
0x00000000000792e8 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000007a093 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000007254b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000007ab7c : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000006a298 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000113175 : and byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; int1 ; ret 0xfff0
0x000000000007fd2b : and byte ptr [rax - 0x77], cl ; jae 0x7fd41 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e04f4 : and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x00000000000ef63f : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011b3f0 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000042ac1 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007a0c6 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002ce64 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2ce78 ; call rax
0x0000000000024106 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000001065fd : and byte ptr [rax - 0xd], dh ; ret
0x0000000000074232 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000cf193 : and byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000009bc3c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000bb651 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e6edf : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000016d5b0 : and byte ptr [rax], bh ; cld ; jmp rax
0x000000000016d4c4 : and byte ptr [rax], bl ; cld ; jmp qword ptr [rax]
0x000000000009902c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000009b177 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000016d4f4 : and byte ptr [rax], dl ; cld ; push rax ; adc esp, edi ; call rax
0x00000000000673d6 : and byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x1050
0x000000000015ec68 : and byte ptr [rbp - 0x582f000e], 0xf2 ; jmp qword ptr [rax]
0x0000000000032cd7 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006b48a : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ab68f : and byte ptr [rbx + 0x5d], bl ; ret
0x000000000017d82d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000018543d : and byte ptr [rbx + 0xac90204], al ; ret
0x000000000015fe60 : and byte ptr [rbx - 0x4537000b], bh ; cmc ; jmp qword ptr [rax]
0x000000000018545f : and byte ptr [rbx - 0x73fc79fc], al ; add ah, byte ptr [rbx + 0xa] ; ret
0x00000000000f535e : and byte ptr [rbx - 0xd], bl ; ret
0x000000000016d608 : and byte ptr [rbx - 4], al ; jmp qword ptr [rax]
0x000000000018c7d0 : and byte ptr [rbx], bl ; stc ; call qword ptr [rax]
0x0000000000075ea5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000009dc8d : and byte ptr [rcx + rcx*4 - 0x12], cl ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000045b65 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000381f8 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000cfddb : and byte ptr [rcx - 0x77], al ; ret 0x3145
0x0000000000193950 : and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000016d604 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax]
0x0000000000187125 : and byte ptr [rcx], al ; add byte ptr [rax + 0x47], cl ; jmp qword ptr [rcx]
0x00000000000dcb10 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000db2fc : and byte ptr [rcx], al ; fmul dword ptr [rax + 0x39] ; div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x00000000000ead9b : and byte ptr [rcx], bh ; ret
0x000000000006a225 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b5558 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000017aa00 : and byte ptr [rdi - 0x13], dl ; call rdi
0x000000000016ce48 : and byte ptr [rdi], 0xfb ; jmp qword ptr [rax - 0x1f0004e5]
0x000000000002e4a5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010c909 : and byte ptr [rdi], cl ; ret 0x8b48
0x00000000000e29a6 : and byte ptr [rdi], cl ; test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000b5a52 : and byte ptr [rdi], cl ; test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000e2945 : and byte ptr [rdi], cl ; test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000e2a06 : and byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000e28e5 : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], bl ; ret 0x3c01
0x0000000000097be9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000001058f9 : and byte ptr [rdi], cl ; test ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000149940 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000077ef5 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000009fd5e : and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000016ced8 : and byte ptr [rdx - 5], bl ; push rax ; pop rbx ; sti ; call rax
0x000000000016d4c8 : and byte ptr [rdx], bl ; cld ; jmp qword ptr [rax]
0x0000000000188fe0 : and byte ptr [rdx], cl ; jmp qword ptr [rcx]
0x000000000016d45c : and byte ptr [rip + 0x1700fffc], dl ; cld ; jmp rax
0x000000000016d6e0 : and byte ptr [rip + 0x26d0fffc], 0xfc ; jmp qword ptr [rax]
0x00000000001474da : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000017a9a5 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002bea : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000193c40 : and byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x00000000000e31d1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000016d4dc : and byte ptr [rsp + rdi*8], dl ; call qword ptr [rax]
0x000000000009cee2 : and ch, 0xf ; je 0x9cf09 ; add rax, 2 ; ret
0x0000000000180b45 : and ch, bh ; jmp qword ptr [rdx]
0x00000000000cc1ed : and ch, cl ; cmp esp, 0xff ; push rdi ; ret 0
0x000000000018c310 : and ch, dh ; hlt ; jmp qword ptr [rcx]
0x000000000009cecd : and cl, 0xf ; je 0x9cef5 ; ret
0x0000000000003906 : and cl, ah ; ret
0x000000000017dae4 : and cl, al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000178990 : and cl, bh ; jmp 0x178996
0x00000000000b52f3 : and cl, bpl ; ret 0xffed
0x000000000011cd34 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000109cec : and cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000008b300 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000850cd : and cl, byte ptr [rcx - 0x77] ; ret
0x000000000002d029 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000b52f4 : and cl, ch ; ret 0xffed
0x00000000000a06c8 : and cl, ch ; ret 0xfff6
0x000000000015ece5 : and dh, bl ; dec eax ; and dh, bl ; jmp rax
0x000000000015ece9 : and dh, bl ; jmp rax
0x000000000016e438 : and dh, byte ptr [rax - 0x505d0004] ; cld ; jmp qword ptr [rdx]
0x000000000016e420 : and dh, byte ptr [rbx - 0x4d5d0004] ; cld ; jmp qword ptr [rdx]
0x000000000016e430 : and dh, byte ptr [rcx - 0x4f5d0004] ; cld ; jmp qword ptr [rdx]
0x000000000016e428 : and dh, byte ptr [rdx - 0x4e5d0004] ; cld ; jmp qword ptr [rdx]
0x00000000000856eb : and dh, dh ; ret 0x7504
0x000000000016d388 : and dl, 0xfb ; call rax
0x000000000015eb6d : and dl, dh ; jmp rax
0x0000000000181cf4 : and dword ptr [rax - 0x11], ebx ; jmp qword ptr [rdx]
0x0000000000022682 : and dword ptr [rax - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x000000000002293a : and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000000e2761 : and dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x0000000000190a0c : and dword ptr [rax - 0xb], ecx ; jmp qword ptr [rdx]
0x00000000001771bd : and dword ptr [rax], eax ; add byte ptr [rax], ah ; lodsd eax, dword ptr [rsi] ; jmp 0x1771c9
0x000000000004bbbc : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000015d0a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000e3383 : and dword ptr [rbp + 0x2c], ecx ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000a759a : and dword ptr [rbx - 0x7cbefe18], eax ; ret
0x000000000006e82f : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000192194 : and dword ptr [rcx], edx ; sti ; jmp qword ptr [rdx]
0x0000000000035996 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x00000000001907c4 : and dword ptr [rdi - 0xb], eax ; jmp qword ptr [rdx]
0x0000000000073510 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000035b78 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000383ba : and dword ptr [rdi], esi ; add al, ch ; mov esi, 0x5b00065b ; ret
0x000000000015a159 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000097a1b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x000000000015d0a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000014c366 : and eax, 0 ; add bl, dh ; ret
0x000000000002211b : and eax, 0 ; ret
0x00000000000e0623 : and eax, 0x100f ; ret
0x0000000000072e12 : and eax, 0x200 ; ret
0x000000000016d6e1 : and eax, 0x26d0fffc ; cld ; jmp qword ptr [rax]
0x000000000015eb7d : and eax, 0x26e0fff2 ; jmp qword ptr [rax]
0x00000000000e8624 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000badd5 : and eax, 0x2d0 ; ret
0x0000000000083d67 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021b62 : and eax, 0x30 ; call rax
0x0000000000030418 : and eax, 0x30 ; call rdx
0x000000000002eabc : and eax, 0x30 ; jmp rax
0x0000000000041dc7 : and eax, 0x394d3674 ; ret 0x830f
0x000000000009bb8d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000009bbb0 : and eax, 0x3fc00 ; ret
0x000000000009bb6c : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000014c0d7 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x000000000008cb3e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000002e5b2 : and eax, 0x7f ; ret
0x000000000009bbf0 : and eax, 0x7ff80000 ; ret
0x00000000000347d4 : and eax, 0x80 ; ret
0x0000000000034ded : and eax, 0x8000 ; ret
0x0000000000034897 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000072de2 : and eax, 0x804 ; ret
0x00000000000f4c67 : and eax, 0xc ; cmp eax, 4 ; je 0xf4c78 ; ret
0x00000000000f4db6 : and eax, 0xc ; pop r12 ; ret
0x0000000000177605 : and eax, 0xcf880000 ; jmp 0x177611
0x000000000017766d : and eax, 0xd1700000 ; jmp 0x177679
0x00000000000d2d54 : and eax, 0xf ; ret
0x000000000014c7aa : and eax, 0xf31e7500 ; ret
0x000000000014c375 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000e8791 : and eax, 0xfffff000 ; or eax, edi ; ret
0x00000000000f8d68 : and eax, 0xffffff ; ret
0x0000000000103353 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000c36e8 : and eax, 1 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000eb8da : and eax, 1 ; nop dword ptr [rax] ; ret
0x00000000000c2214 : and eax, 1 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000c21d1 : and eax, 1 ; pop r15 ; ret
0x000000000002e562 : and eax, 1 ; ret
0x000000000002e3e2 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000c3601 : and eax, 2 ; pop rbp ; ret
0x00000000000c4cae : and eax, 2 ; pop rbx ; sub eax, 1 ; pop rbp ; ret
0x00000000000441dc : and eax, 2 ; sub eax, 1 ; ret
0x000000000002e482 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002e3a2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034aa4 : and eax, 8 ; ret
0x0000000000177495 : and eax, dword ptr [rax] ; add al, bh ; ret
0x000000000017d92d : and eax, dword ptr [rax] ; add al, dh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000177455 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x3d], cl ; jmp 0x177461
0x0000000000007c29 : and eax, dword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x0000000000007809 : and eax, dword ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000006c34f : and eax, dword ptr [rcx + rcx*4 - 0x40] ; pop rbx ; ret
0x0000000000187445 : and eax, dword ptr [rcx] ; add al, bl ; outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x0000000000141be9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000034442 : and eax, ecx ; ret
0x0000000000034512 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034af1 : and eax, edx ; ret
0x000000000016fe61 : and eax, esi ; jmp rsp
0x000000000002e77d : and eax, esi ; ret
0x00000000000cc263 : and ebp, ecx ; or eax, 0xf7fffffc ; ret 0
0x0000000000180b8d : and ebp, edi ; jmp qword ptr [rdx]
0x000000000006e830 : and ebp, edi ; pop rbx ; ret
0x00000000000f4c02 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xf4c15 ; ret
0x000000000016ce29 : and ebx, edi ; call rax
0x0000000000189601 : and ebx, esi ; jmp qword ptr [rdi]
0x00000000000e2eea : and ebx, esi ; ret
0x0000000000148a55 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000148188 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000071180 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000f13b4 : and ecx, dword ptr [rax - 0x77] ; ret 0x1f0f
0x000000000002b994 : and ecx, dword ptr [rcx - 0x7d] ; mov byte ptr [rcx], 0x83 ; ret
0x00000000000774bc : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000000efadf : and ecx, edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000002e5c2 : and edi, 0xffffff80 ; sete al ; ret
0x0000000000180a6d : and edi, ebp ; jmp qword ptr [rdx]
0x000000000016ce35 : and edi, ebx ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000007887e : and edi, edx ; neg rdi ; call qword ptr [rax]
0x0000000000038b37 : and edx, 0x3ff ; xor eax, edx ; ret
0x00000000000359d8 : and edx, 1 ; jne 0x359f0 ; xor eax, eax ; nop ; ret
0x0000000000091bf8 : and edx, 3 ; mov rax, rdi ; jne 0x91c16 ; ret
0x000000000009d988 : and edx, 3 ; mov rax, rdi ; jne 0x9d9a6 ; ret
0x0000000000160008 : and edx, eax ; cmc ; ljmp ptr [rbx] ; ret 0xfff5
0x000000000015eb71 : and edx, esi ; jmp qword ptr [rax]
0x0000000000002bd5 : and edx, esp ; bswap ebx ; clc ; ret
0x0000000000071283 : and esi, 1 ; mov eax, esi ; ret
0x0000000000189681 : and esi, ebx ; jmp rdx
0x00000000000b8b83 : and esp, ebx ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8948
0x000000000016d6d5 : and esp, edi ; jmp rax
0x0000000000022681 : and qword ptr [rax - 0x77], rcx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x0000000000022939 : and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x0000000000035995 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000035b77 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034511 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000007887d : and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x000000000003485b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034858 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000008c59a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000084f30 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000084f40 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000084f50 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000084f20 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000084e6f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008c793 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000085be5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000081c4d : bsf eax, edx ; ret
0x0000000000081dba : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000008c8b0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000081c9a : bsf rax, rdx ; ret
0x0000000000091821 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x0000000000083967 : bsr eax, eax ; add rax, rdi ; ret
0x00000000000916f0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000091700 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000091710 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000083beb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000083af9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000839f5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000083966 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000083bea : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000083af8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000839f4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000111e7d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f8d42 : bswap eax ; ret
0x0000000000002bd7 : bswap ebx ; clc ; ret
0x00000000000fcd9a : call 0x108748
0x00000000000fd1cb : call 0x109452
0x00000000001781d8 : call 0x11176dc8
0x00000000001803e8 : call 0x1117f32f
0x0000000000183b58 : call 0x11182b3a
0x0000000000193038 : call 0x11192681
0x00000000000ab190 : call 0x11e1a7
0x0000000000035970 : call 0x140ca183
0x000000000015f9e4 : call 0x1715eef3
0x000000000006312f : call 0x1f402
0x000000000007324e : call 0x1f472
0x000000000015ecb8 : call 0x2115df82
0x000000000015fe5c : call 0x2115f41e
0x0000000000199db8 : call 0x2119951f
0x00000000000f5bc9 : call 0x21dd2
0x000000000018b4c8 : call 0x2218a936
0x000000000018c6a8 : call 0x2218bbac
0x000000000018c948 : call 0x2218be58
0x000000000018d718 : call 0x2218cc63
0x000000000018dc48 : call 0x2218d1a3
0x000000000018e258 : call 0x2218d7c5
0x000000000018f378 : call 0x2218e91b
0x0000000000022565 : call 0x22d76
0x0000000000178484 : call 0x2317706f
0x0000000000178514 : call 0x231770ff
0x000000000017ace4 : call 0x23179a33
0x000000000019654c : call 0x23195b51
0x000000000008ab24 : call 0x247d367d
0x000000000005208a : call 0x2e2d2
0x00000000000a1841 : call 0x2e2d8
0x0000000000114f79 : call 0x2ec79
0x0000000000103152 : call 0x36308
0x0000000000044e39 : call 0x440c7
0x0000000000072404 : call 0x461c7
0x00000000000aa9ff : call 0x48ccd326
0x0000000000133eda : call 0x4f924ed8
0x0000000000133ed9 : call 0x4f924ed9
0x00000000001369aa : call 0x4f9279a8
0x00000000001369a9 : call 0x4f9279a9
0x00000000001394ca : call 0x4f92a4c8
0x00000000001394c9 : call 0x4f92a4c9
0x00000000000e41fb : call 0x50c66
0x00000000000e4af2 : call 0x50da2
0x00000000000adda3 : call 0x6a0a2
0x000000000007e074 : call 0x6a2e2
0x00000000000ee35d : call 0x6a5f2
0x000000000007f71a : call 0x6a9c8
0x00000000000364fb : call 0x727b2
0x0000000000046f37 : call 0x731c2
0x00000000000f8451 : call 0x76559
0x000000000007beab : call 0x780c2
0x0000000000023f0c : call 0x80202
0x00000000000f5912 : call 0x81c12
0x00000000000ab7bb : call 0x81c19
0x00000000000c91b0 : call 0x85624
0x000000000005e5cc : call 0x8a7e2
0x0000000000021743 : call 0x9baf6
0x0000000000036542 : call 0xba2b8
0x000000000010fffb : call 0xbada7
0x00000000000daed1 : call 0xbadf7
0x00000000000daefe : call 0xbae17
0x00000000000da1b6 : call 0xd6412
0x000000000010ff1a : call 0xdc1b2
0x00000000000db22c : call 0xe0c67
0x000000000011a572 : call 0xe4757
0x000000000005f50b : call 0xeb7d2
0x000000000001f8f2 : call 0xebb72
0x000000000001f902 : call 0xebc02
0x00000000000e8bdd : call 0xf0e8be6
0x00000000000e8bfd : call 0xf0e8c06
0x00000000000eb8d9 : call 0xf109969
0x00000000000ebb58 : call 0xf109be9
0x00000000000ebcb0 : call 0xf109d41
0x00000000000ebd40 : call 0xf109dd1
0x00000000000ebdd0 : call 0xf109e61
0x00000000000ebe50 : call 0xf109ee1
0x00000000000ebee0 : call 0xf109f71
0x00000000000ebf60 : call 0xf109ff1
0x00000000000ebff0 : call 0xf10a081
0x00000000000ec080 : call 0xf10a111
0x00000000000ec110 : call 0xf10a1a1
0x00000000000ec1a0 : call 0xf10a231
0x00000000000ec2c0 : call 0xf10a351
0x00000000000ec478 : call 0xf10a509
0x00000000000b8966 : call 0xf4b92
0x00000000000b8982 : call 0xf4bc2
0x000000000007755e : call 0xfc9aeae
0x000000000011333a : call 0xffffffff80d42a52
0x0000000000067095 : call 0xffffffff834e7917
0x0000000000053458 : call 0xffffffff85cc3464
0x00000000000aa9d9 : call 0xffffffff89ccd300
0x00000000000302c1 : call 0xffffffff8b4fc551
0x000000000015abc3 : call 0xffffffffaed84a39
0x000000000003e42e : call 0xffffffffc2052d38
0x0000000000040bfe : call 0xffffffffc2055508
0x00000000000aa4b8 : call 0xffffffffc233ee00
0x000000000003b879 : call 0xffffffffc23d0083
0x000000000010d73a : call 0xffffffffc2421f55
0x000000000007b199 : call 0xffffffffc290f9b2
0x000000000010dca6 : call 0xffffffffc29a24b7
0x000000000010dc8b : call 0xffffffffc29a259c
0x0000000000097854 : call 0xffffffffc3097864
0x000000000009b7c6 : call 0xffffffffc316451c
0x000000000009b7df : call 0xffffffffc3164535
0x00000000000216f5 : call 0xffffffffc32fa046
0x0000000000069737 : call 0xffffffffc362d89d
0x0000000000069ee3 : call 0xffffffffc362e049
0x000000000006b1a4 : call 0xffffffffc362f30a
0x000000000006baa7 : call 0xffffffffc362fc0d
0x000000000006cac3 : call 0xffffffffc3630c29
0x00000000000732e5 : call 0xffffffffc363744b
0x000000000009e10b : call 0xffffffffc3662271
0x00000000000f0253 : call 0xffffffffc36b43b9
0x00000000000fda92 : call 0xffffffffc36c1bf8
0x000000000010831a : call 0xffffffffc36dc424
0x00000000000a759c : call 0xffffffffc38db6a6
0x00000000001449a5 : call 0xffffffffc39a58be
0x0000000000145a25 : call 0xffffffffc39a693e
0x00000000000366e6 : call 0xffffffffc3b27637
0x0000000000085d27 : call 0xffffffffc3d8e678
0x000000000007ff67 : call 0xffffffffc40088b8
0x0000000000081767 : call 0xffffffffc400a0b8
0x0000000000175b48 : call 0xffffffffd1174642
0x0000000000196828 : call 0xffffffffd3195ee5
0x000000000007ab06 : call 0xffffffffe08af333
0x0000000000034b88 : call 0xffffffffe2850e18
0x000000000010d8e1 : call 0xffffffffe3941a04
0x000000000018ab08 : call 0xffffffffe8189edb
0x000000000015f9e0 : call 0xffffffffe915eef1
0x000000000015fe58 : call 0xffffffffe915f41e
0x000000000011d991 : call 0xffffffffff11d99a
0x000000000011d9c2 : call 0xffffffffff11d9cb
0x000000000005191b : call qword ptr [r11 + rax*8]
0x000000000010addb : call qword ptr [r11]
0x000000000001fe70 : call qword ptr [r14]
0x000000000016db53 : call qword ptr [rax + 0x10fffc68]
0x000000000016d2cb : call qword ptr [rax + 0x20fffbf4]
0x000000000016d5ab : call qword ptr [rax + 0x20fffc45]
0x000000000016d773 : call qword ptr [rax + 0x20fffc6e]
0x000000000016de77 : call qword ptr [rax + 0x20fffc93]
0x000000000016dc5f : call qword ptr [rax + 0x20fffc96]
0x000000000016e36f : call qword ptr [rax + 0x20fffcba]
0x000000000016e157 : call qword ptr [rax + 0x20fffcbd]
0x0000000000022f6e : call qword ptr [rax + 0x48e9c289]
0x00000000000effbe : call qword ptr [rax - 0x153e3d77]
0x00000000000f7149 : call qword ptr [rax - 0x18]
0x000000000016d727 : call qword ptr [rax - 0x1f0003d8]
0x000000000016d6d3 : call qword ptr [rax - 0x1f0003df]
0x000000000016d547 : call qword ptr [rax - 0x1f0003f6]
0x000000000016d55b : call qword ptr [rax - 0x1f000404]
0x000000000016d37b : call qword ptr [rax - 0x1f000422]
0x000000000016cf1b : call qword ptr [rax - 0x1f000484]
0x000000000015ec5b : call qword ptr [rax - 0x1f000d62]
0x000000000015ee2f : call qword ptr [rax - 0x2f000210]
0x000000000015ee1f : call qword ptr [rax - 0x2f000219]
0x000000000015ee0f : call qword ptr [rax - 0x2f000222]
0x000000000015edff : call qword ptr [rax - 0x2f00022b]
0x00000000000345be : call qword ptr [rax - 0x3d]
0x000000000015ee97 : call qword ptr [rax - 0x4f000c7e]
0x000000000015ec27 : call qword ptr [rax]
0x0000000000170643 : call qword ptr [rbp + rax*2 - 0x35dbffff]
0x000000000016ffd3 : call qword ptr [rbp + rcx + 0x37640001]
0x000000000016007f : call qword ptr [rbp - 0x3d]
0x000000000005191c : call qword ptr [rbx + rax*8]
0x000000000014c140 : call qword ptr [rbx]
0x000000000002cd91 : call qword ptr [rcx]
0x000000000015e1b3 : call qword ptr [rdi + rbp + 0x2f94fff0]
0x000000000015daa7 : call qword ptr [rdi]
0x000000000016df13 : call qword ptr [rdx + 0x12fffc8e]
0x000000000016d81f : call qword ptr [rdx + 0x22fffc70]
0x000000000016e243 : call qword ptr [rdx + 0x22fffcb8]
0x000000000004721e : call qword ptr [rdx + rax*8 - 0x40]
0x000000000007fa24 : call qword ptr [rdx]
0x000000000016d7bb : call qword ptr [rsi + 0x26fffc6d]
0x000000000016dca7 : call qword ptr [rsi + 0x26fffc95]
0x000000000016e19f : call qword ptr [rsi + 0x26fffcbc]
0x000000000016fdeb : call qword ptr [rsi + rdi*8 + 0x9140000]
0x000000000001fe71 : call qword ptr [rsi]
0x0000000000108723 : call r10
0x0000000000027e66 : call r12
0x0000000000025244 : call r14
0x000000000002329f : call r15
0x00000000000f4462 : call r8
0x000000000016cf2b : call rax
0x000000000002e0f8 : call rbx
0x0000000000022d16 : call rcx
0x00000000000232a0 : call rdi
0x000000000003041d : call rdx
0x0000000000025245 : call rsi
0x0000000000027e67 : call rsp
0x000000000007cf9e : cdq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017e99d : cdq ; add byte ptr [rax], al ; mov al, 0x1e ; out dx, eax ; jmp rbx
0x000000000017ea0d : cdq ; add byte ptr [rax], al ; xor byte ptr [rdi], bl ; out dx, eax ; call rcx
0x00000000001051fb : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ceeea : cdq ; add r11, r9 ; jmp r11
0x000000000015ed79 : cdq ; cld ; call qword ptr [rax]
0x000000000018f109 : cdq ; cmc ; jmp qword ptr [rcx]
0x0000000000021d53 : cdq ; cmp byte ptr [r8], al ; test rax, rax ; je 0x21d67 ; jmp rax
0x0000000000038204 : cdq ; idiv rsi ; ret
0x000000000016f059 : cdq ; in al, dx ; call rsp
0x000000000015c900 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000011bf7f : cdq ; jrcxz 0x11bfb3 ; add byte ptr [rax - 0x9ffffff], al ; ret
0x000000000003a2fd : cdq ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000178a8c : cdq ; out -0x15, eax ; jmp qword ptr [rdx]
0x0000000000044412 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000181e5c : cdq ; pop rbp ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000160038 : cdq ; ret 0xfff5
0x000000000006c763 : cdq ; sbb eax, 0xc2890000 ; jmp 0x6c72f
0x000000000018e8e4 : cdqe ; add dword ptr [rax], eax ; js 0x18e96b ; cmc ; jmp rax
0x00000000000e050b : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000748a8 : cdqe ; ret
0x000000000010401d : cdqe ; shr rax, 4 ; ret
0x000000000009f54f : clc ; adc esi, dword ptr [rbp + rcx - 0x77] ; ret 0xc9eb
0x00000000000ca3a5 : clc ; add al, 0xf ; xchg dword ptr [rbx - 0x76fffff7], esp ; ret 0x8d48
0x00000000000cd039 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000a9751 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xc0e9
0x00000000000a95a5 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000007a561 : clc ; add al, byte ptr [rdi + rcx + 0x46] ; ret 0x1ae9
0x000000000004c9c6 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000006dc69 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000045e83 : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x000000000003d341 : clc ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x00000000001861f8 : clc ; add dh, dl ; jmp rax
0x0000000000194d7d : clc ; add dword ptr [rax], eax ; ret
0x000000000008ce4b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103355 : clc ; add eax, 0x10 ; ret
0x00000000000b4a7b : clc ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7af09807], al ; ret 3
0x000000000007fb24 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x0000000000032ab4 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x000000000019d688 : clc ; add edi, eax ; call qword ptr [rax]
0x000000000010bb91 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x00000000000c37be : clc ; add esi, dword ptr [rsi + rax - 0xd] ; ret
0x0000000000091826 : clc ; add rax, r8 ; ret
0x0000000000084cf8 : clc ; add rax, rcx ; ret
0x00000000000f5e50 : clc ; add rsp, 8 ; ret
0x0000000000198b08 : clc ; and bh, dh ; jmp rdx
0x0000000000077ef4 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000002e5b1 : clc ; and eax, 0x7f ; ret
0x00000000000f8d67 : clc ; and eax, 0xffffff ; ret
0x00000000000f8d41 : clc ; bswap eax ; ret
0x0000000000197dda : clc ; call qword ptr [rax]
0x000000000019d81a : clc ; call qword ptr [rcx]
0x000000000019d61a : clc ; call qword ptr [rdi]
0x000000000019d5b2 : clc ; call rdx
0x0000000000172ef2 : clc ; call rsp
0x00000000001031a1 : clc ; cmc ; je 0x10319d ; pop rbx ; ret
0x0000000000045e2a : clc ; cmovae rax, rsi ; ret
0x000000000007cc5e : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x000000000008d326 : clc ; cmp eax, 0x89480f75 ; clc ; ret
0x0000000000003a9e : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000c42b3 : clc ; cmp esi, dword ptr [rdi + 4] ; jl 0xc42af ; ret
0x00000000001489f9 : clc ; cmp rcx, rax ; jne 0x148a2b ; xor eax, eax ; ret
0x00000000001489f8 : clc ; cmp rcx, rax ; jne 0x148a2c ; xor eax, eax ; ret
0x0000000000149839 : clc ; cmp rcx, rax ; jne 0x14986b ; xor eax, eax ; ret
0x0000000000149838 : clc ; cmp rcx, rax ; jne 0x14986c ; xor eax, eax ; ret
0x0000000000038202 : clc ; cqo ; idiv rsi ; ret
0x000000000007ff94 : clc ; cwde ; or al, 0 ; ret
0x0000000000172eea : clc ; dec dword ptr [rax + rbp + 0x3460002] ; clc ; call rsp
0x0000000000107ee1 : clc ; dec dword ptr [rax - 0x75] ; jl 0x107f13 ; sbb al, ch ; ret
0x000000000002e226 : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007ac2a : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000006aaaf : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000017354a : clc ; dec dword ptr [rcx + rdx*2 - 0x6501fffe] ; clc ; call rsp
0x000000000004af86 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ae69 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000001733ba : clc ; dec dword ptr [rdi + rax*2 - 0x7634fffe] ; clc ; call rsp
0x0000000000042016 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x00000000000718bb : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001732e2 : clc ; dec esp ; add al, byte ptr [rax] ; jnp 0x1732ec ; jmp rsp
0x00000000001730c2 : clc ; dec esp ; add al, byte ptr ss:[rax] ; test byte ptr [rdi - 8], bl ; jmp rsp
0x0000000000173192 : clc ; dec esp ; cmp dword ptr [rdx], eax ; add byte ptr [rsp - 8], ah ; jmp rsp
0x000000000017361a : clc ; dec esp ; push rbp ; add al, byte ptr [rax] ; add al, 0xa4 ; clc ; jmp rsp
0x00000000001734d2 : clc ; inc dword ptr [rbp + rcx*2 - 0x6b7bfffe] ; clc ; jmp rsp
0x0000000000173a22 : clc ; inc dword ptr [rbp + rsi*2 - 0x2fbfffe] ; clc ; call rsp
0x0000000000119918 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000001788f1 : clc ; jmp 0x1788f5
0x0000000000178909 : clc ; jmp 0x17890d
0x0000000000187358 : clc ; jmp qword ptr [ecx]
0x000000000019d782 : clc ; jmp qword ptr [rcx]
0x0000000000191eaa : clc ; jmp qword ptr [rsi]
0x0000000000173002 : clc ; jmp rsp
0x000000000014b81a : clc ; jne 0x14b927 ; ret
0x000000000014b819 : clc ; jne 0x14b928 ; ret
0x0000000000030d6b : clc ; jne 0x30de8 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000041b91 : clc ; jne 0x41b6c ; ret
0x000000000008a917 : clc ; jne 0x8a7f1 ; ret
0x0000000000091bfd : clc ; jne 0x91c11 ; ret
0x000000000009d98d : clc ; jne 0x9d9a1 ; ret
0x00000000001736ba : clc ; lcall ptr [rcx + rbx*2 - 0x4e86fffe] ; clc ; jmp rsp
0x000000000017ae98 : clc ; mov bh, 0xed ; call qword ptr [rax]
0x00000000000e31eb : clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000035cbe : clc ; mov byte ptr [rbp - 0x12], dh ; mov eax, 1 ; ret
0x0000000000091068 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000015b562 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018ed78 : clc ; mov ch, dh ; jmp qword ptr [rcx]
0x000000000012b9f7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012c367 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133c67 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c567 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133bd7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c767 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133b47 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012ba13 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000045b22 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000009d6fc : clc ; nop dword ptr [rax] ; ret
0x00000000000ebc41 : clc ; nop word ptr [rax + rax] ; ret
0x00000000000add9c : clc ; or r8, qword ptr [r8] ; mov rdi, r13 ; call 0x6a0a9
0x000000000017f8e5 : clc ; out dx, al ; jmp qword ptr [rdx]
0x000000000002ef4d : clc ; pop r13 ; ret
0x00000000000effe7 : clc ; pop r15 ; ret
0x000000000002ef37 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f6082 : clc ; pop rbx ; ret
0x00000000001829f8 : clc ; pop rsi ; out dx, eax ; call rax
0x00000000000b64ad : clc ; push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x00000000000700ea : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000011cd8f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000044235 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000076730 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x000000000006e82b : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000002bad : clc ; ret
0x000000000016c572 : clc ; ret 0x6e1f
0x000000000017b5a8 : clc ; ret 0xffee
0x00000000001835a8 : clc ; ret 0xffef
0x00000000000adda4 : clc ; ret 0xfffb
0x00000000000f8d51 : clc ; ror ax, 8 ; ret
0x000000000000389c : clc ; salc ; jb 0x3920 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000381a3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f8a0b : clc ; sar rax, 6 ; ret
0x00000000000c7d14 : clc ; sbb byte ptr [rcx - 0x3f], al ; cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x000000000004479a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000f8de7 : clc ; shr eax, 0x18 ; ret
0x00000000000daa4b : clc ; std ; dec ecx ; ret
0x00000000000ffbae : clc ; std ; jbe 0xffbbd ; pop rbx ; ret
0x0000000000191db8 : clc ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000012427b : clc ; sub rax, rsi ; ret
0x000000000002c023 : clc ; test rcx, rcx ; je 0x2c031 ; call rcx
0x000000000003a174 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000003a2a3 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000179e94 : cld ; add byte ptr [r8], r8b ; js 0x179e3d ; in al, dx ; jmp qword ptr [rsi]
0x00000000000bb5a2 : cld ; add byte ptr [rax], al ; ret
0x00000000000650e2 : cld ; add cl, byte ptr [rdi] ; test dword ptr [rax], esp ; ret
0x0000000000189494 : cld ; add dword ptr [r8], eax ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000019377c : cld ; add dword ptr [rcx], 0xf646e000 ; call qword ptr [rcx]
0x000000000009bb8f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009bbb2 : cld ; add eax, dword ptr [rax] ; ret
0x0000000000177494 : cld ; and eax, dword ptr [rax] ; add al, bh ; ret
0x000000000016db52 : cld ; call qword ptr [rax + 0x10fffc68]
0x000000000016d5aa : cld ; call qword ptr [rax + 0x20fffc45]
0x000000000016d772 : cld ; call qword ptr [rax + 0x20fffc6e]
0x000000000016de76 : cld ; call qword ptr [rax + 0x20fffc93]
0x000000000016dc5e : cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016e36e : cld ; call qword ptr [rax + 0x20fffcba]
0x000000000016e156 : cld ; call qword ptr [rax + 0x20fffcbd]
0x000000000016d726 : cld ; call qword ptr [rax - 0x1f0003d8]
0x000000000016d6d2 : cld ; call qword ptr [rax - 0x1f0003df]
0x000000000016d546 : cld ; call qword ptr [rax - 0x1f0003f6]
0x000000000016d4de : cld ; call qword ptr [rax]
0x000000000016df12 : cld ; call qword ptr [rdx + 0x12fffc8e]
0x000000000016d81e : cld ; call qword ptr [rdx + 0x22fffc70]
0x000000000016e242 : cld ; call qword ptr [rdx + 0x22fffcb8]
0x000000000016d83e : cld ; call qword ptr [rdx]
0x000000000016d7ba : cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000016dca6 : cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016e19e : cld ; call qword ptr [rsi + 0x26fffcbc]
0x000000000016d79a : cld ; call qword ptr [rsi]
0x000000000016d736 : cld ; call rax
0x000000000016d82e : cld ; call rdx
0x000000000016d7ca : cld ; call rsi
0x000000000016d8f6 : cld ; call rsp
0x000000000019056c : cld ; cmc ; jmp qword ptr [rdx]
0x000000000014b912 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14b928 ; xor eax, eax ; ret
0x000000000014b911 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x14b929 ; xor eax, eax ; ret
0x00000000000c4d18 : cld ; cmp ebp, esi ; jge 0xc4cfd ; mov rdx, r8 ; jmp 0xc4d35
0x00000000000c4d17 : cld ; cmp ebp, esi ; jge 0xc4cfe ; mov rdx, r8 ; jmp 0xc4d36
0x00000000000acc32 : cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000011a575 : cld ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000bcac6 : cld ; dec dword ptr [rax - 0x77] ; ret
0x000000000011a0d0 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d80a : cld ; dec esp ; imul edi, esp, -1 ; jb 0x16d886 ; cld ; jmp rdx
0x0000000000034c97 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000f64e5 : cld ; hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018c601 : cld ; hlt ; jmp qword ptr [rcx]
0x000000000014cea5 : cld ; in eax, dx ; call qword ptr [rax]
0x000000000014cea1 : cld ; in eax, dx ; inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x000000000014cea9 : cld ; in eax, dx ; jmp rax
0x000000000016d3ea : cld ; inc dword ptr [rax + 0x10fffc1d] ; adc ah, bh ; call rax
0x000000000016d4d6 : cld ; inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016d456 : cld ; inc dword ptr [rax + 0x13] ; cld ; jmp qword ptr [rax]
0x000000000016d426 : cld ; inc dword ptr [rax + 0x1b] ; cld ; inc dword ptr [rax + 0x1d] ; cld ; call rax
0x000000000016d42a : cld ; inc dword ptr [rax + 0x1d] ; cld ; call rax
0x000000000016e38a : cld ; inc dword ptr [rax + 0x20fffcb7] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000016d722 : cld ; inc dword ptr [rax + 0x27] ; cld ; call qword ptr [rax - 0x1f0003d8]
0x000000000016d64e : cld ; inc dword ptr [rax + 0x37] ; cld ; inc dword ptr [rax] ; cmp esp, edi ; jmp rax
0x000000000016d632 : cld ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016d5fe : cld ; inc dword ptr [rax + 0x3f] ; cld ; jmp qword ptr [rax]
0x000000000016d62e : cld ; inc dword ptr [rax + 0x40fffc37] ; cmp esp, edi ; jmp qword ptr [rax]
0x000000000016dc4a : cld ; inc dword ptr [rax + 0x5efffc5a] ; xchg eax, ecx ; cld ; jmp rax
0x000000000016dbca : cld ; inc dword ptr [rax + 0x61] ; cld ; jmp rax
0x000000000016d77e : cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x000000000016d956 : cld ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x000000000016d542 : cld ; inc dword ptr [rax + 9] ; cld ; call qword ptr [rax - 0x1f0003f6]
0x000000000016d6de : cld ; inc dword ptr [rax - 0x2f0003db] ; cld ; jmp qword ptr [rax]
0x000000000016e162 : cld ; inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000016e37a : cld ; inc dword ptr [rax - 0x47] ; cld ; call rax
0x000000000016e58a : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000016dc6a : cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000016de82 : cld ; inc dword ptr [rax - 0x6e] ; cld ; call rax
0x000000000016d6b6 : cld ; inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000016d652 : cld ; inc dword ptr [rax] ; cmp esp, edi ; jmp rax
0x000000000015ed86 : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x60] ; cld ; jmp rax
0x000000000016e36a : cld ; inc dword ptr [rax] ; mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000016e152 : cld ; inc dword ptr [rax] ; mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000016db7e : cld ; inc dword ptr [rax] ; movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000016d76e : cld ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x000000000016dc5a : cld ; inc dword ptr [rax] ; xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016de72 : cld ; inc dword ptr [rax] ; xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000016e2d6 : cld ; inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x000000000009bc69 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009bb6e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000016e4fe : cld ; inc dword ptr [rdi + rbp*4] ; cld ; push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x000000000016d82a : cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x000000000016dd16 : cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016d81a : cld ; inc dword ptr [rdx] ; jno 0x16d824 ; call qword ptr [rdx + 0x22fffc70]
0x000000000016e23e : cld ; inc dword ptr [rdx] ; mov ecx, 0xb892fffc ; cld ; jmp qword ptr [rdx]
0x000000000016df3e : cld ; inc dword ptr [rdx] ; mov esp, edi ; push qword ptr [rdx - 0x78] ; cld ; jmp rdx
0x000000000016d7c6 : cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x000000000016d8f2 : cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x000000000016ddde : cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016e1aa : cld ; inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x000000000016dcb2 : cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016e19a : cld ; inc dword ptr [rsi] ; mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000016d7b6 : cld ; inc dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000016dca2 : cld ; inc dword ptr [rsi] ; xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016e182 : cld ; inc eax ; mov eax, 0xb850fffc ; cld ; jmp rax
0x000000000016e35a : cld ; inc eax ; mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000016d6ee : cld ; inc eax ; sub bh, ah ; call qword ptr [rax]
0x000000000016d742 : cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000016e22e : cld ; inc edx ; mov edx, 0xba52fffc ; cld ; jmp rdx
0x000000000016e2f6 : cld ; inc esp ; mov ecx, 0xb954fffc ; cld ; jmp rsp
0x0000000000186f5d : cld ; int1 ; jmp qword ptr [rdx]
0x000000000016e874 : cld ; jb 0x16e87e ; add ah, al ; jmp 0x16e882
0x000000000018c594 : cld ; je 0x18c59f ; add al, bl ; cli ; hlt ; jmp qword ptr [rcx]
0x000000000016e0c6 : cld ; jmp qword ptr [rax + 0x10fffc87]
0x000000000016dec2 : cld ; jmp qword ptr [rax + 0x10fffc88]
0x000000000015ed9e : cld ; jmp qword ptr [rax + 0x10fffca7]
0x000000000016e3ca : cld ; jmp qword ptr [rax + 0x16fffcad]
0x000000000015ed7e : cld ; jmp qword ptr [rax]
0x0000000000186afa : cld ; jmp qword ptr [rbx]
0x000000000016da42 : cld ; jmp qword ptr [rdx + 0x12fffc62]
0x000000000016e43a : cld ; jmp qword ptr [rdx + 0x22fffcaf]
0x000000000016e432 : cld ; jmp qword ptr [rdx + 0x22fffcb0]
0x000000000016e42a : cld ; jmp qword ptr [rdx + 0x22fffcb1]
0x000000000016e422 : cld ; jmp qword ptr [rdx + 0x22fffcb2]
0x000000000016e41a : cld ; jmp qword ptr [rdx + 0x22fffcb3]
0x000000000016d822 : cld ; jmp qword ptr [rdx]
0x000000000016d7be : cld ; jmp qword ptr [rsi]
0x000000000015ed8e : cld ; jmp rax
0x000000000016d812 : cld ; jmp rdx
0x000000000016d7ae : cld ; jmp rsi
0x000000000016d8da : cld ; jmp rsp
0x0000000000149646 : cld ; jne 0x14987f ; xor eax, eax ; ret
0x000000000014b915 : cld ; jne 0x14b925 ; xor eax, eax ; ret
0x000000000014b914 : cld ; jne 0x14b926 ; xor eax, eax ; ret
0x000000000014b835 : cld ; jne 0x14b927 ; ret
0x000000000014b834 : cld ; jne 0x14b928 ; ret
0x00000000000c5257 : cld ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000016dc4e : cld ; lcall ptr [rsi - 0x6f] ; cld ; jmp rax
0x000000000016d58e : cld ; ljmp ptr [rax] ; cmp ah, bh ; push rax ; cmp esp, edi ; call rax
0x000000000016de4a : cld ; ljmp ptr [rdx - 0x6f] ; cld ; call qword ptr [rax]
0x000000000017bb44 : cld ; mov bh, 0xee ; jmp qword ptr [rdx]
0x000000000012c182 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c385 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c585 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c785 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000191094 : cld ; mov edi, 0xd8080001 ; cmc ; call rsp
0x000000000012bdb6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133df6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bf96 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133d76 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c176 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133cf6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bbd6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133e76 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000090f49 : cld ; mov rax, rdi ; ret
0x0000000000045adc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000017ae94 : cld ; pop rbp ; add byte ptr [rax], al ; clc ; mov bh, 0xed ; call qword ptr [rax]
0x000000000016d4d2 : cld ; push qword ptr [rax + 0x10] ; cld ; inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016d6ea : cld ; push qword ptr [rax + 0x29] ; cld ; inc eax ; sub bh, ah ; call qword ptr [rax]
0x000000000016d73e : cld ; push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000016d77a : cld ; push qword ptr [rax + 0x40fffc6d] ; insd dword ptr [rdi], dx ; cld ; call rax
0x000000000016d952 : cld ; push qword ptr [rax + 0x40fffc71] ; jno 0x16d960 ; call rax
0x000000000016de7e : cld ; push qword ptr [rax + 0x40fffc92] ; xchg eax, edx ; cld ; call rax
0x000000000016dc66 : cld ; push qword ptr [rax + 0x40fffc95] ; xchg eax, ebp ; cld ; call rax
0x000000000016e08e : cld ; push qword ptr [rax + 0x50fffc86] ; mov dr1, esp ; call rax
0x000000000016db82 : cld ; push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000016d996 : cld ; push qword ptr [rax + 0x68] ; cld ; jmp rax
0x000000000016d4ee : cld ; push qword ptr [rax + 0xe] ; cld ; jmp qword ptr [rax]
0x000000000016d46e : cld ; push qword ptr [rax + 0xf] ; cld ; push qword ptr [rax] ; adc esp, edi ; call qword ptr [rax]
0x000000000015ed8a : cld ; push qword ptr [rax - 0x60] ; cld ; jmp rax
0x000000000015ed76 : cld ; push qword ptr [rax - 0x67] ; cld ; call qword ptr [rax]
0x000000000016d472 : cld ; push qword ptr [rax] ; adc esp, edi ; call qword ptr [rax]
0x000000000016d6b2 : cld ; push qword ptr [rax] ; cmp ah, bh ; inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000016d69a : cld ; push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax]
0x000000000015ed9a : cld ; push qword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x10fffca7]
0x000000000016e0c2 : cld ; push qword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax + 0x10fffc87]
0x000000000016debe : cld ; push qword ptr [rax] ; mov esp, edi ; jmp qword ptr [rax + 0x10fffc88]
0x000000000016e3c6 : cld ; push qword ptr [rax] ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x16fffcad]
0x000000000016e2d2 : cld ; push qword ptr [rbp + rdi*4 - 0x42bb0004] ; cld ; call rsp
0x00000000000c56c0 : cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016d826 : cld ; push qword ptr [rdx + 0x42fffc6f] ; outsd dx, dword ptr [rsi] ; cld ; call rdx
0x000000000016dd12 : cld ; push qword ptr [rdx + 0x42fffc97] ; xchg eax, edi ; cld ; call rdx
0x000000000016d80e : cld ; push qword ptr [rdx + 0x6b] ; cld ; jmp rdx
0x000000000016df42 : cld ; push qword ptr [rdx - 0x78] ; cld ; jmp rdx
0x000000000016e416 : cld ; push qword ptr [rdx] ; mov ah, 0xfc ; jmp qword ptr [rdx + 0x22fffcb3]
0x000000000016da3e : cld ; push qword ptr [rdx] ; movsxd rdi, esp ; jmp qword ptr [rdx + 0x12fffc62]
0x000000000016d7c2 : cld ; push qword ptr [rsi + 0x46fffc6c] ; insb byte ptr [rdi], dx ; cld ; call rsi
0x000000000016dcae : cld ; push qword ptr [rsi + 0x46fffc94] ; xchg eax, esp ; cld ; call rsi
0x000000000016d8ee : cld ; push qword ptr [rsi + rbp*2 + 0x6e44fffc] ; cld ; call rsp
0x000000000016e502 : cld ; push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x000000000016ddda : cld ; push qword ptr [rsi + rdx*4 - 0x69bb0004] ; cld ; call rsp
0x000000000016e18e : cld ; push qword ptr [rsi - 0x49] ; cld ; jmp rsi
0x000000000016d492 : cld ; push rax ; adc ah, bh ; call rax
0x000000000016d47a : cld ; push rax ; adc al, 0xfc ; call rax
0x000000000016d4f6 : cld ; push rax ; adc esp, edi ; call rax
0x000000000016d592 : cld ; push rax ; cmp esp, edi ; call rax
0x000000000015ed46 : cld ; push rax ; mov edi, esp ; call qword ptr [rax]
0x000000000016e16e : cld ; push rax ; mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000016d992 : cld ; push rax ; push 0x6870fffc ; cld ; jmp rax
0x000000000015ed66 : cld ; push rax ; xchg eax, esp ; cld ; call qword ptr [rax]
0x000000000016e21a : cld ; push rdx ; mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x000000000016e1b6 : cld ; push rsi ; mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x0000000000045ae2 : cld ; ret
0x000000000016d55d : cld ; sti ; jmp rax
0x000000000015aa16 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000aa30e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xaa311 ; ret
0x000000000019cc14 : cld ; xor bh, dh ; jmp qword ptr [rdx]
0x0000000000038905 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000ab35c : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000ab2e1 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000fd4ac : cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000011c342 : cli ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000016fd2d : cli ; add byte ptr [rax], al ; in al, -6 ; out dx, eax ; jmp rsp
0x00000000000bada9 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000000ab5ea : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000003a35f : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000003a338 : cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x00000000000221b7 : cli ; add dword ptr [rsi - 0x13], edi ; mov byte ptr [rdi], 0 ; ret
0x00000000000aa9c8 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003749 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3731 ; ret 0x975
0x00000000000e31d0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x0000000000184272 : cli ; call qword ptr [rax]
0x000000000007eda6 : cli ; call rax
0x0000000000162c0e : cli ; call rsp
0x00000000000dd93b : cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b9a51 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000007433f : cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000072169 : cli ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000d222d : cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000d8f1a : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x83 ; ret
0x0000000000174c12 : cli ; dec esp ; in eax, dx ; add al, byte ptr [rax] ; test ch, ah ; cli ; jmp rsp
0x0000000000174462 : cli ; dec esp ; mov esi, 0x36f40002 ; cli ; jmp rsp
0x00000000001746a2 : cli ; dec esp ; retf ; add al, byte ptr [rax] ; cli ; jmp rsp
0x000000000018c599 : cli ; hlt ; jmp qword ptr [rcx]
0x000000000017a4fd : cli ; in al, dx ; jmp qword ptr [rdx]
0x000000000017461a : cli ; inc esp ; enter 2, -0x6c ; pop rbp ; cli ; jmp rsp
0x00000000001748ea : cli ; inc esp ; fadd dword ptr [rdx] ; add byte ptr [rsi + rax*4 - 6], al ; jmp rsp
0x0000000000174782 : cli ; inc esp ; rol dword ptr [rdx], 1 ; add byte ptr [rax + rdi*2], dl ; cli ; jmp rsp
0x0000000000103381 : cli ; je 0x10336e ; mov eax, 0xffffffff ; ret
0x0000000000035e36 : cli ; je 0x35e47 ; add rsp, 0x10 ; ret
0x0000000000035f38 : cli ; je 0x35f47 ; add rsp, 0x10 ; ret
0x0000000000178cc9 : cli ; jmp 0x178ccd
0x0000000000178cc8 : cli ; jmp 0x178cce
0x0000000000174522 : cli ; jmp qword ptr [rbx + rax*8]
0x000000000017990a : cli ; jmp qword ptr [rcx]
0x0000000000033207 : cli ; jmp rdx
0x000000000017446a : cli ; jmp rsp
0x00000000000bc497 : cli ; jnp 0xbc4ad ; xchg eax, esp ; ret 0xb60f
0x0000000000174b62 : cli ; lcall ptr [rax + rbp*8 - 0x2ecbfffe] ; cli ; jmp rsp
0x00000000001742ba : cli ; lcall ptr [rbx + rsi*4 + 0xc240002] ; cli ; call rsp
0x0000000000174ab2 : cli ; lcall ptr [rsi - 0x345bfffe] ; cli ; call rsp
0x0000000000174b02 : cli ; lcall ptr [rsp - 0x317cfffe] ; cli ; jmp rsp
0x000000000017498a : cli ; ljmp ptr [rsp + rbx*8 - 0x5fdbfffe] ; cli ; jmp rsp
0x000000000012c588 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000090fa7 : cli ; mov rax, rdi ; ret
0x0000000000060a84 : cli ; mov rsi, qword ptr [rip + 0x3444d4] ; call rax
0x0000000000058108 : cli ; mov rsi, qword ptr [rip + 0x34ce50] ; call rax
0x00000000000fd5df : cli ; mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x00000000000efce2 : cli ; mov rsi, r12 ; mov rdi, rbx ; call r14
0x00000000000850e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002d610 : cli ; nop word ptr [rax + rax] ; ret
0x000000000011fb86 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000032b35 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000aa3ad : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000016fd31 : cli ; out dx, eax ; jmp rsp
0x000000000015ce81 : cli ; push 0x6e ; ja 0x15ce0e ; ret 0x48f
0x000000000017458a : cli ; push qword ptr [rbp + rax*8 + 0x54040002] ; cli ; jmp rsp
0x0000000000174a1a : cli ; push qword ptr [rcx + 2] ; add ah, dl ; ret
0x000000000006a842 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000017453a : cli ; push rsp ; ret
0x00000000000ab2ff : cli ; ret 0x10
0x000000000015b925 : cli ; ret 0xac65
0x000000000016faa0 : cli ; salc ; out dx, eax ; jmp rsp
0x00000000000c7d18 : cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000f45bb : cli ; setae al ; ret
0x000000000016d519 : cli ; sti ; jmp qword ptr [rax]
0x0000000000081cf0 : cli ; test rdx, rdx ; je 0x81d09 ; bsf rax, rdx ; ret
0x0000000000081edf : cli ; test rdx, rdx ; je 0x81f09 ; bsf rax, rdx ; ret
0x000000000015a56a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000077d25 : cli ; xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000818b8 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000004ffc7 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001240f8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000b7234 : cmc ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8948
0x000000000014c81a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015ff66 : cmc ; call qword ptr [rax]
0x000000000016007e : cmc ; call qword ptr [rbp - 0x3d]
0x000000000015fda2 : cmc ; call qword ptr [rbx]
0x000000000015fbba : cmc ; call qword ptr [rcx]
0x000000000015fa6e : cmc ; call qword ptr [rdi]
0x000000000018e17a : cmc ; call qword ptr [rdx]
0x000000000015f9ae : cmc ; call qword ptr [rsi]
0x000000000015f83e : cmc ; call rax
0x000000000015fba2 : cmc ; call rdx
0x000000000015ff4e : cmc ; call rsp
0x00000000000c8910 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000171a92 : cmc ; dec dword ptr [rbp + rdi*4 + 0x63740001] ; cmc ; call rsp
0x00000000000ce63e : cmc ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000016007a : cmc ; dec dword ptr [rbx - 0x3d] ; cmc ; call qword ptr [rbp - 0x3d]
0x0000000000160032 : cmc ; dec dword ptr [rdi - 0x66000a3e] ; ret 0xfff5
0x000000000015fffe : cmc ; dec dword ptr [rip + 0x17fff5c2] ; ret 0xfff5
0x0000000000160062 : cmc ; dec dword ptr [rip + 0x19fff5c3] ; ret
0x000000000015f9a6 : cmc ; dec eax ; or ch, dh ; ljmp ptr [rdx] ; or ch, dh ; call qword ptr [rsi]
0x0000000000160126 : cmc ; dec ecx ; sal ch, 0xff ; pop rbp ; ret 0xfff5
0x000000000016001e : cmc ; dec ecx ; sal ch, 0xff ; ret 0xfff5
0x000000000016004a : cmc ; dec edi ; ret 0xfff5
0x000000000018c2f9 : cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018c371 : cmc ; hlt ; jmp qword ptr [rdi]
0x0000000000063c60 : cmc ; in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000c3874 : cmc ; inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000016002e : cmc ; inc dword ptr [rbp - 0x70000a3e] ; ret 0xfff5
0x00000000000f7a06 : cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000016005e : cmc ; inc dword ptr [rbx] ; ret
0x000000000015fffa : cmc ; inc dword ptr [rbx] ; ret 0xfff5
0x000000000015fe02 : cmc ; inc dword ptr [rdi] ; cmc ; jmp rbx
0x000000000015fc2e : cmc ; inc dword ptr [rdx + 0x1ffff527] ; sbb al, 0xf5 ; jmp qword ptr [rdi]
0x000000000015ff46 : cmc ; inc eax ; mov esi, 0xbecafff5 ; cmc ; call rsp
0x0000000000160046 : cmc ; inc ebp ; ret 0xfff5
0x000000000015fbb6 : cmc ; inc esi ; cmc ; call qword ptr [rcx]
0x00000000001031a2 : cmc ; je 0x10319c ; pop rbx ; ret
0x00000000000c4d1a : cmc ; jge 0xc4cfb ; mov rdx, r8 ; jmp 0xc4d33
0x000000000015fe5e : cmc ; jmp qword ptr [rax]
0x000000000016006a : cmc ; jmp qword ptr [rbx]
0x0000000000160006 : cmc ; jmp qword ptr [rcx]
0x000000000015fc36 : cmc ; jmp qword ptr [rdi]
0x000000000015fe36 : cmc ; jmp qword ptr [rdx]
0x000000000018da4a : cmc ; jmp qword ptr [rsi]
0x000000000018e8ea : cmc ; jmp rax
0x000000000015fe06 : cmc ; jmp rbx
0x000000000018cb62 : cmc ; jmp rcx
0x000000000018cc4a : cmc ; jmp rdi
0x000000000018d92a : cmc ; jmp rdx
0x0000000000171a42 : cmc ; jmp rsp
0x00000000000c3b61 : cmc ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000160036 : cmc ; lcall ptr [rcx - 0x5a000a3e] ; ret 0xfff5
0x0000000000160066 : cmc ; lcall ptr [rcx] ; ret
0x000000000015fb9e : cmc ; lcall ptr [rdi] ; sbb al, 0xf5 ; call rdx
0x000000000015fbb2 : cmc ; lcall ptr [rdi] ; sbb al, 0xf5 ; inc esi ; cmc ; call qword ptr [rcx]
0x000000000015fc32 : cmc ; lcall ptr [rdi] ; sbb al, 0xf5 ; jmp qword ptr [rdi]
0x000000000015fb9a : cmc ; lcall ptr [rdi] ; sbb al, 0xf5 ; lcall ptr [rdi] ; sbb al, 0xf5 ; call rdx
0x000000000016000a : cmc ; ljmp ptr [rbx] ; ret 0xfff5
0x000000000016003e : cmc ; ljmp ptr [rdi - 0x44000a3e] ; ret 0xfff5
0x000000000015f9aa : cmc ; ljmp ptr [rdx] ; or ch, dh ; call qword ptr [rsi]
0x00000000000a966f : cmc ; mov bh, 0x2f ; add byte ptr [rax - 0x39], cl ; ret
0x000000000015d2a9 : cmc ; mov ch, 0xab ; ret
0x0000000000133d7a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012be0e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014ae23 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006aa86 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000737b1 : cmc ; pop rbp ; pop r12 ; ret
0x000000000015a157 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000160072 : cmc ; push qword ptr [rdi] ; ret
0x000000000016000e : cmc ; push qword ptr [rip + 0x3ffff5c2] ; ret 0xfff5
0x000000000016005a : cmc ; push rdi ; ret 0xfff5
0x0000000000171b32 : cmc ; push rsp ; ret
0x0000000000171b12 : cmc ; push rsp ; ret 1
0x000000000017b3d8 : cmc ; ret
0x0000000000196504 : cmc ; std ; cmc ; jmp qword ptr [rdx]
0x000000000016d24d : cmc ; sti ; jmp rax
0x00000000000f9d9e : cmc ; sub al, byte ptr [rax] ; add ecx, ebp ; ret
0x000000000014ae27 : cmc ; sub eax, edx ; ret
0x000000000015c8e5 : cmc ; xlatb ; ret 0x4e27
0x00000000000f5358 : cmova eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000038844 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000dfc08 : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000ab43b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000ab43a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x0000000000077969 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000045e2c : cmovae eax, esi ; ret
0x000000000000385b : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x0000000000077968 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000045e2b : cmovae rax, rsi ; ret
0x00000000000d1e80 : cmovbe eax, edx ; ret
0x000000000009d7bd : cmove eax, ecx ; ret
0x0000000000085be8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000f5590 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000039937 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000083cc8 : cmove eax, edx ; ret
0x0000000000074b85 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074b84 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000091001 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x000000000008d616 : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x000000000002dd09 : cmove esi, eax ; xor ebp, ebp ; jmp 0x2dd1b
0x000000000002dd08 : cmove r14, rax ; xor ebp, ebp ; jmp 0x2dd1c
0x000000000009d7bc : cmove rax, rcx ; ret
0x0000000000085bf9 : cmove rax, rdx ; add eax, 1 ; ret
0x0000000000084a43 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000083cc7 : cmove rax, rdx ; ret
0x000000000008d615 : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x00000000000aabc6 : cmovg eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006de6b : cmovg eax, ecx ; test rdx, rdx ; jne 0x6de69 ; ret
0x0000000000075c3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x75c39 ; ret
0x00000000000aabc5 : cmovg rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000001f5b6 : cmovge eax, edx ; jmp 0x1f588
0x00000000000b22dd : cmovge esi, edi ; mov r13d, dword ptr [rax + 8] ; jmp 0xb22b0
0x00000000000b22dc : cmovge r14d, r15d ; mov r13d, dword ptr [rax + 8] ; jmp 0xb22b1
0x00000000000aabec : cmovl eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000aabeb : cmovl rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003850d : cmovne eax, ebx ; pop rbx ; ret
0x000000000003994b : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000070821 : cmovne eax, ecx ; ret
0x00000000000f8d85 : cmovne eax, edi ; ret
0x0000000000112db5 : cmovne eax, edx ; add rsp, 0x78 ; ret
0x0000000000039967 : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000c6106 : cmovne eax, edx ; jmp 0xc60e4
0x000000000002df8b : cmovne eax, edx ; ret
0x0000000000070820 : cmovne r8, rcx ; ret
0x000000000003850c : cmovne rax, rbx ; pop rbx ; ret
0x000000000007cc5f : cmovne rax, rcx ; add rsp, 8 ; ret
0x000000000008d378 : cmovne rax, rcx ; ret
0x000000000002df8a : cmovne rax, rdx ; ret
0x00000000000efc0f : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000025d8c : cmovns eax, dword ptr [rbx - 0x7cb7fb39] ; ret 0x4801
0x00000000000e5257 : cmovns eax, edx ; jmp 0xe5260
0x0000000000038259 : cmovns eax, edx ; pop rbx ; ret
0x0000000000024f0c : cmovns eax, edx ; ret
0x00000000000efc0e : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000e5256 : cmovns rax, rdx ; jmp 0xe5261
0x0000000000055682 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x0000000000115bf0 : cmovs eax, dword ptr [rbx - 0x3fcee73c] ; pop rbx ; pop rbp ; ret
0x000000000010b640 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x0000000000090f53 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000010d847 : cmovs ecx, dword ptr [rcx] ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000076768 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x76769 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000010d4fb : cmovs esi, dword ptr [rcx] ; ret 0xc148
0x000000000016d6b5 : cmp ah, bh ; inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000016d5b1 : cmp ah, bh ; jmp rax
0x000000000016d591 : cmp ah, bh ; push rax ; cmp esp, edi ; call rax
0x0000000000124268 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001242c7 : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x0000000000178364 : cmp ah, cl ; jmp 0x17836a
0x0000000000178cc5 : cmp al, 0 ; add byte ptr [rax - 6], cl ; jmp 0x178cd1
0x0000000000191340 : cmp al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000177450 : cmp al, 0 ; add byte ptr [rax], al ; mov esp, 0x48000023 ; ret
0x00000000000c42c8 : cmp al, 0x11 ; je 0xc42d6 ; xor eax, eax ; ret
0x0000000000021bdd : cmp al, 0x16 ; call rax
0x000000000009db47 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000011d98c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x0000000000107b26 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000172f4c : cmp al, 0x2c ; add al, byte ptr [rax] ; and al, 0xc ; clc ; call rsp
0x0000000000077dad : cmp al, 0x30 ; ret
0x00000000001781d4 : cmp al, 0x31 ; add byte ptr [rax], al ; call 0x11176dcc
0x00000000001789d4 : cmp al, 0x39 ; add byte ptr [rax], al ; test al, 0xf9 ; jmp 0x1789e2
0x00000000000eed1a : cmp al, 0x3a ; jne 0xeed33 ; jmp 0xeed37
0x000000000008d325 : cmp al, 0x3d ; jne 0x8d341 ; mov rax, rdi ; ret
0x0000000000178fd4 : cmp al, 0x3f ; add byte ptr [rax], al ; cmp bh, bh ; jmp 0x178fe2
0x000000000015b560 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000017368c : cmp al, 0x58 ; add al, byte ptr [rax] ; in al, -0x57 ; clc ; jmp rsp
0x0000000000181cac : cmp al, 0x58 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000acc30 : cmp al, 0x6b ; cld ; dec dword ptr [rax + 0x39] ; ret
0x000000000018c9d4 : cmp al, 0x79 ; add dword ptr [rax], eax ; js 0x18c9ea ; cmc ; jmp qword ptr [rcx]
0x00000000001710b4 : cmp al, 0x7a ; add dword ptr [rax], eax ; add al, 0x5f ; call rsp
0x0000000000179b74 : cmp al, 0x7f ; in al, dx ; jmp qword ptr [rdx]
0x000000000018dad4 : cmp al, 0x8a ; add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rsi]
0x0000000000187904 : cmp al, 0x8d ; jmp qword ptr [rdx]
0x00000000000c3ca5 : cmp al, 0xb9 ; cmp ebp, edi ; jge 0xc3c88 ; mov edx, eax ; jmp 0xc3c91
0x0000000000194d64 : cmp al, 0xc8 ; cmc ; jmp qword ptr [rdx]
0x0000000000191ed4 : cmp al, 0xce ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x000000000016fa44 : cmp al, 0xe4 ; add byte ptr [rax], al ; ret 0xefd2
0x0000000000186c01 : cmp al, 0xf2 ; call qword ptr [rcx]
0x0000000000186c51 : cmp al, 0xf2 ; jmp qword ptr [rcx]
0x000000000018d3c9 : cmp al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000190085 : cmp al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000172459 : cmp al, 0xf7 ; call rsp
0x000000000016ce95 : cmp al, 0xfb ; jmp rax
0x000000000016d69d : cmp al, 0xfc ; jmp qword ptr [rax]
0x0000000000188d35 : cmp al, 1 ; add al, bl ; add bl, dh ; call rsp
0x0000000000149623 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000097b00 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000e5990 : cmp al, bl ; nop word ptr [rax + rax] ; ret
0x00000000001155b3 : cmp al, byte ptr [rax] ; ret
0x0000000000198b05 : cmp al, byte ptr [rdx] ; add al, bh ; and bh, dh ; jmp rdx
0x000000000014b2e6 : cmp al, byte ptr [rsi - 1] ; jne 0x14b30c ; xor eax, eax ; ret
0x0000000000042d47 : cmp al, ch ; ret
0x000000000002e1e8 : cmp al, ch ; ret 0x3b8
0x00000000000e67f8 : cmp al, ch ; ret 0xf6a8
0x0000000000191ea8 : cmp al, cl ; clc ; jmp qword ptr [rsi]
0x000000000017dd84 : cmp al, cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000084f26 : cmp al, dh ; ret
0x0000000000084f25 : cmp al, r14b ; ret
0x0000000000034b46 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x000000000016d6b9 : cmp bh, ah ; jmp rax
0x000000000016d699 : cmp bh, ah ; push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax]
0x0000000000178fd8 : cmp bh, bh ; jmp 0x178fde
0x0000000000179008 : cmp bh, bh ; jmp 0x17900e
0x000000000016ce91 : cmp bh, bl ; inc dword ptr [rax + 0x3c] ; sti ; jmp rax
0x000000000002171e : cmp bh, byte ptr [rax] ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000001723e1 : cmp bh, dh ; call rsp
0x0000000000178848 : cmp bh, dh ; jmp 0x17884e
0x000000000008afcb : cmp bl, dh ; ret
0x000000000009cbf6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000007561a : cmp byte ptr [r8 - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x000000000006f713 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000f0b8a : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000f29a3 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000cebf2 : cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000021d54 : cmp byte ptr [r8], al ; test rax, rax ; je 0x21d66 ; jmp rax
0x0000000000021d84 : cmp byte ptr [r8], al ; test rax, rax ; je 0x21d96 ; jmp rax
0x00000000000cf49e : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085b1f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000111db6 : cmp byte ptr [rax + 1], bh ; ret
0x0000000000084f67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000e4a3a : cmp byte ptr [rax + rax], ch ; add rsp, 8 ; ret
0x00000000000e49db : cmp byte ptr [rax + rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007561b : cmp byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x29e9
0x00000000000af92a : cmp byte ptr [rax - 0x77], cl ; jmp 0x48cd8280
0x0000000000111384 : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000f0b8b : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000f29a4 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000006f714 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000cebf3 : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010a1b3 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000010bc35 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000006aaac : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000728c1 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x822
0x0000000000145bf8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000084f56 : cmp byte ptr [rax], ah ; ret
0x00000000001788ed : cmp byte ptr [rax], al ; add al, al ; clc ; jmp 0x1788f9
0x0000000000178905 : cmp byte ptr [rax], al ; add al, cl ; clc ; jmp 0x178911
0x000000000017898d : cmp byte ptr [rax], al ; add byte ptr [rax], ah ; stc ; jmp 0x178999
0x0000000000076164 : cmp byte ptr [rax], al ; mov rbx, rdi ; je 0x76178 ; pop rbx ; ret
0x000000000002171f : cmp byte ptr [rax], al ; pop r12 ; ret
0x000000000001f4ff : cmp byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000021e76 : cmp byte ptr [rax], al ; pop rbx ; ret
0x0000000000022104 : cmp byte ptr [rax], al ; ret
0x000000000012454c : cmp byte ptr [rax], al ; ret 0xf66
0x000000000019c4f8 : cmp byte ptr [rax], al ; sti ; jmp qword ptr [rdx]
0x0000000000021d55 : cmp byte ptr [rax], al ; test rax, rax ; je 0x21d65 ; jmp rax
0x0000000000021d85 : cmp byte ptr [rax], al ; test rax, rax ; je 0x21d95 ; jmp rax
0x0000000000114399 : cmp byte ptr [rax], bl ; je 0x1143a4 ; ret
0x00000000000cf49f : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fff0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000091716 : cmp byte ptr [rax], dh ; ret
0x0000000000084f46 : cmp byte ptr [rax], dl ; ret
0x0000000000084f45 : cmp byte ptr [rax], r10b ; ret
0x0000000000084f55 : cmp byte ptr [rax], r12b ; ret
0x0000000000091715 : cmp byte ptr [rax], r14b ; ret
0x000000000007ffef : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000009cbfa : cmp byte ptr [rbp + 0x13], dh ; ret
0x000000000009cbf9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000008de07 : cmp byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x000000000008e10b : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x000000000003d655 : cmp byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000000000f998e : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000112ee6 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c3876 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xc3887 ; pop rbx ; ret
0x000000000009cbf7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000e0d2c : cmp byte ptr [rcx + 0x2c], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e1f78 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000d3a25 : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000026576 : cmp byte ptr [rcx - 0xa], al ; ret
0x0000000000175f80 : cmp byte ptr [rcx], 0xeb ; jmp qword ptr [rbx]
0x000000000008b458 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000004275d : cmp byte ptr [rcx], al ; ret 0x48e9
0x0000000000145bf9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000cd06b : cmp byte ptr [rcx], cl ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000098f14 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002044 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000002ec00 : cmp byte ptr [rdi], 0 ; jne 0x2ec19 ; add rsp, 0x18 ; ret
0x000000000002ec40 : cmp byte ptr [rdi], 0 ; jne 0x2ec59 ; add rsp, 0x18 ; ret
0x0000000000038228 : cmp byte ptr [rdi], 0 ; jne 0x38236 ; pop rbx ; ret
0x000000000016ce9c : cmp byte ptr [rdi], 0xfb ; jmp qword ptr [rax]
0x0000000000083c24 : cmp byte ptr [rdi], al ; or al, byte ptr [rax] ; ret
0x0000000000147ecd : cmp byte ptr [rdi], dl ; ret
0x00000000001489e0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001489c9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001489b2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014746e : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000182246 : cmp byte ptr [rdx + 0xd1cffef], al ; pop rsi ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017ada8 : cmp byte ptr [rdx - 0x13], ah ; call rdx
0x00000000000c1fe0 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xc1ff8 ; xor eax, eax ; ret
0x00000000000e0a22 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000000c3706 : cmp byte ptr [rsi], cl ; je 0xc3697 ; pop rbx ; ret
0x00000000001242ca : cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000017a92d : cmp ch, ch ; jmp qword ptr [rdx]
0x000000000015fda1 : cmp ch, dh ; call qword ptr [rbx]
0x000000000015fe01 : cmp ch, dh ; inc dword ptr [rdi] ; cmc ; jmp rbx
0x000000000015fe35 : cmp ch, dh ; jmp qword ptr [rdx]
0x000000000016d514 : cmp cl, 0xfb ; call rax
0x0000000000073355 : cmp cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b1ed2 : cmp cl, byte ptr [rax - 0x75] ; jl 0xb1f03 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000a99c1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x4b1
0x00000000000d1eb9 : cmp cx, 0xa ; mov eax, edx ; je 0xd1f1a ; ret
0x00000000000f0bd5 : cmp dh, al ; add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f0bbb : cmp dh, al ; add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x000000000017d77c : cmp dh, al ; out dx, al ; jmp qword ptr [rdx]
0x00000000000eed1b : cmp dh, byte ptr [rbp + 0xd] ; jmp 0xeed36
0x0000000000038225 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000032597 : cmp dh, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001926f1 : cmp dh, dh ; call qword ptr [rax]
0x00000000000de4d5 : cmp dh, dh ; ret
0x00000000000261dc : cmp dh, dh ; ret 0x4801
0x00000000000453f9 : cmp dh, dh ; ret 0x7401
0x00000000000924a5 : cmp dh, dh ; ret 0x7501
0x00000000000a64da : cmp dl, 0xff ; cmovne eax, ecx ; ret
0x0000000000002b62 : cmp dl, byte ptr [rdi] ; ret
0x000000000006d65b : cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x00000000000f44da : cmp dword ptr [rax + 8], edi ; jne 0xf44d9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000181a24 : cmp dword ptr [rax - 0x11], eax ; jmp qword ptr [rdx]
0x0000000000190934 : cmp dword ptr [rax - 0xb], ecx ; jmp qword ptr [rdx]
0x0000000000114398 : cmp dword ptr [rax], 0x18 ; je 0x1143a5 ; ret
0x00000000000c2510 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xc24a7
0x00000000001338b8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000f0f21 : cmp dword ptr [rdi + 0x10], 0 ; je 0xf0f38 ; xor eax, eax ; ret
0x0000000000072dc9 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000aa2e4 : cmp dword ptr [rdi + 8], edx ; jne 0xaa2b3 ; ret
0x000000000009d7b9 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x0000000000180cac : cmp dword ptr [rdi + rbp*8], esp ; jmp qword ptr [rdx]
0x00000000000f455a : cmp dword ptr [rdi], 0 ; je 0xf456e ; ret
0x0000000000173195 : cmp dword ptr [rdx], eax ; add byte ptr [rsp - 8], ah ; jmp rsp
0x000000000007f651 : cmp dword ptr [rip + 0x328280], 0 ; je 0x7f669 ; ret
0x000000000006e37c : cmp dword ptr [rsi + 0x30], 0 ; je 0x6e38f ; pop rbx ; ret
0x00000000000ec813 : cmp dword ptr [rsi - 0x76b7ffd5], edi ; ret 0x8948
0x00000000000ee18b : cmp dword ptr [rsi - 0x76b7ffd5], esp ; ret 0x8948
0x00000000000e5530 : cmp dword ptr [rsi], 0 ; je 0xe553d ; pop rbx ; ret
0x00000000000037ea : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000dbf83 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x0000000000114397 : cmp dword ptr fs:[rax], 0x18 ; je 0x1143a6 ; ret
0x0000000000046f32 : cmp eax, 0x1208f1 ; call 0x731c7
0x0000000000003b4f : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000009f54e : cmp eax, 0x13 ; je 0x9f566 ; mov edx, eax ; jmp 0x9f526
0x00000000000a1a9e : cmp eax, 0x13 ; je 0xa1ab6 ; mov edx, eax ; jmp 0xa1a76
0x00000000000a3efe : cmp eax, 0x13 ; je 0xa3f16 ; mov edx, eax ; jmp 0xa3ed6
0x0000000000100822 : cmp eax, 0x2a9035 ; call rax
0x00000000000e44fb : cmp eax, 0x2c0d10 ; ret
0x00000000000e0162 : cmp eax, 0x31ef8948 ; fucomi st(0) ; ret
0x000000000016d5fd : cmp eax, 0x3f40fffc ; cld ; jmp qword ptr [rax]
0x000000000016ce99 : cmp eax, 0x3f80fffb ; sti ; jmp qword ptr [rax]
0x00000000000d1a7f : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x0000000000035d1c : cmp eax, 0x80 ; jne 0x35d0f ; xor eax, eax ; ret
0x0000000000035d6c : cmp eax, 0x80 ; jne 0x35d5f ; xor eax, eax ; ret
0x0000000000072406 : cmp eax, 0x8148fffd ; ret
0x00000000000a8d81 : cmp eax, 0x83ffffff ; ret 0x4901
0x000000000008d327 : cmp eax, 0x89480f75 ; clc ; ret
0x0000000000106a99 : cmp eax, 0x8be2894c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000dfdb0 : cmp eax, 0xa1 ; je 0xdfdd0 ; neg eax ; pop rbx ; ret
0x00000000000b6efa : cmp eax, 0xb32d1 ; call 0x731c7
0x00000000000c7300 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000017a927 : cmp eax, 0xd1cffed ; cmp r13b, bpl ; jmp qword ptr [rdx]
0x000000000019016f : cmp eax, 0xd1cfff5 ; ja 0x1901ba ; cmc ; jmp qword ptr [rdx]
0x00000000000bf61b : cmp eax, 0xe9000000 ; ret 0xfff9
0x0000000000124573 : cmp eax, 0xf3ffffff ; ret
0x00000000001031a0 : cmp eax, 0xf5 ; je 0x10319e ; pop rbx ; ret
0x00000000000ffbad : cmp eax, 0xfd ; jbe 0xffbbe ; pop rbx ; ret
0x0000000000178dad : cmp eax, 0xfd900000 ; jmp 0x178db9
0x0000000000178dc5 : cmp eax, 0xfda80000 ; jmp 0x178dd1
0x0000000000178ddd : cmp eax, 0xfdb00000 ; jmp 0x178de9
0x0000000000178ddc : cmp eax, 0xfdb00000 ; jmp 0x178dea
0x0000000000178e0d : cmp eax, 0xfdd00000 ; jmp 0x178e19
0x000000000011cd8e : cmp eax, 0xff ; je 0x11cda9 ; add rsp, 8 ; ret
0x000000000006e82a : cmp eax, 0xff ; je 0x6e83b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006e86e : cmp eax, 0xff ; je 0x6e87f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000766e1 : cmp eax, 0xff ; je 0x766f2 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000044234 : cmp eax, 0xff ; jne 0x44229 ; mov rax, rdx ; ret
0x00000000000700e9 : cmp eax, 0xff ; jne 0x700f6 ; pop rbx ; ret
0x000000000007672f : cmp eax, 0xff ; jne 0x76720 ; pop rbx ; ret
0x0000000000035068 : cmp eax, 0xfffff000 ; ja 0x35095 ; ret
0x0000000000035311 : cmp eax, 0xfffff000 ; ja 0x35322 ; ret
0x000000000003536d : cmp eax, 0xfffff000 ; ja 0x3537e ; ret
0x00000000000353a7 : cmp eax, 0xfffff000 ; ja 0x353b6 ; ret
0x000000000003542d : cmp eax, 0xfffff000 ; ja 0x3543e ; ret
0x0000000000067761 : cmp eax, 0xfffff000 ; ja 0x67772 ; ret
0x00000000000b70c2 : cmp eax, 0xfffff000 ; ja 0xb70d1 ; ret
0x00000000000b9ab3 : cmp eax, 0xfffff000 ; ja 0xb9ac2 ; ret
0x00000000000b9b3d : cmp eax, 0xfffff000 ; ja 0xb9b4c ; ret
0x00000000000b9c2c : cmp eax, 0xfffff000 ; ja 0xb9c3b ; ret
0x00000000000ba318 : cmp eax, 0xfffff000 ; ja 0xba329 ; ret
0x00000000000bae74 : cmp eax, 0xfffff000 ; ja 0xbae83 ; ret
0x00000000000baed4 : cmp eax, 0xfffff000 ; ja 0xbaee3 ; ret
0x00000000000bb128 : cmp eax, 0xfffff000 ; ja 0xbb137 ; ret
0x00000000000bb198 : cmp eax, 0xfffff000 ; ja 0xbb1a7 ; ret
0x00000000000db4c6 : cmp eax, 0xfffff000 ; ja 0xdb4ec ; ret
0x00000000000db515 : cmp eax, 0xfffff000 ; ja 0xdb53c ; ret
0x00000000000db566 : cmp eax, 0xfffff000 ; ja 0xdb58c ; ret
0x00000000000db5be : cmp eax, 0xfffff000 ; ja 0xdb5ec ; ret
0x00000000000db622 : cmp eax, 0xfffff000 ; ja 0xdb64c ; ret
0x00000000000db67b : cmp eax, 0xfffff000 ; ja 0xdb6a4 ; ret
0x00000000000db89a : cmp eax, 0xfffff000 ; ja 0xdb8ab ; ret
0x00000000000db92d : cmp eax, 0xfffff000 ; ja 0xdb93e ; ret
0x00000000000dba21 : cmp eax, 0xfffff000 ; ja 0xdba32 ; ret
0x00000000000dbf53 : cmp eax, 0xfffff000 ; ja 0xdbf94 ; ret
0x00000000000dcc03 : cmp eax, 0xfffff000 ; ja 0xdcc14 ; ret
0x00000000000dd214 : cmp eax, 0xfffff000 ; ja 0xdd225 ; ret
0x00000000000dd26b : cmp eax, 0xfffff000 ; ja 0xdd27c ; ret
0x00000000000dd2ce : cmp eax, 0xfffff000 ; ja 0xdd2e1 ; cdqe ; ret
0x00000000000dd32e : cmp eax, 0xfffff000 ; ja 0xdd33f ; ret
0x00000000000dfe23 : cmp eax, 0xfffff000 ; ja 0xdfe34 ; ret
0x00000000000dfe77 : cmp eax, 0xfffff000 ; ja 0xdfe88 ; ret
0x00000000000e059b : cmp eax, 0xfffff000 ; ja 0xe05aa ; ret
0x00000000000e0ab1 : cmp eax, 0xfffff000 ; ja 0xe0ac0 ; ret
0x00000000000e1208 : cmp eax, 0xfffff000 ; ja 0xe1217 ; ret
0x00000000000e12a8 : cmp eax, 0xfffff000 ; ja 0xe12b7 ; ret
0x00000000000e134b : cmp eax, 0xfffff000 ; ja 0xe135a ; ret
0x00000000000e13eb : cmp eax, 0xfffff000 ; ja 0xe13fa ; ret
0x00000000000e1486 : cmp eax, 0xfffff000 ; ja 0xe1495 ; ret
0x00000000000e14f6 : cmp eax, 0xfffff000 ; ja 0xe1505 ; ret
0x00000000000e1573 : cmp eax, 0xfffff000 ; ja 0xe1582 ; ret
0x00000000000e1613 : cmp eax, 0xfffff000 ; ja 0xe1622 ; ret
0x00000000000e1b47 : cmp eax, 0xfffff000 ; ja 0xe1b58 ; ret
0x00000000000e2e58 : cmp eax, 0xfffff000 ; ja 0xe2e69 ; ret
0x00000000000e2ee4 : cmp eax, 0xfffff000 ; ja 0xe2f14 ; ret
0x00000000000e2f7c : cmp eax, 0xfffff000 ; ja 0xe2fac ; ret
0x00000000000e2fd0 : cmp eax, 0xfffff000 ; ja 0xe2fe1 ; ret
0x00000000000e6c52 : cmp eax, 0xfffff000 ; ja 0xe6c7c ; ret
0x00000000000e859e : cmp eax, 0xfffff000 ; ja 0xe85b1 ; pop rbx ; pop rbp ; ret
0x00000000000e8801 : cmp eax, 0xfffff000 ; ja 0xe8810 ; ret
0x00000000000e88b3 : cmp eax, 0xfffff000 ; ja 0xe88c4 ; ret
0x00000000000e88de : cmp eax, 0xfffff000 ; ja 0xe88ef ; ret
0x00000000000e947e : cmp eax, 0xfffff000 ; ja 0xe948d ; ret
0x00000000000e95ee : cmp eax, 0xfffff000 ; ja 0xe95fd ; ret
0x00000000000e9a48 : cmp eax, 0xfffff000 ; ja 0xe9a57 ; ret
0x00000000000e9aea : cmp eax, 0xfffff000 ; ja 0xe9af9 ; ret
0x00000000000e9b9a : cmp eax, 0xfffff000 ; ja 0xe9ba9 ; ret
0x00000000000f523b : cmp eax, 0xfffff000 ; ja 0xf524c ; ret
0x00000000000f52b8 : cmp eax, 0xfffff000 ; ja 0xf52e2 ; ret
0x00000000000f711d : cmp eax, 0xfffff000 ; ja 0xf712e ; ret
0x00000000000f71bd : cmp eax, 0xfffff000 ; ja 0xf71ce ; ret
0x000000000011aa6b : cmp eax, 0xfffff001 ; jae 0x11aa7a ; ret
0x000000000011aabb : cmp eax, 0xfffff001 ; jae 0x11aaca ; ret
0x0000000000035338 : cmp eax, 0xfffff001 ; jae 0x35347 ; ret
0x0000000000035868 : cmp eax, 0xfffff001 ; jae 0x35877 ; ret
0x0000000000043a52 : cmp eax, 0xfffff001 ; jae 0x43a65 ; xor eax, eax ; ret
0x0000000000067728 : cmp eax, 0xfffff001 ; jae 0x67737 ; ret
0x00000000000ab288 : cmp eax, 0xfffff001 ; jae 0xab297 ; ret
0x00000000000adb58 : cmp eax, 0xfffff001 ; jae 0xadb67 ; ret
0x00000000000adb88 : cmp eax, 0xfffff001 ; jae 0xadb97 ; ret
0x00000000000b9a08 : cmp eax, 0xfffff001 ; jae 0xb9a17 ; ret
0x00000000000b9beb : cmp eax, 0xfffff001 ; jae 0xb9bfa ; ret
0x00000000000b9cc8 : cmp eax, 0xfffff001 ; jae 0xb9cd7 ; ret
0x00000000000b9eb1 : cmp eax, 0xfffff001 ; jae 0xb9ef0 ; ret
0x00000000000b9f11 : cmp eax, 0xfffff001 ; jae 0xb9f50 ; ret
0x00000000000ba292 : cmp eax, 0xfffff001 ; jae 0xba2a1 ; ret
0x00000000000bae38 : cmp eax, 0xfffff001 ; jae 0xbae47 ; ret
0x00000000000bafc8 : cmp eax, 0xfffff001 ; jae 0xbafd7 ; ret
0x00000000000baff8 : cmp eax, 0xfffff001 ; jae 0xbb007 ; ret
0x00000000000bb058 : cmp eax, 0xfffff001 ; jae 0xbb067 ; ret
0x00000000000bb088 : cmp eax, 0xfffff001 ; jae 0xbb097 ; ret
0x00000000000bb0b8 : cmp eax, 0xfffff001 ; jae 0xbb0c7 ; ret
0x00000000000bb0e8 : cmp eax, 0xfffff001 ; jae 0xbb0f7 ; ret
0x00000000000d1af8 : cmp eax, 0xfffff001 ; jae 0xd1b07 ; ret
0x00000000000d1b28 : cmp eax, 0xfffff001 ; jae 0xd1b37 ; ret
0x00000000000d1b58 : cmp eax, 0xfffff001 ; jae 0xd1b67 ; ret
0x00000000000d1b88 : cmp eax, 0xfffff001 ; jae 0xd1b97 ; ret
0x00000000000d1bb8 : cmp eax, 0xfffff001 ; jae 0xd1bc7 ; ret
0x00000000000d1be8 : cmp eax, 0xfffff001 ; jae 0xd1bf7 ; ret
0x00000000000d1c18 : cmp eax, 0xfffff001 ; jae 0xd1c27 ; ret
0x00000000000d1c48 : cmp eax, 0xfffff001 ; jae 0xd1c57 ; ret
0x00000000000da3b4 : cmp eax, 0xfffff001 ; jae 0xda3f6 ; ret
0x00000000000da414 : cmp eax, 0xfffff001 ; jae 0xda456 ; ret
0x00000000000db405 : cmp eax, 0xfffff001 ; jae 0xdb418 ; mov eax, edx ; ret
0x00000000000db428 : cmp eax, 0xfffff001 ; jae 0xdb437 ; ret
0x00000000000db6b8 : cmp eax, 0xfffff001 ; jae 0xdb6c7 ; ret
0x00000000000db6e8 : cmp eax, 0xfffff001 ; jae 0xdb6f7 ; ret
0x00000000000db808 : cmp eax, 0xfffff001 ; jae 0xdb817 ; ret
0x00000000000db838 : cmp eax, 0xfffff001 ; jae 0xdb847 ; ret
0x00000000000db8f8 : cmp eax, 0xfffff001 ; jae 0xdb907 ; ret
0x00000000000db961 : cmp eax, 0xfffff001 ; jae 0xdb9a0 ; ret
0x00000000000dbba1 : cmp eax, 0xfffff001 ; jae 0xdbbe0 ; ret
0x00000000000dbc01 : cmp eax, 0xfffff001 ; jae 0xdbc40 ; ret
0x00000000000dbc58 : cmp eax, 0xfffff001 ; jae 0xdbc67 ; ret
0x00000000000dc078 : cmp eax, 0xfffff001 ; jae 0xdc087 ; ret
0x00000000000dc1c1 : cmp eax, 0xfffff001 ; jae 0xdc200 ; ret
0x00000000000dc218 : cmp eax, 0xfffff001 ; jae 0xdc227 ; ret
0x00000000000dc248 : cmp eax, 0xfffff001 ; jae 0xdc257 ; ret
0x00000000000dc278 : cmp eax, 0xfffff001 ; jae 0xdc287 ; ret
0x00000000000dc2a8 : cmp eax, 0xfffff001 ; jae 0xdc2b7 ; ret
0x00000000000dc2d8 : cmp eax, 0xfffff001 ; jae 0xdc2e7 ; ret
0x00000000000dc311 : cmp eax, 0xfffff001 ; jae 0xdc350 ; ret
0x00000000000dc368 : cmp eax, 0xfffff001 ; jae 0xdc377 ; ret
0x00000000000dc398 : cmp eax, 0xfffff001 ; jae 0xdc3a7 ; ret
0x00000000000dcb68 : cmp eax, 0xfffff001 ; jae 0xdcb77 ; ret
0x00000000000dcb98 : cmp eax, 0xfffff001 ; jae 0xdcba7 ; ret
0x00000000000dcbc8 : cmp eax, 0xfffff001 ; jae 0xdcbd7 ; ret
0x00000000000dd1d8 : cmp eax, 0xfffff001 ; jae 0xdd1e7 ; ret
0x00000000000dd238 : cmp eax, 0xfffff001 ; jae 0xdd247 ; ret
0x00000000000dd298 : cmp eax, 0xfffff001 ; jae 0xdd2a7 ; ret
0x00000000000dd2f8 : cmp eax, 0xfffff001 ; jae 0xdd307 ; ret
0x00000000000dd358 : cmp eax, 0xfffff001 ; jae 0xdd367 ; ret
0x00000000000dfad1 : cmp eax, 0xfffff001 ; jae 0xdfb10 ; ret
0x00000000000dfdeb : cmp eax, 0xfffff001 ; jae 0xdfdfa ; ret
0x00000000000e0534 : cmp eax, 0xfffff001 ; jae 0xe0576 ; ret
0x00000000000e0c68 : cmp eax, 0xfffff001 ; jae 0xe0c77 ; ret
0x00000000000e0c98 : cmp eax, 0xfffff001 ; jae 0xe0ca7 ; ret
0x00000000000e0cc8 : cmp eax, 0xfffff001 ; jae 0xe0cd7 ; ret
0x00000000000e1008 : cmp eax, 0xfffff001 ; jae 0xe1017 ; ret
0x00000000000e11c8 : cmp eax, 0xfffff001 ; jae 0xe11d7 ; ret
0x00000000000e1798 : cmp eax, 0xfffff001 ; jae 0xe17a7 ; ret
0x00000000000e1838 : cmp eax, 0xfffff001 ; jae 0xe1847 ; ret
0x00000000000e1874 : cmp eax, 0xfffff001 ; jae 0xe18b6 ; ret
0x00000000000e19b8 : cmp eax, 0xfffff001 ; jae 0xe19c7 ; ret
0x00000000000e19e8 : cmp eax, 0xfffff001 ; jae 0xe19f7 ; ret
0x00000000000e1a21 : cmp eax, 0xfffff001 ; jae 0xe1a60 ; ret
0x00000000000e1a78 : cmp eax, 0xfffff001 ; jae 0xe1a87 ; ret
0x00000000000e1ab1 : cmp eax, 0xfffff001 ; jae 0xe1af0 ; ret
0x00000000000e1b08 : cmp eax, 0xfffff001 ; jae 0xe1b17 ; ret
0x00000000000e1de8 : cmp eax, 0xfffff001 ; jae 0xe1df7 ; ret
0x00000000000e1e18 : cmp eax, 0xfffff001 ; jae 0xe1e27 ; ret
0x00000000000e1e48 : cmp eax, 0xfffff001 ; jae 0xe1e57 ; ret
0x00000000000e3008 : cmp eax, 0xfffff001 ; jae 0xe3017 ; ret
0x00000000000e3038 : cmp eax, 0xfffff001 ; jae 0xe3047 ; ret
0x00000000000e45ba : cmp eax, 0xfffff001 ; jae 0xe45c9 ; ret
0x00000000000e472b : cmp eax, 0xfffff001 ; jae 0xe473a ; ret
0x00000000000e4758 : cmp eax, 0xfffff001 ; jae 0xe4767 ; ret
0x00000000000e4788 : cmp eax, 0xfffff001 ; jae 0xe4797 ; ret
0x00000000000e47c1 : cmp eax, 0xfffff001 ; jae 0xe4800 ; ret
0x00000000000e4818 : cmp eax, 0xfffff001 ; jae 0xe4827 ; ret
0x00000000000e4848 : cmp eax, 0xfffff001 ; jae 0xe4857 ; ret
0x00000000000e487b : cmp eax, 0xfffff001 ; jae 0xe488a ; ret
0x00000000000e48a8 : cmp eax, 0xfffff001 ; jae 0xe48b7 ; ret
0x00000000000e48d8 : cmp eax, 0xfffff001 ; jae 0xe48e7 ; ret
0x00000000000e4908 : cmp eax, 0xfffff001 ; jae 0xe4917 ; ret
0x00000000000e4938 : cmp eax, 0xfffff001 ; jae 0xe4947 ; ret
0x00000000000e752b : cmp eax, 0xfffff001 ; jae 0xe753a ; ret
0x00000000000e7558 : cmp eax, 0xfffff001 ; jae 0xe7567 ; ret
0x00000000000e7588 : cmp eax, 0xfffff001 ; jae 0xe7597 ; ret
0x00000000000e75bb : cmp eax, 0xfffff001 ; jae 0xe75ca ; ret
0x00000000000e75eb : cmp eax, 0xfffff001 ; jae 0xe75fa ; ret
0x00000000000e7618 : cmp eax, 0xfffff001 ; jae 0xe7627 ; ret
0x00000000000e764b : cmp eax, 0xfffff001 ; jae 0xe765a ; ret
0x00000000000e7678 : cmp eax, 0xfffff001 ; jae 0xe7687 ; ret
0x00000000000e76a8 : cmp eax, 0xfffff001 ; jae 0xe76b7 ; ret
0x00000000000e76db : cmp eax, 0xfffff001 ; jae 0xe76ea ; ret
0x00000000000e7708 : cmp eax, 0xfffff001 ; jae 0xe7717 ; ret
0x00000000000e773b : cmp eax, 0xfffff001 ; jae 0xe774a ; ret
0x00000000000e8508 : cmp eax, 0xfffff001 ; jae 0xe8517 ; ret
0x00000000000e8538 : cmp eax, 0xfffff001 ; jae 0xe8547 ; ret
0x00000000000e8661 : cmp eax, 0xfffff001 ; jae 0xe86a0 ; ret
0x00000000000e86c8 : cmp eax, 0xfffff001 ; jae 0xe86d7 ; ret
0x00000000000e86f8 : cmp eax, 0xfffff001 ; jae 0xe8707 ; ret
0x00000000000e8728 : cmp eax, 0xfffff001 ; jae 0xe8737 ; ret
0x00000000000e8758 : cmp eax, 0xfffff001 ; jae 0xe8767 ; ret
0x00000000000e895b : cmp eax, 0xfffff001 ; jae 0xe896a ; ret
0x00000000000e8988 : cmp eax, 0xfffff001 ; jae 0xe8997 ; ret
0x00000000000e89b8 : cmp eax, 0xfffff001 ; jae 0xe89c7 ; ret
0x00000000000e89fb : cmp eax, 0xfffff001 ; jae 0xe8a0a ; ret
0x00000000000e8a28 : cmp eax, 0xfffff001 ; jae 0xe8a37 ; ret
0x00000000000e8a58 : cmp eax, 0xfffff001 ; jae 0xe8a67 ; ret
0x00000000000e8a88 : cmp eax, 0xfffff001 ; jae 0xe8a97 ; ret
0x00000000000e8ab8 : cmp eax, 0xfffff001 ; jae 0xe8ac7 ; ret
0x00000000000e8ae8 : cmp eax, 0xfffff001 ; jae 0xe8af7 ; ret
0x00000000000e8b18 : cmp eax, 0xfffff001 ; jae 0xe8b27 ; ret
0x00000000000e8b48 : cmp eax, 0xfffff001 ; jae 0xe8b57 ; ret
0x00000000000e8b78 : cmp eax, 0xfffff001 ; jae 0xe8b87 ; ret
0x00000000000e8bab : cmp eax, 0xfffff001 ; jae 0xe8bba ; ret
0x00000000000e8be4 : cmp eax, 0xfffff001 ; jae 0xe8c26 ; ret
0x00000000000e8c38 : cmp eax, 0xfffff001 ; jae 0xe8c47 ; ret
0x00000000000e8c6b : cmp eax, 0xfffff001 ; jae 0xe8c7a ; ret
0x00000000000e8c98 : cmp eax, 0xfffff001 ; jae 0xe8ca7 ; ret
0x00000000000e8cc8 : cmp eax, 0xfffff001 ; jae 0xe8cd7 ; ret
0x00000000000e8cf8 : cmp eax, 0xfffff001 ; jae 0xe8d07 ; ret
0x00000000000e8d28 : cmp eax, 0xfffff001 ; jae 0xe8d37 ; ret
0x00000000000e8d58 : cmp eax, 0xfffff001 ; jae 0xe8d67 ; ret
0x00000000000e8d8b : cmp eax, 0xfffff001 ; jae 0xe8d9a ; ret
0x00000000000e8dbb : cmp eax, 0xfffff001 ; jae 0xe8dca ; ret
0x00000000000e8de8 : cmp eax, 0xfffff001 ; jae 0xe8df7 ; ret
0x00000000000e8e18 : cmp eax, 0xfffff001 ; jae 0xe8e27 ; ret
0x00000000000e8e48 : cmp eax, 0xfffff001 ; jae 0xe8e57 ; ret
0x00000000000e8e7b : cmp eax, 0xfffff001 ; jae 0xe8e8a ; ret
0x00000000000e8eab : cmp eax, 0xfffff001 ; jae 0xe8eba ; ret
0x00000000000e8edb : cmp eax, 0xfffff001 ; jae 0xe8eea ; ret
0x00000000000e8f14 : cmp eax, 0xfffff001 ; jae 0xe8f56 ; ret
0x00000000000e8f68 : cmp eax, 0xfffff001 ; jae 0xe8f77 ; ret
0x00000000000e8fa4 : cmp eax, 0xfffff001 ; jae 0xe8fe6 ; ret
0x00000000000e8ff8 : cmp eax, 0xfffff001 ; jae 0xe9007 ; ret
0x00000000000e9028 : cmp eax, 0xfffff001 ; jae 0xe9037 ; ret
0x00000000000e9064 : cmp eax, 0xfffff001 ; jae 0xe90a6 ; ret
0x00000000000e90b8 : cmp eax, 0xfffff001 ; jae 0xe90c7 ; ret
0x00000000000e90eb : cmp eax, 0xfffff001 ; jae 0xe90fa ; ret
0x00000000000e9118 : cmp eax, 0xfffff001 ; jae 0xe9127 ; ret
0x00000000000e9148 : cmp eax, 0xfffff001 ; jae 0xe9157 ; ret
0x00000000000e917b : cmp eax, 0xfffff001 ; jae 0xe918a ; ret
0x00000000000e91b1 : cmp eax, 0xfffff001 ; jae 0xe91f0 ; ret
0x00000000000e9208 : cmp eax, 0xfffff001 ; jae 0xe9217 ; ret
0x00000000000e923b : cmp eax, 0xfffff001 ; jae 0xe924a ; ret
0x00000000000e926b : cmp eax, 0xfffff001 ; jae 0xe927a ; ret
0x00000000000e92c1 : cmp eax, 0xfffff001 ; jae 0xe9300 ; ret
0x00000000000e9318 : cmp eax, 0xfffff001 ; jae 0xe9327 ; ret
0x00000000000e9351 : cmp eax, 0xfffff001 ; jae 0xe9390 ; ret
0x00000000000e93a8 : cmp eax, 0xfffff001 ; jae 0xe93b7 ; ret
0x00000000000e93d8 : cmp eax, 0xfffff001 ; jae 0xe93e7 ; ret
0x00000000000e940b : cmp eax, 0xfffff001 ; jae 0xe941a ; ret
0x00000000000e9438 : cmp eax, 0xfffff001 ; jae 0xe9447 ; ret
0x00000000000e9524 : cmp eax, 0xfffff001 ; jae 0xe9566 ; ret
0x00000000000e9581 : cmp eax, 0xfffff001 ; jae 0xe95c0 ; ret
0x00000000000e9691 : cmp eax, 0xfffff001 ; jae 0xe96d0 ; ret
0x00000000000e96f4 : cmp eax, 0xfffff001 ; jae 0xe9736 ; ret
0x00000000000e974b : cmp eax, 0xfffff001 ; jae 0xe975a ; ret
0x00000000000e9778 : cmp eax, 0xfffff001 ; jae 0xe9787 ; ret
0x00000000000e97a8 : cmp eax, 0xfffff001 ; jae 0xe97b7 ; ret
0x00000000000e97db : cmp eax, 0xfffff001 ; jae 0xe97ea ; ret
0x00000000000e9cf4 : cmp eax, 0xfffff001 ; jae 0xe9d36 ; ret
0x00000000000e9d54 : cmp eax, 0xfffff001 ; jae 0xe9d96 ; ret
0x00000000000e9da8 : cmp eax, 0xfffff001 ; jae 0xe9db7 ; ret
0x00000000000e9dd8 : cmp eax, 0xfffff001 ; jae 0xe9de7 ; ret
0x00000000000e9e08 : cmp eax, 0xfffff001 ; jae 0xe9e17 ; ret
0x00000000000e9e38 : cmp eax, 0xfffff001 ; jae 0xe9e47 ; ret
0x00000000000e9e6b : cmp eax, 0xfffff001 ; jae 0xe9e7a ; ret
0x00000000000e9e9b : cmp eax, 0xfffff001 ; jae 0xe9eaa ; ret
0x00000000000e9ec8 : cmp eax, 0xfffff001 ; jae 0xe9ed7 ; ret
0x00000000000e9ef8 : cmp eax, 0xfffff001 ; jae 0xe9f07 ; ret
0x00000000000e9f28 : cmp eax, 0xfffff001 ; jae 0xe9f37 ; ret
0x00000000000e9f58 : cmp eax, 0xfffff001 ; jae 0xe9f67 ; ret
0x00000000000f551f : cmp eax, 0xfffffe8c ; call rax
0x000000000008ce4a : cmp eax, 1 ; ja 0x8ce31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000beb75 : cmp eax, 1 ; sete al ; movzx eax, al ; ret
0x0000000000115b11 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000c37bd : cmp eax, 3 ; je 0xc37ce ; ret
0x00000000000f4c6a : cmp eax, 4 ; je 0xf4c75 ; ret
0x0000000000074849 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x74861 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007081e : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000009cb1e : cmp eax, dword ptr [rsi + 0x10] ; jne 0x9cc19 ; ret
0x000000000009cb33 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x9cc19 ; ret
0x000000000009cb48 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x9cc19 ; ret
0x000000000009cb63 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x9cc19 ; ret
0x000000000009cb7e : cmp eax, dword ptr [rsi + 0x20] ; jne 0x9cc19 ; ret
0x000000000009cb93 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x9cc15 ; ret
0x000000000009cba8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x9cc15 ; ret
0x000000000009cbb3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9cc15 ; ret
0x000000000009cbce : cmp eax, dword ptr [rsi + 0x30] ; jne 0x9cc15 ; ret
0x000000000009cbe3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x9cc15 ; ret
0x000000000009cbf8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x9cc15 ; ret
0x000000000009cc03 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9cc15 ; ret
0x000000000009cb03 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x9cc19 ; ret
0x000000000009cad3 : cmp eax, dword ptr [rsi + 4] ; jne 0x9cc19 ; ret
0x000000000009cae8 : cmp eax, dword ptr [rsi + 8] ; jne 0x9cc19 ; ret
0x000000000014b7ea : cmp eax, dword ptr [rsi - 0x10] ; jne 0x14b929 ; ret
0x000000000014b803 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x14b929 ; ret
0x000000000014b913 : cmp eax, dword ptr [rsi - 4] ; jne 0x14b927 ; xor eax, eax ; ret
0x000000000014b833 : cmp eax, dword ptr [rsi - 4] ; jne 0x14b929 ; ret
0x000000000014b818 : cmp eax, dword ptr [rsi - 8] ; jne 0x14b929 ; ret
0x000000000009cabd : cmp eax, dword ptr [rsi] ; jne 0x9cc18 ; ret
0x00000000000430ab : cmp eax, ebx ; jne 0x430a5 ; pop rbx ; ret
0x00000000000774b9 : cmp eax, ecx ; jae 0x774e7 ; movzx eax, byte ptr [rax] ; ret
0x000000000009124c : cmp eax, ecx ; je 0x9123d ; ret
0x000000000012456f : cmp eax, ecx ; jle 0x1244bd ; ret
0x0000000000003a9f : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000014b303 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000041b90 : cmp eax, edi ; jne 0x41b6d ; ret
0x0000000000113961 : cmp eax, edx ; je 0x113978 ; add rsp, 8 ; ret
0x0000000000043e8d : cmp eax, edx ; jne 0x43e86 ; xor eax, eax ; ret
0x0000000000043f6d : cmp eax, edx ; jne 0x43f66 ; xor eax, eax ; ret
0x000000000009127f : cmp eax, esi ; jne 0x91277 ; mov rax, rdi ; ret
0x000000000010c5c5 : cmp ebp, eax ; test eax, eax ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000017a861 : cmp ebp, ebp ; call qword ptr [rdi]
0x000000000017aac5 : cmp ebp, ebp ; jmp qword ptr [rdx]
0x00000000000c3ca7 : cmp ebp, edi ; jge 0xc3c86 ; mov edx, eax ; jmp 0xc3c8f
0x00000000000c4d19 : cmp ebp, esi ; jge 0xc4cfc ; mov rdx, r8 ; jmp 0xc4d34
0x000000000018d2a1 : cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000f4c06 : cmp ebx, 0xa ; je 0xf4c11 ; ret
0x000000000014c13c : cmp ebx, ebp ; jae 0x14c14f ; call qword ptr [rbx]
0x000000000014c13c : cmp ebx, ebp ; jae 0x14c153 ; call qword ptr [rbx]
0x0000000000175f81 : cmp ebx, ebp ; jmp qword ptr [rbx]
0x0000000000043bc3 : cmp ecx, 0x2f ; jmp r8
0x00000000000d1eba : cmp ecx, 0xa ; mov eax, edx ; je 0xd1f19 ; ret
0x00000000000448ec : cmp ecx, 0xff ; jne 0x448e9 ; mov rax, rdx ; ret
0x0000000000091be1 : cmp ecx, 0xff ; jne 0x91be1 ; sub rax, 1 ; ret
0x000000000009d96c : cmp ecx, 0xff ; jne 0x9d969 ; sub rax, 4 ; ret
0x00000000000a4dc3 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d2cec : cmp ecx, dword ptr [rax - 0xc] ; jne 0xd2ce8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000014c85b : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x14c871 ; pop rbx ; ret
0x00000000000c7207 : cmp ecx, dword ptr [rcx - 0x7d] ; ret 0xeb20
0x00000000001489fb : cmp ecx, eax ; jne 0x148a29 ; xor eax, eax ; ret
0x000000000014983b : cmp ecx, eax ; jne 0x149869 ; xor eax, eax ; ret
0x000000000014986f : cmp ecx, eax ; jne 0x14987c ; xor eax, eax ; ret
0x000000000007800a : cmp ecx, edi ; je 0x77e46 ; ret
0x0000000000091224 : cmp ecx, edx ; je 0x9121d ; ret
0x0000000000091cf0 : cmp ecx, edx ; jne 0x91ced ; ret
0x000000000009d107 : cmp ecx, edx ; jne 0x9d0f9 ; sub eax, r8d ; nop ; ret
0x0000000000091220 : cmp ecx, esi ; je 0x91221 ; cmp ecx, edx ; je 0x91221 ; ret
0x0000000000170ac1 : cmp ecx, esi ; jmp rsp
0x000000000007676a : cmp ecx, esi ; jne 0x76767 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014c378 : cmp edi, 1 ; ja 0x14c385 ; ret
0x00000000000eb545 : cmp edi, 9 ; setbe al ; ret
0x000000000004be86 : cmp edi, ecx ; ja 0x4be6f ; mov eax, r8d ; ret
0x000000000010dd52 : cmp edi, ecx ; jne 0x10dd45 ; ret
0x0000000000045dea : cmp edi, edx ; jbe 0x45de9 ; nop ; mov rax, rsi ; ret
0x00000000000e7795 : cmp edi, edx ; jne 0xe7790 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000db300 : cmp edi, esi ; ja 0xdb29d ; pop rbx ; ret
0x00000000000db330 : cmp edi, esi ; ja 0xdb325 ; ret
0x000000000016d6bd : cmp edi, esp ; call rax
0x00000000000bada8 : cmp edx, 0 ; mov eax, edx ; jle 0xbadb9 ; ret
0x00000000000f8d7f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000f521e : cmp edx, 0xea ; cmovne eax, ecx ; ret
0x00000000000b9a50 : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x000000000006a841 : cmp edx, 0xff ; je 0x6a859 ; mov rax, rdx ; pop rbx ; ret
0x00000000000729b1 : cmp edx, 0xff ; je 0x729c9 ; mov rax, rdx ; pop rbx ; ret
0x00000000000221b6 : cmp edx, 1 ; jle 0x221b0 ; mov byte ptr [rdi], 0 ; ret
0x00000000000c4426 : cmp edx, dword ptr [rdi + 4] ; cmove eax, ecx ; ret
0x000000000002e0fb : cmp edx, dword ptr [rdi + 4] ; jb 0x2e10e ; ret
0x00000000000c41d5 : cmp edx, dword ptr [rsi + 4] ; je 0xc41e6 ; ret
0x00000000000c4265 : cmp edx, dword ptr [rsi + rdi*4] ; cmove eax, ecx ; ret
0x000000000010331d : cmp edx, eax ; jb 0x103349 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000043bf4 : cmp edx, eax ; jg 0x43bb5 ; ret
0x000000000010385d : cmp edx, eax ; jne 0x103846 ; ret
0x00000000000f4e32 : cmp edx, eax ; jne 0xf4e15 ; ret
0x00000000000e9c77 : cmp edx, ecx ; cmovae rax, rsi ; ret
0x00000000000ac5a4 : cmp edx, ecx ; jb 0xac575 ; ret
0x00000000001166c2 : cmp edx, ecx ; je 0x1166d5 ; ret
0x0000000000091208 : cmp edx, ecx ; je 0x91205 ; ret
0x00000000000856dc : cmp edx, ecx ; jne 0x856c5 ; ret
0x000000000008be19 : cmp edx, ecx ; jne 0x8be15 ; ret
0x00000000000bb61b : cmp edx, ecx ; jne 0xbb655 ; ret
0x00000000000f45ba : cmp edx, edi ; setae al ; ret
0x0000000000103d66 : cmp edx, esi ; jb 0x103d5d ; mov eax, 0xffffffff ; ret
0x0000000000103dfd : cmp edx, esi ; jb 0x103dcd ; mov eax, 0xffffffff ; ret
0x0000000000038509 : cmp esi, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000b53f0 : cmp esi, 1 ; je 0xb5407 ; xor eax, eax ; ret
0x0000000000072ed8 : cmp esi, 2 ; je 0x72ef0 ; mov dword ptr [rdi], edx ; ret
0x00000000000c42b4 : cmp esi, dword ptr [rdi + 4] ; jl 0xc42ae ; ret
0x000000000010c4ba : cmp esi, dword ptr [rdx + 0x28] ; ja 0x10c4b1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018d361 : cmp esi, ebp ; jmp rdi
0x000000000015c8e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f5b4 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f58a
0x000000000006e8ca : cmp esi, ecx ; jb 0x6e8c7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000008a77c : cmp esi, ecx ; jne 0x8a76e ; xor eax, eax ; ret
0x0000000000045e26 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x00000000000e10c4 : cmp esi, edx ; ja 0xe10d5 ; ret
0x00000000000cc1ef : cmp esp, 0xff ; push rdi ; ret 0
0x000000000016d595 : cmp esp, edi ; call rax
0x000000000016d635 : cmp esp, edi ; jmp qword ptr [rax]
0x000000000016d655 : cmp esp, edi ; jmp rax
0x00000000000f0f20 : cmp qword ptr [rdi + 0x10], 0 ; je 0xf0f39 ; xor eax, eax ; ret
0x0000000000072dc8 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x00000000000f4559 : cmp qword ptr [rdi], 0 ; je 0xf456f ; ret
0x000000000006e37b : cmp qword ptr [rsi + 0x30], 0 ; je 0x6e390 ; pop rbx ; ret
0x00000000000e552f : cmp qword ptr [rsi], 0 ; je 0xe553e ; pop rbx ; ret
0x000000000008afca : cmp r11b, r14b ; ret
0x00000000000f4c05 : cmp r11d, 0xa ; je 0xf4c12 ; ret
0x000000000017a92c : cmp r13b, bpl ; jmp qword ptr [rdx]
0x00000000000de4d4 : cmp r14b, r14b ; ret
0x0000000000041b8f : cmp r8, rdi ; jne 0x41b6e ; ret
0x000000000008d324 : cmp r8b, 0x3d ; jne 0x8d342 ; mov rax, rdi ; ret
0x000000000009124b : cmp r8d, ecx ; je 0x9123e ; ret
0x0000000000035067 : cmp rax, -0x1000 ; ja 0x35096 ; ret
0x0000000000035310 : cmp rax, -0x1000 ; ja 0x35323 ; ret
0x000000000003536c : cmp rax, -0x1000 ; ja 0x3537f ; ret
0x00000000000353a6 : cmp rax, -0x1000 ; ja 0x353b7 ; ret
0x000000000003542c : cmp rax, -0x1000 ; ja 0x3543f ; ret
0x0000000000067760 : cmp rax, -0x1000 ; ja 0x67773 ; ret
0x00000000000b70c1 : cmp rax, -0x1000 ; ja 0xb70d2 ; ret
0x00000000000b9ab2 : cmp rax, -0x1000 ; ja 0xb9ac3 ; ret
0x00000000000b9b3c : cmp rax, -0x1000 ; ja 0xb9b4d ; ret
0x00000000000b9c2b : cmp rax, -0x1000 ; ja 0xb9c3c ; ret
0x00000000000ba317 : cmp rax, -0x1000 ; ja 0xba32a ; ret
0x00000000000bae73 : cmp rax, -0x1000 ; ja 0xbae84 ; ret
0x00000000000baed3 : cmp rax, -0x1000 ; ja 0xbaee4 ; ret
0x00000000000bb127 : cmp rax, -0x1000 ; ja 0xbb138 ; ret
0x00000000000bb197 : cmp rax, -0x1000 ; ja 0xbb1a8 ; ret
0x00000000000db4c5 : cmp rax, -0x1000 ; ja 0xdb4ed ; ret
0x00000000000db514 : cmp rax, -0x1000 ; ja 0xdb53d ; ret
0x00000000000db565 : cmp rax, -0x1000 ; ja 0xdb58d ; ret
0x00000000000db5bd : cmp rax, -0x1000 ; ja 0xdb5ed ; ret
0x00000000000db621 : cmp rax, -0x1000 ; ja 0xdb64d ; ret
0x00000000000db67a : cmp rax, -0x1000 ; ja 0xdb6a5 ; ret
0x00000000000db899 : cmp rax, -0x1000 ; ja 0xdb8ac ; ret
0x00000000000db92c : cmp rax, -0x1000 ; ja 0xdb93f ; ret
0x00000000000dba20 : cmp rax, -0x1000 ; ja 0xdba33 ; ret
0x00000000000dbf52 : cmp rax, -0x1000 ; ja 0xdbf95 ; ret
0x00000000000dcc02 : cmp rax, -0x1000 ; ja 0xdcc15 ; ret
0x00000000000dd213 : cmp rax, -0x1000 ; ja 0xdd226 ; ret
0x00000000000dd26a : cmp rax, -0x1000 ; ja 0xdd27d ; ret
0x00000000000dd32d : cmp rax, -0x1000 ; ja 0xdd340 ; ret
0x00000000000dfe22 : cmp rax, -0x1000 ; ja 0xdfe35 ; ret
0x00000000000dfe76 : cmp rax, -0x1000 ; ja 0xdfe89 ; ret
0x00000000000e059a : cmp rax, -0x1000 ; ja 0xe05ab ; ret
0x00000000000e0ab0 : cmp rax, -0x1000 ; ja 0xe0ac1 ; ret
0x00000000000e1207 : cmp rax, -0x1000 ; ja 0xe1218 ; ret
0x00000000000e12a7 : cmp rax, -0x1000 ; ja 0xe12b8 ; ret
0x00000000000e134a : cmp rax, -0x1000 ; ja 0xe135b ; ret
0x00000000000e13ea : cmp rax, -0x1000 ; ja 0xe13fb ; ret
0x00000000000e1485 : cmp rax, -0x1000 ; ja 0xe1496 ; ret
0x00000000000e14f5 : cmp rax, -0x1000 ; ja 0xe1506 ; ret
0x00000000000e1572 : cmp rax, -0x1000 ; ja 0xe1583 ; ret
0x00000000000e1612 : cmp rax, -0x1000 ; ja 0xe1623 ; ret
0x00000000000e1b46 : cmp rax, -0x1000 ; ja 0xe1b59 ; ret
0x00000000000e2e57 : cmp rax, -0x1000 ; ja 0xe2e6a ; ret
0x00000000000e2ee3 : cmp rax, -0x1000 ; ja 0xe2f15 ; ret
0x00000000000e2f7b : cmp rax, -0x1000 ; ja 0xe2fad ; ret
0x00000000000e2fcf : cmp rax, -0x1000 ; ja 0xe2fe2 ; ret
0x00000000000e6c51 : cmp rax, -0x1000 ; ja 0xe6c7d ; ret
0x00000000000e8800 : cmp rax, -0x1000 ; ja 0xe8811 ; ret
0x00000000000e88b2 : cmp rax, -0x1000 ; ja 0xe88c5 ; ret
0x00000000000e88dd : cmp rax, -0x1000 ; ja 0xe88f0 ; ret
0x00000000000e947d : cmp rax, -0x1000 ; ja 0xe948e ; ret
0x00000000000e95ed : cmp rax, -0x1000 ; ja 0xe95fe ; ret
0x00000000000e9a47 : cmp rax, -0x1000 ; ja 0xe9a58 ; ret
0x00000000000e9ae9 : cmp rax, -0x1000 ; ja 0xe9afa ; ret
0x00000000000e9b99 : cmp rax, -0x1000 ; ja 0xe9baa ; ret
0x00000000000f523a : cmp rax, -0x1000 ; ja 0xf524d ; ret
0x00000000000f52b7 : cmp rax, -0x1000 ; ja 0xf52e3 ; ret
0x00000000000f711c : cmp rax, -0x1000 ; ja 0xf712f ; ret
0x00000000000f71bc : cmp rax, -0x1000 ; ja 0xf71cf ; ret
0x000000000011aa6a : cmp rax, -0xfff ; jae 0x11aa7b ; ret
0x000000000011aaba : cmp rax, -0xfff ; jae 0x11aacb ; ret
0x0000000000035337 : cmp rax, -0xfff ; jae 0x35348 ; ret
0x0000000000035867 : cmp rax, -0xfff ; jae 0x35878 ; ret
0x0000000000067727 : cmp rax, -0xfff ; jae 0x67738 ; ret
0x00000000000ab287 : cmp rax, -0xfff ; jae 0xab298 ; ret
0x00000000000adb57 : cmp rax, -0xfff ; jae 0xadb68 ; ret
0x00000000000adb87 : cmp rax, -0xfff ; jae 0xadb98 ; ret
0x00000000000b9a07 : cmp rax, -0xfff ; jae 0xb9a18 ; ret
0x00000000000b9bea : cmp rax, -0xfff ; jae 0xb9bfb ; ret
0x00000000000b9cc7 : cmp rax, -0xfff ; jae 0xb9cd8 ; ret
0x00000000000b9eb0 : cmp rax, -0xfff ; jae 0xb9ef1 ; ret
0x00000000000b9f10 : cmp rax, -0xfff ; jae 0xb9f51 ; ret
0x00000000000bae37 : cmp rax, -0xfff ; jae 0xbae48 ; ret
0x00000000000bafc7 : cmp rax, -0xfff ; jae 0xbafd8 ; ret
0x00000000000baff7 : cmp rax, -0xfff ; jae 0xbb008 ; ret
0x00000000000bb057 : cmp rax, -0xfff ; jae 0xbb068 ; ret
0x00000000000bb087 : cmp rax, -0xfff ; jae 0xbb098 ; ret
0x00000000000bb0b7 : cmp rax, -0xfff ; jae 0xbb0c8 ; ret
0x00000000000bb0e7 : cmp rax, -0xfff ; jae 0xbb0f8 ; ret
0x00000000000d1af7 : cmp rax, -0xfff ; jae 0xd1b08 ; ret
0x00000000000d1b27 : cmp rax, -0xfff ; jae 0xd1b38 ; ret
0x00000000000d1b57 : cmp rax, -0xfff ; jae 0xd1b68 ; ret
0x00000000000d1b87 : cmp rax, -0xfff ; jae 0xd1b98 ; ret
0x00000000000d1bb7 : cmp rax, -0xfff ; jae 0xd1bc8 ; ret
0x00000000000d1be7 : cmp rax, -0xfff ; jae 0xd1bf8 ; ret
0x00000000000d1c17 : cmp rax, -0xfff ; jae 0xd1c28 ; ret
0x00000000000d1c47 : cmp rax, -0xfff ; jae 0xd1c58 ; ret
0x00000000000da3b3 : cmp rax, -0xfff ; jae 0xda3f7 ; ret
0x00000000000da413 : cmp rax, -0xfff ; jae 0xda457 ; ret
0x00000000000db427 : cmp rax, -0xfff ; jae 0xdb438 ; ret
0x00000000000db6b7 : cmp rax, -0xfff ; jae 0xdb6c8 ; ret
0x00000000000db6e7 : cmp rax, -0xfff ; jae 0xdb6f8 ; ret
0x00000000000db807 : cmp rax, -0xfff ; jae 0xdb818 ; ret
0x00000000000db837 : cmp rax, -0xfff ; jae 0xdb848 ; ret
0x00000000000db8f7 : cmp rax, -0xfff ; jae 0xdb908 ; ret
0x00000000000db960 : cmp rax, -0xfff ; jae 0xdb9a1 ; ret
0x00000000000dbba0 : cmp rax, -0xfff ; jae 0xdbbe1 ; ret
0x00000000000dbc00 : cmp rax, -0xfff ; jae 0xdbc41 ; ret
0x00000000000dbc57 : cmp rax, -0xfff ; jae 0xdbc68 ; ret
0x00000000000dc077 : cmp rax, -0xfff ; jae 0xdc088 ; ret
0x00000000000dc1c0 : cmp rax, -0xfff ; jae 0xdc201 ; ret
0x00000000000dc217 : cmp rax, -0xfff ; jae 0xdc228 ; ret
0x00000000000dc247 : cmp rax, -0xfff ; jae 0xdc258 ; ret
0x00000000000dc277 : cmp rax, -0xfff ; jae 0xdc288 ; ret
0x00000000000dc2a7 : cmp rax, -0xfff ; jae 0xdc2b8 ; ret
0x00000000000dc2d7 : cmp rax, -0xfff ; jae 0xdc2e8 ; ret
0x00000000000dc310 : cmp rax, -0xfff ; jae 0xdc351 ; ret
0x00000000000dc367 : cmp rax, -0xfff ; jae 0xdc378 ; ret
0x00000000000dc397 : cmp rax, -0xfff ; jae 0xdc3a8 ; ret
0x00000000000dcb67 : cmp rax, -0xfff ; jae 0xdcb78 ; ret
0x00000000000dcb97 : cmp rax, -0xfff ; jae 0xdcba8 ; ret
0x00000000000dcbc7 : cmp rax, -0xfff ; jae 0xdcbd8 ; ret
0x00000000000dd1d7 : cmp rax, -0xfff ; jae 0xdd1e8 ; ret
0x00000000000dd237 : cmp rax, -0xfff ; jae 0xdd248 ; ret
0x00000000000dd297 : cmp rax, -0xfff ; jae 0xdd2a8 ; ret
0x00000000000dd2f7 : cmp rax, -0xfff ; jae 0xdd308 ; ret
0x00000000000dd357 : cmp rax, -0xfff ; jae 0xdd368 ; ret
0x00000000000dfad0 : cmp rax, -0xfff ; jae 0xdfb11 ; ret
0x00000000000dfdea : cmp rax, -0xfff ; jae 0xdfdfb ; ret
0x00000000000e0533 : cmp rax, -0xfff ; jae 0xe0577 ; ret
0x00000000000e0c67 : cmp rax, -0xfff ; jae 0xe0c78 ; ret
0x00000000000e0c97 : cmp rax, -0xfff ; jae 0xe0ca8 ; ret
0x00000000000e0cc7 : cmp rax, -0xfff ; jae 0xe0cd8 ; ret
0x00000000000e1007 : cmp rax, -0xfff ; jae 0xe1018 ; ret
0x00000000000e11c7 : cmp rax, -0xfff ; jae 0xe11d8 ; ret
0x00000000000e1797 : cmp rax, -0xfff ; jae 0xe17a8 ; ret
0x00000000000e1837 : cmp rax, -0xfff ; jae 0xe1848 ; ret
0x00000000000e1873 : cmp rax, -0xfff ; jae 0xe18b7 ; ret
0x00000000000e19b7 : cmp rax, -0xfff ; jae 0xe19c8 ; ret
0x00000000000e19e7 : cmp rax, -0xfff ; jae 0xe19f8 ; ret
0x00000000000e1a20 : cmp rax, -0xfff ; jae 0xe1a61 ; ret
0x00000000000e1a77 : cmp rax, -0xfff ; jae 0xe1a88 ; ret
0x00000000000e1ab0 : cmp rax, -0xfff ; jae 0xe1af1 ; ret
0x00000000000e1b07 : cmp rax, -0xfff ; jae 0xe1b18 ; ret
0x00000000000e1de7 : cmp rax, -0xfff ; jae 0xe1df8 ; ret
0x00000000000e1e17 : cmp rax, -0xfff ; jae 0xe1e28 ; ret
0x00000000000e1e47 : cmp rax, -0xfff ; jae 0xe1e58 ; ret
0x00000000000e3007 : cmp rax, -0xfff ; jae 0xe3018 ; ret
0x00000000000e3037 : cmp rax, -0xfff ; jae 0xe3048 ; ret
0x00000000000e45b9 : cmp rax, -0xfff ; jae 0xe45ca ; ret
0x00000000000e472a : cmp rax, -0xfff ; jae 0xe473b ; ret
0x00000000000e4757 : cmp rax, -0xfff ; jae 0xe4768 ; ret
0x00000000000e4787 : cmp rax, -0xfff ; jae 0xe4798 ; ret
0x00000000000e47c0 : cmp rax, -0xfff ; jae 0xe4801 ; ret
0x00000000000e4817 : cmp rax, -0xfff ; jae 0xe4828 ; ret
0x00000000000e4847 : cmp rax, -0xfff ; jae 0xe4858 ; ret
0x00000000000e487a : cmp rax, -0xfff ; jae 0xe488b ; ret
0x00000000000e48a7 : cmp rax, -0xfff ; jae 0xe48b8 ; ret
0x00000000000e48d7 : cmp rax, -0xfff ; jae 0xe48e8 ; ret
0x00000000000e4907 : cmp rax, -0xfff ; jae 0xe4918 ; ret
0x00000000000e4937 : cmp rax, -0xfff ; jae 0xe4948 ; ret
0x00000000000e752a : cmp rax, -0xfff ; jae 0xe753b ; ret
0x00000000000e7557 : cmp rax, -0xfff ; jae 0xe7568 ; ret
0x00000000000e7587 : cmp rax, -0xfff ; jae 0xe7598 ; ret
0x00000000000e75ba : cmp rax, -0xfff ; jae 0xe75cb ; ret
0x00000000000e75ea : cmp rax, -0xfff ; jae 0xe75fb ; ret
0x00000000000e7617 : cmp rax, -0xfff ; jae 0xe7628 ; ret
0x00000000000e764a : cmp rax, -0xfff ; jae 0xe765b ; ret
0x00000000000e7677 : cmp rax, -0xfff ; jae 0xe7688 ; ret
0x00000000000e76a7 : cmp rax, -0xfff ; jae 0xe76b8 ; ret
0x00000000000e76da : cmp rax, -0xfff ; jae 0xe76eb ; ret
0x00000000000e7707 : cmp rax, -0xfff ; jae 0xe7718 ; ret
0x00000000000e773a : cmp rax, -0xfff ; jae 0xe774b ; ret
0x00000000000e8507 : cmp rax, -0xfff ; jae 0xe8518 ; ret
0x00000000000e8537 : cmp rax, -0xfff ; jae 0xe8548 ; ret
0x00000000000e8660 : cmp rax, -0xfff ; jae 0xe86a1 ; ret
0x00000000000e86c7 : cmp rax, -0xfff ; jae 0xe86d8 ; ret
0x00000000000e86f7 : cmp rax, -0xfff ; jae 0xe8708 ; ret
0x00000000000e8727 : cmp rax, -0xfff ; jae 0xe8738 ; ret
0x00000000000e8757 : cmp rax, -0xfff ; jae 0xe8768 ; ret
0x00000000000e895a : cmp rax, -0xfff ; jae 0xe896b ; ret
0x00000000000e8987 : cmp rax, -0xfff ; jae 0xe8998 ; ret
0x00000000000e89b7 : cmp rax, -0xfff ; jae 0xe89c8 ; ret
0x00000000000e89fa : cmp rax, -0xfff ; jae 0xe8a0b ; ret
0x00000000000e8a27 : cmp rax, -0xfff ; jae 0xe8a38 ; ret
0x00000000000e8a57 : cmp rax, -0xfff ; jae 0xe8a68 ; ret
0x00000000000e8a87 : cmp rax, -0xfff ; jae 0xe8a98 ; ret
0x00000000000e8ab7 : cmp rax, -0xfff ; jae 0xe8ac8 ; ret
0x00000000000e8ae7 : cmp rax, -0xfff ; jae 0xe8af8 ; ret
0x00000000000e8b17 : cmp rax, -0xfff ; jae 0xe8b28 ; ret
0x00000000000e8b47 : cmp rax, -0xfff ; jae 0xe8b58 ; ret
0x00000000000e8b77 : cmp rax, -0xfff ; jae 0xe8b88 ; ret
0x00000000000e8baa : cmp rax, -0xfff ; jae 0xe8bbb ; ret
0x00000000000e8be3 : cmp rax, -0xfff ; jae 0xe8c27 ; ret
0x00000000000e8c37 : cmp rax, -0xfff ; jae 0xe8c48 ; ret
0x00000000000e8c6a : cmp rax, -0xfff ; jae 0xe8c7b ; ret
0x00000000000e8c97 : cmp rax, -0xfff ; jae 0xe8ca8 ; ret
0x00000000000e8cc7 : cmp rax, -0xfff ; jae 0xe8cd8 ; ret
0x00000000000e8cf7 : cmp rax, -0xfff ; jae 0xe8d08 ; ret
0x00000000000e8d27 : cmp rax, -0xfff ; jae 0xe8d38 ; ret
0x00000000000e8d57 : cmp rax, -0xfff ; jae 0xe8d68 ; ret
0x00000000000e8d8a : cmp rax, -0xfff ; jae 0xe8d9b ; ret
0x00000000000e8dba : cmp rax, -0xfff ; jae 0xe8dcb ; ret
0x00000000000e8de7 : cmp rax, -0xfff ; jae 0xe8df8 ; ret
0x00000000000e8e17 : cmp rax, -0xfff ; jae 0xe8e28 ; ret
0x00000000000e8e47 : cmp rax, -0xfff ; jae 0xe8e58 ; ret
0x00000000000e8e7a : cmp rax, -0xfff ; jae 0xe8e8b ; ret
0x00000000000e8eaa : cmp rax, -0xfff ; jae 0xe8ebb ; ret
0x00000000000e8eda : cmp rax, -0xfff ; jae 0xe8eeb ; ret
0x00000000000e8f13 : cmp rax, -0xfff ; jae 0xe8f57 ; ret
0x00000000000e8f67 : cmp rax, -0xfff ; jae 0xe8f78 ; ret
0x00000000000e8fa3 : cmp rax, -0xfff ; jae 0xe8fe7 ; ret
0x00000000000e8ff7 : cmp rax, -0xfff ; jae 0xe9008 ; ret
0x00000000000e9027 : cmp rax, -0xfff ; jae 0xe9038 ; ret
0x00000000000e9063 : cmp rax, -0xfff ; jae 0xe90a7 ; ret
0x00000000000e90b7 : cmp rax, -0xfff ; jae 0xe90c8 ; ret
0x00000000000e90ea : cmp rax, -0xfff ; jae 0xe90fb ; ret
0x00000000000e9117 : cmp rax, -0xfff ; jae 0xe9128 ; ret
0x00000000000e9147 : cmp rax, -0xfff ; jae 0xe9158 ; ret
0x00000000000e917a : cmp rax, -0xfff ; jae 0xe918b ; ret
0x00000000000e91b0 : cmp rax, -0xfff ; jae 0xe91f1 ; ret
0x00000000000e9207 : cmp rax, -0xfff ; jae 0xe9218 ; ret
0x00000000000e923a : cmp rax, -0xfff ; jae 0xe924b ; ret
0x00000000000e926a : cmp rax, -0xfff ; jae 0xe927b ; ret
0x00000000000e92c0 : cmp rax, -0xfff ; jae 0xe9301 ; ret
0x00000000000e9317 : cmp rax, -0xfff ; jae 0xe9328 ; ret
0x00000000000e9350 : cmp rax, -0xfff ; jae 0xe9391 ; ret
0x00000000000e93a7 : cmp rax, -0xfff ; jae 0xe93b8 ; ret
0x00000000000e93d7 : cmp rax, -0xfff ; jae 0xe93e8 ; ret
0x00000000000e940a : cmp rax, -0xfff ; jae 0xe941b ; ret
0x00000000000e9437 : cmp rax, -0xfff ; jae 0xe9448 ; ret
0x00000000000e9523 : cmp rax, -0xfff ; jae 0xe9567 ; ret
0x00000000000e9580 : cmp rax, -0xfff ; jae 0xe95c1 ; ret
0x00000000000e9690 : cmp rax, -0xfff ; jae 0xe96d1 ; ret
0x00000000000e96f3 : cmp rax, -0xfff ; jae 0xe9737 ; ret
0x00000000000e974a : cmp rax, -0xfff ; jae 0xe975b ; ret
0x00000000000e9777 : cmp rax, -0xfff ; jae 0xe9788 ; ret
0x00000000000e97a7 : cmp rax, -0xfff ; jae 0xe97b8 ; ret
0x00000000000e97da : cmp rax, -0xfff ; jae 0xe97eb ; ret
0x00000000000e9cf3 : cmp rax, -0xfff ; jae 0xe9d37 ; ret
0x00000000000e9d53 : cmp rax, -0xfff ; jae 0xe9d97 ; ret
0x00000000000e9da7 : cmp rax, -0xfff ; jae 0xe9db8 ; ret
0x00000000000e9dd7 : cmp rax, -0xfff ; jae 0xe9de8 ; ret
0x00000000000e9e07 : cmp rax, -0xfff ; jae 0xe9e18 ; ret
0x00000000000e9e37 : cmp rax, -0xfff ; jae 0xe9e48 ; ret
0x00000000000e9e6a : cmp rax, -0xfff ; jae 0xe9e7b ; ret
0x00000000000e9e9a : cmp rax, -0xfff ; jae 0xe9eab ; ret
0x00000000000e9ec7 : cmp rax, -0xfff ; jae 0xe9ed8 ; ret
0x00000000000e9ef7 : cmp rax, -0xfff ; jae 0xe9f08 ; ret
0x00000000000e9f27 : cmp rax, -0xfff ; jae 0xe9f38 ; ret
0x00000000000e9f57 : cmp rax, -0xfff ; jae 0xe9f68 ; ret
0x0000000000035d1b : cmp rax, 0x80 ; jne 0x35d10 ; xor eax, eax ; ret
0x0000000000035d6b : cmp rax, 0x80 ; jne 0x35d60 ; xor eax, eax ; ret
0x00000000000ffbac : cmp rax, 0xfd ; jbe 0xffbbf ; pop rbx ; ret
0x000000000007081d : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000430aa : cmp rax, rbx ; jne 0x430a6 ; pop rbx ; ret
0x00000000000774b8 : cmp rax, rcx ; jae 0x774e8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000113960 : cmp rax, rdx ; je 0x113979 ; add rsp, 8 ; ret
0x0000000000043e8c : cmp rax, rdx ; jne 0x43e87 ; xor eax, eax ; ret
0x0000000000043f6c : cmp rax, rdx ; jne 0x43f67 ; xor eax, eax ; ret
0x000000000014c13b : cmp rbx, rbp ; jae 0x14c150 ; call qword ptr [rbx]
0x000000000014c13b : cmp rbx, rbp ; jae 0x14c154 ; call qword ptr [rbx]
0x00000000001489fa : cmp rcx, rax ; jne 0x148a2a ; xor eax, eax ; ret
0x000000000014983a : cmp rcx, rax ; jne 0x14986a ; xor eax, eax ; ret
0x0000000000091cef : cmp rcx, rdx ; jne 0x91cee ; ret
0x0000000000076769 : cmp rcx, rsi ; jne 0x76768 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014c377 : cmp rdi, 1 ; ja 0x14c386 ; ret
0x000000000010dd51 : cmp rdi, rcx ; jne 0x10dd46 ; ret
0x00000000000e7794 : cmp rdi, rdx ; jne 0xe7791 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000db2ff : cmp rdi, rsi ; ja 0xdb29e ; pop rbx ; ret
0x00000000000db32f : cmp rdi, rsi ; ja 0xdb326 ; ret
0x00000000000b9a4f : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x000000000010385c : cmp rdx, r8 ; jne 0x103847 ; ret
0x00000000000f4e31 : cmp rdx, rax ; jne 0xf4e16 ; ret
0x00000000000e9c76 : cmp rdx, rcx ; cmovae rax, rsi ; ret
0x00000000000ac5a3 : cmp rdx, rcx ; jb 0xac576 ; ret
0x00000000001166c1 : cmp rdx, rcx ; je 0x1166d6 ; ret
0x00000000000856db : cmp rdx, rcx ; jne 0x856c6 ; ret
0x00000000000856da : cmp rdx, rcx ; jne 0x856c7 ; ret
0x000000000008be18 : cmp rdx, rcx ; jne 0x8be16 ; ret
0x00000000000bb61a : cmp rdx, rcx ; jne 0xbb656 ; ret
0x00000000000f45b9 : cmp rdx, rdi ; setae al ; ret
0x000000000006e8c9 : cmp rsi, rcx ; jb 0x6e8c8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000008a77b : cmp rsi, rcx ; jne 0x8a76f ; xor eax, eax ; ret
0x00000000000e10c3 : cmp rsi, rdx ; ja 0xe10d6 ; ret
0x00000000001260e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000002edbd : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000001263e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001272e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001716cd : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; js 0x171680 ; hlt ; jmp rsp
0x000000000018f755 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; test al, 0xa2 ; cmc ; jmp qword ptr [rbx]
0x00000000001716fd : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; xor al, 0xa9 ; hlt ; jmp rsp
0x0000000000126fe7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000148479 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000015f1d9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x000000000015ed9d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x10fffca7]
0x000000000018f949 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x00000000000e44d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x000000000015f1dd : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp qword ptr [rax]
0x000000000016d028 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ah, 0xfd ; jmp qword ptr [rsi]
0x000000000016d020 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov bl, 0xfd ; jmp qword ptr [rsi]
0x000000000016d030 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov ch, 0xfd ; jmp qword ptr [rsi]
0x000000000016d01c : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dl, 0xfd ; jmp qword ptr [rsi + 0x26fffdb3]
0x0000000000091354 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000121726 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126ce7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001269e7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000008780 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rax ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000183638 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffef
0x000000000018082c : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0xef ; jmp qword ptr [rdx]
0x00000000001740ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; and al, 0xd7 ; stc ; jmp rsp
0x00000000000f5105 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018f885 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000017170d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; push rsp ; scasb al, byte ptr [rdi] ; hlt ; call rsp
0x00000000000944e0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000015eda1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x0000000000186614 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fcompi st(1) ; jmp qword ptr [rdx]
0x0000000000182714 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jae 0x182709 ; jmp qword ptr [rdx]
0x000000000015ec6d : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rax]
0x000000000007c0e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000038a2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000f5965 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x000000000017170c : cmpsq qword ptr [rsi], qword ptr [rdi] ; add dword ptr [rax], eax ; push rsp ; scasb al, byte ptr [rdi] ; hlt ; call rsp
0x00000000000038a1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000018f138 : cqo ; cmc ; jmp qword ptr [rcx]
0x0000000000038203 : cqo ; idiv rsi ; ret
0x0000000000044411 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000000266d8 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000111acf : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000742a2 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000016ef0d : cwde ; add byte ptr [rax], al ; jp 0x16ef05 ; jmp rsp
0x000000000018e8e5 : cwde ; add dword ptr [rax], eax ; js 0x18e96a ; cmc ; jmp rax
0x0000000000056e77 : cwde ; add rax, rdx ; jmp rax
0x00000000000b6a47 : cwde ; call r14
0x000000000015ed75 : cwde ; cld ; push qword ptr [rax - 0x67] ; cld ; call qword ptr [rax]
0x000000000018c358 : cwde ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018f0a9 : cwde ; cmc ; jmp qword ptr [rcx]
0x000000000018dad8 : cwde ; cmc ; jmp qword ptr [rsi]
0x000000000018c248 : cwde ; hlt ; hlt ; jmp qword ptr [rcx]
0x000000000018c088 : cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x0000000000185368 : cwde ; int1 ; jmp rbx
0x00000000001952ec : cwde ; iretd ; cmc ; jmp qword ptr [rdx]
0x000000000018a191 : cwde ; jmp rdx
0x00000000000e050c : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000009d9b4 : cwde ; nop dword ptr [rax] ; ret
0x000000000007ff95 : cwde ; or al, 0 ; ret
0x0000000000193fa8 : cwde ; push rdx ; idiv bh ; ret 3
0x0000000000003aa5 : cwde ; ret
0x00000000001839e8 : cwde ; ret 0xffef
0x00000000001776b8 : cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x000000000010401e : cwde ; shr rax, 4 ; ret
0x0000000000191d58 : cwde ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000015e95c : cwde ; test al, 0xf0 ; jmp qword ptr [rax]
0x000000000015e914 : cwde ; test al, 0xf0 ; jmp rax
0x000000000018ef88 : cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x00000000000496ff : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x0000000000095a29 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x0000000000093a11 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000095a2a : dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000093a12 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000007e920 : dec byte ptr [rax + 0x31] ; salc ; mov qword ptr [rax + 8], rsi ; ret
0x000000000007e88b : dec byte ptr [rax + 0x39] ; ret 0x2f74
0x0000000000079df5 : dec byte ptr [rax - 0x73] ; ret
0x000000000007ea4c : dec byte ptr [rax - 0x77] ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007eb81 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000045e27 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x000000000003ce32 : dec byte ptr [rax - 0x77] ; ret
0x00000000000456df : dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000007611a : dec byte ptr [rcx - 0x3b7cb7fd] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000479c7 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000002e34d : dec byte ptr [rsi + 0x13] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005bd96 : dec dword ptr [r8 + 0x39] ; ret
0x00000000000ffbaa : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0xffbc1 ; pop rbx ; ret
0x0000000000042b05 : dec dword ptr [r9 + 0x39] ; ret 0x1477
0x0000000000090fbf : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x000000000003e299 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000008ce39 : dec dword ptr [rax + 0x29] ; ret
0x0000000000095baa : dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000093b52 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003b248 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000004065b : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000000bd85f : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000002743c : dec dword ptr [rax + 0x39] ; ret
0x00000000000ac35f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000073bd5 : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000101aaf : dec dword ptr [rax + 0x39] ; ret 0x870f
0x00000000000a5ddd : dec dword ptr [rax + 0x39] ; ret 0x8d4c
0x00000000000b52f0 : dec dword ptr [rax + 0x63] ; and cl, bpl ; ret 0xffed
0x00000000000602d5 : dec dword ptr [rax + 0x63] ; ret
0x000000000003b0c9 : dec dword ptr [rax + 0x63] ; ret 0x21e9
0x00000000000401ec : dec dword ptr [rax + 0x63] ; ret 0x26e9
0x000000000003db04 : dec dword ptr [rax + 0x63] ; ret 0xd6e9
0x0000000000083be9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000085bf4 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003850b : dec dword ptr [rax + 0xf] ; ret
0x00000000000b9a52 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000084a42 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000eafeb : dec dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000dde8e : dec dword ptr [rax + 0xf] ; ret 0x894c
0x0000000000074340 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000011cf72 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002df89 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x00000000000bb52e : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000006108c : dec dword ptr [rax + 1] ; ret
0x0000000000172eeb : dec dword ptr [rax + rbp + 0x3460002] ; clc ; call rsp
0x0000000000113c39 : dec dword ptr [rax - 0x2d] ; ret 0x2148
0x0000000000035b73 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000005b85d : dec dword ptr [rax - 0x39] ; ret
0x00000000000a8a67 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000014c957 : dec dword ptr [rax - 0x4f0012a5] ; pop rbx ; in eax, dx ; jmp qword ptr [rax]
0x00000000000e050a : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000e2524 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000220fe : dec dword ptr [rax - 0x73] ; add eax, 0x38827a ; ret
0x000000000002890c : dec dword ptr [rax - 0x73] ; add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000002854d : dec dword ptr [rax - 0x73] ; add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000103293 : dec dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7507
0x0000000000116db5 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000007cbb3 : dec dword ptr [rax - 0x75] ; je 0x7cbe5 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000107ee2 : dec dword ptr [rax - 0x75] ; jl 0x107f12 ; sbb al, ch ; ret
0x00000000000d701f : dec dword ptr [rax - 0x75] ; jl 0xd7050 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x0000000000022d0d : dec dword ptr [rax - 0x75] ; js 0x22d33 ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x00000000000d4131 : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff58 ; call r12
0x0000000000090d2d : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000d44bf : dec dword ptr [rax - 0x77] ; add al, 0x24 ; call r12
0x000000000007ec8f : dec dword ptr [rax - 0x77] ; add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000788a1 : dec dword ptr [rax - 0x77] ; and al, 8 ; call qword ptr [rax]
0x00000000000216f2 : dec dword ptr [rax - 0x77] ; call 0xffffffffc32fa049
0x0000000000085898 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000e1176 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007f214 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000011688c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000f102e : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x0000000000021041 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 1] ; ret
0x00000000000b060c : dec dword ptr [rax - 0x77] ; jmp 0x48cd8f62
0x00000000000cfb2e : dec dword ptr [rax - 0x77] ; jmp 0x4ccf8484
0x000000000002015b : dec dword ptr [rax - 0x77] ; ret
0x00000000000f520f : dec dword ptr [rax - 0x77] ; ret 0x1376
0x00000000000bd553 : dec dword ptr [rax - 0x77] ; ret 0x1deb
0x0000000000048ab6 : dec dword ptr [rax - 0x77] ; ret 0x21eb
0x00000000000e10b1 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x00000000000488c1 : dec dword ptr [rax - 0x77] ; ret 0x37eb
0x000000000007297c : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000007b0e1 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x0000000000035f24 : dec dword ptr [rax - 0x77] ; ret 0x4877
0x0000000000035e22 : dec dword ptr [rax - 0x77] ; ret 0x4a77
0x0000000000062d08 : dec dword ptr [rax - 0x77] ; ret 0x5fe8
0x00000000000b9a41 : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000bbed6 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000e09ae : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000103149 : dec dword ptr [rax - 0x77] ; ret 0x7be9
0x0000000000110778 : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000007ac2b : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000119a8a : dec dword ptr [rax - 0x77] ; ret 0x854d
0x00000000000351f2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000049f5e : dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007216a : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000dad51 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000049ac3 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000ec91f : dec dword ptr [rax - 0x77] ; ret 0xb9
0x00000000000de396 : dec dword ptr [rax - 0x77] ; ret 0xc1eb
0x00000000000ad7af : dec dword ptr [rax - 0x77] ; ret 0xc8e9
0x000000000007dfc1 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000e0fd3 : dec dword ptr [rax - 0x77] ; ret 0xd77
0x000000000006aab0 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000067347 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x000000000006636a : dec dword ptr [rax - 0x77] ; ret 0xfde8
0x000000000010c5ca : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000d222e : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000662f4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000002108f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000d8f1b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x83 ; ret
0x000000000007dfa1 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x7dfb8 ; pop rbx ; ret
0x000000000003e42b : dec dword ptr [rax - 0x7d] ; call 0xffffffffc2052d3b
0x000000000011a0d1 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ffbab : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0xffbc0 ; pop rbx ; ret
0x00000000000a775a : dec dword ptr [rax - 0x7d] ; jge 0xa770f ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002d8d9 : dec dword ptr [rax - 0x7d] ; ret
0x000000000002868a : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c2c36 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000020c22 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000046cdd : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x0000000000074f0c : dec dword ptr [rax - 0x7d] ; ret 0x8301
0x00000000000bf94f : dec dword ptr [rax - 0x7d] ; ret 0x8804
0x00000000000c815a : dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000062678 : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000470e0 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000056e96 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000006893d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x000000000001fb2c : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x000000000005a02b : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002c09b : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000072408 : dec dword ptr [rax - 0x7f] ; ret
0x00000000001338bc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000004b4cf : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000061643 : dec dword ptr [rbp + 0xf] ; ror byte ptr [r13 + 1], 1 ; ret 0x8d4a
0x00000000000b17cf : dec dword ptr [rbp + rcx*4 + 0x35] ; ret
0x0000000000171a93 : dec dword ptr [rbp + rdi*4 + 0x63740001] ; cmc ; call rsp
0x0000000000045d9e : dec dword ptr [rbp - 0x77] ; ret
0x00000000000ce63f : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c5a7b : dec dword ptr [rbp - 0x7cb7feb5] ; ret
0x000000000011daec : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000b627e : dec dword ptr [rbx + 4] ; jne 0xb62a4 ; pop rbx ; ret
0x00000000000bfa57 : dec dword ptr [rbx + rcx*4 + 0x75] ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000054945 : dec dword ptr [rbx - 0x10c77b] ; inc dword ptr [rbp + 0x29] ; ret 0x8d41
0x000000000016007b : dec dword ptr [rbx - 0x3d] ; cmc ; call qword ptr [rbp - 0x3d]
0x000000000008442c : dec dword ptr [rcx + 0x29] ; ret 0xf748
0x0000000000042b06 : dec dword ptr [rcx + 0x39] ; ret 0x1477
0x0000000000047594 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000007d0c1 : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000001819d6 : dec dword ptr [rcx + 0xd1cffef] ; or al, 0x3e ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000090342 : dec dword ptr [rcx + 1] ; ret 0x8b48
0x0000000000090195 : dec dword ptr [rcx + 1] ; ret 0xbbe9
0x000000000001fe6c : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [r14]
0x0000000000077fd9 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000017354b : dec dword ptr [rcx + rdx*2 - 0x6501fffe] ; clc ; call rsp
0x000000000004d40b : dec dword ptr [rcx - 0x39] ; ret
0x00000000001176d4 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x0000000000049f58 : dec dword ptr [rcx - 0x4a773] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f29a0 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000d5a6b : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000090fc0 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000022bc7 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x000000000005a2ee : dec dword ptr [rcx - 0x77] ; fucomp st(0) ; leave ; ret
0x00000000000c4a91 : dec dword ptr [rcx - 0x77] ; ret
0x000000000005901f : dec dword ptr [rcx - 0x77] ; ret 0x7fe9
0x000000000004af87 : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000004ab26 : dec dword ptr [rcx - 0x77] ; ret 0x85c7
0x0000000000058785 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x000000000004ae6a : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000078850 : dec dword ptr [rcx - 0x77] ; salc ; call qword ptr [rax]
0x0000000000064d93 : dec dword ptr [rcx - 0x7cb769fc] ; ret 0x4801
0x000000000003b876 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc23d0086
0x00000000000650df : dec dword ptr [rcx - 0x7d] ; cld ; add cl, byte ptr [rdi] ; test dword ptr [rax], esp ; ret
0x00000000000f60d1 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000275e3 : dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000003f8c1 : dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000091b38 : dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x00000000000e8795 : dec dword ptr [rcx] ; clc ; ret
0x00000000000f24dc : dec dword ptr [rcx] ; ret
0x00000000000eb546 : dec dword ptr [rcx] ; setbe al ; ret
0x000000000017170b : dec dword ptr [rdi + 1] ; add byte ptr [rsi + rbp*4 - 0xc], dl ; call rsp
0x00000000001733bb : dec dword ptr [rdi + rax*2 - 0x7634fffe] ; clc ; call rsp
0x000000000016f2d3 : dec dword ptr [rdi + rbp*4 + 0x29440000] ; in eax, dx ; jmp rsp
0x0000000000160033 : dec dword ptr [rdi - 0x66000a3e] ; ret 0xfff5
0x00000000000abac5 : dec dword ptr [rdi] ; mov bh, 0x7d ; ret 0xb70f
0x000000000002e5d6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2e567 ; loopne 0x2e5e7 ; ret
0x00000000000ebde5 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xebd76 ; loopne 0xebdf6 ; ret
0x000000000004260b : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e2c75 : dec dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000068b66 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x00000000000b37cd : dec dword ptr [rdi] ; ret 0x144
0x00000000000cf1dd : dec dword ptr [rdi] ; ret 0x148d
0x0000000000024f0b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000077926 : dec dword ptr [rdi] ; ret 0x6348
0x0000000000042017 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000039936 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000d4819 : dec dword ptr [rdi] ; ret 0x8588
0x00000000000273dd : dec dword ptr [rdi] ; test byte ptr [rax - 0x77000000], dh ; ret 0xe281
0x0000000000056aa9 : dec dword ptr [rdi] ; test cl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000014b190 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005d17d : dec dword ptr [rdi] ; xchg dword ptr [rsi - 0x77000000], esi ; ret 0x348
0x000000000008d0b8 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000d1e7c : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x00000000000434d7 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000aae3b : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd138
0x0000000000079c05 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x22e9
0x00000000000d2f6b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x00000000000bcee3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000000718bc : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000048ae3 : dec dword ptr [rdi] ; xor dword ptr [rcx - 3], 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000016f5cb : dec dword ptr [rdx + rax*8 + 0x1c780000] ; out dx, al ; call rsp
0x0000000000173eb3 : dec dword ptr [rdx + rdx*4 - 0x616ffffe] ; stc ; call rsp
0x000000000015f81f : dec dword ptr [rdx - 0x12] ; hlt ; dec dword ptr [rdx - 0x12] ; hlt ; jmp qword ptr [rdx]
0x000000000015f823 : dec dword ptr [rdx - 0x12] ; hlt ; jmp qword ptr [rdx]
0x0000000000067875 : dec dword ptr [rdx] ; jne 0x67880 ; ret
0x000000000006c000 : dec dword ptr [rdx] ; jne 0x6c06f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c34c : dec dword ptr [rdx] ; jne 0x6c37b ; mov eax, r8d ; pop rbx ; ret
0x000000000007117b : dec dword ptr [rdx] ; jne 0x711c2 ; ret
0x0000000000071275 : dec dword ptr [rdx] ; jne 0x712c2 ; mov eax, esi ; ret
0x0000000000071375 : dec dword ptr [rdx] ; jne 0x713c2 ; mov eax, esi ; ret
0x0000000000071fd0 : dec dword ptr [rdx] ; jne 0x72039 ; pop rbx ; ret
0x000000000015ffff : dec dword ptr [rip + 0x17fff5c2] ; ret 0xfff5
0x0000000000160063 : dec dword ptr [rip + 0x19fff5c3] ; ret
0x000000000014c7a6 : dec dword ptr [rip + 0x25b0ac] ; jne 0x14c7d5 ; ret
0x00000000001716fb : dec dword ptr [rsi + 1] ; add byte ptr [rcx + rbp*4], dh ; hlt ; jmp rsp
0x000000000016f65b : dec dword ptr [rsi + rax*8 - 0x7d7b0000] ; out dx, al ; call rsp
0x000000000016fa73 : dec dword ptr [rsi - 0x2b170000] ; out dx, eax ; call rsp
0x000000000015dd7b : dec dword ptr [rsi] ; idiv bh ; jmp rax
0x000000000006c757 : dec dword ptr [rsi] ; jne 0x6c7d0 ; mov eax, edx ; pop rbx ; ret
0x000000000006c8e9 : dec dword ptr [rsi] ; jne 0x6c96b ; mov eax, edx ; pop rbx ; ret
0x000000000006d230 : dec dword ptr [rsi] ; jne 0x6d2ac ; mov eax, edx ; pop rbx ; ret
0x000000000006d3d2 : dec dword ptr [rsi] ; jne 0x6d456 ; mov eax, edx ; pop rbx ; ret
0x000000000006d587 : dec dword ptr [rsi] ; jne 0x6d607 ; mov eax, edx ; pop rbx ; ret
0x00000000000714b5 : dec dword ptr [rsi] ; jne 0x71532 ; mov eax, edx ; pop rbx ; ret
0x0000000000071a2e : dec dword ptr [rsi] ; jne 0x71aa7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071b90 : dec dword ptr [rsi] ; jne 0x71c13 ; mov eax, edx ; pop rbx ; ret
0x0000000000071e85 : dec dword ptr [rsi] ; jne 0x71f02 ; mov eax, edx ; pop rbx ; ret
0x00000000000736ba : dec dword ptr [rsi] ; jne 0x73741 ; mov eax, edx ; pop rbx ; ret
0x00000000001715db : dec dword ptr [rsp + rbx*4 - 0x6ca8ffff] ; hlt ; call rsp
0x000000000016f94b : dec dword ptr [rsp + rbx*8 - 0x40960000] ; out dx, eax ; call rsp
0x000000000016f3ab : dec dword ptr [rsp + rsi*4 + 0x527d0000] ; in eax, dx ; call rsp
0x000000000015ece7 : dec eax ; and dh, bl ; jmp rax
0x000000000015f9a7 : dec eax ; or ch, dh ; ljmp ptr [rdx] ; or ch, dh ; call qword ptr [rsi]
0x000000000015eca3 : dec eax ; sal dl, 0xff ; loopne 0x15ec71 ; jmp rax
0x000000000015eca2 : dec eax ; sal dl, 0xff ; loopne 0x15ec72 ; jmp rax
0x0000000000162c4f : dec eax ; sti ; call rax
0x000000000004577d : dec ecx ; ret
0x0000000000160127 : dec ecx ; sal ch, 0xff ; pop rbp ; ret 0xfff5
0x000000000016001f : dec ecx ; sal ch, 0xff ; ret 0xfff5
0x000000000016004b : dec edi ; ret 0xfff5
0x0000000000172b1b : dec esp ; adc dword ptr [rdx], eax ; add ah, dl ; mov dh, 0xf7 ; jmp rsp
0x00000000001732e3 : dec esp ; add al, byte ptr [rax] ; jnp 0x1732eb ; jmp rsp
0x00000000001730c3 : dec esp ; add al, byte ptr ss:[rax] ; test byte ptr [rdi - 8], bl ; jmp rsp
0x0000000000170dc3 : dec esp ; add dword ptr [eax], eax ; test byte ptr [rbx], ch ; jmp rsp
0x000000000016ead3 : dec esp ; add dword ptr [rax], 0 ; xor al, 0 ; in al, dx ; jmp rsp
0x0000000000173193 : dec esp ; cmp dword ptr [rdx], eax ; add byte ptr [rsp - 8], ah ; jmp rsp
0x00000000001740eb : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; and al, 0xd7 ; stc ; jmp rsp
0x000000000016d80b : dec esp ; imul edi, esp, -1 ; jb 0x16d885 ; cld ; jmp rdx
0x0000000000174c13 : dec esp ; in eax, dx ; add al, byte ptr [rax] ; test ch, ah ; cli ; jmp rsp
0x0000000000170fdb : dec esp ; je 0x170fe8 ; add ah, al ; add al, 0xf3 ; jmp rsp
0x0000000000170fda : dec esp ; je 0x170fe9 ; add ah, al ; add al, 0xf3 ; jmp rsp
0x0000000000174463 : dec esp ; mov esi, 0x36f40002 ; cli ; jmp rsp
0x0000000000172873 : dec esp ; or byte ptr [rdx], al ; add byte ptr [rax - 9], dl ; jmp rsp
0x0000000000172193 : dec esp ; out 1, eax ; add ah, ah ; adc dh, bh ; jmp rsp
0x0000000000172353 : dec esp ; out dx, eax ; add dword ptr [rax], eax ; hlt ; xor edi, esi ; jmp rsp
0x0000000000174dfb : dec esp ; pop rbx ; add dword ptr [rax], eax ; and bl, r15b ; jmp rsp
0x0000000000170c9b : dec esp ; pop rdi ; add dword ptr [rax], eax ; mov ah, 0xd7 ; int1 ; jmp rsp
0x000000000017361b : dec esp ; push rbp ; add al, byte ptr [rax] ; add al, 0xa4 ; clc ; jmp rsp
0x00000000001746a3 : dec esp ; retf ; add al, byte ptr [rax] ; cli ; jmp rsp
0x0000000000171c0b : dec esp ; retf ; add dword ptr [rax], eax ; push rsp ; sbb dh, dh ; jmp rsp
0x0000000000173c83 : dec esp ; test dword ptr [rdx], eax ; add byte ptr [rdx + rdx*2], ah ; stc ; jmp rsp
0x000000000016ed63 : dec esp ; xchg eax, ecx ; add byte ptr [rax], al ; mov ah, 0x67 ; in al, dx ; jmp rsp
0x000000000016ee93 : dec esp ; xchg eax, esi ; add byte ptr [rax], al ; je 0x16ef17 ; in al, dx ; jmp rsp
0x0000000000095ba9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x0000000000093b51 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000091b37 : dec qword ptr [r9 - 0x7d] ; ret 0x8401
0x000000000018c3f9 : div ah ; jmp rbx
0x0000000000189ae5 : div bl ; jmp qword ptr [rdx]
0x000000000008cadf : div byte ptr [rbp + 0xa] ; jmp 0x8caaa
0x0000000000081dd2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000002b6b1 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x0000000000091331 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000014c076 : div byte ptr [rbx] ; in eax, dx ; push rbx ; ret
0x00000000001976c1 : div dh ; call qword ptr [rsi]
0x00000000000db331 : div dword ptr [rdi - 0x14] ; ret
0x00000000000db301 : div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x000000000006aa85 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000737b0 : div ebp ; pop rbp ; pop r12 ; ret
0x00000000000737ec : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004be9d : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x000000000009bc57 : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000018c491 : div esp ; jmp qword ptr [rcx]
0x000000000006aa84 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000737af : div rbp ; pop rbp ; pop r12 ; ret
0x00000000000737eb : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018c3f8 : div spl ; jmp rbx
0x00000000001818fe : enter -0x1076, -1 ; sbb al, 0xd ; adc byte ptr [rcx], dh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000001f5bc : enter -0x1401, -0x3a ; ret
0x000000000009124d : enter -0x178c, -0xd ; ret
0x00000000000924a1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000045e80 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x000000000014b304 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000162c50 : enter -0x4bd, -1 ; rol byte ptr [rbx - 5], 1 ; jmp rax
0x00000000000a83e3 : enter -0x72b4, 0x63 ; add al, 0xe8 ; ret
0x0000000000095a26 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x0000000000093a0e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000095ba6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x0000000000093b4e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001021d2 : enter -0x763d, 0x3a ; xor eax, eax ; ret
0x000000000019584e : enter -0xa2f, -1 ; sbb al, 0xd ; xchg eax, edi ; sal ch, 1 ; jmp qword ptr [rdx]
0x0000000000192e6e : enter -0xa54, -1 ; sbb al, 0xd ; sbb al, 0xac ; cmc ; jmp qword ptr [rdx]
0x000000000015f9a8 : enter -0xaf8, -1 ; sub cl, byte ptr [rax] ; cmc ; call qword ptr [rsi]
0x000000000015eca4 : enter -0xd40, -1 ; loopne 0x15ec70 ; jmp rax
0x000000000005e0f0 : enter -3, -1 ; add dword ptr [rcx - 0x77], ecx ; ret 0x19e9
0x0000000000049db1 : enter -6, -1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000049d50 : enter -6, -1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000011e164 : enter -6, -1 ; add rsp, 0x28 ; ret
0x000000000016f685 : enter 0, -0x5c ; or ebp, edi ; call rsp
0x000000000007eb1c : enter 0, 0 ; call rax
0x000000000010ec39 : enter 0, 0 ; jmp rcx
0x00000000000e77c3 : enter 0, 0 ; ret
0x00000000000bb78f : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x00000000000a7598 : enter 0x21eb, -0x7d ; call 0xffffffffc38db6aa
0x00000000000774ba : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000034934 : enter 0x280f, -0x3f ; ret
0x0000000000111e7e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000009eaea : enter 0x31c3, -0x40 ; nop ; ret
0x000000000008161d : enter 0x31c3, -0x40 ; ret
0x00000000001115d7 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000111534 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000111604 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fb2b : enter 0x48ff, -0x7d ; ret 0xeb04
0x00000000000e6220 : enter 0x4ae8, 0x7f ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000f82b6 : enter 0x577, -0x17 ; ret 0xfa5c
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000002ed0a : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000032ff6 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000015d09c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000148526 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000080041 : enter 0xf66, -0x15 ; ret
0x00000000001242c4 : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000017461d : enter 2, -0x6c ; pop rbp ; cli ; jmp rsp
0x0000000000099284 : enter 5, 0 ; ret
0x00000000000679e7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f670e : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000075f37 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000762c3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000041d86 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f553c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000188d38 : fadd dword ptr [rax] ; call rsp
0x00000000000c0337 : fadd dword ptr [rbp - 0x77] ; ret
0x00000000001191c9 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x00000000000ecd75 : fadd dword ptr [rcx + 0x5d] ; ret
0x000000000009eee4 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000c048d : fadd dword ptr [rcx - 0x77] ; ret
0x0000000000171e5d : fadd dword ptr [rcx] ; add ah, ah ; ret 0xfff6
0x0000000000171e55 : fadd dword ptr [rcx] ; add ah, al ; ret 0xfff6
0x0000000000171e65 : fadd dword ptr [rcx] ; add ah, dh ; ret 0xfff6
0x00000000001748ed : fadd dword ptr [rdx] ; add byte ptr [rsi + rax*4 - 6], al ; jmp rsp
0x000000000016f94d : fadd qword ptr [rax] ; add byte ptr [rdx - 0x41], ch ; out dx, eax ; call rsp
0x000000000017498d : fadd qword ptr [rdx] ; add byte ptr [rax], ah ; cli ; jmp rsp
0x000000000017ca94 : fadd st(0) ; out dx, al ; jmp qword ptr [rdx]
0x00000000000aa9d7 : fadd st(1) ; call 0xffffffff89ccd302
0x000000000017451c : fadd st(2), st(0) ; add al, byte ptr [rax] ; cli ; jmp qword ptr [rbx + rax*8]
0x000000000017cb6c : fadd st(2), st(0) ; out dx, al ; jmp qword ptr [rdx]
0x000000000014b928 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000014987e : fadd st(3) ; ret
0x000000000017d06c : fadd st(4), st(0) ; out dx, al ; jmp qword ptr [rdx]
0x00000000000e7300 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000148071 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015c6d8 : fcmovb st(0), st(3) ; ret
0x00000000001780ac : fcmovbe st(0), st(4) ; jmp 0x1780b2
0x000000000018e174 : fcom qword ptr [rax + 0x63780001] ; cmc ; call qword ptr [rdx]
0x0000000000191121 : fcomi st(5) ; jmp qword ptr [rdi]
0x000000000017ab48 : fcomp dword ptr [rax - 0x13] ; call qword ptr [rsi]
0x0000000000185308 : fcomp dword ptr [rax] ; int1 ; jmp qword ptr [rbx]
0x0000000000033926 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002b817 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006a29b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000325d0 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000e22d7 : fcomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000007f08a : fcomp dword ptr [rbx - 0x3d] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007c3d4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000001886ce : fcomp dword ptr [rdi + 0xd1cfff2] ; lahf ; jmp qword ptr [rdx]
0x000000000015d459 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000000b58c3 : fcomp qword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000018ed74 : fcomp qword ptr [rcx + rax - 0xa770800] ; jmp qword ptr [rcx]
0x000000000015b6c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000192e8c : fcomp st(0), st(1) ; add dword ptr [rax], eax ; ret 0xf641
0x000000000018665c : fcomp st(7) ; int1 ; jmp qword ptr [rdx]
0x00000000001706a9 : fcompi st(0) ; call rsp
0x0000000000186615 : fcompi st(1) ; jmp qword ptr [rdx]
0x000000000009bd30 : fcompi st(3) ; ret
0x0000000000172d19 : fcompi st(7) ; jmp rsp
0x00000000000430ac : fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000e5251 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xe5266
0x000000000017feb8 : fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019c274 : fdiv qword ptr [rcx + 2] ; add byte ptr [rax], cl ; ret 0xfff7
0x0000000000170681 : fdiv st(0) ; call rsp
0x00000000000d1e64 : fdiv st(3) ; ret
0x0000000000191099 : fdiv st(5) ; call rsp
0x000000000015ee0d : fdiv st(5), st(0) ; call qword ptr [rax - 0x2f000222]
0x000000000007c0bb : fdiv st(7), st(0) ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x000000000016d37d : fdivp st(3) ; jmp rax
0x000000000015ee11 : fdivp st(5) ; call rax
0x000000000018d2b8 : fdivr dword ptr [rcx] ; cmc ; jmp qword ptr [rcx]
0x00000000000ca2e2 : fdivr dword ptr [rcx] ; ret
0x000000000018c974 : fdivr qword ptr [rax + 1] ; add byte ptr [rax], bl ; or ebp, esi ; jmp qword ptr [rcx]
0x000000000010cce3 : fdivr qword ptr [rax + 1] ; pop rbx ; ret
0x0000000000173ba4 : fdivr qword ptr [rdi + 2] ; add byte ptr [rcx + rbp - 7], dh ; call rsp
0x000000000018c598 : fdivr st(2) ; hlt ; jmp qword ptr [rcx]
0x000000000016d3a9 : fdivr st(3) ; inc eax ; fsincos ; call qword ptr [rax]
0x00000000000f64e4 : fdivr st(4) ; hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000015aa15 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000172051 : fdivr st(6), st(0) ; call rsp
0x000000000005a8f1 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000145bfd : fdivr st(7) ; ret
0x00000000000968de : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000172ce1 : fdivr st(7), st(0) ; call rsp
0x0000000000170cb9 : fdivrp st(1) ; call rsp
0x0000000000197219 : fdivrp st(6) ; call rsp
0x0000000000182abd : fiadd dword ptr [rax] ; add byte ptr [rax], al ; movsxd rbp, edi ; call qword ptr [rsi]
0x000000000009f270 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x00000000000395dc : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000000dbf82 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x00000000000f5351 : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000007f084 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000182efd : fiadd word ptr [rax] ; add al, ah ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x000000000011b489 : fiadd word ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000a81e2 : fiadd word ptr [rcx + 0x29] ; ret
0x000000000004be89 : fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000a23f6 : fiadd word ptr [rcx - 0x77] ; ret 0x8d48
0x0000000000182efc : fiadd word ptr fs:[rax] ; add al, ah ; xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x0000000000176d66 : ficom dword ptr [rcx + 0xd1cffeb] ; xor al, 0x86 ; jmp 0x176d78
0x000000000016de48 : ficom dword ptr [rcx - 0x6e950004] ; cld ; call qword ptr [rax]
0x00000000000e5b89 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000015d2a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000000c22e5 : fidiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011d965 : fidivr dword ptr [rax + 1] ; ret
0x0000000000083d26 : fidivr word ptr [rbx] ; xor al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000d6c15 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000171f55 : fild dword ptr [rcx] ; add byte ptr [rax + rdx*8 - 0xa], dh ; call rsp
0x000000000016f995 : fild word ptr [rax] ; add ah, al ; ret 0xffef
0x00000000000a6c0a : fild word ptr [rcx + 0x29] ; ret
0x00000000000e06d6 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000256e0 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000006105d : fimul dword ptr [rax + 0x39] ; ret 0x820f
0x000000000003b4bf : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000001243b5 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000011f9a6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000272a9 : fimul dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000113230 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000000fe7ca : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x0000000000020680 : fimul dword ptr [rax - 1] ; ret 0x4eb
0x00000000000858c2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000007f217 : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x000000000007f3d3 : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000010d883 : fimul dword ptr [rcx - 0x77] ; ret
0x00000000001449a2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a58c1
0x0000000000145a22 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39a6941
0x0000000000034b1f : fimul dword ptr [rcx] ; ret 0xb70f
0x000000000008d890 : fimul dword ptr [rdi] ; test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007e986 : fimul dword ptr [rsi + 0x10032] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cfcf3 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x21e8
0x00000000000c22d3 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x000000000011688f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000003cec0 : fimul word ptr [rax - 0x77] ; ret
0x0000000000022685 : fimul word ptr [rax - 0x77] ; ret 0x8348
0x00000000000a07a8 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000070782 : fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x000000000004de90 : fimul word ptr [rax - 0x7d] ; ret
0x000000000007c2a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x00000000000440fe : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x44158
0x00000000000458ae : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x45908
0x00000000000e614f : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000007f2e9 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x000000000011408e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000033ecd : fimul word ptr [rdi] ; xchg al, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000033f41 : fimul word ptr [rdi] ; xchg byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000033fb9 : fimul word ptr [rdi] ; xchg byte ptr [rdi], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000deffe : fist dword ptr [rax - 0x5d3f418] ; dec dword ptr [rax + 0x39] ; ret
0x000000000006e728 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e608 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000011cb4b : fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x0000000000115991 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000113178 : fistp word ptr [rbx - 0x17] ; int1 ; ret 0xfff0
0x000000000007e9b2 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000056e73 : fisttp dword ptr [rax + 0x63] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000045bf4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x45c18
0x0000000000044d31 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000ea6be : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bab5a ; pop rbx ; ret
0x0000000000044d4b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000000606c9 : fisttp dword ptr [rdi] ; lahf ; rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x0000000000034a7a : fisttp dword ptr [rdi] ; ret
0x00000000000a4bcb : fisttp dword ptr [rdi] ; test byte ptr [rax - 0x47b80000], ch ; ret 0xffff
0x00000000000ea5bb : fisttp qword ptr [rax + 0x39] ; ret
0x00000000000846e3 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000c0baa : fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000084b1a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000114293 : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000006d23f : fisttp qword ptr [rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d208
0x000000000008cc6c : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x0000000000033932 : fisttp word ptr [rax - 0x39] ; ret
0x000000000011d544 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000010b38c : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x000000000005762e : fisttp word ptr [rax - 0x77] ; ret
0x00000000000dc765 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000029a4f : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000014c009 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000f1031 : fisttp word ptr [rax - 0x7d] ; ret
0x0000000000033ea1 : fisttp word ptr [rax - 0x7d] ; ret 0xf01
0x0000000000044dcf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000008d0b5 : fisttp word ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009005d : fisttp word ptr [rcx + 1] ; ret 0x8b48
0x0000000000124dad : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000007f95f : fisub dword ptr [rbp + 0xe] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000e0a31 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x0000000000148441 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000148141 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001829f5 : fld dword ptr [rax] ; add al, bh ; pop rsi ; out dx, eax ; call rax
0x00000000001829a5 : fld dword ptr [rax] ; add byte ptr [rax + 0x5e], bl ; out dx, eax ; jmp rcx
0x000000000019dcb4 : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000171e85 : fld dword ptr [rcx] ; add ah, dh ; ret
0x000000000017492d : fld dword ptr [rdx] ; add ah, al ; mov dl, bh ; jmp rsp
0x00000000000ab531 : fld qword ptr [rbx + 0x14809c5] ; ret
0x000000000015b701 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034bcf : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000160050 : fld st(2) ; cmc ; jmp rbx
0x00000000000ea861 : fld xword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000034c98 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034b69 : fld xword ptr [rsp + 8] ; ret
0x0000000000034c69 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034c49 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000034e19 : fldcw word ptr [rsp - 2] ; ret
0x000000000011a573 : fldenv dword ptr [rcx - 0x38b70004] ; ret 0xffff
0x0000000000084e59 : fldenv dword ptr [rsi + 0xf] ; je 0x84eb6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c6d7 : fldenv dword ptr [rsi + 0xf] ; je 0x8c734 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001484c1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084d51 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000177ab9 : fldpi ; jmp qword ptr [rdi]
0x000000000017bc81 : fldz ; call qword ptr [rax]
0x000000000017bae1 : fldz ; call qword ptr [rdx]
0x000000000003f94e : fldz ; jmp 0x3f3a1
0x00000000000441a4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000db2fe : fmul dword ptr [rax + 0x39] ; div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x00000000000e1185 : fmul dword ptr [rax + 0x39] ; ret
0x000000000008ddff : fmul dword ptr [rax + 1] ; ret
0x00000000000bc652 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000006696d : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000021044 : fmul dword ptr [rax - 1] ; ret
0x00000000000b3397 : fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x000000000005ea2d : fmul dword ptr [rcx - 0x77] ; ret
0x00000000000b1524 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002c8bb : fmul dword ptr [rsi + 0x63] ; add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022bca : fmul qword ptr [rax - 0x77] ; ret
0x00000000000b651b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000000803d9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000861ef : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000195534 : fmul st(7) ; cmc ; jmp qword ptr [rdx]
0x000000000003ea01 : fmulp st(1) ; ret
0x000000000017a96e : fnstcw word ptr [rbp*8 - 0x70f2e301] ; cmp ch, ch ; jmp qword ptr [rdx]
0x0000000000002516 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x00000000001712e1 : fpatan ; jmp rsp
0x00000000000338c5 : fpatan ; ret
0x00000000000badd1 : frstor dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x0000000000148241 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000034c9c : fscale ; fstp st(1) ; ret
0x000000000016d3ad : fsincos ; call qword ptr [rax]
0x00000000000f5c3f : fst qword ptr [rsi + 0xf480003] ; ret 0x8348
0x000000000015b3e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000008ce4e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000fda8e : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000159434 : fstp qword ptr [rcx - 0x13] ; call rax
0x000000000015b760 : fstp st(0) ; ret 0xde5d
0x00000000000e5250 : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xe5267
0x0000000000034d80 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000034c9e : fstp st(1) ; ret
0x0000000000034bd1 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034c6d : fstp xword ptr [rdi] ; ret
0x0000000000107413 : fstpnce st(3), st(0) ; sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000035348 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000dbfa8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000b9ac3 : fsub dword ptr [rcx + rcx*4 + 2] ; mov rax, rdi ; ret
0x0000000000035095 : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x0000000000148541 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000092884 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000017b81e : fsub dword ptr [rsi + rbp*8 + 0x140d1cff] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x000000000018f674 : fsub qword ptr [rbp - 0x5ed7ffff] ; cmc ; jmp qword ptr [rcx]
0x0000000000180d3c : fsub qword ptr [rdi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017380c : fsub qword ptr [rdx + rax] ; iretd ; clc ; call rsp
0x000000000018f374 : fsub qword ptr [rdx - 0x6417ffff] ; cmc ; jmp qword ptr [rcx]
0x000000000009b67b : fsub qword ptr [rsi + 0xf] ; jmp 0x9b647
0x0000000000148341 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008015c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000177c49 : fsub st(3), st(0) ; jmp qword ptr [rcx]
0x000000000010790b : fsub st(3), st(0) ; mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000017e605 : fsub st(6), st(0) ; jmp qword ptr [rdx]
0x0000000000183bd9 : fsub st(7), st(0) ; jmp qword ptr [rdx]
0x0000000000119753 : fsubp st(0) ; xchg eax, ecx ; dec dword ptr [rax + 0x29] ; ret
0x0000000000034bd3 : fsubp st(1) ; ret
0x000000000017e64d : fsubp st(6) ; jmp qword ptr [rdx]
0x0000000000187448 : fsubr dword ptr [rsi - 0xe] ; call qword ptr [rdx]
0x0000000000187e74 : fsubr qword ptr [rip - 0x1537ffff] ; jmp qword ptr [rax]
0x00000000000b8b84 : fsubr qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000177a69 : fsubr st(3) ; jmp qword ptr [rcx]
0x0000000000177a81 : fsubr st(3) ; jmp qword ptr [rdi]
0x000000000015d438 : fucom st(5) ; loop 0x15d491 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000651a7 : fucomi st(0) ; ret
0x000000000005a2f1 : fucomp st(0) ; leave ; ret
0x000000000005a870 : fucomp st(1) ; in eax, dx ; ret 0xffff
0x00000000000dd937 : fucompi st(0) ; add ebp, esp ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000006c761 : fucompi st(0) ; cdq ; sbb eax, 0xc2890000 ; jmp 0x6c731
0x000000000006d23d : fucompi st(0) ; fisttp qword ptr [rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d20a
0x000000000006c59b : fucompi st(0) ; jg 0x6c5c2 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6c54d
0x00000000000d1458 : fucompi st(0) ; mov dl, 7 ; sti ; dec dword ptr [rax + 1] ; ret
0x000000000002022d : fucompi st(0) ; pop rbp ; jmp 0x20242
0x00000000000714c3 : fucompi st(0) ; push rdi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7148f
0x0000000000023eb3 : fucompi st(0) ; ret
0x0000000000069aa8 : fucompi st(0) ; ret 0xfb59
0x0000000000033bc0 : fucompi st(0) ; stosb byte ptr [rdi], al ; mov eax, 0xc031fffe ; pop rbx ; ret
0x000000000003fd67 : fucompi st(0) ; sub edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000174119 : fyl2xp1 ; call rsp
0x000000000018b882 : hlt ; call qword ptr [rax]
0x000000000018c0fa : hlt ; call qword ptr [rcx]
0x000000000018b63a : hlt ; call qword ptr [rdi]
0x000000000018b68a : hlt ; call qword ptr [rdx]
0x000000000015f9b2 : hlt ; call qword ptr [rsi]
0x000000000018b6a2 : hlt ; call rdx
0x000000000017144a : hlt ; call rsp
0x0000000000174468 : hlt ; cli ; jmp rsp
0x000000000017898c : hlt ; cmp byte ptr [rax], al ; add byte ptr [rax], ah ; stc ; jmp 0x17899a
0x0000000000091223 : hlt ; cmp ecx, edx ; je 0x9121e ; ret
0x00000000000f6393 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000000000017170a : hlt ; dec dword ptr [rdi + 1] ; add byte ptr [rsi + rbp*4 - 0xc], dl ; call rsp
0x000000000015f81e : hlt ; dec dword ptr [rdx - 0x12] ; hlt ; dec dword ptr [rdx - 0x12] ; hlt ; jmp qword ptr [rdx]
0x000000000015f822 : hlt ; dec dword ptr [rdx - 0x12] ; hlt ; jmp qword ptr [rdx]
0x00000000001716fa : hlt ; dec dword ptr [rsi + 1] ; add byte ptr [rcx + rbp*4], dh ; hlt ; jmp rsp
0x00000000001715da : hlt ; dec dword ptr [rsp + rbx*4 - 0x6ca8ffff] ; hlt ; call rsp
0x000000000018c231 : hlt ; hlt ; jmp qword ptr [rcx]
0x00000000000f64e6 : hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001717e2 : hlt ; inc dword ptr [rsp + rbp*4 - 0x3d8bffff] ; hlt ; call rsp
0x00000000001716ca : hlt ; inc esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; js 0x171683 ; hlt ; jmp rsp
0x000000000016e930 : hlt ; iretd ; jmp 0x16e936
0x000000000018c48c : hlt ; jae 0x18c497 ; add al, al ; div esp ; jmp qword ptr [rcx]
0x000000000015b7e8 : hlt ; jmp 0x15b7bd
0x0000000000189a72 : hlt ; jmp qword ptr [rax]
0x000000000018b46a : hlt ; jmp qword ptr [rcx]
0x000000000018b2ba : hlt ; jmp qword ptr [rdi]
0x000000000015f826 : hlt ; jmp qword ptr [rdx]
0x000000000018c172 : hlt ; jmp qword ptr [rsi]
0x000000000018c3fa : hlt ; jmp rbx
0x000000000018bb2a : hlt ; jmp rdx
0x0000000000171359 : hlt ; jmp rsp
0x000000000014b805 : hlt ; jne 0x14b927 ; ret
0x000000000014b804 : hlt ; jne 0x14b928 ; ret
0x000000000018c68c : hlt ; jne 0x18c697 ; add al, dl ; cld ; hlt ; jmp qword ptr [rcx]
0x00000000000d2cee : hlt ; jne 0xd2ce6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d2ced : hlt ; jne 0xd2ce7 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016ee48 : hlt ; jno 0x16ee3a ; call rsp
0x000000000019c18c : hlt ; jo 0x19c198 ; add byte ptr [rax], dl ; add edi, ebx ; jmp qword ptr [rdx]
0x00000000000da586 : hlt ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000017167a : hlt ; lcall ptr [rdx - 0x5cf7ffff] ; hlt ; jmp rsp
0x000000000015fa3a : hlt ; ljmp ptr [rax + 0x16fff509] ; in al, dx ; hlt ; call qword ptr [rsi]
0x000000000015f9ba : hlt ; ljmp ptr [rax + 0xb] ; cmc ; call qword ptr [rsi]
0x0000000000171442 : hlt ; ljmp ptr [rcx + rdx*4 + 0x77740001] ; hlt ; call rsp
0x000000000015f836 : hlt ; ljmp ptr [rcx - 0x7b000b0d] ; add dh, ch ; call rax
0x00000000001835a4 : hlt ; loopne 0x1835ac ; add al, bh ; ret 0xffef
0x0000000000133cfa : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bffe : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000014ae13 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000017f04d : hlt ; out dx, al ; jmp qword ptr [rdx]
0x00000000000df35b : hlt ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000018a18c : hlt ; push rax ; add dword ptr [rax], eax ; nop ; cwde ; jmp rdx
0x000000000009120b : hlt ; ret
0x000000000018138c : hlt ; ret 0
0x0000000000171e68 : hlt ; ret 0xfff6
0x0000000000174048 : hlt ; ret 0xfff9
0x0000000000171b14 : hlt ; ret 1
0x000000000019a6dc : hlt ; sal dh, cl ; jmp qword ptr [rdx]
0x0000000000173768 : hlt ; sar al, 0xff ; mov esp, 0x9400025f ; ret
0x0000000000173c00 : hlt ; stc ; call rsp
0x000000000017fb7c : hlt ; stc ; out dx, al ; jmp qword ptr [rdx]
0x000000000016d2cd : hlt ; sti ; jmp qword ptr [rax]
0x000000000016d2ed : hlt ; sti ; jmp rax
0x000000000015b923 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000017715c : hlt ; stosd dword ptr [rdi], eax ; jmp 0x177162
0x0000000000197b8c : hlt ; sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; sti ; jmp qword ptr [rdx]
0x000000000014ae17 : hlt ; sub eax, edx ; ret
0x0000000000003c81 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000018d58c : hlt ; test byte ptr [rcx], al ; add byte ptr [rax + 0x41], al ; cmc ; jmp qword ptr [rbx]
0x00000000000c3703 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc369a ; pop rbx ; ret
0x0000000000172358 : hlt ; xor edi, esi ; jmp rsp
0x0000000000171e82 : idiv bh ; add al, 0xd9 ; add dword ptr [rax], eax ; hlt ; ret
0x00000000001603e2 : idiv bh ; add al, 0xf6 ; jmp rsp
0x000000000003b0c7 : idiv bh ; dec dword ptr [rax + 0x63] ; ret 0x21e9
0x00000000000e44d7 : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x0000000000103147 : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x7be9
0x0000000000028688 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c8158 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000045782 : idiv bh ; dec ecx ; ret
0x0000000000171e52 : idiv bh ; fadd dword ptr [rcx] ; add ah, al ; ret 0xfff6
0x00000000000cc739 : idiv bh ; inc dword ptr [rcx] ; ret
0x0000000000171e62 : idiv bh ; je 0x171e45 ; add dword ptr [rax], eax ; hlt ; ret 0xfff6
0x000000000015dd7d : idiv bh ; jmp rax
0x0000000000160852 : idiv bh ; mov ebx, es ; idiv bh ; std ; ret
0x000000000017204a : idiv bh ; mov esp, 0x340001df ; fdivr st(6), st(0) ; call rsp
0x0000000000171f52 : idiv bh ; mov esp, 0x740001db ; sal dh, 1 ; call rsp
0x00000000000e4a71 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x0000000000171c4a : idiv bh ; mov word ptr [rcx + rax - 0x9e66600], dr0 ; call rsp
0x00000000000b5cfb : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000171e5a : idiv bh ; pop rsp ; fadd dword ptr [rcx] ; add ah, ah ; ret 0xfff6
0x0000000000172082 : idiv bh ; pushfq ; loopne 0x172091 ; add byte ptr [rsp - 0xa], ah ; call rsp
0x0000000000160866 : idiv bh ; ret
0x0000000000193faa : idiv bh ; ret 3
0x000000000019a6d8 : idiv bh ; sbb al, 0xd ; hlt ; sal dh, cl ; jmp qword ptr [rdx]
0x0000000000197ad8 : idiv bh ; sbb al, 0xd ; lea ebx, dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x0000000000196ed0 : idiv bh ; sbb al, 0xd ; leave ; sub al, 0xf6 ; jmp qword ptr [rdx]
0x0000000000197a90 : idiv bh ; sbb al, 0xd ; mov dword ptr [rcx - 0xa], ebx ; jmp qword ptr [rdx]
0x0000000000195ed8 : idiv bh ; sbb al, 0xd ; pop rsp ; stc ; cmc ; jmp qword ptr [rdx]
0x0000000000195e90 : idiv bh ; sbb al, 0xd ; push rbp ; stc ; cmc ; jmp qword ptr [rdx]
0x0000000000195fb0 : idiv bh ; sbb al, 0xd ; push rdx ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000195f20 : idiv bh ; sbb al, 0xd ; test edi, ecx ; cmc ; jmp qword ptr [rdx]
0x00000000001977f8 : idiv bh ; sbb al, 0xd ; xor byte ptr [rdi - 0xa], cl ; jmp qword ptr [rdx]
0x00000000001974d0 : idiv bh ; sbb al, 0xd ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rdx]
0x0000000000160856 : idiv bh ; std ; ret
0x0000000000160862 : idiv bh ; test eax, 0x64fff6c2 ; ret
0x0000000000160df4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000171d9a : idiv bh ; xchg eax, esp ; rol dword ptr [rcx], cl ; add byte ptr [rax + rcx*4 - 0xa], ah ; jmp rsp
0x0000000000024f06 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x000000000016e1b8 : idiv byte ptr [rcx - 0x46790004] ; cld ; call qword ptr [rsi]
0x00000000000c7e18 : idiv byte ptr [rcx] ; ret 0xf40
0x00000000000e2522 : idiv cl ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000174231 : idiv ecx ; call rsp
0x0000000000044416 : idiv ecx ; pop r15 ; ret
0x00000000000a911e : idiv edi ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000e4464 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000004577b : idiv edi ; dec ecx ; ret
0x000000000015d8c9 : idiv edi ; jmp qword ptr [rcx]
0x00000000001723da : idiv edi ; mov esp, 0x340001f1 ; cmp bh, dh ; call rsp
0x00000000001729ba : idiv edi ; mov esp, 0x6400020c ; test al, 0xf7 ; call rsp
0x0000000000172cda : idiv edi ; mov esp, 0x84000218 ; fdivr st(7), st(0) ; call rsp
0x0000000000172aaa : idiv edi ; mov esp, 0xd400020f ; mov al, 0xf7 ; call rsp
0x0000000000172632 : idiv edi ; mov esp, 0xe40001fc ; movsxd rsi, edi ; call rsp
0x00000000000a90da : idiv edi ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000019a142 : idiv edi ; ret
0x0000000000198f4a : idiv edi ; ret 1
0x0000000000197f62 : idiv edi ; ret 2
0x000000000019cc10 : idiv edi ; sbb al, 0xd ; cld ; xor bh, dh ; jmp qword ptr [rdx]
0x000000000019cb38 : idiv edi ; sbb al, 0xd ; imul esi, dword ptr [rcx], -9 ; jmp qword ptr [rdx]
0x000000000019ce90 : idiv edi ; sbb al, 0xd ; xor byte ptr [rax], 0xf7 ; jmp qword ptr [rdx]
0x000000000019ced8 : idiv edi ; sbb al, 0xd ; xor dil, r14b ; jmp qword ptr [rdx]
0x000000000019cb80 : idiv edi ; sbb al, 0xd ; xor r15d, esi ; jmp qword ptr [rdx]
0x0000000000172672 : idiv edi ; xchg eax, esp ; inc byte ptr [rcx] ; add byte ptr [rsi + rbp*2 - 9], dh ; jmp rsp
0x000000000010749e : idiv edi ; xor eax, eax ; ret
0x0000000000038206 : idiv esi ; ret
0x00000000001977f7 : idiv r15b ; sbb al, 0xd ; xor byte ptr [rdi - 0xa], cl ; jmp qword ptr [rdx]
0x0000000000044415 : idiv r9 ; pop r15 ; ret
0x0000000000038205 : idiv rsi ; ret
0x00000000000c91af : imul al ; imul eax, esp, -5 ; call rcx
0x000000000011b967 : imul al ; ret
0x00000000000306a8 : imul al ; ret 1
0x000000000016e9b9 : imul bl ; jmp rsp
0x00000000000960d8 : imul cl ; ret 8
0x000000000005f45b : imul eax ; outsd dx, dword ptr [rsi] ; ret
0x00000000000eb137 : imul eax ; ret
0x000000000016e74d : imul eax, dword ptr [rax], 0 ; in al, 0x36 ; jmp 0x16e759
0x00000000000d36d2 : imul eax, dword ptr [rax], 0x450f0000 ; ret 0xbde9
0x0000000000149971 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000017c9c4 : imul eax, eax, -0x12 ; jmp qword ptr [rdx]
0x00000000001944e4 : imul eax, eax, -0xb ; jmp qword ptr [rdx]
0x000000000007884b : imul eax, ebp, 0xff310032 ; mov r14, rdx ; call qword ptr [rax]
0x00000000000e72a3 : imul eax, esi, 0x3948fff9 ; ret
0x00000000000c91b1 : imul eax, esp, -5 ; call rcx
0x0000000000178849 : imul ebx ; call qword ptr [rcx]
0x0000000000178831 : imul ebx ; call qword ptr [rdx]
0x00000000000efbe5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078159 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a02 : imul ebx, dword ptr [rbx + 0x5d], 0x5c41f089 ; ret
0x000000000007c672 : imul ecx ; ret
0x00000000000efb85 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000177b0e : imul ecx, dword ptr [rsi], 0x18 ; ret
0x00000000000efabf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c1d1 : imul edi, dword ptr [rbx - 0x3fce0001], 0x5b ; ret
0x000000000016cef9 : imul edi, ebx, 0xfb6af0ff ; call rax
0x000000000016d80d : imul edi, esp, -1 ; jb 0x16d883 ; cld ; jmp rdx
0x0000000000175bf1 : imul edx ; call qword ptr [rbx]
0x00000000000efbb5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000119913 : imul edx, dword ptr [rax], 0xf8830000 ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000002b60 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x000000000011a0a0 : imul edx, edx, 0x3e8 ; add edx, eax ; jmp 0x11a041
0x00000000000c23af : imul esi, dword ptr [rcx + rsi], -0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019cb3c : imul esi, dword ptr [rcx], -9 ; jmp qword ptr [rdx]
0x00000000000ab43e : imul esi, edx ; add eax, esi ; ret
0x0000000000096e1c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000000374c : in al, -0x12 ; jne 0x372e ; ret 0x975
0x00000000001784cd : in al, -0x15 ; jmp qword ptr [rdx]
0x000000000019397c : in al, -0x18 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000005eea8 : in al, -0x18 ; ret 0xfc05
0x0000000000175020 : in al, -0x23 ; std ; call rsp
0x0000000000174050 : in al, -0x3d ; stc ; call rsp
0x0000000000171e60 : in al, -0x3e ; idiv bh ; je 0x171e47 ; add dword ptr [rax], eax ; hlt ; ret 0xfff6
0x000000000017cb24 : in al, -0x3f ; out dx, al ; jmp qword ptr [rdx]
0x00000000000bc6c9 : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000171b78 : in al, -0x48 ; cmc ; call rsp
0x0000000000173f68 : in al, -0x51 ; stc ; jmp rsp
0x0000000000173690 : in al, -0x57 ; clc ; jmp rsp
0x0000000000171684 : in al, -0x5e ; add dword ptr [rax], eax ; and al, 0xa3 ; hlt ; call rsp
0x000000000018f17c : in al, -0x60 ; add dword ptr [rax], eax ; nop ; cdq ; cmc ; jmp qword ptr [rcx]
0x0000000000159590 : in al, -0x60 ; in eax, dx ; call rdi
0x00000000000f64ea : in al, -0x77 ; ret 0x87e
0x000000000019d77c : in al, -0x7a ; add al, byte ptr [rax] ; xor byte ptr [rax + rdi*8], al ; jmp qword ptr [rcx]
0x00000000000ce116 : in al, -0x7d ; mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000172089 : in al, -0xa ; call rsp
0x0000000000171358 : in al, -0xc ; jmp rsp
0x0000000000133cda : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015eb49 : in al, -0xf ; inc edi ; in eax, -0xf ; jmp rax
0x000000000007dfbf : in al, -1 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000016d3cd : in al, -5 ; lcall ptr [rax] ; adc ah, bh ; jmp rax
0x000000000016fd30 : in al, -6 ; out dx, eax ; jmp rsp
0x000000000019ccc1 : in al, -9 ; jmp qword ptr [rcx]
0x000000000014b838 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000e89e1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000014c313 : in al, 0x25 ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000177a7c : in al, 0x29 ; add byte ptr [rax], al ; loopne 0x177a61 ; jmp 0x177a8a
0x00000000000c233b : in al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000016e750 : in al, 0x36 ; jmp 0x16e756
0x000000000018947c : in al, 0x43 ; add dword ptr [rax], eax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018967c : in al, 0x45 ; add dword ptr [rax], eax ; mov al, 0x23 ; jmp rdx
0x000000000018b87c : in al, 0x67 ; add dword ptr [rax], eax ; loopne 0x18b827 ; hlt ; call qword ptr [rax]
0x000000000016f4b0 : in al, 0x70 ; in eax, dx ; call rsp
0x000000000007ff5c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000001137e2 : in al, 0x74 ; or dword ptr [rbx - 0x17d3db84], ecx ; ret 0xfc89
0x00000000000befaa : in al, 0x75 ; or dword ptr [rbx - 0x7bf0a308], eax ; ret 5
0x0000000000175f7c : in al, 0xe ; add byte ptr [rax], al ; cmp byte ptr [rcx], 0xeb ; jmp qword ptr [rbx]
0x000000000003dc5e : in al, 0xf ; test bh, bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000097958 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000173a58 : in al, 8 ; stc ; jmp rsp
0x00000000000f0b86 : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x0000000000174bed : in al, dx ; add al, byte ptr [rax] ; adc al, 0xe7 ; cli ; jmp rsp
0x000000000006bef3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000a99c4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x4b1
0x00000000000728c4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x822
0x0000000000183d25 : in al, dx ; add byte ptr [rax], al ; test al, 0xe0 ; out dx, eax ; jmp qword ptr [rax]
0x00000000000a5c79 : in al, dx ; add dh, byte ptr [rcx] ; shr bl, cl ; seto byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000018b684 : in al, dx ; add dword ptr gs:[rax], eax ; or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x000000000011f070 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000000f5c98 : in al, dx ; add eax, dword ptr [rax] ; ret
0x0000000000179122 : in al, dx ; call qword ptr [rax]
0x000000000002cd90 : in al, dx ; call qword ptr [rcx]
0x000000000017a3aa : in al, dx ; call qword ptr [rdi]
0x000000000017913a : in al, dx ; call qword ptr [rdx]
0x000000000017985a : in al, dx ; call qword ptr [rsi]
0x000000000016eb2a : in al, dx ; call rsp
0x00000000000dd93a : in al, dx ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000174c19 : in al, dx ; cli ; jmp rsp
0x00000000000453f8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000018f884 : in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000016ead2 : in al, dx ; dec esp ; add dword ptr [rax], 0 ; xor al, 0 ; in al, dx ; jmp rsp
0x000000000016ed62 : in al, dx ; dec esp ; xchg eax, ecx ; add byte ptr [rax], al ; mov ah, 0x67 ; in al, dx ; jmp rsp
0x000000000016ee92 : in al, dx ; dec esp ; xchg eax, esi ; add byte ptr [rax], al ; je 0x16ef18 ; in al, dx ; jmp rsp
0x0000000000045b69 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000015f9b1 : in al, dx ; hlt ; call qword ptr [rsi]
0x000000000015f9b9 : in al, dx ; hlt ; ljmp ptr [rax + 0xb] ; cmc ; call qword ptr [rsi]
0x00000000001977f6 : in al, dx ; idiv r15b ; sbb al, 0xd ; xor byte ptr [rdi - 0xa], cl ; jmp qword ptr [rdx]
0x000000000016f29a : in al, dx ; inc dword ptr [rbp + rbp*4 - 0x1e2c0000] ; in al, dx ; call rsp
0x000000000016ecc2 : in al, dx ; inc esp ; pop qword ptr [rax] ; add byte ptr [rcx - 0x14], ah ; jmp rsp
0x000000000018c784 : in al, dx ; jbe 0x18c78f ; add byte ptr [rax], cl ; add al, 0xf5 ; jmp qword ptr [rcx]
0x00000000000c34ed : in al, dx ; jl 0xc3529 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017a3c2 : in al, dx ; jmp qword ptr [rbx]
0x0000000000179646 : in al, dx ; jmp qword ptr [rdx]
0x0000000000179e9a : in al, dx ; jmp qword ptr [rsi]
0x0000000000179562 : in al, dx ; jmp rax
0x000000000017a16a : in al, dx ; jmp rbx
0x000000000016eada : in al, dx ; jmp rsp
0x00000000000dba43 : in al, dx ; jo 0xdba3f ; ret 0x4840
0x000000000016efe2 : in al, dx ; lcall ptr [rbp + rbx*4 - 0x6c9a0000] ; in al, dx ; jmp rsp
0x000000000016ee42 : in al, dx ; ljmp ptr [rbp + rdx*4 + 0x71f40000] ; in al, dx ; call rsp
0x0000000000174d3c : in al, dx ; loope 0x174d47 ; add byte ptr [rax + rax - 5], dl ; call rsp
0x00000000000e31d3 : in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000012bffa : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000091333 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x0000000000115b24 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x00000000001340da : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000010df2a : in al, dx ; or al, ch ; mov edi, 0x8900007f ; ret 0xc031
0x00000000000c37e6 : in al, dx ; or al, ch ; ret
0x0000000000041c1b : in al, dx ; or al, ch ; scasb al, byte ptr [rdi] ; mov ecx, 0x8948fffe ; ret
0x000000000007c94a : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000116b8f : in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000007b34a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000011fd94 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000dbb32 : in al, dx ; or dh, dh ; ret 0x7540
0x0000000000185a84 : in al, dx ; or dword ptr [rcx], eax ; add byte ptr [rax], cl ; mov dh, cl ; jmp rsi
0x000000000017f0e4 : in al, dx ; out dx, al ; jmp qword ptr [rdx]
0x000000000018c084 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x000000000018ee84 : in al, dx ; popfq ; add dword ptr [rax], eax ; test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x000000000016ef0a : in al, dx ; push qword ptr [rax + rbx*4 + 0x7a440000] ; in al, dx ; jmp rsp
0x000000000016eda2 : in al, dx ; push qword ptr [rdx + rdx*4 + 0x69c40000] ; in al, dx ; call rsp
0x000000000016ee0a : in al, dx ; push qword ptr [rsp + rdx*4 + 0x6f340000] ; in al, dx ; call rsp
0x0000000000091183 : in al, dx ; ret
0x0000000000103180 : in al, dx ; ret 0xfff1
0x0000000000191384 : in al, dx ; ret 1
0x000000000018ef84 : in al, dx ; sahf ; add dword ptr [rax], eax ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x000000000009e106 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3662276
0x0000000000107473 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011851d : in al, dx ; sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000176a84 : in al, dx ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], bl ; jmp 0x176a92
0x000000000016d2fd : in al, dx ; sti ; inc dword ptr [rax - 0x12] ; sti ; call qword ptr [rax]
0x000000000016d31d : in al, dx ; sti ; inc dword ptr [rax] ; out dx, al ; sti ; call rax
0x0000000000188e54 : in al, dx ; test al, 0xf2 ; jmp qword ptr [rdx]
0x000000000019d684 : in al, dx ; test dword ptr [rdx], eax ; add al, bh ; add edi, eax ; call qword ptr [rax]
0x000000000016df10 : in al, dx ; xchg ah, bh ; call qword ptr [rdx + 0x12fffc8e]
0x000000000018e284 : in al, dx ; xchg eax, ecx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000015ce7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ce11 ; ret 0x48f
0x000000000015ce7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ce12 ; ret 0x48f
0x00000000000fef22 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001706c9 : in eax, -0x10 ; call rsp
0x000000000009d9b2 : in eax, -0x15 ; cwde ; nop dword ptr [rax] ; ret
0x000000000017871d : in eax, -0x15 ; jmp qword ptr [rdx]
0x0000000000085d67 : in eax, -0x1d ; or eax, dword ptr [rax] ; ret
0x000000000015d439 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001954ec : in eax, -0x31 ; cmc ; jmp qword ptr [rdx]
0x000000000011073f : in eax, -0x77 ; ret 0x8948
0x0000000000173368 : in eax, -0x7d ; clc ; jmp rsp
0x0000000000197371 : in eax, -0xa ; jmp rax
0x0000000000133d5a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008a85a : in eax, -0xd ; ret
0x000000000015eb4d : in eax, -0xf ; jmp rax
0x000000000003e674 : in eax, -1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000003e429 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc2052d3d
0x0000000000063c61 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000015c901 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000015ee1d : in eax, -3 ; call qword ptr [rax - 0x2f000219]
0x000000000015b583 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000da708 : in eax, 0x39 ; ret
0x000000000008ea1a : in eax, 0x40 ; or byte ptr [rdi], dh ; ret
0x000000000009d10a : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x00000000000857ea : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000046022 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000e3181 : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f53a5 : in eax, 0x5d ; ret
0x000000000015a819 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000009cee3 : in eax, 0xf ; je 0x9cf08 ; add rax, 2 ; ret
0x0000000000174c15 : in eax, dx ; add al, byte ptr [rax] ; test ch, ah ; cli ; jmp rsp
0x0000000000183db5 : in eax, dx ; add byte ptr [rax], al ; pop rax ; sti ; out dx, eax ; jmp rdx
0x0000000000060fcf : in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000ffeaa : in eax, dx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014cea6 : in eax, dx ; call qword ptr [rax]
0x000000000017a862 : in eax, dx ; call qword ptr [rdi]
0x000000000017ab4a : in eax, dx ; call qword ptr [rsi]
0x0000000000159436 : in eax, dx ; call rax
0x0000000000159536 : in eax, dx ; call rdi
0x000000000017adaa : in eax, dx ; call rdx
0x000000000016f372 : in eax, dx ; call rsp
0x0000000000174c69 : in eax, dx ; cli ; call rsp
0x000000000009124a : in eax, dx ; cmp r8d, ecx ; je 0x9123f ; ret
0x000000000014c956 : in eax, dx ; dec dword ptr [rax - 0x4f0012a5] ; pop rbx ; in eax, dx ; jmp qword ptr [rax]
0x000000000016f2d2 : in eax, dx ; dec dword ptr [rdi + rbp*4 + 0x29440000] ; in eax, dx ; jmp rsp
0x000000000016f3aa : in eax, dx ; dec dword ptr [rsp + rsi*4 + 0x527d0000] ; in eax, dx ; call rsp
0x000000000014cea2 : in eax, dx ; inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x000000000016f4aa : in eax, dx ; inc dword ptr [rbx + rdi*4 + 0x70e40000] ; in eax, dx ; call rsp
0x000000000016f36a : in eax, dx ; inc dword ptr [rbx + rsi*4 + 0x47c40000] ; in eax, dx ; call rsp
0x0000000000170d49 : in eax, dx ; int1 ; jmp rsp
0x00000000000c65c7 : in eax, dx ; je 0xc658b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002dd0d : in eax, dx ; jmp 0x2dd17
0x000000000014c95e : in eax, dx ; jmp qword ptr [rax]
0x000000000017a7b6 : in eax, dx ; jmp qword ptr [rdx]
0x000000000014ceaa : in eax, dx ; jmp rax
0x000000000015948a : in eax, dx ; jmp rdx
0x000000000015958e : in eax, dx ; jmp rsp
0x000000000014becf : in eax, dx ; jne 0x14beb1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007591c : in eax, dx ; jne 0x75939 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000075b69 : in eax, dx ; jne 0x75ba1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d574a : in eax, dx ; jne 0xd5739 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009b592 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000009af59 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009af6f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009af91 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afaf : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009afcf : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009aff5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009b011 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009b031 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009b051 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009b077 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009b099 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0b7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009b0d7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009b0f3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009b113 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009b133 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009b153 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009b179 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009b1c9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009ae9f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aebd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009aedd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009aeff : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009af1f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009af3f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009add5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009ade7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009adfd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ae15 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ae2b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae3d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ae5b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ae67 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009ae7d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000221ba : in eax, dx ; mov byte ptr [rdi], 0 ; ret
0x000000000009adc1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000009f575 : in eax, dx ; mov edx, eax ; jmp 0x9f522
0x00000000000a1ac5 : in eax, dx ; mov edx, eax ; jmp 0xa1a72
0x00000000000a3f25 : in eax, dx ; mov edx, eax ; jmp 0xa3ed2
0x000000000012be0a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000091282 : in eax, dx ; mov rax, rdi ; ret
0x000000000013415a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000cbe5d : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000123900 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b9df8 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014c2d2 : in eax, dx ; pop rbx ; ret
0x000000000014c078 : in eax, dx ; push rbx ; ret
0x000000000006de72 : in eax, dx ; ret
0x0000000000078eb7 : in eax, dx ; ret 0x32
0x0000000000160058 : in eax, dx ; ret 0xfff5
0x000000000005a872 : in eax, dx ; ret 0xffff
0x00000000001887ec : in eax, dx ; sahf ; jmp qword ptr [rdx]
0x000000000016d27d : in eax, dx ; sti ; jmp qword ptr [rax]
0x000000000016d29d : in eax, dx ; sti ; push rax ; out dx, al ; sti ; call rax
0x0000000000192e2c : in eax, dx ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rdx]
0x000000000009b6e2 : in eax, dx ; sub rax, 1 ; ret
0x000000000007fca2 : in eax, dx ; xor eax, eax ; ret
0x0000000000085705 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000184e9d : inc byte ptr [rax] ; add al, al ; ret
0x0000000000184eb5 : inc byte ptr [rax] ; add al, ch ; ret
0x0000000000172675 : inc byte ptr [rcx] ; add byte ptr [rsi + rbp*2 - 9], dh ; jmp rsp
0x00000000000b53f1 : inc byte ptr [rcx] ; je 0xb5406 ; xor eax, eax ; ret
0x0000000000072ed9 : inc byte ptr [rdx] ; je 0x72eef ; mov dword ptr [rdi], edx ; ret
0x000000000002594d : inc byte ptr [rip + 0x7d3b4d00] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3187 : inc dword ptr [r8] ; ret
0x000000000016d3eb : inc dword ptr [rax + 0x10fffc1d] ; adc ah, bh ; call rax
0x000000000016d4d7 : inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016d457 : inc dword ptr [rax + 0x13] ; cld ; jmp qword ptr [rax]
0x000000000016d427 : inc dword ptr [rax + 0x1b] ; cld ; inc dword ptr [rax + 0x1d] ; cld ; call rax
0x000000000016d42b : inc dword ptr [rax + 0x1d] ; cld ; call rax
0x000000000016e38b : inc dword ptr [rax + 0x20fffcb7] ; lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000016ce37 : inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016d723 : inc dword ptr [rax + 0x27] ; cld ; call qword ptr [rax - 0x1f0003d8]
0x000000000016ce77 : inc dword ptr [rax + 0x33] ; sti ; push qword ptr [rax] ; xor al, 0xfb ; jmp qword ptr [rax]
0x000000000016d64f : inc dword ptr [rax + 0x37] ; cld ; inc dword ptr [rax] ; cmp esp, edi ; jmp rax
0x000000000016d633 : inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x000000000016ce93 : inc dword ptr [rax + 0x3c] ; sti ; jmp rax
0x000000000016d5ff : inc dword ptr [rax + 0x3f] ; cld ; jmp qword ptr [rax]
0x000000000016d62f : inc dword ptr [rax + 0x40fffc37] ; cmp esp, edi ; jmp qword ptr [rax]
0x000000000016ceb3 : inc dword ptr [rax + 0x49] ; sti ; jmp rax
0x000000000016ced3 : inc dword ptr [rax + 0x58] ; sti ; jmp qword ptr [rax]
0x000000000016dc4b : inc dword ptr [rax + 0x5efffc5a] ; xchg eax, ecx ; cld ; jmp rax
0x000000000016dbcb : inc dword ptr [rax + 0x61] ; cld ; jmp rax
0x000000000016d77f : inc dword ptr [rax + 0x6d] ; cld ; call rax
0x000000000016d957 : inc dword ptr [rax + 0x71] ; cld ; call rax
0x00000000000c3875 : inc dword ptr [rax + 0x7500637b] ; add al, 0x5b ; ret
0x000000000016cf17 : inc dword ptr [rax + 0x7b] ; sti ; call qword ptr [rax - 0x1f000484]
0x000000000016d543 : inc dword ptr [rax + 9] ; cld ; call qword ptr [rax - 0x1f0003f6]
0x0000000000171e53 : inc dword ptr [rax + rbx*8 + 1] ; add ah, al ; ret 0xfff6
0x000000000005303a : inc dword ptr [rax - 0x115c43] ; jmp qword ptr [rax]
0x000000000016d2ff : inc dword ptr [rax - 0x12] ; sti ; call qword ptr [rax]
0x000000000016d27b : inc dword ptr [rax - 0x13] ; sti ; jmp qword ptr [rax]
0x000000000016d3cb : inc dword ptr [rax - 0x1c] ; sti ; lcall ptr [rax] ; adc ah, bh ; jmp rax
0x000000000016d377 : inc dword ptr [rax - 0x23] ; sti ; call qword ptr [rax - 0x1f000422]
0x000000000016d6df : inc dword ptr [rax - 0x2f0003db] ; cld ; jmp qword ptr [rax]
0x000000000016d567 : inc dword ptr [rax - 0x2f000400] ; add esp, edi ; jmp qword ptr [rax]
0x000000000016d513 : inc dword ptr [rax - 0x2f000407] ; cli ; sti ; jmp qword ptr [rax]
0x000000000016d387 : inc dword ptr [rax - 0x2f00041e] ; jrcxz 0x16d392 ; call qword ptr [rax]
0x000000000015ec67 : inc dword ptr [rax - 0x2f000d5b] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rax]
0x000000000015ecbf : inc dword ptr [rax - 0x3d] ; jmp qword ptr [rax - 0x3d]
0x000000000016e163 : inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000016e37b : inc dword ptr [rax - 0x47] ; cld ; call rax
0x000000000015ef2f : inc dword ptr [rax - 0x4f000c74] ; mov ebx, dr0 ; jmp rax
0x000000000004971d : inc dword ptr [rax - 0x52f43] ; jmp qword ptr [rax]
0x000000000016e58b : inc dword ptr [rax - 0x53] ; cld ; call rax
0x00000000000479e6 : inc dword ptr [rax - 0x59c43] ; jmp qword ptr [rax]
0x000000000016ce47 : inc dword ptr [rax - 0x5f0004d9] ; sbb edi, ebx ; jmp rax
0x000000000015f0bf : inc dword ptr [rax - 0x5f000c62] ; sahf ; call rax
0x000000000015ec57 : inc dword ptr [rax - 0x64] ; call qword ptr [rax - 0x1f000d62]
0x000000000016dc6b : inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000016de83 : inc dword ptr [rax - 0x6e] ; cld ; call rax
0x000000000014cea3 : inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x000000000016d557 : inc dword ptr [rax - 5] ; sti ; call qword ptr [rax - 0x1f000404]
0x000000000005600d : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000063159 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; sahf ; ret 0xffff
0x000000000014b81d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000148a57 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000016ce27 : inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016d6b7 : inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000016d653 : inc dword ptr [rax] ; cmp esp, edi ; jmp rax
0x000000000015f1d7 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x000000000015ec23 : inc dword ptr [rax] ; jg 0x15ec1d ; call qword ptr [rax]
0x000000000015ec22 : inc dword ptr [rax] ; jg 0x15ec1e ; call qword ptr [rax]
0x000000000015ec23 : inc dword ptr [rax] ; jg 0x15ec21 ; call qword ptr [rax]
0x000000000015ec22 : inc dword ptr [rax] ; jg 0x15ec22 ; call qword ptr [rax]
0x000000000015ed87 : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x60] ; cld ; jmp rax
0x000000000015eee7 : inc dword ptr [rax] ; mov dh, bl ; jmp qword ptr [rax]
0x000000000015ef8b : inc dword ptr [rax] ; mov dr0, ebx ; call qword ptr [rax]
0x000000000016e36b : inc dword ptr [rax] ; mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000015eec7 : inc dword ptr [rax] ; mov ebx, esi ; jmp qword ptr [rax]
0x000000000016e153 : inc dword ptr [rax] ; mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000015ef07 : inc dword ptr [rax] ; mov esi, ebx ; jmp qword ptr [rax]
0x000000000016db7f : inc dword ptr [rax] ; movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000015f003 : inc dword ptr [rax] ; nop ; call qword ptr [rax]
0x00000000000f8dd7 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x000000000016d31f : inc dword ptr [rax] ; out dx, al ; sti ; call rax
0x000000000016d76f : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x00000000000e3188 : inc dword ptr [rax] ; ret
0x000000000015f0af : inc dword ptr [rax] ; sahf ; jmp qword ptr [rax]
0x000000000016dc5b : inc dword ptr [rax] ; xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016de73 : inc dword ptr [rax] ; xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000015ee3f : inc dword ptr [rax] ; xor ebx, 0xf38110ff ; jmp qword ptr [rax]
0x000000000004a1fa : inc dword ptr [rbp + 0x29] ; ret 0x8d41
0x000000000005eea5 : inc dword ptr [rbp + 0x31] ; in al, -0x18 ; ret 0xfc05
0x000000000006b3ed : inc dword ptr [rbp + 0x4e0d89c9] ; ret
0x0000000000179b26 : inc dword ptr [rbp + 0xd1cffec] ; sbb al, 0x7f ; in al, dx ; jmp qword ptr [rdx]
0x000000000016f29b : inc dword ptr [rbp + rbp*4 - 0x1e2c0000] ; in al, dx ; call rsp
0x00000000001734d3 : inc dword ptr [rbp + rcx*2 - 0x6b7bfffe] ; clc ; jmp rsp
0x000000000016e2d7 : inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x0000000000173a23 : inc dword ptr [rbp + rsi*2 - 0x2fbfffe] ; clc ; call rsp
0x0000000000038256 : inc dword ptr [rbp - 0x3db6f02e] ; pop rbx ; ret
0x000000000016002f : inc dword ptr [rbp - 0x70000a3e] ; ret 0xfff5
0x00000000000c02e5 : inc dword ptr [rbp - 0x77] ; loopne 0xc0278 ; ret
0x00000000000f64e7 : inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000000b4763 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x85 ; ret
0x00000000000da1ba : inc dword ptr [rbp - 0x7cda8a40] ; ret
0x00000000000e3b0f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000e3b5a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000016f4ab : inc dword ptr [rbx + rdi*4 + 0x70e40000] ; in eax, dx ; call rsp
0x000000000016f36b : inc dword ptr [rbx + rsi*4 + 0x47c40000] ; in eax, dx ; call rsp
0x0000000000054412 : inc dword ptr [rbx - 0x10e743] ; jmp qword ptr [rax]
0x00000000000221b5 : inc dword ptr [rbx - 0x1281fe06] ; mov byte ptr [rdi], 0 ; ret
0x00000000000bd388 : inc dword ptr [rbx - 0x1c773] ; jmp qword ptr [rax]
0x000000000010cb0d : inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000004aaf6 : inc dword ptr [rbx - 0x7bf00008] ; ret
0x000000000010319f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x0000000000038b39 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x000000000009bc6a : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000009bb6f : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000016005f : inc dword ptr [rbx] ; ret
0x000000000015fffb : inc dword ptr [rbx] ; ret 0xfff5
0x00000000000476c5 : inc dword ptr [rcx + 0x29] ; ret 0x3944
0x00000000000524d9 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000004b5d4 : inc dword ptr [rcx + 0x29] ; ret 0xbd83
0x000000000004abe2 : inc dword ptr [rcx + 0x39] ; ret
0x000000000004b468 : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000011610d : inc dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x000000000006cde6 : inc dword ptr [rcx + 0x5c] ; ret
0x0000000000103cc2 : inc dword ptr [rcx + 0x5e] ; ret
0x000000000006f5a9 : inc dword ptr [rcx + 0x5f] ; ret
0x0000000000074b83 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d4ed8 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x000000000008e558 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000104bee : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8b44
0x0000000000171e83 : inc dword ptr [rcx + rbx*8] ; add dword ptr [rax], eax ; hlt ; ret
0x00000000000c14d9 : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000002dc54 : inc dword ptr [rcx - 0x42] ; or eax, 0xe9000000 ; ret
0x000000000016cff3 : inc dword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000004cba7 : inc dword ptr [rcx - 0x77] ; pushfq ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000119919 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000001726a5 : inc dword ptr [rcx] ; add ah, al ; jno 0x1726a8 ; jmp rsp
0x00000000000cae1d : inc dword ptr [rcx] ; fdivr dword ptr [rcx] ; ret
0x000000000014c379 : inc dword ptr [rcx] ; ja 0x14c384 ; ret
0x000000000005c664 : inc dword ptr [rcx] ; jmp 0x58ffa
0x0000000000065203 : inc dword ptr [rcx] ; jmp 0x6141b
0x000000000019d921 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x00000000000cc463 : inc dword ptr [rcx] ; ret
0x0000000000056276 : inc dword ptr [rcx] ; sar dword ptr [rcx], 1 ; ret 0x860f
0x000000000016e4ff : inc dword ptr [rdi + rbp*4] ; cld ; push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x000000000008ed5c : inc dword ptr [rdi + rcx - 0x4a] ; adc ebx, ebp ; ret 0xf41
0x000000000015fe03 : inc dword ptr [rdi] ; cmc ; jmp rbx
0x000000000015fc2f : inc dword ptr [rdx + 0x1ffff527] ; sbb al, 0xf5 ; jmp qword ptr [rdi]
0x000000000016d82b : inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x000000000018216e : inc dword ptr [rdx + 0xd1cffef] ; pop rsi ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016dd17 : inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016d81b : inc dword ptr [rdx] ; jno 0x16d823 ; call qword ptr [rdx + 0x22fffc70]
0x000000000016cfb3 : inc dword ptr [rdx] ; mov cl, 0xfd ; call rdx
0x000000000016e23f : inc dword ptr [rdx] ; mov ecx, 0xb892fffc ; cld ; jmp qword ptr [rdx]
0x000000000016df3f : inc dword ptr [rdx] ; mov esp, edi ; push qword ptr [rdx - 0x78] ; cld ; jmp rdx
0x000000000012558d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000016d7c7 : inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x0000000000173cab : inc dword ptr [rsi + rax*4 + 0x56740002] ; stc ; call rsp
0x0000000000171263 : inc dword ptr [rsi + rax*4 + 1] ; add ah, ah ; ret 0xfff3
0x000000000016d8f3 : inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x000000000016dddf : inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016e1ab : inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x000000000016d03b : inc dword ptr [rsi - 0x49] ; std ; call rsi
0x000000000016dcb3 : inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016e19b : inc dword ptr [rsi] ; mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000016d047 : inc dword ptr [rsi] ; mov ecx, 0xb9a6fffd ; std ; jmp qword ptr [rdi]
0x000000000016d7b7 : inc dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000016dca3 : inc dword ptr [rsi] ; xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x00000000001717e3 : inc dword ptr [rsp + rbp*4 - 0x3d8bffff] ; hlt ; call rsp
0x000000000016d3ab : inc eax ; fsincos ; call qword ptr [rax]
0x000000000015ec13 : inc eax ; jbe 0x15ec0d ; call rax
0x000000000015ec12 : inc eax ; jbe 0x15ec0e ; call rax
0x000000000015f0df : inc eax ; lahf ; jmp rax
0x000000000015eebf : inc eax ; mov bl, dh ; jmp rax
0x000000000015eeff : inc eax ; mov dh, bl ; jmp rax
0x000000000015edfb : inc eax ; mov dl, 0xfd ; call qword ptr [rax - 0x2f00022b]
0x000000000015efa7 : inc eax ; mov dr0, ebx ; jmp rax
0x000000000016e183 : inc eax ; mov eax, 0xb850fffc ; cld ; jmp rax
0x000000000015ef3f : inc eax ; mov ebx, dr0 ; call rax
0x000000000015eedf : inc eax ; mov ebx, esi ; jmp rax
0x000000000015ff47 : inc eax ; mov esi, 0xbecafff5 ; cmc ; call rsp
0x000000000015ef1f : inc eax ; mov esi, ebx ; push rax ; mov esi, ebx ; jmp qword ptr [rax]
0x000000000016e35b : inc eax ; mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000015f1c7 : inc eax ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000000000015f0a7 : inc eax ; popfq ; jmp rax
0x000000000016d357 : inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000015ec77 : inc eax ; scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x0000000000034b49 : inc eax ; shr eax, 0x1f ; ret
0x000000000016d6ef : inc eax ; sub bh, ah ; call qword ptr [rax]
0x000000000016cf37 : inc eax ; test edi, ebx ; call qword ptr [rax]
0x000000000015ee6f : inc eax ; xor ebx, 0xf381d0ff ; jmp rax
0x000000000016d743 : inc eax ; xor esp, edi ; call qword ptr [rax]
0x0000000000160047 : inc ebp ; ret 0xfff5
0x0000000000160df9 : inc ebx ; add dh, bh ; jmp rdi
0x000000000019491c : inc ebx ; cmc ; jmp qword ptr [rdx]
0x00000000001021cc : inc ebx ; nop ; mov eax, r9d ; ret
0x000000000007082c : inc ebx ; nop ; xor eax, eax ; ret
0x000000000014b309 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000016cfef : inc ecx ; mov ch, 0xfd ; inc dword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000016d00b : inc ecx ; mov ecx, 0xba3efffd ; std ; call rsi
0x000000000015eb4b : inc edi ; in eax, -0xf ; jmp rax
0x0000000000020682 : inc edx ; jmp 0x2068b
0x000000000016e22f : inc edx ; mov edx, 0xba52fffc ; cld ; jmp rdx
0x000000000015fbb7 : inc esi ; cmc ; call qword ptr [rcx]
0x00000000000e24f1 : inc esi ; jmp qword ptr [r8]
0x0000000000172713 : inc esp ; add al, byte ptr [rdx] ; add byte ptr [rsi + rdi*2 - 9], dh ; jmp rsp
0x00000000001716cb : inc esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; js 0x171682 ; hlt ; jmp rsp
0x000000000017461b : inc esp ; enter 2, -0x6c ; pop rbp ; cli ; jmp rsp
0x00000000001748eb : inc esp ; fadd dword ptr [rdx] ; add byte ptr [rsi + rax*4 - 6], al ; jmp rsp
0x000000000016e2f7 : inc esp ; mov ecx, 0xb954fffc ; cld ; jmp rsp
0x000000000016ecc3 : inc esp ; pop qword ptr [rax] ; add byte ptr [rcx - 0x14], ah ; jmp rsp
0x000000000016f6eb : inc esp ; retf ; add byte ptr [rax], al ; mov ah, 0x8a ; out dx, eax ; jmp rsp
0x0000000000174783 : inc esp ; rol dword ptr [rdx], 1 ; add byte ptr [rax + rdi*2], dl ; cli ; jmp rsp
0x0000000000170203 : inc esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rsp + rdx*2 - 0x10], al ; jmp rsp
0x00000000001712a3 : inc esp ; xchg dword ptr [rcx], eax ; add byte ptr [rsp + rcx*8], dl ; jmp rsp
0x0000000000020681 : inc rdx ; jmp 0x2068c
0x00000000000771f4 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000185304 : insb byte ptr [rdi], dx ; add al, byte ptr [rcx] ; add al, bl ; sbb cl, dh ; jmp qword ptr [rbx]
0x0000000000179904 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cli ; jmp qword ptr [rcx]
0x0000000000189404 : insb byte ptr [rdi], dx ; add dword ptr [r8], eax ; sub byte ptr [rdx], bl ; jmp qword ptr [rcx]
0x0000000000120514 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000019eeac : insb byte ptr [rdi], dx ; add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x0000000000034bcc : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034c6a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000034c4a : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000034e1a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000034c99 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000365ff : insb byte ptr [rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x0000000000034b6a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000177604 : insb byte ptr [rdi], dx ; and eax, 0xcf880000 ; jmp 0x177612
0x000000000016e0d9 : insb byte ptr [rdi], dx ; cld ; call rax
0x000000000016d7c9 : insb byte ptr [rdi], dx ; cld ; call rsi
0x000000000016d7c5 : insb byte ptr [rdi], dx ; cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x0000000000198b04 : insb byte ptr [rdi], dx ; cmp al, byte ptr [rdx] ; add al, bh ; and bh, dh ; jmp rdx
0x0000000000178904 : insb byte ptr [rdi], dx ; cmp byte ptr [rax], al ; add al, cl ; clc ; jmp 0x178912
0x000000000015d43e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000000fe9ba : insb byte ptr [rdi], dx ; jne 0xfe9c9 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000171b74 : insb byte ptr [rdi], dx ; mov byte ptr [rcx], 0 ; in al, -0x48 ; cmc ; call rsp
0x000000000010ed9c : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000001825f5 : insb byte ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018ab04 : insb byte ptr [rdi], dx ; pop rdx ; add dword ptr [rax], eax ; call 0xffffffffe8189edf
0x000000000009f542 : insb byte ptr [rdi], dx ; ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x000000000017ffbc : insb byte ptr [rdi], dx ; std ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187c04 : insb byte ptr [rdi], dx ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], ch ; call qword ptr [rsi]
0x0000000000123180 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005db27 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000124080 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016d83d : insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx]
0x000000000016d781 : insd dword ptr [rdi], dx ; cld ; call rax
0x000000000016d77d : insd dword ptr [rdi], dx ; cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x000000000016d7bd : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rsi]
0x000000000016d97d : insd dword ptr [rdi], dx ; cld ; jmp rax
0x00000000000e621f : insd dword ptr [rdi], dx ; enter 0x4ae8, 0x7f ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000001825f4 : insd dword ptr [rdi], dx ; insb byte ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000170b69 : insd dword ptr [rdi], dx ; int1 ; call rsp
0x000000000015d43f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf0 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000015b7ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000061a88 : insd dword ptr [rdi], dx ; sbb eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000015c6ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000188064 : insd dword ptr [rdi], dx ; xchg eax, ebp ; jmp qword ptr [rdx]
0x00000000001821d5 : int 0
0x00000000000c7312 : int 0x49
0x00000000000f516a : int 0x80
0x0000000000066de3 : int 0xc3
0x00000000000ea4dc : int 0xf
0x0000000000170750 : int 0xfa
0x0000000000034f5d : int 0xff
0x000000000000385f : int 3
0x0000000000174cf5 : int1 ; add al, byte ptr [rax] ; xor al, 0xfb ; cli ; call rsp
0x00000000001841ad : int1 ; add byte ptr [rax], al ; sbb sil, al ; call qword ptr [rcx]
0x000000000018426d : int1 ; add byte ptr [rax], al ; xor byte ptr [rbx], al ; cli ; call qword ptr [rax]
0x000000000004be9e : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000008555e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015eb0e : int1 ; call qword ptr [rax]
0x0000000000185b72 : int1 ; call qword ptr [rdx]
0x000000000018584a : int1 ; call qword ptr [rsi]
0x000000000017091a : int1 ; call rsp
0x0000000000162c0d : int1 ; cli ; call rsp
0x00000000000d2ceb : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xd2ce9 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000170c9a : int1 ; dec esp ; pop rdi ; add dword ptr [rax], eax ; mov ah, 0xd7 ; int1 ; jmp rsp
0x000000000017e64c : int1 ; fsubp st(6) ; jmp qword ptr [rdx]
0x000000000018c089 : int1 ; hlt ; jmp qword ptr [rdi]
0x000000000010cb0c : int1 ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000015eb4a : int1 ; inc edi ; in eax, -0xf ; jmp rax
0x0000000000091221 : int1 ; je 0x91220 ; cmp ecx, edx ; je 0x91220 ; ret
0x000000000018530a : int1 ; jmp qword ptr [rbx]
0x0000000000185a22 : int1 ; jmp qword ptr [rcx]
0x0000000000185832 : int1 ; jmp qword ptr [rdi]
0x0000000000185b42 : int1 ; jmp qword ptr [rdx]
0x000000000010a548 : int1 ; jmp qword ptr [rsi + 0xf]
0x000000000015eb4e : int1 ; jmp rax
0x000000000018536a : int1 ; jmp rbx
0x000000000009bc15 : int1 ; jmp rcx
0x0000000000185a8a : int1 ; jmp rsi
0x00000000001708e2 : int1 ; jmp rsp
0x000000000007676b : int1 ; jne 0x76766 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000015eb06 : int1 ; lcall ptr [rax - 0x4f000e1d] ; jrcxz 0x15eb09 ; call qword ptr [rax]
0x00000000001708da : int1 ; lcall ptr [rdi + rdi + 0x830001] ; int1 ; jmp rsp
0x0000000000170d42 : int1 ; ljmp ptr [rsp - 0x12abffff] ; int1 ; jmp rsp
0x00000000000b869b : int1 ; loopne 0xb86d2 ; add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x00000000000ea45e : int1 ; mov ah, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000e3184 : int1 ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000003a4b : int1 ; mov dl, 0x1e ; ret
0x000000000007df86 : int1 ; mov eax, 0x16 ; je 0x7df98 ; ret
0x0000000000133b4b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c5cf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000010c49a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000f44de : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000009de2c : int1 ; mov rdi, qword ptr [r13] ; call r12
0x000000000014ade3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000c1ff4 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000175544 : int1 ; out 0xea, al ; jmp qword ptr [rdx]
0x000000000017eb75 : int1 ; out dx, al ; jmp qword ptr [rdx]
0x000000000009bc58 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000430ae : int1 ; pop rbx ; ret
0x00000000000f4bb2 : int1 ; pop rdx ; pop r10 ; ret
0x0000000000170972 : int1 ; push qword ptr [rax + rdx*2 + 0xa340001] ; int1 ; call rsp
0x000000000007fc53 : int1 ; push rdx ; xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000025eb : int1 ; ret
0x000000000015ce16 : int1 ; ret 0x5803
0x000000000011317b : int1 ; ret 0xfff0
0x000000000016d329 : int1 ; sti ; call rax
0x000000000014ade7 : int1 ; sub eax, edx ; ret
0x000000000008d338 : int1 ; test r8b, r8b ; jne 0x8d2e4 ; mov rax, rdi ; ret
0x000000000008d2fe : int1 ; xor eax, eax ; ret
0x000000000019206d : iretd ; add dword ptr [rax], eax ; nop ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000192025 : iretd ; add dword ptr [rax], eax ; sub sil, sil ; jmp qword ptr [rsi]
0x000000000005e5cb : iretd ; call 0x8a7e3
0x000000000011a571 : iretd ; call 0xe4758
0x000000000007fa77 : iretd ; call rcx
0x0000000000173811 : iretd ; clc ; call rsp
0x0000000000195245 : iretd ; cmc ; jmp qword ptr [rdx]
0x000000000016e931 : iretd ; jmp 0x16e935
0x0000000000177609 : iretd ; jmp 0x17760d
0x000000000017c36e : iretd ; mov esp, 0xd1cffee ; jl 0x17c33b ; out dx, al ; jmp qword ptr [rdx]
0x000000000016d391 : iretd ; sti ; jmp rax
0x0000000000103bf3 : ja 0x103bf8 ; ret
0x00000000001097e1 : ja 0x109834 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010c4bd : ja 0x10c4ae ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001166d2 : ja 0x1166f3 ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001166f7 : ja 0x116713 ; ret
0x000000000011685f : ja 0x116882 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000014c37b : ja 0x14c382 ; ret
0x000000000015ce84 : ja 0x15ce0b ; ret 0x48f
0x000000000016e135 : ja 0x16e135 ; call rax
0x0000000000171449 : ja 0x171441 ; call rsp
0x0000000000179859 : ja 0x179849 ; call qword ptr [rsi]
0x000000000017f92c : ja 0x17f929 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181ea4 : ja 0x181f06 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018c79d : ja 0x18c7a6 ; add byte ptr [rax], ah ; add al, 0xf5 ; jmp qword ptr [rcx]
0x000000000018c7cd : ja 0x18c7d6 ; add byte ptr [rax], ah ; sbb edi, ecx ; call qword ptr [rax]
0x0000000000190174 : ja 0x1901b5 ; cmc ; jmp qword ptr [rdx]
0x000000000002e12d : ja 0x2e148 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000003506d : ja 0x35090 ; ret
0x0000000000035316 : ja 0x3531d ; ret
0x0000000000035372 : ja 0x35379 ; ret
0x00000000000353ac : ja 0x353b1 ; ret
0x0000000000035432 : ja 0x35439 ; ret
0x000000000000389a : ja 0x38fc ; clc ; salc ; jb 0x3922 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000447fe : ja 0x44850 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004be88 : ja 0x4be6d ; mov eax, r8d ; ret
0x0000000000067766 : ja 0x6776d ; ret
0x000000000006a3b2 : ja 0x6a416 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006ead6 : ja 0x6eae3 ; ret
0x0000000000085658 : ja 0x85663 ; ret
0x000000000008a7e8 : ja 0x8a7e2 ; ret 0x7401
0x000000000008ce4d : ja 0x8ce2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009205c : ja 0x92075 ; mov rax, rdi ; ret
0x0000000000096f67 : ja 0x96f6d ; ret
0x0000000000096f83 : ja 0x96f8d ; mov dword ptr [rdi], ecx ; ret
0x0000000000096fc4 : ja 0x96fd3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000097049 : ja 0x9705d ; ret
0x000000000009709f : ja 0x970b7 ; ret
0x0000000000097121 : ja 0x9713d ; ret
0x0000000000098567 : ja 0x98571 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098583 : ja 0x98591 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000985d4 : ja 0x985e7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000986b9 : ja 0x986d1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009872f : ja 0x9874b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000987b1 : ja 0x987d1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009a047 : ja 0x9a04d ; ret
0x000000000009a063 : ja 0x9a06d ; mov dword ptr [rdi], ecx ; ret
0x000000000009a0a4 : ja 0x9a0b3 ; mov qword ptr [rdi], rcx ; ret
0x000000000009a129 : ja 0x9a13d ; ret
0x000000000009a17f : ja 0x9a197 ; ret
0x000000000009a201 : ja 0x9a21d ; ret
0x000000000009ab17 : ja 0x9ab1d ; ret
0x000000000009ab33 : ja 0x9ab3d ; mov dword ptr [rdi], ecx ; ret
0x000000000009ab74 : ja 0x9ab83 ; mov qword ptr [rdi], rcx ; ret
0x000000000009abf9 : ja 0x9ac0d ; ret
0x000000000009ac4f : ja 0x9ac67 ; ret
0x000000000009acd1 : ja 0x9aced ; ret
0x000000000009bf39 : ja 0x9bf59 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000009d7ba : ja 0x9d7ca ; cmove rax, rcx ; ret
0x00000000000b70c7 : ja 0xb70cc ; ret
0x00000000000b9ab8 : ja 0xb9abd ; ret
0x00000000000b9b42 : ja 0xb9b47 ; ret
0x00000000000b9c31 : ja 0xb9c36 ; ret
0x00000000000ba31d : ja 0xba324 ; ret
0x00000000000bae79 : ja 0xbae7e ; ret
0x00000000000baed9 : ja 0xbaede ; ret
0x00000000000bb12d : ja 0xbb132 ; ret
0x00000000000bb19d : ja 0xbb1a2 ; ret
0x00000000000c42b5 : ja 0xc42c0 ; jl 0xc42ad ; ret
0x00000000000da961 : ja 0xda96b ; xor eax, eax ; ret
0x00000000000db302 : ja 0xdb29b ; pop rbx ; ret
0x00000000000db332 : ja 0xdb323 ; ret
0x00000000000db4cb : ja 0xdb4e7 ; ret
0x00000000000db51a : ja 0xdb537 ; ret
0x00000000000db56b : ja 0xdb587 ; ret
0x00000000000db5c3 : ja 0xdb5e7 ; ret
0x00000000000db627 : ja 0xdb647 ; ret
0x00000000000db680 : ja 0xdb69f ; ret
0x00000000000db89f : ja 0xdb8a6 ; ret
0x00000000000db932 : ja 0xdb939 ; ret
0x00000000000dba26 : ja 0xdba2d ; ret
0x00000000000dba7d : ja 0xdbab5 ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000dbf58 : ja 0xdbf8f ; ret
0x00000000000dcc08 : ja 0xdcc0f ; ret
0x00000000000dd219 : ja 0xdd220 ; ret
0x00000000000dd270 : ja 0xdd277 ; ret
0x00000000000dd2d3 : ja 0xdd2dc ; cdqe ; ret
0x00000000000dd333 : ja 0xdd33a ; ret
0x00000000000df923 : ja 0xdf938 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000dfb5f : ja 0xdfbcd ; add rsp, 0x38 ; ret
0x00000000000dfe28 : ja 0xdfe2f ; ret
0x00000000000dfe7c : ja 0xdfe83 ; ret
0x00000000000e05a0 : ja 0xe05a5 ; ret
0x00000000000e0ab6 : ja 0xe0abb ; ret
0x00000000000e10c6 : ja 0xe10d3 ; ret
0x00000000000e120d : ja 0xe1212 ; ret
0x00000000000e12ad : ja 0xe12b2 ; ret
0x00000000000e1350 : ja 0xe1355 ; ret
0x00000000000e13f0 : ja 0xe13f5 ; ret
0x00000000000e148b : ja 0xe1490 ; ret
0x00000000000e14fb : ja 0xe1500 ; ret
0x00000000000e1578 : ja 0xe157d ; ret
0x00000000000e1618 : ja 0xe161d ; ret
0x00000000000e1911 : ja 0xe198a ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000e1b4c : ja 0xe1b53 ; ret
0x00000000000e2e5d : ja 0xe2e64 ; ret
0x00000000000e2ee9 : ja 0xe2f0f ; ret
0x00000000000e2f81 : ja 0xe2fa7 ; ret
0x00000000000e2fd5 : ja 0xe2fdc ; ret
0x00000000000e30d9 : ja 0xe30e5 ; ret
0x00000000000e598c : ja 0xe59a3 ; mov qword ptr [rdx], rdi ; ret
0x00000000000e6c57 : ja 0xe6c77 ; ret
0x00000000000e85a3 : ja 0xe85ac ; pop rbx ; pop rbp ; ret
0x00000000000e8806 : ja 0xe880b ; ret
0x00000000000e88b8 : ja 0xe88bf ; ret
0x00000000000e88e3 : ja 0xe88ea ; ret
0x00000000000e9483 : ja 0xe9488 ; ret
0x00000000000e95f3 : ja 0xe95f8 ; ret
0x00000000000e9a4d : ja 0xe9a52 ; ret
0x00000000000e9aef : ja 0xe9af4 ; ret
0x00000000000e9b9f : ja 0xe9ba4 ; ret
0x00000000000f5240 : ja 0xf5247 ; ret
0x00000000000f52bd : ja 0xf52dd ; ret
0x00000000000f7122 : ja 0xf7129 ; ret
0x00000000000f71c2 : ja 0xf71c9 ; ret
0x00000000000f8a07 : ja 0xf8a1a ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000022cf : ja 0xffffffffd6104b5b ; ret
0x000000000011aa70 : jae 0x11aa75 ; ret
0x000000000011aac0 : jae 0x11aac5 ; ret
0x000000000011d964 : jae 0x11d947 ; mov eax, 1 ; ret
0x000000000014c13e : jae 0x14c14d ; call qword ptr [rbx]
0x000000000014c13e : jae 0x14c151 ; call qword ptr [rbx]
0x000000000014c807 : jae 0x14c824 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000015b442 : jae 0x15b424 ; jo 0x15b4c0 ; mov ebp, 0xfb67d10d ; ret
0x000000000015c2de : jae 0x15c2b9 ; push rsi ; pop rdx ; je 0x15c2ae ; ret 0xacfc
0x000000000017ecf4 : jae 0x17eceb ; out dx, al ; jmp qword ptr [rdx]
0x0000000000182715 : jae 0x182708 ; jmp qword ptr [rdx]
0x000000000018275d : jae 0x182750 ; jmp qword ptr [rdx]
0x000000000018c3f5 : jae 0x18c3fe ; add byte ptr [rax - 0xa], cl ; hlt ; jmp rbx
0x000000000018c48d : jae 0x18c496 ; add al, al ; div esp ; jmp qword ptr [rcx]
0x000000000018df14 : jae 0x18df00 ; hlt ; jmp qword ptr [rdx]
0x00000000001954a1 : jae 0x19549b ; call rdi
0x000000000019c40d : jae 0x19c417 ; add al, dh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000001f4fe : jae 0x1f53e ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000003533d : jae 0x35342 ; ret
0x000000000003586d : jae 0x35872 ; ret
0x0000000000043a57 : jae 0x43a60 ; xor eax, eax ; ret
0x0000000000050388 : jae 0x503c7 ; add byte ptr [rbp + 0x67], dh ; mov eax, edx ; pop rbx ; ret
0x000000000006772d : jae 0x67732 ; ret
0x000000000007484c : jae 0x7485e ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000774bb : jae 0x774e5 ; movzx eax, byte ptr [rax] ; ret
0x000000000007fd2e : jae 0x7fd3e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab28d : jae 0xab292 ; ret
0x00000000000adb5d : jae 0xadb62 ; ret
0x00000000000adb8d : jae 0xadb92 ; ret
0x00000000000b5cf9 : jae 0xb5c9a ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000b9a0d : jae 0xb9a12 ; ret
0x00000000000b9bf0 : jae 0xb9bf5 ; ret
0x00000000000b9ccd : jae 0xb9cd2 ; ret
0x00000000000b9eb6 : jae 0xb9eeb ; ret
0x00000000000b9f16 : jae 0xb9f4b ; ret
0x00000000000ba297 : jae 0xba29c ; ret
0x00000000000bae3d : jae 0xbae42 ; ret
0x00000000000bafcd : jae 0xbafd2 ; ret
0x00000000000baffd : jae 0xbb002 ; ret
0x00000000000bb05d : jae 0xbb062 ; ret
0x00000000000bb08d : jae 0xbb092 ; ret
0x00000000000bb0bd : jae 0xbb0c2 ; ret
0x00000000000bb0ed : jae 0xbb0f2 ; ret
0x00000000000d1afd : jae 0xd1b02 ; ret
0x00000000000d1b2d : jae 0xd1b32 ; ret
0x00000000000d1b5d : jae 0xd1b62 ; ret
0x00000000000d1b8d : jae 0xd1b92 ; ret
0x00000000000d1bbd : jae 0xd1bc2 ; ret
0x00000000000d1bed : jae 0xd1bf2 ; ret
0x00000000000d1c1d : jae 0xd1c22 ; ret
0x00000000000d1c4d : jae 0xd1c52 ; ret
0x00000000000da3b9 : jae 0xda3f1 ; ret
0x00000000000da419 : jae 0xda451 ; ret
0x00000000000db40a : jae 0xdb413 ; mov eax, edx ; ret
0x00000000000db42d : jae 0xdb432 ; ret
0x00000000000db6bd : jae 0xdb6c2 ; ret
0x00000000000db6ed : jae 0xdb6f2 ; ret
0x00000000000db80d : jae 0xdb812 ; ret
0x00000000000db83d : jae 0xdb842 ; ret
0x00000000000db8fd : jae 0xdb902 ; ret
0x00000000000db966 : jae 0xdb99b ; ret
0x00000000000dbba6 : jae 0xdbbdb ; ret
0x00000000000dbc06 : jae 0xdbc3b ; ret
0x00000000000dbc5d : jae 0xdbc62 ; ret
0x00000000000dc07d : jae 0xdc082 ; ret
0x00000000000dc1c6 : jae 0xdc1fb ; ret
0x00000000000dc21d : jae 0xdc222 ; ret
0x00000000000dc24d : jae 0xdc252 ; ret
0x00000000000dc27d : jae 0xdc282 ; ret
0x00000000000dc2ad : jae 0xdc2b2 ; ret
0x00000000000dc2dd : jae 0xdc2e2 ; ret
0x00000000000dc316 : jae 0xdc34b ; ret
0x00000000000dc36d : jae 0xdc372 ; ret
0x00000000000dc39d : jae 0xdc3a2 ; ret
0x00000000000dcb6d : jae 0xdcb72 ; ret
0x00000000000dcb9d : jae 0xdcba2 ; ret
0x00000000000dcbcd : jae 0xdcbd2 ; ret
0x00000000000dd1dd : jae 0xdd1e2 ; ret
0x00000000000dd23d : jae 0xdd242 ; ret
0x00000000000dd29d : jae 0xdd2a2 ; ret
0x00000000000dd2fd : jae 0xdd302 ; ret
0x00000000000dd35d : jae 0xdd362 ; ret
0x00000000000dfad6 : jae 0xdfb0b ; ret
0x00000000000dfdf0 : jae 0xdfdf5 ; ret
0x00000000000e0539 : jae 0xe0571 ; ret
0x00000000000e0c6d : jae 0xe0c72 ; ret
0x00000000000e0c9d : jae 0xe0ca2 ; ret
0x00000000000e0ccd : jae 0xe0cd2 ; ret
0x00000000000e100d : jae 0xe1012 ; ret
0x00000000000e11cd : jae 0xe11d2 ; ret
0x00000000000e179d : jae 0xe17a2 ; ret
0x00000000000e183d : jae 0xe1842 ; ret
0x00000000000e1879 : jae 0xe18b1 ; ret
0x00000000000e19bd : jae 0xe19c2 ; ret
0x00000000000e19ed : jae 0xe19f2 ; ret
0x00000000000e1a26 : jae 0xe1a5b ; ret
0x00000000000e1a7d : jae 0xe1a82 ; ret
0x00000000000e1ab6 : jae 0xe1aeb ; ret
0x00000000000e1b0d : jae 0xe1b12 ; ret
0x00000000000e1ded : jae 0xe1df2 ; ret
0x00000000000e1e1d : jae 0xe1e22 ; ret
0x00000000000e1e4d : jae 0xe1e52 ; ret
0x00000000000e300d : jae 0xe3012 ; ret
0x00000000000e303d : jae 0xe3042 ; ret
0x00000000000e45bf : jae 0xe45c4 ; ret
0x00000000000e4730 : jae 0xe4735 ; ret
0x00000000000e475d : jae 0xe4762 ; ret
0x00000000000e478d : jae 0xe4792 ; ret
0x00000000000e47c6 : jae 0xe47fb ; ret
0x00000000000e481d : jae 0xe4822 ; ret
0x00000000000e484d : jae 0xe4852 ; ret
0x00000000000e4880 : jae 0xe4885 ; ret
0x00000000000e48ad : jae 0xe48b2 ; ret
0x00000000000e48dd : jae 0xe48e2 ; ret
0x00000000000e490d : jae 0xe4912 ; ret
0x00000000000e493d : jae 0xe4942 ; ret
0x00000000000e7530 : jae 0xe7535 ; ret
0x00000000000e755d : jae 0xe7562 ; ret
0x00000000000e758d : jae 0xe7592 ; ret
0x00000000000e75c0 : jae 0xe75c5 ; ret
0x00000000000e75f0 : jae 0xe75f5 ; ret
0x00000000000e761d : jae 0xe7622 ; ret
0x00000000000e7650 : jae 0xe7655 ; ret
0x00000000000e767d : jae 0xe7682 ; ret
0x00000000000e76ad : jae 0xe76b2 ; ret
0x00000000000e76e0 : jae 0xe76e5 ; ret
0x00000000000e770d : jae 0xe7712 ; ret
0x00000000000e7740 : jae 0xe7745 ; ret
0x00000000000e850d : jae 0xe8512 ; ret
0x00000000000e853d : jae 0xe8542 ; ret
0x00000000000e8666 : jae 0xe869b ; ret
0x00000000000e86cd : jae 0xe86d2 ; ret
0x00000000000e86fd : jae 0xe8702 ; ret
0x00000000000e872d : jae 0xe8732 ; ret
0x00000000000e875d : jae 0xe8762 ; ret
0x00000000000e8960 : jae 0xe8965 ; ret
0x00000000000e898d : jae 0xe8992 ; ret
0x00000000000e89bd : jae 0xe89c2 ; ret
0x00000000000e8a00 : jae 0xe8a05 ; ret
0x00000000000e8a2d : jae 0xe8a32 ; ret
0x00000000000e8a5d : jae 0xe8a62 ; ret
0x00000000000e8a8d : jae 0xe8a92 ; ret
0x00000000000e8a8d : jae 0xe8a97 ; ret
0x00000000000e8abd : jae 0xe8ac2 ; ret
0x00000000000e8abd : jae 0xe8ac7 ; ret
0x00000000000e8aed : jae 0xe8af2 ; ret
0x00000000000e8aed : jae 0xe8af7 ; ret
0x00000000000e8b1d : jae 0xe8b22 ; ret
0x00000000000e8b1d : jae 0xe8b27 ; ret
0x00000000000e8b4d : jae 0xe8b52 ; ret
0x00000000000e8b4d : jae 0xe8b57 ; ret
0x00000000000e8b7d : jae 0xe8b82 ; ret
0x00000000000e8bb0 : jae 0xe8bb5 ; ret
0x00000000000e8be9 : jae 0xe8c21 ; ret
0x00000000000e8c3d : jae 0xe8c42 ; ret
0x00000000000e8c70 : jae 0xe8c75 ; ret
0x00000000000e8c9d : jae 0xe8ca2 ; ret
0x00000000000e8ccd : jae 0xe8cd2 ; ret
0x00000000000e8cfd : jae 0xe8d02 ; ret
0x00000000000e8d2d : jae 0xe8d32 ; ret
0x00000000000e8d5d : jae 0xe8d62 ; ret
0x00000000000e8d90 : jae 0xe8d95 ; ret
0x00000000000e8dc0 : jae 0xe8dc5 ; ret
0x00000000000e8ded : jae 0xe8df2 ; ret
0x00000000000e8e1d : jae 0xe8e22 ; ret
0x00000000000e8e4d : jae 0xe8e52 ; ret
0x00000000000e8e80 : jae 0xe8e85 ; ret
0x00000000000e8eb0 : jae 0xe8eb5 ; ret
0x00000000000e8ee0 : jae 0xe8ee5 ; ret
0x00000000000e8f19 : jae 0xe8f51 ; ret
0x00000000000e8f6d : jae 0xe8f72 ; ret
0x00000000000e8fa9 : jae 0xe8fe1 ; ret
0x00000000000e8ffd : jae 0xe9002 ; ret
0x00000000000e902d : jae 0xe9032 ; ret
0x00000000000e9069 : jae 0xe90a1 ; ret
0x00000000000e909c : jae 0xe90a5 ; ret
0x00000000000e90bd : jae 0xe90c2 ; ret
0x00000000000e90f0 : jae 0xe90f5 ; ret
0x00000000000e911d : jae 0xe9122 ; ret
0x00000000000e914d : jae 0xe9152 ; ret
0x00000000000e9180 : jae 0xe9185 ; ret
0x00000000000e91b6 : jae 0xe91eb ; ret
0x00000000000e920d : jae 0xe9212 ; ret
0x00000000000e9240 : jae 0xe9245 ; ret
0x00000000000e9270 : jae 0xe9275 ; ret
0x00000000000e92c6 : jae 0xe92fb ; ret
0x00000000000e931d : jae 0xe9322 ; ret
0x00000000000e9356 : jae 0xe938b ; ret
0x00000000000e93ad : jae 0xe93b2 ; ret
0x00000000000e93dd : jae 0xe93e2 ; ret
0x00000000000e9410 : jae 0xe9415 ; ret
0x00000000000e943d : jae 0xe9442 ; ret
0x00000000000e9529 : jae 0xe9561 ; ret
0x00000000000e9586 : jae 0xe95bb ; ret
0x00000000000e9696 : jae 0xe96cb ; ret
0x00000000000e96f9 : jae 0xe9731 ; ret
0x00000000000e9750 : jae 0xe9755 ; ret
0x00000000000e977d : jae 0xe9782 ; ret
0x00000000000e97ad : jae 0xe97b2 ; ret
0x00000000000e97e0 : jae 0xe97e5 ; ret
0x00000000000e9cf9 : jae 0xe9d31 ; ret
0x00000000000e9d59 : jae 0xe9d91 ; ret
0x00000000000e9dad : jae 0xe9db2 ; ret
0x00000000000e9ddd : jae 0xe9de2 ; ret
0x00000000000e9e0d : jae 0xe9e12 ; ret
0x00000000000e9e3d : jae 0xe9e42 ; ret
0x00000000000e9e70 : jae 0xe9e75 ; ret
0x00000000000e9ea0 : jae 0xe9ea5 ; ret
0x00000000000e9ecd : jae 0xe9ed2 ; ret
0x00000000000e9efd : jae 0xe9f02 ; ret
0x00000000000e9f2d : jae 0xe9f32 ; ret
0x00000000000e9f5d : jae 0xe9f62 ; ret
0x000000000010331f : jb 0x103347 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000103d68 : jb 0x103d5b ; mov eax, 0xffffffff ; ret
0x0000000000103d67 : jb 0x103d5c ; mov eax, 0xffffffff ; ret
0x0000000000103dff : jb 0x103dcb ; mov eax, 0xffffffff ; ret
0x0000000000103dfe : jb 0x103dcc ; mov eax, 0xffffffff ; ret
0x000000000010c4c1 : jb 0x10c4e5 ; ret
0x000000000010c4bb : jb 0x10c4ed ; ja 0x10c4b0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012a5da : jb 0x12a5ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a72a : jb 0x12a73a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a87a : jb 0x12a88a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a9ca : jb 0x12a9da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ab1a : jb 0x12ab2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ac6a : jb 0x12ac7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012adba : jb 0x12adca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012af0a : jb 0x12af1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b05a : jb 0x12b06a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b1aa : jb 0x12b1ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b2fa : jb 0x12b30a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b44a : jb 0x12b45a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b59a : jb 0x12b5aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b6ea : jb 0x12b6fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b83a : jb 0x12b84a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cfaa : jb 0x12cfba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d0fa : jb 0x12d10a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d24a : jb 0x12d25a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d39a : jb 0x12d3aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d4ea : jb 0x12d4fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d63a : jb 0x12d64a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d78a : jb 0x12d79a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d8da : jb 0x12d8ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012da2a : jb 0x12da3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012db7a : jb 0x12db8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dcca : jb 0x12dcda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012de1a : jb 0x12de2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012df6a : jb 0x12df7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e0ba : jb 0x12e0ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e20a : jb 0x12e21a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f97a : jb 0x12f98a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012faca : jb 0x12fada ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fc1a : jb 0x12fc2a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd6a : jb 0x12fd7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012feba : jb 0x12feca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013000a : jb 0x13001a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013015a : jb 0x13016a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001302aa : jb 0x1302ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001303fa : jb 0x13040a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013054a : jb 0x13055a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013069a : jb 0x1306aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001307ea : jb 0x1307fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013093a : jb 0x13094a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130a8a : jb 0x130a9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130bda : jb 0x130bea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014c16f : jb 0x14c168 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c819 : jb 0x14c818 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000016d810 : jb 0x16d880 ; cld ; jmp rdx
0x000000000016df44 : jb 0x16ded1 ; cld ; jmp rdx
0x000000000016e0e9 : jb 0x16e0e9 ; call rax
0x000000000016e875 : jb 0x16e87d ; add ah, al ; jmp 0x16e881
0x00000000001817e5 : jb 0x1817e5 ; jmp qword ptr [rdx]
0x00000000001817e4 : jb 0x1817e6 ; jmp qword ptr [rdx]
0x000000000018182d : jb 0x18182d ; jmp qword ptr [rdx]
0x0000000000182054 : jb 0x1820b7 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001826cd : jb 0x1826c0 ; jmp qword ptr [rdx]
0x000000000018c2f5 : jb 0x18c2fe ; add byte ptr [rax], cl ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000018c30d : jb 0x18c316 ; add byte ptr [rax], ah ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000019c355 : jb 0x19c35d ; add byte ptr [rax], bh ; ret
0x0000000000002b5c : jb 0x2afc ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002e0fe : jb 0x2e10b ; ret
0x000000000000389e : jb 0x391e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000006d4b5 : jb 0x6d4db ; mov dword ptr [rcx], eax ; ret
0x000000000006e8cc : jb 0x6e8c5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000748a4 : jb 0x748b2 ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000000748a3 : jb 0x748b3 ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000000840fb : jb 0x8410c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008becb : jb 0x8bedc ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000098eda : jb 0x98ee9 ; add byte ptr [rax], al ; ret
0x00000000000ac5a6 : jb 0xac573 ; ret
0x00000000000c3725 : jb 0xc3699 ; pop rbx ; ret
0x00000000000c36bd : jb 0xc36b7 ; ret 0x7408
0x000000000010bb93 : jbe 0x10bba7 ; mov eax, 2 ; ret
0x000000000015ec15 : jbe 0x15ec0b ; call rax
0x000000000016e190 : jbe 0x16e14c ; cld ; jmp rsi
0x0000000000173a55 : jbe 0x173a5f ; add ah, ah ; or cl, bh ; jmp rsp
0x000000000017d28c : jbe 0x17d256 ; out dx, al ; jmp qword ptr [rdx]
0x000000000018c6a5 : jbe 0x18c6ae ; add al, ch ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018c76d : jbe 0x18c776 ; add al, dh ; add esi, ebp ; jmp qword ptr [rcx]
0x000000000018c785 : jbe 0x18c78e ; add byte ptr [rax], cl ; add al, 0xf5 ; jmp qword ptr [rcx]
0x0000000000002beb : jbe 0x2bbf ; clc ; ret
0x0000000000043e2b : jbe 0x43ea1 ; xor eax, eax ; ret
0x0000000000045dec : jbe 0x45de7 ; nop ; mov rax, rsi ; ret
0x000000000005b59f : jbe 0x5b52c ; ret 0x348
0x000000000006e6ff : jbe 0x6e663 ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000075519 : jbe 0x75564 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf17 : jbe 0x7bf45 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x0000000000081c99 : jbe 0x81ce8 ; bsf eax, edx ; ret
0x0000000000084f66 : jbe 0x84fa5 ; add rax, rdi ; ret
0x0000000000084f76 : jbe 0x84fa7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084f86 : jbe 0x84fa7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084f96 : jbe 0x84fa7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008a853 : jbe 0x8a86e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x8a849 ; ret
0x00000000000924b9 : jbe 0x924b3 ; ret 0xf10
0x00000000000940d9 : jbe 0x940d3 ; ret 0xf10
0x00000000000db1d8 : jbe 0xdb1e3 ; ret
0x00000000000e614b : jbe 0xe6181 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000fd527 : jbe 0xfd49b ; xor eax, eax ; pop rbx ; ret
0x00000000000ffbb0 : jbe 0xffbbb ; pop rbx ; ret
0x00000000001031a3 : je 0x10319b ; pop rbx ; ret
0x00000000001032c3 : je 0x10325f ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000103383 : je 0x10336c ; mov eax, 0xffffffff ; ret
0x0000000000103382 : je 0x10336d ; mov eax, 0xffffffff ; ret
0x00000000001065fe : je 0x1065e3 ; ret
0x0000000000106d32 : je 0x106d3a ; ret
0x00000000001098e3 : je 0x1098ef ; mov rdi, rsp ; call rax
0x0000000000109fb9 : je 0x109fe6 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000010a1b7 : je 0x10a1c3 ; mov rdi, rbp ; call rax
0x000000000010a568 : je 0x10a572 ; ret
0x000000000010b125 : je 0x10b131 ; mov rdi, r14 ; call rax
0x000000000010b3a3 : je 0x10b3af ; mov rdi, rbx ; call rax
0x000000000010bc39 : je 0x10bc45 ; mov rdi, rbp ; call rdx
0x000000000010c017 : je 0x10c10c ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010c646 : je 0x10c658 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d1b9 : je 0x10d1c6 ; add rsp, 0x48 ; ret
0x000000000010ec72 : je 0x10ec86 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000010f64d : je 0x10f659 ; mov rdi, r12 ; call rax
0x000000000010f82b : je 0x10f839 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000110881 : je 0x11088d ; mov rdi, rbx ; call rax
0x0000000000110942 : je 0x11094e ; mov rdi, rbp ; call rax
0x00000000001109c3 : je 0x1109d7 ; mov eax, 1 ; ret
0x00000000001114df : je 0x1114ed ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000111b9e : je 0x111baa ; mov rdi, r12 ; call rax
0x0000000000111f0f : je 0x111f1d ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001138ee : je 0x1138c8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001138bf : je 0x1138cb ; pop rbx ; ret
0x000000000011392b : je 0x1138df ; pop rbx ; ret
0x0000000000113963 : je 0x113976 ; add rsp, 8 ; ret
0x000000000011439b : je 0x1143a2 ; ret
0x000000000011447b : je 0x114489 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000114ad4 : je 0x114ae2 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000115bbd : je 0x115c28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000115c7d : je 0x115ce8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001162ed : je 0x116318 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001163bd : je 0x1163e8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001166c4 : je 0x1166d3 ; ret
0x00000000001185c8 : je 0x1185d4 ; xor eax, eax ; ret
0x00000000001197a5 : je 0x1197b4 ; xor eax, eax ; ret
0x000000000011cd91 : je 0x11cda6 ; add rsp, 8 ; ret
0x000000000011e9a3 : je 0x11e96d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011f675 : je 0x11f67d ; xchg eax, edx ; sub eax, edx ; ret
0x000000000011f773 : je 0x11f73d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000012065a : je 0x120662 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001207b3 : je 0x12077d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000122383 : je 0x12234d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001243b4 : je 0x124398 ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000124693 : je 0x12465d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000125d23 : je 0x125ced ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001487b7 : je 0x1487c1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014bc06 : je 0x14bc0c ; call rdx
0x000000000014bd0f : je 0x14bd1a ; call rdx
0x000000000015b5a8 : je 0x15b573 ; xor al, 0xd8 ; ret
0x000000000015b7e7 : je 0x15b7e4 ; jmp 0x15b7be
0x000000000015c2e2 : je 0x15c2aa ; ret 0xacfc
0x000000000015ec11 : je 0x15ec0b ; inc eax ; jbe 0x15ec0f ; call rax
0x000000000016e12d : je 0x16e12d ; call rax
0x000000000016e504 : je 0x16e4b7 ; cld ; jmp rsp
0x000000000016e8e8 : je 0x16e8ad ; jmp 0x16e8ec
0x000000000016ee98 : je 0x16ef12 ; in al, dx ; jmp rsp
0x0000000000170f70 : je 0x170f67 ; call rsp
0x0000000000170fdd : je 0x170fe6 ; add ah, al ; add al, 0xf3 ; jmp rsp
0x0000000000171448 : je 0x1714c4 ; hlt ; call rsp
0x00000000001717e8 : je 0x1717af ; hlt ; call rsp
0x0000000000171b48 : je 0x171ae8 ; cmc ; jmp rsp
0x0000000000171a98 : je 0x171b00 ; cmc ; call rsp
0x0000000000171e64 : je 0x171e43 ; add dword ptr [rax], eax ; hlt ; ret 0xfff6
0x0000000000173ba8 : je 0x173bd6 ; stc ; call rsp
0x0000000000173cb0 : je 0x173d0b ; stc ; call rsp
0x0000000000174c98 : je 0x174c90 ; cli ; call rsp
0x0000000000178e0c : je 0x178e52 ; add byte ptr [rax], al ; sar ch, 1 ; jmp 0x178e1a
0x000000000017cdf4 : je 0x17cdbe ; out dx, al ; jmp qword ptr [rdx]
0x000000000017ea0c : je 0x17e9ae ; add byte ptr [rax], al ; xor byte ptr [rdi], bl ; out dx, eax ; call rcx
0x000000000017f8e4 : je 0x17f8e1 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181754 : je 0x181780 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001827a5 : je 0x182798 ; jmp qword ptr [rdx]
0x00000000001827ed : je 0x1827e0 ; jmp qword ptr [rdx]
0x000000000018370c : je 0x1836fb ; add byte ptr [rax], al ; loopne 0x1836a2 ; cld ; call qword ptr [rdx]
0x0000000000188e9c : je 0x188e4a ; jmp qword ptr [rdx]
0x000000000018950c : je 0x189559 ; add dword ptr [rax], eax ; jo 0x189534 ; jmp qword ptr [rcx]
0x000000000018b50c : je 0x18b579 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000018c30c : je 0x18c387 ; add dword ptr [rax], eax ; and ch, dh ; hlt ; jmp qword ptr [rcx]
0x000000000018c595 : je 0x18c59e ; add al, bl ; cli ; hlt ; jmp qword ptr [rcx]
0x000000000018e20c : je 0x18e1a6 ; add dword ptr [rax], eax ; jo 0x18e27e ; cmc ; jmp qword ptr [rcx]
0x000000000019c4f5 : je 0x19c4ff ; add byte ptr [rax], bh ; add bl, bh ; jmp qword ptr [rdx]
0x0000000000001cb2 : je 0x1cde ; ret
0x0000000000021d5a : je 0x21d60 ; jmp rax
0x0000000000021d8a : je 0x21d90 ; jmp rax
0x000000000002b6b2 : je 0x2b67c ; pop rbx ; ret
0x000000000002bca0 : je 0x2bca6 ; call rax
0x000000000002c027 : je 0x2c02d ; call rcx
0x000000000002ce6b : je 0x2ce71 ; call rax
0x000000000003300b : je 0x33036 ; add al, 0xe8 ; std ; ret
0x0000000000033114 : je 0x3313f ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000348e6 : je 0x348d9 ; ret
0x0000000000034c86 : je 0x34c2a ; ret
0x0000000000035e37 : je 0x35e46 ; add rsp, 0x10 ; ret
0x0000000000035f39 : je 0x35f46 ; add rsp, 0x10 ; ret
0x0000000000057996 : je 0x579ba ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005c4ee : je 0x5a05c ; jmp 0x58726
0x000000000006312d : je 0x63140 ; call 0x1f404
0x0000000000067096 : je 0x670a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006782a : je 0x67833 ; ret
0x000000000006a0ba : je 0x6a0d1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006a15a : je 0x6a171 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006a844 : je 0x6a856 ; mov rax, rdx ; pop rbx ; ret
0x000000000006df39 : je 0x6df8a ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006df38 : je 0x6df8b ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006df4f : je 0x6dfa0 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006df4e : je 0x6dfa1 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006e380 : je 0x6e38b ; pop rbx ; ret
0x000000000006e82d : je 0x6e838 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006e871 : je 0x6e87c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006e945 : je 0x6e96f ; or al, ch ; ret
0x000000000006ece8 : je 0x6ecf7 ; mov eax, 0xffffffff ; ret
0x00000000000729b4 : je 0x729c6 ; mov rax, rdx ; pop rbx ; ret
0x0000000000072edb : je 0x72eed ; mov dword ptr [rdi], edx ; ret
0x00000000000731ec : je 0x731ff ; mov eax, 0xffffffff ; ret
0x0000000000073249 : je 0x7325a ; mov rdi, qword ptr [rdi] ; call 0x1f477
0x00000000000739fb : je 0x739a1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000073a7f : je 0x73a8b ; pop rbx ; ret
0x0000000000075fb3 : je 0x75f70 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000076073 : je 0x76030 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000076169 : je 0x76173 ; pop rbx ; ret
0x00000000000766e4 : je 0x766ef ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007800c : je 0x77e44 ; ret
0x0000000000077f32 : je 0x77f48 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000078e95 : je 0x78ea6 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078fb5 : je 0x78fbb ; call rdx
0x000000000007a977 : je 0x7a98c ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x000000000007c0ec : je 0x7c118 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x000000000007cbb6 : je 0x7cbe2 ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000007cfc9 : je 0x7cfcf ; call rax
0x000000000007df8c : je 0x7df92 ; ret
0x000000000007dfa5 : je 0x7dfb4 ; pop rbx ; ret
0x000000000007e9e0 : je 0x7eaa6 ; call rax
0x000000000007eb1a : je 0x7ebee ; call rax
0x000000000007ec7f : je 0x7ecc8 ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x000000000007f2e5 : je 0x7f368 ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000007f658 : je 0x7f662 ; ret
0x000000000007fda2 : je 0x7fdb4 ; lea rax, qword ptr [rip + 0x12495] ; ret
0x000000000007ff8f : je 0x7ffa1 ; lea rax, qword ptr [rip + 0xc98f8] ; ret
0x0000000000081682 : je 0x81694 ; lea rax, qword ptr [rip + 0xbcf85] ; ret
0x000000000008178f : je 0x817a1 ; lea rax, qword ptr [rip + 0xa2a88] ; ret
0x0000000000081917 : je 0x81940 ; movsx edx, sil ; mov eax, edx ; ret
0x0000000000081a22 : je 0x81a2f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000081c4b : je 0x81c55 ; bsf eax, edx ; ret
0x0000000000081c4b : je 0x81c56 ; bsf eax, edx ; ret
0x0000000000081cf4 : je 0x81d05 ; bsf rax, rdx ; ret
0x0000000000081cf4 : je 0x81d06 ; bsf rax, rdx ; ret
0x0000000000081c98 : je 0x81d16 ; bsf rax, rdx ; ret
0x0000000000081ee3 : je 0x81f05 ; bsf rax, rdx ; ret
0x0000000000081ee3 : je 0x81f06 ; bsf rax, rdx ; ret
0x0000000000081e73 : je 0x81f19 ; bsf rax, rdx ; ret
0x0000000000082022 : je 0x82034 ; lea rax, qword ptr [rip + 0x11e35] ; ret
0x0000000000083902 : je 0x83914 ; lea rax, qword ptr [rip + 0xbc4b5] ; ret
0x0000000000083c1f : je 0x83c31 ; lea rax, qword ptr [rip + 0xa0738] ; ret
0x0000000000083f9f : je 0x83fb1 ; lea rax, qword ptr [rip + 0xa04d8] ; ret
0x0000000000084e5c : je 0x84eb3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084fdc : je 0x84fef ; lea rax, qword ptr [rip + 0xc243b] ; ret
0x0000000000085752 : je 0x85764 ; lea rax, qword ptr [rip + 0xaf225] ; ret
0x0000000000085c42 : je 0x85c54 ; lea rax, qword ptr [rip + 0xbccf5] ; ret
0x0000000000085d62 : je 0x85d74 ; lea rax, qword ptr [rip + 0xbe3e5] ; ret
0x000000000008a779 : je 0x8a791 ; cmp rsi, rcx ; jne 0x8a771 ; xor eax, eax ; ret
0x000000000008a7c3 : je 0x8a7d5 ; lea rax, qword ptr [rip + 0x9f7c4] ; ret
0x000000000008bcc8 : je 0x8bce1 ; lea rax, qword ptr [rip - 0x501] ; ret
0x000000000008c2d4 : je 0x8c2ff ; sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000008c6da : je 0x8c731 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c791 : je 0x8c7a9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008cc84 : je 0x8cc96 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009120a : je 0x91203 ; ret
0x0000000000091226 : je 0x9121b ; ret
0x0000000000091222 : je 0x9121f ; cmp ecx, edx ; je 0x9121f ; ret
0x000000000009124e : je 0x9123b ; ret
0x0000000000091249 : je 0x91240 ; cmp r8d, ecx ; je 0x91240 ; ret
0x000000000009127d : je 0x91299 ; cmp eax, esi ; jne 0x91279 ; mov rax, rdi ; ret
0x00000000000917bc : je 0x91798 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000091b4b : je 0x91b0f ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000097269 : je 0x972ba ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000988f6 : je 0x98947 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009a60a : je 0x9a65b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009bb7d : je 0x9bb46 ; movzx eax, dl ; pop rbx ; ret
0x000000000009bb55 : je 0x9bb48 ; movzx eax, cl ; pop rbx ; ret
0x000000000009bb7d : je 0x9bb48 ; movzx eax, dl ; pop rbx ; ret
0x000000000009bcb6 : je 0x9bce0 ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000009bd2f : je 0x9bd13 ; ret
0x000000000009bd77 : je 0x9bd53 ; ret
0x000000000009cc8f : je 0x9cc81 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cec9 : je 0x9cee9 ; mov cl, dl ; and cl, 0xf ; je 0x9cef9 ; ret
0x000000000009ced0 : je 0x9cef2 ; ret
0x000000000009cee5 : je 0x9cf06 ; add rax, 2 ; ret
0x000000000009d042 : je 0x9d009 ; mov dword ptr [rsi + 4], 0 ; ret
0x000000000009d0ba : je 0x9d079 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000009d4f6 : je 0x9d566 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009d7b7 : je 0x9d7d4 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x000000000009d81c : je 0x9d82f ; lea rax, qword ptr [rip + 0xab23b] ; ret
0x000000000009f551 : je 0x9f563 ; mov edx, eax ; jmp 0x9f523
0x00000000000a06c6 : je 0xa06f0 ; and cl, ch ; ret 0xfff6
0x00000000000a1aa1 : je 0xa1ab3 ; mov edx, eax ; jmp 0xa1a73
0x00000000000a3f01 : je 0xa3f13 ; mov edx, eax ; jmp 0xa3ed3
0x00000000000aaed4 : je 0xaaf02 ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000000b53f3 : je 0xb5404 ; xor eax, eax ; ret
0x00000000000b9fae : je 0xb9fb4 ; call rax
0x00000000000ba0c8 : je 0xba0a0 ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ba12b : je 0xba135 ; call rdx
0x00000000000ba1ab : je 0xba1b5 ; call rax
0x00000000000bb729 : je 0xbb75f ; mov eax, 1 ; ret
0x00000000000bd7f2 : je 0xbd7f5 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1fe4 : je 0xc1ff4 ; xor eax, eax ; ret
0x00000000000c35ab : je 0xc35fc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c3708 : je 0xc3695 ; pop rbx ; ret
0x00000000000c37c0 : je 0xc37cb ; ret
0x00000000000c37bb : je 0xc37d8 ; cmp eax, 3 ; je 0xc37d0 ; ret
0x00000000000c41d8 : je 0xc41e3 ; ret
0x00000000000c42ca : je 0xc42d4 ; xor eax, eax ; ret
0x00000000000c42c6 : je 0xc4328 ; cmp al, 0x11 ; je 0xc42d8 ; xor eax, eax ; ret
0x00000000000c4804 : je 0xc4818 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c65c8 : je 0xc658a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cfd44 : je 0xcfd24 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000d1ebf : je 0xd1f14 ; ret
0x00000000000d2cb2 : je 0xd2cc3 ; ret
0x000000000018204e : je 0xd35204c ; jb 0x1820bd ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000d7335 : je 0xd7313 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da4e2 : je 0xda4ee ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000da7a2 : je 0xda7ae ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000da93a : je 0xda943 ; ret
0x00000000000de3f4 : je 0xde430 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000dfdb3 : je 0xdfdcd ; neg eax ; pop rbx ; ret
0x00000000000e169e : je 0xe16a5 ; ret
0x00000000000e3103 : je 0xe310e ; mov qword ptr [rax], rdx ; ret
0x00000000000e31d2 : je 0xe31c7 ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000e44f8 : je 0xe4509 ; mov dword ptr [rip + 0x2c0d10], edi ; ret
0x00000000000e5533 : je 0xe553a ; pop rbx ; ret
0x00000000000e69ae : je 0xe6a4e ; call rax
0x00000000000e6b25 : je 0xe6c26 ; call rax
0x00000000000e6d08 : je 0xe6d19 ; lea rax, qword ptr [r12 - 1] ; jmp 0xe6cdc
0x00000000000e85f6 : je 0xe85fb ; ret
0x00000000000e882f : je 0xe885e ; or byte ptr [rcx - 0x17fbdb84], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000eab21 : je 0xeab32 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000eaac1 : je 0xeab42 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000ed87e : je 0xed88e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed8b2 : je 0xed8d0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f0f25 : je 0xf0f34 ; xor eax, eax ; ret
0x00000000000f3573 : je 0xf3587 ; mov eax, 7 ; ret
0x00000000000f3591 : je 0xf35b9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000f35a0 : je 0xf3604 ; xor eax, eax ; pop rbx ; ret
0x00000000000f455d : je 0xf456b ; ret
0x00000000000f4c09 : je 0xf4c0e ; ret
0x00000000000f4c6d : je 0xf4c72 ; ret
0x00000000000f508a : je 0xf5093 ; ret
0x00000000000f5bf2 : je 0xf5c04 ; lea rax, qword ptr [rip + 0x3c2a5] ; ret
0x00000000000f5c92 : je 0xf5ca4 ; lea rax, qword ptr [rip + 0x3ecd5] ; ret
0x00000000000f71fc : je 0xf720e ; add rsp, 8 ; ret
0x00000000000ffbc7 : je 0xffbd3 ; mov rdi, rbx ; call rax
0x00000000001021ab : jg 0x102197 ; mov eax, 0xffffffff ; ret
0x000000000010fa62 : jg 0x10faac ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10fa78 ; ret
0x0000000000114692 : jg 0x1146dc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1146a8 ; ret
0x000000000012c1b9 : jg 0x12c20c ; ret
0x000000000012c23f : jg 0x12c28a ; ret
0x000000000012c3b9 : jg 0x12c40c ; ret 0x894c
0x000000000012c43f : jg 0x12c48a ; ret 0x894c
0x000000000012eb89 : jg 0x12ebdc ; ret
0x000000000012ec0f : jg 0x12ec5a ; ret
0x000000000012ed89 : jg 0x12eddc ; ret 0x894c
0x000000000012ee0f : jg 0x12ee5a ; ret 0x894c
0x0000000000131559 : jg 0x1315ac ; ret
0x00000000001315df : jg 0x13162a ; ret
0x0000000000131759 : jg 0x1317ac ; ret 0x894c
0x00000000001317df : jg 0x13182a ; ret 0x894c
0x0000000000133b28 : jg 0x133b79 ; loope 0x133b27 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133b9f : jg 0x133bea ; ret 0xff2
0x0000000000133bb8 : jg 0x133c09 ; loop 0x133bb7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133c2f : jg 0x133c7a ; ret
0x0000000000133c48 : jg 0x133c99 ; jrcxz 0x133c47 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133cd8 : jg 0x133d29 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133d58 : jg 0x133da9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133dd8 : jg 0x133e29 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133e58 : jg 0x133ea9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133ed8 : jg 0x133f29 ; call 0x4f924eda
0x0000000000133f58 : jg 0x133fa9 ; jmp 0x4f924f5a
0x00000000001340d8 : jg 0x134129 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134158 : jg 0x1341a9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001341e8 : jg 0x134239 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134268 : jg 0x1342b9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001342dc : jg 0x1342e7 ; ret
0x0000000000134336 : jg 0x134349 ; ret
0x0000000000134331 : jg 0x134381 ; psllq mm1, qword ptr [rdi] ; jg 0x13434e ; ret
0x00000000001343a6 : jg 0x1343b9 ; ret
0x0000000000134416 : jg 0x134429 ; ret
0x0000000000134411 : jg 0x134461 ; or eax, 0xf7f0ff3 ; ret
0x0000000000134486 : jg 0x134499 ; ret
0x0000000000134481 : jg 0x1344d1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001344f6 : jg 0x134509 ; ret
0x00000000001344f1 : jg 0x134541 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134566 : jg 0x134579 ; ret
0x0000000000134561 : jg 0x1345b1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001345d6 : jg 0x1345e9 ; ret
0x00000000001345d1 : jg 0x134621 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134646 : jg 0x134659 ; ret
0x0000000000134641 : jg 0x134691 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001346b6 : jg 0x1346c9 ; ret
0x0000000000134726 : jg 0x134739 ; ret
0x0000000000134796 : jg 0x1347a9 ; ret
0x0000000000134791 : jg 0x1347e1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000134806 : jg 0x134819 ; ret
0x0000000000134801 : jg 0x134851 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134876 : jg 0x134889 ; ret
0x0000000000134871 : jg 0x1348c1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001348e6 : jg 0x1348f9 ; ret
0x00000000001348e1 : jg 0x134931 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134956 : jg 0x134969 ; ret
0x0000000000134951 : jg 0x1349a1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001365f8 : jg 0x136649 ; loope 0x1365f7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013666f : jg 0x1366ba ; ret 0xff2
0x0000000000136688 : jg 0x1366d9 ; loop 0x136687 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001366ff : jg 0x13674a ; ret
0x0000000000136718 : jg 0x136769 ; jrcxz 0x136717 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001367a8 : jg 0x1367f9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136828 : jg 0x136879 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001368a8 : jg 0x1368f9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136928 : jg 0x136979 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001369a8 : jg 0x1369f9 ; call 0x4f9279aa
0x0000000000136a28 : jg 0x136a79 ; jmp 0x4f927a2a
0x0000000000136ba8 : jg 0x136bf9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136c28 : jg 0x136c79 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136cb8 : jg 0x136d09 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136d38 : jg 0x136d89 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000136dac : jg 0x136db7 ; ret
0x0000000000136e06 : jg 0x136e19 ; ret
0x0000000000136e01 : jg 0x136e51 ; psllq mm1, qword ptr [rdi] ; jg 0x136e1e ; ret
0x0000000000136e76 : jg 0x136e89 ; ret
0x0000000000136ee6 : jg 0x136ef9 ; ret
0x0000000000136ee1 : jg 0x136f31 ; or eax, 0xf7f0ff3 ; ret
0x0000000000136f56 : jg 0x136f69 ; ret
0x0000000000136f51 : jg 0x136fa1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000136fc6 : jg 0x136fd9 ; ret
0x0000000000136fc1 : jg 0x137011 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137036 : jg 0x137049 ; ret
0x0000000000137031 : jg 0x137081 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001370a6 : jg 0x1370b9 ; ret
0x00000000001370a1 : jg 0x1370f1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137116 : jg 0x137129 ; ret
0x0000000000137111 : jg 0x137161 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137186 : jg 0x137199 ; ret
0x00000000001371f6 : jg 0x137209 ; ret
0x0000000000137266 : jg 0x137279 ; ret
0x0000000000137261 : jg 0x1372b1 ; add eax, 0xf7f0ff3 ; ret
0x00000000001372d6 : jg 0x1372e9 ; ret
0x00000000001372d1 : jg 0x137321 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137346 : jg 0x137359 ; ret
0x0000000000137341 : jg 0x137391 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001373b6 : jg 0x1373c9 ; ret
0x00000000001373b1 : jg 0x137401 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000137426 : jg 0x137439 ; ret
0x0000000000137421 : jg 0x137471 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139118 : jg 0x139169 ; loope 0x139117 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013918f : jg 0x1391da ; ret 0xff2
0x00000000001391a8 : jg 0x1391f9 ; loop 0x1391a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013921f : jg 0x13926a ; ret
0x0000000000139238 : jg 0x139289 ; jrcxz 0x139237 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001392c8 : jg 0x139319 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139348 : jg 0x139399 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001393c8 : jg 0x139419 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139448 : jg 0x139499 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001394c8 : jg 0x139519 ; call 0x4f92a4ca
0x0000000000139548 : jg 0x139599 ; jmp 0x4f92a54a
0x00000000001396c8 : jg 0x139719 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139748 : jg 0x139799 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001397d8 : jg 0x139829 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000139858 : jg 0x1398a9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001398cc : jg 0x1398d7 ; ret
0x0000000000139926 : jg 0x139939 ; ret
0x0000000000139921 : jg 0x139971 ; psllq mm1, qword ptr [rdi] ; jg 0x13993e ; ret
0x0000000000139996 : jg 0x1399a9 ; ret
0x0000000000139a06 : jg 0x139a19 ; ret
0x0000000000139a01 : jg 0x139a51 ; or eax, 0xf7f0ff3 ; ret
0x0000000000139a76 : jg 0x139a89 ; ret
0x0000000000139a71 : jg 0x139ac1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ae6 : jg 0x139af9 ; ret
0x0000000000139ae1 : jg 0x139b31 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139b56 : jg 0x139b69 ; ret
0x0000000000139b51 : jg 0x139ba1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139bc6 : jg 0x139bd9 ; ret
0x0000000000139bc1 : jg 0x139c11 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139c36 : jg 0x139c49 ; ret
0x0000000000139c31 : jg 0x139c81 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ca6 : jg 0x139cb9 ; ret
0x0000000000139d16 : jg 0x139d29 ; ret
0x0000000000139d86 : jg 0x139d99 ; ret
0x0000000000139d81 : jg 0x139dd1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000139df6 : jg 0x139e09 ; ret
0x0000000000139df1 : jg 0x139e41 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139e66 : jg 0x139e79 ; ret
0x0000000000139e61 : jg 0x139eb1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139ed6 : jg 0x139ee9 ; ret
0x0000000000139ed1 : jg 0x139f21 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139f46 : jg 0x139f59 ; ret
0x0000000000139f41 : jg 0x139f91 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014b925 : jg 0x14b934 ; neg eax ; ret
0x000000000015ec25 : jg 0x15ec1b ; call qword ptr [rax]
0x000000000015ec25 : jg 0x15ec1f ; call qword ptr [rax]
0x000000000016e10d : jg 0x16e10d ; call qword ptr [rax]
0x000000000016e9b5 : jg 0x16e9bd ; add byte ptr [rsi + rsi*8 - 0x15], ah ; jmp rsp
0x00000000001703b9 : jg 0x1703ad ; call rsp
0x0000000000171d89 : jg 0x171d83 ; jmp rsp
0x0000000000173ba5 : jg 0x173baf ; add byte ptr [rcx + rbp - 7], dh ; call rsp
0x0000000000176c95 : jg 0x176c84 ; jmp qword ptr [rdx]
0x0000000000176c94 : jg 0x176c85 ; jmp qword ptr [rdx]
0x0000000000179b2d : jg 0x179b1d ; jmp qword ptr [rdx]
0x0000000000179b75 : jg 0x179b65 ; jmp qword ptr [rdx]
0x0000000000187ab4 : jg 0x187a46 ; jmp qword ptr [rdx]
0x0000000000188ca4 : jg 0x188c4a ; jmp qword ptr [rdx]
0x000000000019540c : jg 0x1953e0 ; cmc ; jmp qword ptr [rdx]
0x000000000001faf5 : jg 0x1fa87 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000003446b : jg 0x344bd ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000348e4 : jg 0x348ea ; je 0x348db ; ret
0x0000000000034ada : jg 0x34ae0 ; add byte ptr [rcx], cl ; ret 0xd089
0x0000000000034a75 : jg 0x34af6 ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000034c82 : jg 0x34ccf ; or ecx, eax ; je 0x34c2e ; ret
0x0000000000043aeb : jg 0x43b59 ; xor eax, eax ; ret
0x0000000000043bf6 : jg 0x43bb3 ; ret
0x0000000000068cb8 : jg 0x68c4a ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000006c59d : jg 0x6c5c0 ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6c54b
0x0000000000072ed7 : jg 0x72e65 ; inc byte ptr [rdx] ; je 0x72ef1 ; mov dword ptr [rdi], edx ; ret
0x0000000000076163 : jg 0x761a6 ; add byte ptr [rax - 0x77], cl ; sti ; je 0x76179 ; pop rbx ; ret
0x00000000000857e7 : jg 0x85800 ; jne 0x857d7 ; mov rax, rdi ; ret
0x000000000008a857 : jg 0x8a86e ; jne 0x8a845 ; ret
0x000000000008bd18 : jg 0x8bd03 ; ret
0x000000000008ea19 : jg 0x8ea05 ; or byte ptr [rdi], sil ; ret
0x0000000000097036 : jg 0x97041 ; ret
0x0000000000097046 : jg 0x97054 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009705a : jg 0x97069 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000097079 : jg 0x97087 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097089 : jg 0x97097 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000097099 : jg 0x970aa ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000970ba : jg 0x970c9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000970da : jg 0x970e9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000970fa : jg 0x97109 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009711a : jg 0x9712c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009715d : jg 0x9716f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009717d : jg 0x9718f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009719b : jg 0x971ab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000971bb : jg 0x971cb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000971db : jg 0x971eb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000971fb : jg 0x9720b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000097788 : jg 0x97793 ; jne 0x98048 ; ret
0x00000000000977ac : jg 0x977b8 ; jne 0x98048 ; ret
0x00000000000977cf : jg 0x977dc ; jne 0x98048 ; ret
0x00000000000977ea : jg 0x977f8 ; jne 0x98048 ; ret
0x000000000009780d : jg 0x9781c ; jne 0x98048 ; ret
0x0000000000097832 : jg 0x97842 ; jne 0x98048 ; ret
0x0000000000097850 : jg 0x97861 ; jne 0x98048 ; ret
0x000000000009786c : jg 0x9787e ; jne 0x98048 ; ret
0x000000000009788f : jg 0x978a2 ; jne 0x98048 ; ret
0x00000000000978b4 : jg 0x978c8 ; jne 0x98048 ; ret
0x00000000000978d2 : jg 0x978e7 ; jne 0x98048 ; ret
0x00000000000978f2 : jg 0x97908 ; jne 0x98048 ; ret
0x0000000000097914 : jg 0x9792b ; jne 0x98048 ; ret
0x0000000000097934 : jg 0x9794c ; jne 0x98048 ; ret
0x0000000000097954 : jg 0x9796d ; jne 0x98048 ; ret
0x000000000009796e : jg 0x97988 ; jne 0x98048 ; ret
0x0000000000097991 : jg 0x979ac ; jne 0x98048 ; ret
0x00000000000979b6 : jg 0x979d2 ; jne 0x98048 ; ret
0x00000000000979d4 : jg 0x979f1 ; jne 0x98048 ; ret
0x00000000000979f4 : jg 0x97a12 ; jne 0x98048 ; ret
0x0000000000097a17 : jg 0x97a36 ; jne 0x98048 ; ret
0x0000000000097a36 : jg 0x97a56 ; jne 0x98048 ; ret
0x0000000000097a56 : jg 0x97a77 ; jne 0x98048 ; ret
0x0000000000097a76 : jg 0x97a98 ; jne 0x98048 ; ret
0x0000000000097a99 : jg 0x97abc ; jne 0x98048 ; ret
0x0000000000097ace : jg 0x97af2 ; jne 0x98048 ; ret
0x0000000000097afc : jg 0x97b21 ; jne 0x98048 ; ret
0x0000000000097b2c : jg 0x97b52 ; jne 0x98048 ; ret
0x0000000000097b58 : jg 0x97b7f ; jne 0x98048 ; ret
0x0000000000097b88 : jg 0x97bb0 ; jne 0x98048 ; ret
0x0000000000097bb8 : jg 0x97be1 ; jne 0x98048 ; ret
0x0000000000097be8 : jg 0x97c12 ; jne 0x98048 ; ret
0x0000000000097d06 : jg 0x97d11 ; ret
0x0000000000097d19 : jg 0x97d27 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000097d2a : jg 0x97d39 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000097d49 : jg 0x97d57 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097d59 : jg 0x97d67 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000097d6c : jg 0x97d7d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000097d8a : jg 0x97d99 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000097daa : jg 0x97db9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000097dca : jg 0x97dd9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000097ded : jg 0x97dff ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000097e2d : jg 0x97e3f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000097e4d : jg 0x97e5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000097e6b : jg 0x97e7b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000097e8b : jg 0x97e9b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000097eab : jg 0x97ebb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000097ecb : jg 0x97edb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000098002 : jg 0x9800d ; ret
0x0000000000098136 : jg 0x9816a ; ret
0x00000000000986a6 : jg 0x986b5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000986b6 : jg 0x986c8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000986e9 : jg 0x986fb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000098709 : jg 0x9871b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009882f : jg 0x9888f ; or eax, 0x1c478d48 ; ret
0x0000000000098e2b : jg 0x98e36 ; jne 0x99858 ; ret
0x0000000000098e50 : jg 0x98e5c ; jne 0x99858 ; ret
0x0000000000098e73 : jg 0x98e80 ; jne 0x99858 ; ret
0x0000000000098e8e : jg 0x98e9c ; jne 0x99858 ; ret
0x0000000000098eb1 : jg 0x98ec0 ; jne 0x99858 ; ret
0x0000000000098ed6 : jg 0x98ee6 ; jne 0x99858 ; ret
0x0000000000098ef4 : jg 0x98f05 ; jne 0x99858 ; ret
0x0000000000098f10 : jg 0x98f22 ; jne 0x99858 ; ret
0x0000000000098f33 : jg 0x98f46 ; jne 0x99858 ; ret
0x0000000000098f58 : jg 0x98f6c ; jne 0x99858 ; ret
0x0000000000098f86 : jg 0x98f9b ; jne 0x99858 ; ret
0x0000000000098fa6 : jg 0x98fbc ; jne 0x99858 ; ret
0x0000000000098fc8 : jg 0x98fdf ; jne 0x99858 ; ret
0x0000000000098ff8 : jg 0x99010 ; jne 0x99858 ; ret
0x0000000000099028 : jg 0x99041 ; jne 0x99858 ; ret
0x0000000000099052 : jg 0x9906c ; jne 0x99858 ; ret
0x0000000000099075 : jg 0x99090 ; jne 0x99858 ; ret
0x000000000009909a : jg 0x990b6 ; jne 0x99858 ; ret
0x00000000000990c8 : jg 0x990e5 ; jne 0x99858 ; ret
0x00000000000990f8 : jg 0x99116 ; jne 0x99858 ; ret
0x000000000009912b : jg 0x9914a ; jne 0x99858 ; ret
0x000000000009915a : jg 0x9917a ; jne 0x99858 ; ret
0x000000000009918a : jg 0x991ab ; jne 0x99858 ; ret
0x00000000000991ba : jg 0x991dc ; jne 0x99858 ; ret
0x00000000000991ed : jg 0x99210 ; jne 0x99858 ; ret
0x0000000000099222 : jg 0x99246 ; jne 0x99858 ; ret
0x0000000000099250 : jg 0x99275 ; jne 0x99858 ; ret
0x0000000000099280 : jg 0x992a6 ; jne 0x99858 ; ret
0x00000000000992ac : jg 0x992d3 ; jne 0x99858 ; ret
0x00000000000992dc : jg 0x99304 ; jne 0x99858 ; ret
0x000000000009930c : jg 0x99335 ; jne 0x99858 ; ret
0x000000000009933c : jg 0x99366 ; jne 0x99858 ; ret
0x00000000000994e6 : jg 0x994f5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000994f9 : jg 0x9950b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000099539 : jg 0x9954b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000099559 : jg 0x9956b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009967f : jg 0x996df ; or eax, 0x1d478d48 ; ret
0x0000000000099812 : jg 0x9981d ; ret
0x0000000000099946 : jg 0x9997e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000099945 : jg 0x999cd ; xor byte ptr [rax - 0x73], cl ; ret
0x000000000009a116 : jg 0x9a121 ; ret
0x000000000009a126 : jg 0x9a134 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009a13a : jg 0x9a149 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009a159 : jg 0x9a167 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009a169 : jg 0x9a177 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009a179 : jg 0x9a18a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009a19a : jg 0x9a1a9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009a1ba : jg 0x9a1c9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009a1da : jg 0x9a1e9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009a1fa : jg 0x9a20c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009a23d : jg 0x9a24f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009a25d : jg 0x9a26f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009a27b : jg 0x9a28b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009a29b : jg 0x9a2ab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009a2bb : jg 0x9a2cb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009a2db : jg 0x9a2eb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009abe6 : jg 0x9abf1 ; ret
0x000000000009abf6 : jg 0x9ac04 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009ac0a : jg 0x9ac19 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009ac29 : jg 0x9ac37 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ac39 : jg 0x9ac47 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009ac49 : jg 0x9ac5a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009ac6a : jg 0x9ac79 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009ac8a : jg 0x9ac99 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009acaa : jg 0x9acb9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009acca : jg 0x9acdc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009ad0d : jg 0x9ad1f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009ad2d : jg 0x9ad3f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009ad4b : jg 0x9ad5b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009ad6b : jg 0x9ad7b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009ad8b : jg 0x9ad9b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009adab : jg 0x9adbb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009af56 : jg 0x9af66 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009b12f : jg 0x9b190 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009b14f : jg 0x9b1b0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009b1c6 : jg 0x9b1ff ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009b1c5 : jg 0x9b24e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009bb10 : jg 0x9bb4d ; ret 0x2b77
0x000000000009cc15 : jg 0x9cc1d ; neg eax ; ret
0x00000000000bb4dc : jg 0xbb4e2 ; add byte ptr [rax], al ; ret
0x00000000000d2d29 : jg 0xd2d48 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xd2d41 ; ret
0x00000000000dc110 : jg 0xdc162 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e4dc4 : jg 0xe4dd4 ; add byte ptr [rsi + 0xf], ah ; ret
0x00000000000e6223 : jg 0xe6225 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e6222 : jg 0xe6226 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000103178 : jge 0x103123 ; mov ebx, 0xfffffff5 ; call 0x1f479
0x0000000000103ffc : jge 0x104009 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010d945 : jge 0x10d94c ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000010f82f : jge 0x10f843 ; call rax
0x000000000011447f : jge 0x114493 ; call rax
0x0000000000114ad8 : jge 0x114aec ; call rax
0x000000000016e145 : jge 0x16e145 ; call rax
0x000000000016f3b0 : jge 0x16f407 ; in eax, dx ; call rsp
0x000000000017ed9c : jge 0x17ed93 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193764 : jge 0x193717 ; cmc ; jmp qword ptr [rdx]
0x00000000001937e4 : jge 0x193797 ; cmc ; jmp qword ptr [rdx]
0x000000000008cc81 : jge 0x8cc8c ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000009169f : jge 0x916a7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009de2f : jge 0x9de34 ; call r12
0x00000000000a775d : jge 0xa770c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000aa0a1 : jge 0xaa0a6 ; call r12
0x00000000000b6a46 : jge 0xb69e3 ; call r14
0x00000000000c1c30 : jge 0xc1bf7 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c3ca9 : jge 0xc3c84 ; mov edx, eax ; jmp 0xc3c8d
0x00000000000c4d1b : jge 0xc4cfa ; mov rdx, r8 ; jmp 0xc4d32
0x00000000000e5c1f : jge 0xe5bea ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000107ee5 : jl 0x107f0f ; sbb al, ch ; ret
0x0000000000107fb2 : jl 0x107fe1 ; or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x000000000010ad45 : jl 0x10ad4c ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001137e6 : jl 0x113810 ; sub al, 0xe8 ; ret 0xfc89
0x000000000014987b : jl 0x149884 ; neg eax ; ret
0x000000000015ec21 : jl 0x15ec1b ; inc dword ptr [rax] ; jg 0x15ec1f ; call qword ptr [rax]
0x000000000016cf1d : jl 0x16cf1c ; jmp rax
0x000000000016f0c4 : jl 0x16f070 ; add byte ptr [rax], al ; mov ah, 0x9d ; in al, dx ; jmp rsp
0x000000000016f99c : jl 0x16f982 ; add byte ptr [rax], al ; push rsp ; ret
0x000000000016fd2c : jl 0x16fd2f ; add byte ptr [rax], al ; in al, -6 ; out dx, eax ; jmp rsp
0x0000000000171b11 : jl 0x171b0c ; push rsp ; ret 1
0x0000000000173f64 : jl 0x173f0a ; add al, byte ptr [rax] ; in al, -0x51 ; stc ; jmp rsp
0x0000000000174a04 : jl 0x1749ed ; add al, byte ptr [rax] ; test al, cl ; cli ; call rsp
0x0000000000176939 : jl 0x176928 ; call qword ptr [rsi]
0x00000000001769c9 : jl 0x1769b8 ; call qword ptr [rdx]
0x00000000001769e1 : jl 0x1769d0 ; call qword ptr [rbx]
0x00000000001769f9 : jl 0x1769e8 ; call qword ptr [rdx]
0x0000000000176a11 : jl 0x176a00 ; call qword ptr [rbx]
0x0000000000176a29 : jl 0x176a18 ; call qword ptr [rbx]
0x0000000000176a41 : jl 0x176a30 ; call qword ptr [rbx]
0x0000000000176a40 : jl 0x176a31 ; call qword ptr [rbx]
0x0000000000176a59 : jl 0x176a48 ; call qword ptr [rbx]
0x0000000000176a58 : jl 0x176a49 ; call qword ptr [rbx]
0x0000000000176a71 : jl 0x176a60 ; call qword ptr [rdx]
0x0000000000176a89 : jl 0x176a78 ; call qword ptr [rbx]
0x0000000000176aa1 : jl 0x176a90 ; call qword ptr [rbx]
0x0000000000176ab9 : jl 0x176aa8 ; call qword ptr [rbx]
0x0000000000176b01 : jl 0x176af0 ; jmp qword ptr [rax]
0x0000000000176b19 : jl 0x176b08 ; call qword ptr [rcx]
0x0000000000176b31 : jl 0x176b20 ; call qword ptr [rcx]
0x0000000000176b49 : jl 0x176b38 ; call qword ptr [rcx]
0x000000000017c114 : jl 0x17c18d ; add byte ptr [rax], al ; pop rax ; loopne 0x17c110 ; call qword ptr [rax]
0x000000000017c374 : jl 0x17c335 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017fa7c : jl 0x17fa79 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000185214 : jl 0x18521e ; add dword ptr [rax], eax ; sti ; call qword ptr [rax]
0x000000000018c614 : jl 0x18c692 ; add dword ptr [rax], eax ; sub ah, bh ; hlt ; jmp qword ptr [rcx]
0x000000000018d714 : jl 0x18d6a3 ; add dword ptr [rax], eax ; call 0x2218cc67
0x0000000000191e14 : jl 0x191dea ; add dword ptr [rax], eax ; pop rax ; sub esi, esi ; jmp qword ptr [rsi]
0x0000000000021af5 : jl 0x21b1f ; and al, ch ; ret
0x0000000000025153 : jl 0x25180 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002523d : jl 0x2526b ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002552c : jl 0x25559 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000025c3 : jl 0x2556 ; loop 0x25a1 ; ret 0x23cb
0x0000000000025a0b : jl 0x25a39 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025b77 : jl 0x25ba5 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025e70 : jl 0x25e9d ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026390 : jl 0x263be ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264b9 : jl 0x264e7 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026b9f : jl 0x26bcc ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027128 : jl 0x27151 ; call rax
0x0000000000027123 : jl 0x27151 ; or byte ptr [rax - 0x75], cl ; jl 0x27156 ; call rax
0x0000000000027710 : jl 0x2773d ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000027e5f : jl 0x27e8d ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000028622 : jl 0x28650 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000028e45 : jl 0x28e73 ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000291bd : jl 0x291eb ; pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000000295d3 : jl 0x29600 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000029e10 : jl 0x29e3e ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002a195 : jl 0x2a1c3 ; pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a5ab : jl 0x2a5d8 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x000000000004c9c4 : jl 0x4c98e ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000505a4 : jl 0x505c8 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007a94c : jl 0x7a978 ; sub byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x000000000009172a : jl 0x91795 ; add rax, rdi ; ret
0x000000000009173a : jl 0x91797 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009175a : jl 0x91797 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009177a : jl 0x91797 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000affa6 : jl 0xaffd0 ; adc al, ch ; ret 0x5b
0x00000000000b01a6 : jl 0xb01d0 ; adc al, ch ; ret 0x59
0x00000000000b15c3 : jl 0xb1614 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000b1ed5 : jl 0xb1f00 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c34ee : jl 0xc3528 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c3b48 : jl 0xc3b67 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c42b7 : jl 0xc42ab ; ret
0x00000000000c5bd6 : jl 0xc5c04 ; or byte ptr [rbx - 0x7bf0ff06], al ; ret 1
0x00000000000d7022 : jl 0xd704d ; sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000dc047 : jl 0xdc071 ; or al, 0x89 ; ret
0x00000000000e5a66 : jl 0xe5a94 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e85f4 : jl 0xe8639 ; je 0xe85fd ; ret
0x00000000000e8833 : jl 0xe885e ; add al, 0xe8 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000113628 : jle 0x113640 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000124337 : jle 0x124261 ; movsxd rax, ecx ; ret
0x0000000000124571 : jle 0x1244bb ; ret
0x000000000015eb48 : jle 0x15eb35 ; int1 ; inc edi ; in eax, -0xf ; jmp rax
0x000000000016e109 : jle 0x16e109 ; call rax
0x0000000000172719 : jle 0x172714 ; jmp rsp
0x000000000017ad2c : jle 0x17accd ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000181d84 : jle 0x181de5 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000188834 : jle 0x1887d8 ; jmp qword ptr [rdx]
0x00000000000221b9 : jle 0x221ad ; mov byte ptr [rdi], 0 ; ret
0x000000000002b6c2 : jle 0x2b6d5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000006e37d : jle 0x6e3b5 ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x000000000007d2e3 : jle 0x7d31f ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000badad : jle 0xbadb4 ; ret
0x00000000000bb589 : jle 0xbb58f ; add byte ptr [rax], al ; ret
0x00000000000f683e : jle 0xf6841 ; hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x0000000000108592 : jmp 0x10810d
0x00000000000da566 : jmp 0x108630b9
0x000000000010ec9f : jmp 0x10ec65
0x0000000000113c4e : jmp 0x113c58
0x000000000011954a : jmp 0x119510
0x000000000015aaaa : jmp 0x15aae9
0x000000000015b7e9 : jmp 0x15b7bc
0x000000000015c7e0 : jmp 0x15c774
0x000000000015c7df : jmp 0x15c775
0x000000000016e752 : jmp 0x16e754
0x000000000016e751 : jmp 0x16e755
0x000000000016e87a : jmp 0x16e87c
0x000000000016e879 : jmp 0x16e87d
0x000000000016e932 : jmp 0x16e934
0x000000000016e9ba : jmp 0x16e9bc
0x000000000016ea2a : jmp 0x16ea2c
0x0000000000175e42 : jmp 0x175e44
0x0000000000175f82 : jmp 0x175f84
0x0000000000176232 : jmp 0x176234
0x000000000017633a : jmp 0x17633c
0x00000000001765d2 : jmp 0x1765d4
0x0000000000176722 : jmp 0x176724
0x000000000017693a : jmp 0x17693c
0x00000000001769ca : jmp 0x1769cc
0x00000000001769e2 : jmp 0x1769e4
0x00000000001769fa : jmp 0x1769fc
0x0000000000176a12 : jmp 0x176a14
0x0000000000176a2a : jmp 0x176a2c
0x0000000000176a42 : jmp 0x176a44
0x0000000000176a5a : jmp 0x176a5c
0x0000000000176a72 : jmp 0x176a74
0x0000000000176a8a : jmp 0x176a8c
0x0000000000176aa2 : jmp 0x176aa4
0x0000000000176aba : jmp 0x176abc
0x0000000000176b02 : jmp 0x176b04
0x0000000000176b1a : jmp 0x176b1c
0x0000000000176b32 : jmp 0x176b34
0x0000000000176b4a : jmp 0x176b4c
0x0000000000176c96 : jmp 0x176c98
0x0000000000176cde : jmp 0x176ce0
0x0000000000176d26 : jmp 0x176d28
0x0000000000176d6e : jmp 0x176d70
0x0000000000176db6 : jmp 0x176db8
0x0000000000176dfe : jmp 0x176e00
0x0000000000176f82 : jmp 0x176f84
0x0000000000176fb2 : jmp 0x176fb4
0x000000000017705e : jmp 0x177060
0x00000000001770a6 : jmp 0x1770a8
0x000000000017715e : jmp 0x177160
0x00000000001771a6 : jmp 0x1771a8
0x00000000001771c2 : jmp 0x1771c4
0x000000000017731a : jmp 0x17731c
0x000000000017745a : jmp 0x17745c
0x000000000017760a : jmp 0x17760c
0x0000000000177672 : jmp 0x177674
0x00000000001776a2 : jmp 0x1776a4
0x00000000001776ba : jmp 0x1776bc
0x00000000001777ca : jmp 0x1777cc
0x000000000017782a : jmp 0x17782c
0x0000000000177872 : jmp 0x177874
0x0000000000177a6a : jmp 0x177a6c
0x0000000000177a82 : jmp 0x177a84
0x0000000000177aba : jmp 0x177abc
0x0000000000177c4a : jmp 0x177c4c
0x0000000000178066 : jmp 0x178068
0x00000000001780ae : jmp 0x1780b0
0x00000000001780f6 : jmp 0x1780f8
0x00000000001781da : jmp 0x1781dc
0x00000000001782ca : jmp 0x1782cc
0x000000000017831e : jmp 0x178320
0x0000000000178366 : jmp 0x178368
0x00000000001783ae : jmp 0x1783b0
0x00000000001783f6 : jmp 0x1783f8
0x000000000017843e : jmp 0x178440
0x0000000000178486 : jmp 0x178488
0x00000000001784ce : jmp 0x1784d0
0x0000000000178516 : jmp 0x178518
0x00000000001786d6 : jmp 0x1786d8
0x000000000017871e : jmp 0x178720
0x0000000000178832 : jmp 0x178834
0x000000000017884a : jmp 0x17884c
0x00000000001788f2 : jmp 0x1788f4
0x000000000017890a : jmp 0x17890c
0x0000000000178992 : jmp 0x178994
0x00000000001789da : jmp 0x1789dc
0x0000000000178a46 : jmp 0x178a48
0x0000000000178a8e : jmp 0x178a90
0x0000000000178ad6 : jmp 0x178ad8
0x0000000000178b1e : jmp 0x178b20
0x0000000000178b66 : jmp 0x178b68
0x0000000000178bae : jmp 0x178bb0
0x0000000000178bf6 : jmp 0x178bf8
0x0000000000178c3e : jmp 0x178c40
0x0000000000178cca : jmp 0x178ccc
0x0000000000178db2 : jmp 0x178db4
0x0000000000178dca : jmp 0x178dcc
0x0000000000178de2 : jmp 0x178de4
0x0000000000178e12 : jmp 0x178e14
0x0000000000178ed2 : jmp 0x178ed4
0x0000000000178f1a : jmp 0x178f1c
0x0000000000178fc2 : jmp 0x178fc4
0x0000000000178fda : jmp 0x178fdc
0x0000000000178ff2 : jmp 0x178ff4
0x000000000017900a : jmp 0x17900c
0x00000000001031b0 : jmp 0x1f472
0x0000000000020230 : jmp 0x2023f
0x0000000000021463 : jmp 0x21422
0x00000000000217e3 : jmp 0x217a8
0x00000000000251d6 : jmp 0x2519b
0x000000000002dd0e : jmp 0x2dd16
0x00000000000315f5 : jmp 0x30b63
0x0000000000003867 : jmp 0x382d
0x0000000000038abb : jmp 0x38a37
0x0000000000039216 : jmp 0x39108
0x0000000000039682 : jmp 0x395c8
0x000000000003d196 : jmp 0x3c9cd
0x000000000003d224 : jmp 0x3cc01
0x000000000003e59c : jmp 0x3e561
0x000000000003f8d0 : jmp 0x3f153
0x000000000003f950 : jmp 0x3f39f
0x0000000000043922 : jmp 0x43449
0x0000000000044102 : jmp 0x44154
0x00000000000458b2 : jmp 0x45904
0x000000000004a596 : jmp 0x46855
0x00000000000ae7a2 : jmp 0x48cd70f2
0x00000000000af8a1 : jmp 0x48cd81f1
0x00000000000af92d : jmp 0x48cd827d
0x00000000000af9ba : jmp 0x48cd830a
0x00000000000b060f : jmp 0x48cd8f5f
0x00000000000405fd : jmp 0x48f48f51
0x000000000006c3d2 : jmp 0x48f54d25
0x00000000000e5a91 : jmp 0x4904e3e8
0x0000000000049282 : jmp 0x49247
0x00000000000b08e2 : jmp 0x49cd9232
0x00000000000b092c : jmp 0x49cd927c
0x00000000000b0e79 : jmp 0x49cd97c9
0x00000000000359c9 : jmp 0x4c64fd4
0x000000000004d762 : jmp 0x4cc760b2
0x000000000008b859 : jmp 0x4ccb41ad
0x00000000000aee4c : jmp 0x4ccd779c
0x00000000000aeed8 : jmp 0x4ccd7828
0x00000000000aef59 : jmp 0x4ccd78a9
0x00000000000afac1 : jmp 0x4ccd8411
0x00000000000aff11 : jmp 0x4ccd8861
0x00000000000b0676 : jmp 0x4ccd8fc6
0x00000000000cfb31 : jmp 0x4ccf8481
0x00000000000c747c : jmp 0x4cf6a87
0x00000000000ce5b2 : jmp 0x4cfdbbd
0x00000000000da4bc : jmp 0x4d09ac7
0x00000000000da77c : jmp 0x4d09d87
0x00000000000de500 : jmp 0x4d0db0b
0x000000000011d3cd : jmp 0x4d4c9d8
0x0000000000133f5a : jmp 0x4f924f58
0x0000000000133f59 : jmp 0x4f924f59
0x0000000000136a2a : jmp 0x4f927a28
0x0000000000136a29 : jmp 0x4f927a29
0x000000000013954a : jmp 0x4f92a548
0x0000000000139549 : jmp 0x4f92a549
0x0000000000050b62 : jmp 0x50b27
0x0000000000053a89 : jmp 0x53a4e
0x000000000005a871 : jmp 0x56b65
0x000000000005b859 : jmp 0x5747d
0x000000000005c4f4 : jmp 0x58720
0x000000000005c666 : jmp 0x58ff8
0x000000000005d1a1 : jmp 0x5d15e
0x000000000006315e : jmp 0x5f403
0x0000000000065148 : jmp 0x61419
0x000000000006b38d : jmp 0x6b3a2
0x000000000006b419 : jmp 0x6b42c
0x000000000006f748 : jmp 0x6f36c
0x000000000007a350 : jmp 0x7a315
0x000000000007b5e7 : jmp 0x7b5ad
0x000000000007be9a : jmp 0x7bbf0
0x000000000007e888 : jmp 0x7e84e
0x000000000007f1b0 : jmp 0x7f176
0x0000000000080044 : jmp 0x8000a
0x0000000000080198 : jmp 0x8015d
0x000000000008c231 : jmp 0x8c120
0x000000000008c7ec : jmp 0x8c7b2
0x000000000008c938 : jmp 0x8c8fd
0x000000000008cae2 : jmp 0x8caa7
0x000000000008ed61 : jmp 0x8ed26
0x000000000009b53e : jmp 0x9b504
0x000000000009b60f : jmp 0x9b5d5
0x000000000009b67e : jmp 0x9b644
0x00000000000a797d : jmp 0xa7850
0x00000000000ad8b1 : jmp 0xad6c3
0x00000000000b17cb : jmp 0xb173b
0x00000000000b22e4 : jmp 0xb22a9
0x00000000000b6011 : jmp 0xb5fd6
0x00000000000b61c8 : jmp 0xb618e
0x00000000000ba565 : jmp 0xba52b
0x00000000000bbf34 : jmp 0xbbc56
0x00000000000c0d44 : jmp 0xc0d91
0x00000000000c2433 : jmp 0xc23f8
0x00000000000cc1d4 : jmp 0xcbe7c
0x00000000000cc343 : jmp 0xcc02c
0x00000000000cc29f : jmp 0xcc0a7
0x00000000000cc1ba : jmp 0xcc126
0x00000000000d12e8 : jmp 0xd0bf3
0x0000000000178a3f : jmp 0xd348a37
0x00000000000da758 : jmp 0xda71d
0x00000000000e0e23 : jmp 0xe0de4
0x00000000000e6d0f : jmp 0xe6cd5
0x00000000000eadb3 : jmp 0xeadba
0x00000000000eef52 : jmp 0xeec76
0x00000000000eed1e : jmp 0xeed33
0x00000000000e8ba4 : jmp 0xf0e8bad
0x00000000000f109e : jmp 0xf10ad
0x00000000000f8221 : jmp 0xf81e7
0x00000000000f9da2 : jmp 0xf9b71
0x00000000000fa15a : jmp 0xf9f41
0x00000000000fa559 : jmp 0xfa423
0x00000000000fecb5 : jmp 0xfeb3f
0x00000000001011e5 : jmp 0xffffffff895cd475
0x00000000000c7e16 : jmp 0xffffffffc2467450
0x000000000000314e : jmp 0xffffffffc25d05fa
0x000000000009cb23 : jmp 0xffffffffc309cb2c
0x0000000000044801 : jmp 0xffffffffc313d156
0x0000000000183a3d : jmp 0xffffffffc3183a46
0x0000000000077f6e : jmp 0xffffffffc390cc78
0x00000000000f5fae : jmp 0xffffffffc3dfe903
0x00000000000f5dee : jmp 0xffffffffc407e73f
0x0000000000076dfd : jmp 0xffffffffd1076e04
0x000000000016fa78 : jmp 0xffffffffd516ea54
0x0000000000059935 : jmp 0xfffffffffa899942
0x0000000000112cc6 : jmp 0xffffffffffefb617
0x000000000009e583 : jmp 0xfffffffffff96ed4
0x000000000009e876 : jmp 0xfffffffffff971c7
0x0000000000187359 : jmp qword ptr [ecx]
0x00000000000420e7 : jmp qword ptr [r8]
0x000000000016e0c7 : jmp qword ptr [rax + 0x10fffc87]
0x000000000016dec3 : jmp qword ptr [rax + 0x10fffc88]
0x000000000015ed9f : jmp qword ptr [rax + 0x10fffca7]
0x000000000016e3cb : jmp qword ptr [rax + 0x16fffcad]
0x000000000016d0bf : jmp qword ptr [rax + 0x30fffdb7]
0x000000000016084f : jmp qword ptr [rax + rax*8 - 0xa]
0x000000000017034b : jmp qword ptr [rax + rbp + 0x7a740001]
0x0000000000171e73 : jmp qword ptr [rax + rbx*8 - 0x3cdbffff]
0x0000000000172adb : jmp qword ptr [rax + rdx + 2]
0x000000000016ce4b : jmp qword ptr [rax - 0x1f0004e5]
0x000000000015eb7b : jmp qword ptr [rax - 0x1f000ddb]
0x000000000015eb6b : jmp qword ptr [rax - 0x1f000de0]
0x000000000015eb5b : jmp qword ptr [rax - 0x1f000de5]
0x000000000015f0f3 : jmp qword ptr [rax - 0x2f000c60]
0x000000000015f0c3 : jmp qword ptr [rax - 0x2f000c62]
0x000000000015ecc3 : jmp qword ptr [rax - 0x3d]
0x000000000015f15b : jmp qword ptr [rax - 0x3f000c5d]
0x000000000015f137 : jmp qword ptr [rax - 0x3f000c5e]
0x00000000000420e8 : jmp qword ptr [rax]
0x0000000000171233 : jmp qword ptr [rbp + rax*4 - 0x3dbbffff]
0x0000000000174523 : jmp qword ptr [rbx + rax*8]
0x0000000000002547 : jmp qword ptr [rbx]
0x000000000015e0b7 : jmp qword ptr [rcx + 0x1e]
0x000000000015d8cb : jmp qword ptr [rcx]
0x00000000001702ab : jmp qword ptr [rdi + rbx + 0x66c40001]
0x000000000015d0a4 : jmp qword ptr [rdi]
0x000000000016da43 : jmp qword ptr [rdx + 0x12fffc62]
0x000000000016e43b : jmp qword ptr [rdx + 0x22fffcaf]
0x000000000016e433 : jmp qword ptr [rdx + 0x22fffcb0]
0x000000000016e42b : jmp qword ptr [rdx + 0x22fffcb1]
0x000000000016e423 : jmp qword ptr [rdx + 0x22fffcb2]
0x000000000016e41b : jmp qword ptr [rdx + 0x22fffcb3]
0x000000000015ecf4 : jmp qword ptr [rdx]
0x000000000016d01f : jmp qword ptr [rsi + 0x26fffdb3]
0x000000000016d027 : jmp qword ptr [rsi + 0x26fffdb4]
0x000000000016d02f : jmp qword ptr [rsi + 0x26fffdb5]
0x000000000016d04b : jmp qword ptr [rsi + 0x27fffdb9]
0x0000000000037a41 : jmp qword ptr [rsi + 0xf]
0x00000000000cc05d : jmp qword ptr [rsi - 0x70]
0x000000000000d058 : jmp qword ptr [rsi]
0x000000000015eb81 : jmp qword ptr es:[rax]
0x0000000000001b5e : jmp r10
0x00000000000ceeee : jmp r11
0x000000000002c8c3 : jmp r8
0x0000000000129fad : jmp r9
0x000000000015eb4f : jmp rax
0x00000000000ceeef : jmp rbx
0x0000000000056d62 : jmp rcx
0x000000000010662d : jmp rdi
0x0000000000001b5f : jmp rdx
0x0000000000068725 : jmp rsi
0x0000000000002a4d : jmp rsp
0x00000000000fff92 : jne 0x1006fc ; mov eax, edx ; pop rbx ; ret
0x000000000010385f : jne 0x103844 ; ret
0x0000000000104836 : jne 0x1048ae ; add rsp, 8 ; ret
0x000000000010713c : jne 0x107142 ; ret
0x000000000010717c : jne 0x107170 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000107fb5 : jne 0x107fa6 ; add rsp, 0x18 ; ret
0x0000000000109927 : jne 0x109936 ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000010b6dd : jne 0x10b710 ; mov dword ptr [rsi], 0 ; ret
0x000000000010be75 : jne 0x10be88 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000010bf7d : jne 0x10bf17 ; xor eax, eax ; pop rbx ; ret
0x000000000010cc82 : jne 0x10cc65 ; xor eax, eax ; pop rbx ; ret
0x000000000010cce2 : jne 0x10ccc8 ; mov eax, 1 ; pop rbx ; ret
0x000000000010dd54 : jne 0x10dd43 ; ret
0x000000000010fa68 : jne 0x10fa72 ; ret
0x000000000010fff9 : jne 0x110077 ; call 0xbada9
0x00000000001143f7 : jne 0x1143e3 ; pop rbx ; ret
0x0000000000114698 : jne 0x1146a2 ; ret
0x0000000000115b23 : jne 0x115b1a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000116d07 : jne 0x116d12 ; ret
0x0000000000116d47 : jne 0x116d52 ; ret
0x000000000011b6d8 : jne 0x11b705 ; mov eax, edx ; add rsp, 8 ; ret
0x000000000011b77b : jne 0x11b7a8 ; mov eax, edx ; add rsp, 8 ; ret
0x000000000011dac9 : jne 0x11dad6 ; add rsp, 0x38 ; ret
0x000000000011e6e8 : jne 0x11e6f4 ; xor eax, eax ; ret
0x000000000011e718 : jne 0x11e724 ; xor eax, eax ; ret
0x000000000011e748 : jne 0x11e754 ; xor eax, eax ; ret
0x000000000011e778 : jne 0x11e784 ; xor eax, eax ; ret
0x000000000011e7a8 : jne 0x11e7b4 ; xor eax, eax ; ret
0x000000000011e7d8 : jne 0x11e7e4 ; xor eax, eax ; ret
0x0000000000141861 : jne 0x141e16 ; ret
0x00000000001489fd : jne 0x148a27 ; xor eax, eax ; ret
0x0000000000147ff1 : jne 0x148a2b ; xor eax, eax ; ret
0x0000000000148019 : jne 0x148a37 ; xor eax, eax ; ret
0x000000000014983d : jne 0x149867 ; xor eax, eax ; ret
0x0000000000149621 : jne 0x14986b ; xor eax, eax ; ret
0x0000000000149871 : jne 0x14987a ; xor eax, eax ; ret
0x0000000000149647 : jne 0x14987e ; xor eax, eax ; ret
0x0000000000149985 : jne 0x149916 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000149957 : jne 0x149916 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149956 : jne 0x149917 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014b0e4 : jne 0x14b2f8 ; xor eax, eax ; ret
0x000000000014b2e9 : jne 0x14b309 ; xor eax, eax ; ret
0x000000000014b191 : jne 0x14b30d ; xor eax, eax ; ret
0x000000000014b301 : jne 0x14b30e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000014b916 : jne 0x14b924 ; xor eax, eax ; ret
0x000000000014b7ed : jne 0x14b926 ; ret
0x000000000014be7d : jne 0x14be6e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014bed0 : jne 0x14beb0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c00d : jne 0x14bffd ; pop rbx ; ret
0x000000000014c0d9 : jne 0x14c0a7 ; add rsp, 8 ; ret
0x000000000014c2d1 : jne 0x14c2c4 ; pop rbx ; ret
0x000000000014c318 : jne 0x14c323 ; ret
0x000000000014c7ac : jne 0x14c7cf ; ret
0x000000000014c861 : jne 0x14c86b ; pop rbx ; ret
0x000000000016e0f1 : jne 0x16e0f1 ; call rax
0x000000000016ee99 : jne 0x16ee89 ; jmp rsp
0x0000000000174e49 : jne 0x174e48 ; call rsp
0x000000000017f48c : jne 0x17f485 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017f4d4 : jne 0x17f4cd ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187dc4 : jne 0x187d57 ; jmp qword ptr [rdx]
0x000000000018c5fd : jne 0x18c606 ; add byte ptr [rax], dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018c5fc : jne 0x18c607 ; add byte ptr [rax], dl ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018c615 : jne 0x18c61e ; add byte ptr [rax], ch ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018c62d : jne 0x18c636 ; add byte ptr [rax - 4], al ; hlt ; jmp qword ptr [rcx]
0x000000000018c645 : jne 0x18c64e ; add byte ptr [rax - 4], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018c65d : jne 0x18c666 ; add byte ptr [rax - 4], dh ; hlt ; jmp qword ptr [rcx]
0x000000000018c68d : jne 0x18c696 ; add al, dl ; cld ; hlt ; jmp qword ptr [rcx]
0x0000000000194aac : jne 0x194a77 ; cmc ; jmp qword ptr [rdx]
0x00000000001958e9 : jne 0x1958e3 ; call rdi
0x000000000002ec03 : jne 0x2ec16 ; add rsp, 0x18 ; ret
0x000000000002ec43 : jne 0x2ec56 ; add rsp, 0x18 ; ret
0x0000000000030d6c : jne 0x30de7 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x00000000000338c4 : jne 0x338a2 ; ret
0x0000000000034777 : jne 0x34786 ; add rsp, 8 ; ret
0x0000000000034a52 : jne 0x34a66 ; add rsp, 8 ; ret
0x0000000000034f68 : jne 0x34f73 ; ret
0x00000000000359db : jne 0x359ed ; xor eax, eax ; nop ; ret
0x0000000000035cc0 : jne 0x35cb7 ; mov eax, 1 ; ret
0x0000000000035d1f : jne 0x35d0c ; xor eax, eax ; ret
0x0000000000035d6f : jne 0x35d5c ; xor eax, eax ; ret
0x000000000000374e : jne 0x372c ; ret 0x975
0x0000000000037916 : jne 0x37a19 ; xor eax, eax ; pop rbx ; ret
0x000000000003822b : jne 0x38233 ; pop rbx ; ret
0x0000000000039921 : jne 0x3995e ; add rsp, 8 ; ret
0x000000000003c0e1 : jne 0x3c11e ; add rsp, 8 ; ret
0x000000000003e8d1 : jne 0x3e90e ; add rsp, 8 ; ret
0x000000000004147f : jne 0x4159d ; pop rbx ; ret
0x0000000000041b92 : jne 0x41b6b ; ret
0x0000000000043068 : jne 0x43069 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000430ad : jne 0x430a3 ; pop rbx ; ret
0x0000000000043e8f : jne 0x43e84 ; xor eax, eax ; ret
0x0000000000043eb5 : jne 0x43e9f ; mov eax, 1 ; ret
0x0000000000043f6f : jne 0x43f64 ; xor eax, eax ; ret
0x0000000000043f95 : jne 0x43f7f ; mov eax, 1 ; ret
0x0000000000044237 : jne 0x44226 ; mov rax, rdx ; ret
0x00000000000448ef : jne 0x448e6 ; mov rax, rdx ; ret
0x0000000000045bf3 : jne 0x45bd8 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x45c19
0x0000000000046021 : jne 0x4600d ; mov rax, rsi ; ret
0x00000000000460a5 : jne 0x46085 ; mov rax, rsi ; ret
0x000000000004a590 : jne 0x49755 ; jmp 0x4685b
0x000000000004a61b : jne 0x497a1 ; jmp 0x4685b
0x000000000004a5e6 : jne 0x497d1 ; jmp 0x4685b
0x000000000005038b : jne 0x503f9 ; mov eax, edx ; pop rbx ; ret
0x0000000000067101 : jne 0x67116 ; mov rax, rbx ; pop rbx ; ret
0x0000000000067877 : jne 0x6787e ; ret
0x0000000000067b4c : jne 0x67bc7 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000069b5a : jne 0x69bd5 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000006a3b1 : jne 0x6a432 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006b562 : jne 0x6b935 ; ret
0x000000000006bce6 : jne 0x6bd57 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000006c002 : jne 0x6c06d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c34e : jne 0x6c379 ; mov eax, r8d ; pop rbx ; ret
0x000000000006c759 : jne 0x6c7ce ; mov eax, edx ; pop rbx ; ret
0x000000000006c8eb : jne 0x6c969 ; mov eax, edx ; pop rbx ; ret
0x000000000006cceb : jne 0x6cd65 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006d232 : jne 0x6d2aa ; mov eax, edx ; pop rbx ; ret
0x000000000006d3d4 : jne 0x6d454 ; mov eax, edx ; pop rbx ; ret
0x000000000006d589 : jne 0x6d605 ; mov eax, edx ; pop rbx ; ret
0x000000000006de71 : jne 0x6de63 ; ret
0x00000000000700ec : jne 0x700f3 ; pop rbx ; ret
0x000000000007117d : jne 0x711c0 ; ret
0x0000000000071277 : jne 0x712c0 ; mov eax, esi ; ret
0x0000000000071377 : jne 0x713c0 ; mov eax, esi ; ret
0x00000000000714b7 : jne 0x71530 ; mov eax, edx ; pop rbx ; ret
0x0000000000071a30 : jne 0x71aa5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071b92 : jne 0x71c11 ; mov eax, edx ; pop rbx ; ret
0x0000000000071e87 : jne 0x71f00 ; mov eax, edx ; pop rbx ; ret
0x0000000000071fd2 : jne 0x72037 ; pop rbx ; ret
0x00000000000736bc : jne 0x7373f ; mov eax, edx ; pop rbx ; ret
0x0000000000073786 : jne 0x73796 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075249 : jne 0x75253 ; pop rbx ; ret
0x000000000007591d : jne 0x75938 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000075b6a : jne 0x75ba0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000075c41 : jne 0x75c33 ; ret
0x0000000000076732 : jne 0x7671d ; pop rbx ; ret
0x000000000007676c : jne 0x76765 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000076e96 : jne 0x76e8b ; ret
0x0000000000075787 : jne 0x77242 ; ret
0x00000000000771f2 : jne 0x7746b ; ret
0x00000000000787f6 : jne 0x7e191 ; ret
0x0000000000079cad : jne 0x7e25b ; pop rbx ; ret
0x000000000007bf15 : jne 0x7e49a ; mov rax, r8 ; ret
0x000000000007fca1 : jne 0x7fc94 ; xor eax, eax ; ret
0x000000000007fd14 : jne 0x7fd3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007fd5b : jne 0x7fd53 ; ret
0x00000000000801f2 : jne 0x80204 ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000081dd3 : jne 0x81dde ; xor rax, rax ; ret
0x000000000008206e : jne 0x82080 ; lea rax, qword ptr [rip + 9] ; ret
0x0000000000083d41 : jne 0x83d56 ; add rsp, 8 ; ret
0x0000000000084f19 : jne 0x84f75 ; xor rax, rax ; ret
0x0000000000084ed9 : jne 0x84f99 ; xor rax, rax ; ret
0x0000000000084fc8 : jne 0x84fdb ; lea rax, qword ptr [rip + 0x1f] ; ret
0x00000000000856de : jne 0x856c3 ; ret
0x0000000000085893 : jne 0x8577f ; mov rax, rdi ; ret
0x00000000000857e9 : jne 0x857d5 ; mov rax, rdi ; ret
0x0000000000085dae : jne 0x85dc0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000085e11 : jne 0x85e23 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008809e : jne 0x880b0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000088101 : jne 0x88113 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008a77e : jne 0x8a76c ; xor eax, eax ; ret
0x000000000008a7af : jne 0x8a7c2 ; lea rax, qword ptr [rip + 0x7868] ; ret
0x000000000008a918 : jne 0x8a7f0 ; ret
0x000000000008a859 : jne 0x8a843 ; ret
0x000000000008be1b : jne 0x8be13 ; ret
0x000000000008ca36 : jne 0x8ca21 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000008cae0 : jne 0x8caef ; jmp 0x8caa9
0x000000000008d33c : jne 0x8d2e0 ; mov rax, rdi ; ret
0x000000000008d2fd : jne 0x8d2f4 ; xor eax, eax ; ret
0x000000000008d328 : jne 0x8d33e ; mov rax, rdi ; ret
0x0000000000091136 : jne 0x9112b ; ret
0x0000000000091182 : jne 0x91173 ; ret
0x00000000000911db : jne 0x911c3 ; ret
0x0000000000091281 : jne 0x91275 ; mov rax, rdi ; ret
0x00000000000912d2 : jne 0x912bc ; xor eax, eax ; ret
0x0000000000091332 : jne 0x91325 ; mov qword ptr [rdx], rcx ; ret
0x00000000000913fb : jne 0x913f0 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000091468 : jne 0x91458 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009169d : jne 0x91728 ; xor eax, eax ; ret
0x00000000000916da : jne 0x91754 ; xor eax, eax ; ret
0x0000000000091b02 : jne 0x91acf ; nop dword ptr [rax] ; ret
0x0000000000091be4 : jne 0x91bde ; sub rax, 1 ; ret
0x0000000000091bfe : jne 0x91c10 ; ret
0x0000000000091cf2 : jne 0x91ceb ; ret
0x0000000000091d29 : jne 0x91d13 ; ret
0x000000000009200c : jne 0x91ff6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000009778a : jne 0x98046 ; ret
0x0000000000098e2d : jne 0x99856 ; ret
0x000000000009b371 : jne 0x9b362 ; ret
0x000000000009b421 : jne 0x9b412 ; ret
0x000000000009b591 : jne 0x9b586 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000009b6e1 : jne 0x9b6d6 ; sub rax, 1 ; ret
0x000000000009bdc7 : jne 0x9bdbb ; ret
0x000000000009cb96 : jne 0x9cc12 ; ret
0x000000000009cabf : jne 0x9cc16 ; ret
0x000000000009ca9e : jne 0x9cc18 ; xor eax, eax ; ret
0x000000000009cc48 : jne 0x9cc5b ; lea rax, qword ptr [rip + 0xd69f] ; ret
0x000000000009cffe : jne 0x9cfcb ; ret
0x000000000009d109 : jne 0x9d0f7 ; sub eax, r8d ; nop ; ret
0x000000000009d1b6 : jne 0x9d1ab ; ret
0x000000000009d1e8 : jne 0x9d1d3 ; ret
0x000000000009d4db : jne 0x9d536 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009d5bb : jne 0x9d58b ; ret
0x000000000009d5a5 : jne 0x9d59b ; ret
0x000000000009d688 : jne 0x9d67c ; xor eax, eax ; ret
0x000000000009d6f8 : jne 0x9d6d9 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000009d808 : jne 0x9d81b ; lea rax, qword ptr [rip + 0xca4f] ; ret
0x000000000009d8a3 : jne 0x9d8ae ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009d8d3 : jne 0x9d8cb ; ret
0x000000000009d96f : jne 0x9d966 ; sub rax, 4 ; ret
0x000000000009d98e : jne 0x9d9a0 ; ret
0x000000000009eadb : jne 0x9ea96 ; nop dword ptr [rax] ; ret
0x000000000009eb1c : jne 0x9eb13 ; ret
0x000000000009f771 : jne 0x9f7ae ; add rsp, 8 ; ret
0x00000000000a1cc1 : jne 0xa1cfe ; add rsp, 8 ; ret
0x00000000000a4121 : jne 0xa415e ; add rsp, 8 ; ret
0x00000000000a9acc : jne 0xa9b47 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000aa2e7 : jne 0xaa2b0 ; ret
0x00000000000aa314 : jne 0xaa30b ; ret
0x00000000000ae2f9 : jne 0xae311 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000b58c2 : jne 0xb58a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b6281 : jne 0xb62a1 ; pop rbx ; ret
0x00000000000b631f : jne 0xb6349 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b6a42 : jne 0xb69f3 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000bb510 : jne 0xbb4de ; ret
0x00000000000bb557 : jne 0xbb4e2 ; mov eax, 0x7d00 ; ret
0x00000000000bb61d : jne 0xbb653 ; ret
0x00000000000bc4a7 : jne 0xbc483 ; xor eax, eax ; ret
0x00000000000bc6b8 : jne 0xbc69c ; ret
0x00000000000bc6c8 : jne 0xbc6b5 ; mov eax, 1 ; ret
0x00000000000c1e99 : jne 0xc1e78 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c1ff3 : jne 0xc1fee ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000c225c : jne 0xc2263 ; ret
0x00000000000c22e4 : jne 0xc22c8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c233a : jne 0xc2328 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c33d8 : jne 0xc33a3 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c374d : jne 0xc3699 ; pop rbx ; ret
0x00000000000c374c : jne 0xc369a ; pop rbx ; ret
0x00000000000c3735 : jne 0xc36c1 ; pop rbx ; ret
0x00000000000c3702 : jne 0xc3701 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc369b ; pop rbx ; ret
0x00000000000c387a : jne 0xc3883 ; pop rbx ; ret
0x00000000000d2cef : jne 0xd2ce5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000d2d2f : jne 0xd2d3b ; ret
0x00000000000d574b : jne 0xd5738 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000da751 : jne 0xda6fb ; mov edx, dword ptr [r12 + 4] ; jmp 0xda724
0x00000000000dc10f : jne 0xdc199 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e21c6 : jne 0xe21d7 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e22d6 : jne 0xe22b8 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e2337 : jne 0xe2318 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e3b9e : jne 0xe4508 ; ret
0x00000000000e5b88 : jne 0xe5b70 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e6033 : jne 0xe6043 ; ret
0x00000000000e7797 : jne 0xe778e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000eed1c : jne 0xeed31 ; jmp 0xeed35
0x00000000000efda7 : jne 0xefd93 ; ret
0x00000000000f2eee : jne 0xf2eff ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3110 : jne 0xf3100 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f44dd : jne 0xf44d6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f4557 : jne 0xf4568 ; cmp qword ptr [rdi], 0 ; je 0xf4571 ; ret
0x00000000000f45c8 : jne 0xf45d7 ; mov eax, 1 ; ret
0x00000000000f45f8 : jne 0xf4604 ; xor eax, eax ; ret
0x00000000000f4628 : jne 0xf4634 ; xor eax, eax ; ret
0x00000000000f4658 : jne 0xf4664 ; xor eax, eax ; ret
0x00000000000f4688 : jne 0xf4694 ; xor eax, eax ; ret
0x00000000000f46b8 : jne 0xf46c4 ; xor eax, eax ; ret
0x00000000000f46e8 : jne 0xf46f4 ; xor eax, eax ; ret
0x00000000000f4718 : jne 0xf4724 ; xor eax, eax ; ret
0x00000000000f4748 : jne 0xf4754 ; xor eax, eax ; ret
0x00000000000f4778 : jne 0xf4784 ; xor eax, eax ; ret
0x00000000000f47a8 : jne 0xf47b4 ; xor eax, eax ; ret
0x00000000000f47d8 : jne 0xf47e4 ; xor eax, eax ; ret
0x00000000000f4808 : jne 0xf4814 ; xor eax, eax ; ret
0x00000000000f4838 : jne 0xf4844 ; xor eax, eax ; ret
0x00000000000f4868 : jne 0xf4874 ; xor eax, eax ; ret
0x00000000000f4898 : jne 0xf48a4 ; xor eax, eax ; ret
0x00000000000f48c8 : jne 0xf48d4 ; xor eax, eax ; ret
0x00000000000f48f8 : jne 0xf4904 ; xor eax, eax ; ret
0x00000000000f4928 : jne 0xf4934 ; xor eax, eax ; ret
0x00000000000f4958 : jne 0xf4964 ; xor eax, eax ; ret
0x00000000000f4988 : jne 0xf4994 ; xor eax, eax ; ret
0x00000000000f49e8 : jne 0xf49f4 ; xor eax, eax ; ret
0x00000000000f4a18 : jne 0xf4a24 ; xor eax, eax ; ret
0x00000000000f4a48 : jne 0xf4a54 ; xor eax, eax ; ret
0x00000000000f4a78 : jne 0xf4a84 ; xor eax, eax ; ret
0x00000000000f4aa8 : jne 0xf4ab4 ; xor eax, eax ; ret
0x00000000000f4ad8 : jne 0xf4ae4 ; xor eax, eax ; ret
0x00000000000f4b08 : jne 0xf4b14 ; xor eax, eax ; ret
0x00000000000f4b38 : jne 0xf4b44 ; xor eax, eax ; ret
0x00000000000f4b68 : jne 0xf4b74 ; xor eax, eax ; ret
0x00000000000f4bb1 : jne 0xf4ba9 ; pop rdx ; pop r10 ; ret
0x00000000000f4ca5 : jne 0xf4cb3 ; ret
0x00000000000f4e34 : jne 0xf4e13 ; ret
0x00000000000f4eaf : jne 0xf4ea3 ; leave ; ret
0x00000000000f4fad : jne 0xf4f73 ; leave ; ret
0x00000000000f551b : jne 0xf54f6 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x00000000000f5bc7 : jne 0xf5bd2 ; call 0x21dd4
0x00000000000f5ded : jne 0xf5ddd ; mov rax, rdi ; ret
0x00000000000f5e4c : jne 0xf5e41 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f5fad : jne 0xf5f9d ; mov rax, r10 ; ret
0x00000000000f6a01 : jne 0xf6a74 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000f7448 : jne 0xf7456 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f74fd : jne 0xf74eb ; ret
0x00000000000f759c : jne 0xf758b ; ret
0x00000000000f7615 : jne 0xf7609 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f7f21 : jne 0xf7f94 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000fe9bb : jne 0xfe9c8 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000ffea9 : jne 0xffea0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001482ae : jno 0x1482bd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016d799 : jno 0x16d799 ; call qword ptr [rsi]
0x000000000016d81d : jno 0x16d821 ; call qword ptr [rdx + 0x22fffc70]
0x000000000016d8d9 : jno 0x16d8d9 ; jmp rsp
0x000000000016d959 : jno 0x16d959 ; call rax
0x000000000016d955 : jno 0x16d959 ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x000000000016d958 : jno 0x16d95a ; call rax
0x000000000016e125 : jno 0x16e125 ; call rax
0x000000000016ee49 : jno 0x16ee39 ; call rsp
0x0000000000170f6d : jno 0x170f76 ; add byte ptr [rdx + rsi*8 - 0xe], dh ; call rsp
0x00000000001726a9 : jno 0x1726a4 ; jmp rsp
0x000000000017a7b4 : jno 0x17a7d8 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000182685 : jno 0x182678 ; jmp qword ptr [rdx]
0x000000000019a321 : jno 0x19a31c ; jmp qword ptr [rax]
0x000000000019a3b1 : jno 0x19a3ac ; call qword ptr [rbx]
0x000000000019c25d : jno 0x19c267 ; add byte ptr [rax + 2], dh ; sti ; jmp qword ptr [rdx]
0x000000000019c275 : jno 0x19c27d ; add byte ptr [rax], cl ; ret 0xfff7
0x00000000000021c7 : jno 0x2214 ; ret 0x1dd4
0x0000000000003903 : jno 0x394d ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000446f4 : jno 0x44746 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000067b4d : jno 0x67bb1 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006d4b1 : jno 0x6d4bf ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000006e58d : jno 0x6e5fe ; nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000009d8a1 : jno 0x9d8af ; jne 0x9d8b0 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009d8a6 : jno 0x9d8b3 ; ret
0x00000000000a9acd : jno 0xa9b31 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000afffe : jno 0xaff8b ; ret 0xe283
0x00000000000b00de : jno 0xb006b ; ret 0xe283
0x00000000000b0201 : jno 0xb018e ; ret 0xe283
0x00000000000b029e : jno 0xb022b ; ret 0xe283
0x00000000000b037e : jno 0xb030b ; ret 0xe283
0x00000000000b045e : jno 0xb03eb ; ret 0xe283
0x00000000000b053e : jno 0xb04cb ; ret 0xe283
0x00000000000b0f66 : jno 0xb0ef3 ; ret 0xe283
0x00000000000b113f : jno 0xb10cc ; ret 0xe283
0x00000000000b124a : jno 0xb11d7 ; ret 0xe283
0x00000000000b135e : jno 0xb12eb ; ret 0xe283
0x00000000000d222b : jno 0xd2213 ; cli ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000efd26 : jno 0xefd2e ; cmovne eax, edx ; ret
0x00000000000efd25 : jno 0xefd2f ; cmovne eax, edx ; ret
0x00000000000efd26 : jno 0xefd30 ; cmovne eax, edx ; ret
0x00000000000efd25 : jno 0xefd31 ; cmovne eax, edx ; ret
0x00000000000fe997 : jno 0xfe9a4 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001114e3 : jnp 0x11154f ; call rax
0x0000000000111f13 : jnp 0x111f6f ; call rax
0x000000000015b2c5 : jnp 0x15b282 ; ret
0x000000000016002c : jnp 0x15fff9 ; cmc ; inc dword ptr [rbp - 0x70000a3e] ; ret 0xfff5
0x000000000016cf19 : jnp 0x16cf1c ; call qword ptr [rax - 0x1f000484]
0x000000000016cf18 : jnp 0x16cf1d ; call qword ptr [rax - 0x1f000484]
0x000000000016e101 : jnp 0x16e101 ; call rax
0x000000000016e92d : jnp 0x16e935 ; add ah, dh ; iretd ; jmp 0x16e939
0x00000000001732e9 : jnp 0x1732e5 ; jmp rsp
0x00000000001732e8 : jnp 0x1732e6 ; jmp rsp
0x000000000017cc2d : jnp 0x17cc35 ; add byte ptr [rax - 0x17], al ; out dx, al ; jmp rsp
0x000000000018361d : jnp 0x183610 ; jmp qword ptr [rdx]
0x0000000000183665 : jnp 0x183658 ; jmp qword ptr [rdx]
0x00000000001836ad : jnp 0x1836a0 ; jmp qword ptr [rdx]
0x00000000001836f5 : jnp 0x1836e8 ; jmp qword ptr [rdx]
0x000000000018cc45 : jnp 0x18cc4e ; add al, cl ; sbb dh, ch ; jmp rdi
0x000000000002305b : jnp 0x23077 ; call rax
0x00000000000e0a58 : jnp 0x481a2eab ; add esp, 0x18 ; ret
0x00000000000bc498 : jnp 0xbc4ac ; xchg eax, esp ; ret 0xb60f
0x00000000000c3877 : jnp 0xc38e2 ; add byte ptr [rbp + 4], dh ; pop rbx ; ret
0x0000000000112693 : jns 0x112668 ; lock dec dword ptr [rax - 0x77] ; ret
0x000000000011b1e4 : jns 0x11b213 ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x000000000015a3ce : jns 0x15a364 ; ret 0xf869
0x000000000015a3cd : jns 0x15a365 ; ret 0xf869
0x000000000015c7de : jns 0x15c835 ; jmp 0x15c776
0x000000000016fc88 : jns 0x16fc7c ; out dx, eax ; jmp rsp
0x00000000001736c0 : jns 0x173676 ; clc ; jmp rsp
0x0000000000176721 : jns 0x176710 ; call qword ptr [rdi]
0x0000000000180154 : jns 0x180170 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018212c : jns 0x18218f ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018358d : jns 0x183580 ; jmp qword ptr [rdx]
0x000000000018c9a5 : jns 0x18c9ae ; add byte ptr [rax + 9], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018c9d5 : jns 0x18c9de ; add byte ptr [rax + 9], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000001b29 : jns 0x1b34 ; ret
0x00000000000217dd : jns 0x216c0 ; jmp 0x217ae
0x0000000000002bbf : jns 0x2b8d ; clc ; ret
0x000000000000322f : jns 0x320a ; ret 0x5a51
0x00000000000351fe : jns 0x35219 ; add rsp, 0xd0 ; ret
0x000000000000389f : jns 0x38f2 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000007f2e6 : jns 0x7f337 ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x0000000000085db3 : jns 0x85db9 ; add byte ptr [rax], al ; ret
0x00000000000880a3 : jns 0x880a9 ; add byte ptr [rax], al ; ret
0x00000000000c420b : jns 0xc41f7 ; mov eax, 1 ; ret
0x00000000000e1e84 : jns 0xe1e92 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000009ae56 : jns 0xffffffffed39b1bc ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009aeb8 : jns 0xffffffffed39b61e ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009aed8 : jns 0xffffffffed39b73e ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000010f466 : jo 0x10f4cc ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010fd73 : jo 0x10fdd9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011a18e : jo 0x11a195 ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000014cea0 : jo 0x14cea5 ; in eax, dx ; inc dword ptr [rax - 4] ; in eax, dx ; call qword ptr [rax]
0x000000000015b444 : jo 0x15b4be ; mov ebp, 0xfb67d10d ; ret
0x000000000015ec74 : jo 0x15ec29 ; inc eax ; scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x000000000015ed78 : jo 0x15ed16 ; cld ; call qword ptr [rax]
0x000000000015ed8c : jo 0x15ed31 ; cld ; jmp rax
0x000000000015f0f0 : jo 0x15f099 ; jmp qword ptr [rax - 0x2f000c60]
0x000000000016ce34 : jo 0x16ce60 ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016cf34 : jo 0x16cec1 ; sti ; inc eax ; test edi, ebx ; call qword ptr [rax]
0x000000000016cfc0 : jo 0x16cf75 ; std ; jmp qword ptr [rax]
0x000000000016d354 : jo 0x16d32e ; sti ; inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000016d3a8 : jo 0x16d389 ; sti ; inc eax ; fsincos ; call qword ptr [rax]
0x000000000016d470 : jo 0x16d488 ; cld ; push qword ptr [rax] ; adc esp, edi ; call qword ptr [rax]
0x000000000016d4d4 : jo 0x16d4ed ; cld ; inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016d4f0 : jo 0x16d503 ; cld ; jmp qword ptr [rax]
0x000000000016d6ec : jo 0x16d71e ; cld ; inc eax ; sub bh, ah ; call qword ptr [rax]
0x000000000016d765 : jo 0x16d765 ; jmp rax
0x000000000016d740 : jo 0x16d779 ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000016d821 : jo 0x16d821 ; jmp qword ptr [rdx]
0x000000000016d998 : jo 0x16da05 ; cld ; jmp rax
0x000000000016db84 : jo 0x16dbeb ; cld ; jmp rax
0x000000000016f4b1 : jo 0x16f4a2 ; call rsp
0x00000000001702f1 : jo 0x1702e5 ; jmp rsp
0x0000000000171d49 : jo 0x171d43 ; jmp rsp
0x0000000000175e40 : jo 0x175e55 ; jmp 0x175e46
0x00000000001765d1 : jo 0x1765c0 ; call qword ptr [rax]
0x0000000000176720 : jo 0x17679e ; jmp 0x176726
0x0000000000176b30 : jo 0x176bb1 ; jmp 0x176b36
0x0000000000177670 : jo 0x177646 ; jmp 0x177676
0x000000000017a4b4 : jo 0x17a45c ; in al, dx ; jmp qword ptr [rdx]
0x000000000017c09d : jo 0x17c0a5 ; add byte ptr [rax], dl ; loopne 0x17c097 ; jmp qword ptr [rax]
0x000000000017c115 : jo 0x17c11d ; add byte ptr [rax - 0x20], bl ; out dx, al ; call qword ptr [rax]
0x000000000017fe1f : jo 0x17fe25 ; ret 0xe0a
0x0000000000187500 : jo 0x1874a4 ; call qword ptr [rax]
0x0000000000187c20 : jo 0x187c0c ; call qword ptr [rbx]
0x0000000000189510 : jo 0x189530 ; jmp qword ptr [rcx]
0x000000000018c155 : jo 0x18c15e ; add al, cl ; hlt ; jmp qword ptr [rcx]
0x000000000018c16d : jo 0x18c176 ; add al, ah ; hlt ; jmp qword ptr [rsi]
0x000000000018c660 : jo 0x18c661 ; hlt ; jmp qword ptr [rcx]
0x000000000018e210 : jo 0x18e27a ; cmc ; jmp qword ptr [rcx]
0x000000000019a2b9 : jo 0x19a2b4 ; jmp qword ptr [rax]
0x000000000019a2d1 : jo 0x19a2cc ; jmp qword ptr [rax]
0x000000000019c18d : jo 0x19c197 ; add byte ptr [rax], dl ; add edi, ebx ; jmp qword ptr [rdx]
0x000000000019c260 : jo 0x19c267 ; sti ; jmp qword ptr [rdx]
0x000000000002e743 : jo 0x2e794 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e742 : jo 0x2e795 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000411e2 : jo 0x411ed ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ccec : jo 0x6cd50 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000006deea : jo 0x6df02 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000713ea : jo 0x71377 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000713e9 : jo 0x71378 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000748a1 : jo 0x74894 ; jb 0x748b5 ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000074a74 : jo 0x74ac5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077c83 : jo 0x77c87 ; xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007dff9 : jo 0x7e05b ; pop rbp ; pop r12 ; ret
0x000000000007e0e8 : jo 0x7e122 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007e926 : jo 0x7e932 ; ret
0x000000000009da30 : jo 0x9da92 ; pop rbp ; pop r12 ; ret
0x00000000000b075f : jo 0xb06ec ; ret 0x8166
0x00000000000c43ae : jo 0xc43d4 ; xor eax, eax ; ret
0x00000000000dba44 : jo 0xdba3e ; ret 0x4840
0x00000000000dba82 : jo 0xdbae1 ; ret
0x00000000000e0a26 : jo 0xe0a4b ; ret
0x000000000000e0a0 : jo 0xe0af ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e59c9 : jo 0xe59d5 ; ret
0x00000000000e5a02 : jo 0xe5a16 ; ret
0x000000000010c49d : jp 0x10c4fd ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000111572 : jp 0x11157e ; ret
0x000000000011158a : jp 0x111596 ; ret
0x0000000000111dd2 : jp 0x111dde ; ret
0x0000000000111dea : jp 0x111df6 ; ret
0x0000000000111e1a : jp 0x111e26 ; ret
0x000000000016e13d : jp 0x16e13d ; call rax
0x000000000016ef11 : jp 0x16ef01 ; jmp rsp
0x000000000016ef10 : jp 0x16ef02 ; jmp rsp
0x0000000000170351 : jp 0x170345 ; call rsp
0x00000000001710b5 : jp 0x1710be ; add byte ptr [rdi + rbx*2], al ; call rsp
0x000000000017ff74 : jp 0x17ff76 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001835d5 : jp 0x1835c8 ; jmp qword ptr [rdx]
0x000000000018e8e9 : jp 0x18e8e2 ; jmp rax
0x0000000000022102 : jp 0x2208a ; cmp byte ptr [rax], al ; ret
0x0000000000002545 : jp 0x2529 ; jmp qword ptr [rbx]
0x0000000000002544 : jp 0x252a ; jmp qword ptr [rbx]
0x0000000000003902 : jp 0x397c ; xchg eax, ebx ; and cl, ah ; ret
0x000000000007dfa0 : jp 0x7dfaa ; test rdx, rdi ; je 0x7dfb9 ; pop rbx ; ret
0x0000000000085775 : jp 0x8576f ; ret 0x7401
0x00000000000f3595 : jp 0xf35ec ; mov rsi, rdx ; call rax
0x000000000011bf80 : jrcxz 0x11bfb2 ; add byte ptr [rax - 0x9ffffff], al ; ret
0x0000000000133c4a : jrcxz 0x133c45 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133c49 : jrcxz 0x133c46 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013671a : jrcxz 0x136715 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136719 : jrcxz 0x136716 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013923a : jrcxz 0x139235 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139239 : jrcxz 0x139236 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a225 : jrcxz 0x15a27f ; ret
0x000000000015eb0d : jrcxz 0x15eb02 ; call qword ptr [rax]
0x000000000016d38d : jrcxz 0x16d38c ; call qword ptr [rax]
0x0000000000174a8d : jrcxz 0x174a97 ; add byte ptr [rdx + rcx*8 - 6], al ; call rsp
0x000000000017843d : jrcxz 0x17842c ; jmp qword ptr [rdx]
0x0000000000178485 : jrcxz 0x178474 ; jmp qword ptr [rdx]
0x0000000000178515 : jrcxz 0x178504 ; jmp qword ptr [rdx]
0x000000000017c839 : jrcxz 0x17c82b ; jmp rsi
0x000000000018decd : jrcxz 0x18dec5 ; jmp qword ptr [rdx]
0x0000000000190e4c : jrcxz 0x190e9b ; cmc ; jmp qword ptr [rdx]
0x0000000000063b46 : jrcxz 0x63b4c ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000911dc : jrcxz 0x911d3 ; ret
0x00000000000c420c : jrcxz 0xc41cc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d574c : jrcxz 0xd579d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f4c03 : jrcxz 0xf4bc8 ; cmp r11d, 0xa ; je 0xf4c14 ; ret
0x000000000011b033 : js 0x11b048 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011b244 : js 0x11b273 ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x000000000015ec19 : js 0x15ec0f ; jmp rax
0x000000000016e0f9 : js 0x16e0f9 ; call rax
0x000000000016f5d0 : js 0x16f5f1 ; out dx, al ; call rsp
0x00000000001716d0 : js 0x17167d ; hlt ; jmp rsp
0x0000000000174789 : js 0x174787 ; jmp rsp
0x0000000000176b48 : js 0x176bc9 ; jmp 0x176b4e
0x0000000000178ad4 : js 0x178ac0 ; jmp 0x178ada
0x0000000000179e98 : js 0x179e39 ; in al, dx ; jmp qword ptr [rsi]
0x000000000017b3a8 : js 0x17b370 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001806c8 : js 0x180718 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000183545 : js 0x183538 ; jmp qword ptr [rdx]
0x0000000000184fb1 : js 0x184fb1 ; jmp qword ptr [rax]
0x00000000001874e8 : js 0x18748c ; call qword ptr [rax]
0x0000000000187c38 : js 0x187c24 ; call qword ptr [rbx]
0x000000000018c945 : js 0x18c94e ; add al, ch ; or ch, dh ; jmp qword ptr [rcx]
0x000000000018c975 : js 0x18c97e ; add byte ptr [rax], bl ; or ebp, esi ; jmp qword ptr [rcx]
0x000000000018c9d8 : js 0x18c9e6 ; cmc ; jmp qword ptr [rcx]
0x000000000018e178 : js 0x18e1e0 ; cmc ; call qword ptr [rdx]
0x000000000018e7a1 : js 0x18e79a ; call qword ptr [rdx]
0x000000000018e8e8 : js 0x18e967 ; cmc ; jmp rax
0x000000000018f168 : js 0x18f106 ; cmc ; jmp qword ptr [rcx]
0x000000000018f528 : js 0x18f4cb ; cmc ; jmp qword ptr [rcx]
0x000000000018f8b8 : js 0x18f862 ; cmc ; jmp qword ptr [rcx]
0x0000000000022d10 : js 0x22d30 ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x000000000002782b : js 0x2787a ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002e3a1 : js 0x2e32d ; loopne 0x2e3b4 ; movzx eax, ax ; ret
0x000000000002e3e1 : js 0x2e36d ; loopne 0x2e3ee ; movzx eax, ax ; ret
0x000000000002e481 : js 0x2e40d ; loopne 0x2e490 ; movzx eax, ax ; ret
0x000000000002e561 : js 0x2e4ea ; loopne 0x2e56a ; ret
0x000000000002e5da : js 0x2e563 ; loopne 0x2e5e3 ; ret
0x000000000002e5ea : js 0x2e576 ; loopne 0x2e5fd ; movzx eax, ax ; ret
0x000000000002e62a : js 0x2e5b6 ; loopne 0x2e637 ; movzx eax, ax ; ret
0x000000000002e6ca : js 0x2e656 ; loopne 0x2e6d9 ; movzx eax, ax ; ret
0x000000000002e753 : js 0x2e7a4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e752 : js 0x2e7a5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f61 : js 0x2f17 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000035e34 : js 0x35e47 ; cli ; je 0x35e49 ; add rsp, 0x10 ; ret
0x0000000000035f36 : js 0x35f49 ; cli ; je 0x35f49 ; add rsp, 0x10 ; ret
0x00000000000713ed : js 0x713fb ; ret
0x000000000007d2e8 : js 0x7d2f3 ; ret
0x00000000000bb7b7 : js 0xbb7c3 ; ret
0x00000000000c92d7 : js 0xc92ea ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000d8176 : js 0xd8103 ; ret 0x3145
0x00000000000da90c : js 0xda95e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000db1b9 : js 0xdb20b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e1148 : js 0xe1179 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e30d2 : js 0xe30e5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000eb2d0 : js 0xeb25c ; loopne 0xeb2e3 ; movzx eax, ax ; ret
0x00000000000eb410 : js 0xeb399 ; loopne 0xeb419 ; ret
0x00000000000eb4b0 : js 0xeb43c ; loopne 0xeb4bd ; movzx eax, ax ; ret
0x00000000000eb7c0 : js 0xeb74c ; loopne 0xeb7cf ; movzx eax, ax ; ret
0x00000000000ebcc9 : js 0xebc55 ; loopne 0xebcdc ; movzx eax, ax ; ret
0x00000000000ebde9 : js 0xebd72 ; loopne 0xebdf2 ; ret
0x00000000000ebe69 : js 0xebdf5 ; loopne 0xebe76 ; movzx eax, ax ; ret
0x00000000000ec129 : js 0xec0b5 ; loopne 0xec138 ; movzx eax, ax ; ret
0x00000000000eef50 : js 0xeef5c ; jmp 0xeec78
0x00000000000f44db : js 0xf44ed ; jne 0xf44d8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f8d64 : js 0xf8d79 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f8de4 : js 0xf8df7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000090b06 : js 0xffffffff8351211e ; ret 0x4901
0x000000000009adf8 : js 0xffffffffed39b05e ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ae26 : js 0xffffffffed39b28c ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae78 : js 0xffffffffed39b6de ; mov byte ptr [rdi + 9], ch ; ret
0x000000000018ef9d : lahf ; add dword ptr [rax], eax ; mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x00000000000e328d : lahf ; add eax, 0x8548fff9 ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000fe6bd : lahf ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x000000000015f0e5 : lahf ; call qword ptr [rax]
0x000000000015ed89 : lahf ; cld ; push qword ptr [rax - 0x60] ; cld ; jmp rax
0x000000000015f0dd : lahf ; inc eax ; lahf ; jmp rax
0x0000000000188645 : lahf ; jmp qword ptr [rdx]
0x000000000015f0e1 : lahf ; jmp rax
0x000000000015c903 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001252ed : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017edfc : lahf ; out dx, al ; jmp qword ptr [rdx]
0x00000000000c2518 : lahf ; ret 0x82eb
0x00000000000e5954 : lahf ; ret 0x8545
0x000000000015a15d : lahf ; ret 0x871e
0x0000000000059a1e : lahf ; ret 0x9529
0x0000000000057b97 : lahf ; rol byte ptr [rbp - 0x78], 0x34 ; sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x00000000000606cb : lahf ; rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x000000000009cc4d : lahf ; salc ; add byte ptr [rax], al ; ret
0x0000000000196424 : lahf ; std ; cmc ; jmp qword ptr [rdx]
0x00000000001923b1 : lahf ; sti ; jmp qword ptr [rsi]
0x000000000012597d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000174b63 : lcall ptr [rax + rbp*8 - 0x2ecbfffe] ; cli ; jmp rsp
0x0000000000171e5b : lcall ptr [rax + rbx*8 + 1] ; add ah, ah ; ret 0xfff6
0x000000000016f8b3 : lcall ptr [rax + rbx*8 - 0x46f50000] ; out dx, eax ; jmp rsp
0x0000000000174fb3 : lcall ptr [rax + rdx*2 - 0x255bffff] ; std ; jmp rsp
0x000000000015eb07 : lcall ptr [rax - 0x4f000e1d] ; jrcxz 0x15eb08 ; call qword ptr [rax]
0x000000000015e90f : lcall ptr [rax - 0x67000f58] ; test al, 0xf0 ; jmp rax
0x000000000016d3cf : lcall ptr [rax] ; adc ah, bh ; jmp rax
0x000000000016efe3 : lcall ptr [rbp + rbx*4 - 0x6c9a0000] ; in al, dx ; jmp rsp
0x000000000009b922 : lcall ptr [rbx + 0x5d] ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000007c5d1 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x000000000006f0b3 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000378a6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000a65c4 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x000000000002b0ab : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006c690 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000c3b62 : lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000174043 : lcall ptr [rbx + 2] ; add ah, dh ; ret 0xfff9
0x00000000001742bb : lcall ptr [rbx + rsi*4 + 0xc240002] ; cli ; call rsp
0x000000000017404b : lcall ptr [rbx - 0x3c1bfffe] ; stc ; call rsp
0x0000000000069734 : lcall ptr [rbx - 0x77] ; call 0xffffffffc362d8a0
0x00000000001736bb : lcall ptr [rcx + rbx*2 - 0x4e86fffe] ; clc ; jmp rsp
0x0000000000160037 : lcall ptr [rcx - 0x5a000a3e] ; ret 0xfff5
0x0000000000160067 : lcall ptr [rcx] ; ret
0x00000000001708db : lcall ptr [rdi + rdi + 0x830001] ; int1 ; jmp rsp
0x000000000016fa9b : lcall ptr [rdi - 0x29060000] ; out dx, eax ; jmp rsp
0x000000000015fb9f : lcall ptr [rdi] ; sbb al, 0xf5 ; call rdx
0x000000000015fbb3 : lcall ptr [rdi] ; sbb al, 0xf5 ; inc esi ; cmc ; call qword ptr [rcx]
0x000000000015fc33 : lcall ptr [rdi] ; sbb al, 0xf5 ; jmp qword ptr [rdi]
0x000000000015fb9b : lcall ptr [rdi] ; sbb al, 0xf5 ; lcall ptr [rdi] ; sbb al, 0xf5 ; call rdx
0x00000000001711cb : lcall ptr [rdx + rax*4 - 0x4801ffff] ; jmp rsp
0x000000000017167b : lcall ptr [rdx - 0x5cf7ffff] ; hlt ; jmp rsp
0x0000000000170eab : lcall ptr [rsi + rbp*2 + 1] ; add byte ptr [rsi + rdx*8], dh ; call rsp
0x00000000001741f3 : lcall ptr [rsi + rbp*4 - 0x14cbfffe] ; stc ; jmp rsp
0x0000000000174ab3 : lcall ptr [rsi - 0x345bfffe] ; cli ; call rsp
0x000000000016dc4f : lcall ptr [rsi - 0x6f] ; cld ; jmp rax
0x0000000000174b03 : lcall ptr [rsp - 0x317cfffe] ; cli ; jmp rsp
0x00000000001342d6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001815e4 : lds r8, ptr [rax] ; add byte ptr [rax + 0x62], cl ; out dx, eax ; call qword ptr [rsi]
0x000000000006e8df : lea eax, dword ptr [r8 - 1] ; ret
0x000000000009b8f8 : lea eax, dword ptr [rax + 1] ; pop r12 ; ret
0x00000000000aa2b3 : lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000d2d43 : lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x00000000000aaa7d : lea eax, dword ptr [rax + rcx] ; ret
0x0000000000084f44 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000084f54 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000091714 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x0000000000084f24 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000b5802 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000006e8e0 : lea eax, dword ptr [rax - 1] ; ret
0x000000000016ec55 : lea eax, dword ptr [rax] ; add byte ptr [rcx + rdx*2], dh ; in al, dx ; jmp rsp
0x0000000000045bf6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x45c16
0x000000000010bf5b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000bed85 : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x0000000000106909 : lea eax, dword ptr [rbx + 3] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bec7a : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000103d2e : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000083afd : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000009b594 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000000986bc : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000986d1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000986ef : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009870f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000098732 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000098751 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000098771 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000098791 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000987b4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000987d9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000987f7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000098817 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000098833 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000098853 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000098873 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000098893 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000996e3 : lea eax, dword ptr [rdi + 0x20] ; ret
0x0000000000099949 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009860d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009862d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009864f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009866f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009868f : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000986a9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000910b4 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000910c8 : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000910d3 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000000910e7 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000000910f7 : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000091107 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000985bb : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000910a7 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000985da : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000103350 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000985ef : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000084f79 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000084f89 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000084e73 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000008010a : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000008c797 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000001244c4 : lea eax, dword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000104050 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x00000000000839f9 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000009d3ce : lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000009d531 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000c4d16 : lea eax, dword ptr [rdi - 4] ; cmp ebp, esi ; jge 0xc4cff ; mov rdx, r8 ; jmp 0xc4d37
0x000000000009d551 : lea eax, dword ptr [rdi - 4] ; ret
0x000000000009d541 : lea eax, dword ptr [rdi - 8] ; ret
0x0000000000098543 : lea eax, dword ptr [rdi] ; ret
0x00000000001440bd : lea eax, dword ptr [rdx + 0xa] ; ret
0x00000000001440dd : lea eax, dword ptr [rdx + 0xb] ; ret
0x00000000001440ff : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000014411f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000014413f : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000143fcf : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000143ff7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000014400d : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000144025 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000014403b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000014404d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000014406b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000143f77 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000014407d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000014409d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000006e8ce : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009bbec : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002e0e5 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000007cc71 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000143fe5 : lea eax, dword ptr [rdx] ; ret
0x0000000000082025 : lea eax, dword ptr [rip + 0x11e35] ; ret
0x000000000007fda5 : lea eax, dword ptr [rip + 0x12495] ; ret
0x0000000000021c31 : lea eax, dword ptr [rip + 0x141094] ; ret
0x0000000000021c41 : lea eax, dword ptr [rip + 0x1431c1] ; ret
0x0000000000084fcb : lea eax, dword ptr [rip + 0x1f] ; ret
0x00000000000670c3 : lea eax, dword ptr [rip + 0x340657] ; pop rbx ; pop rbp ; ret
0x0000000000022100 : lea eax, dword ptr [rip + 0x38827a] ; ret
0x00000000000f5bf5 : lea eax, dword ptr [rip + 0x3c2a5] ; ret
0x00000000000f5c95 : lea eax, dword ptr [rip + 0x3ecd5] ; ret
0x000000000008a7b2 : lea eax, dword ptr [rip + 0x7868] ; ret
0x0000000000085db1 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000008a7c6 : lea eax, dword ptr [rip + 0x9f7c4] ; ret
0x0000000000083fa2 : lea eax, dword ptr [rip + 0xa04d8] ; ret
0x0000000000083c22 : lea eax, dword ptr [rip + 0xa0738] ; ret
0x0000000000081792 : lea eax, dword ptr [rip + 0xa2a88] ; ret
0x000000000009cc53 : lea eax, dword ptr [rip + 0xaa147] ; ret
0x000000000009d81f : lea eax, dword ptr [rip + 0xab23b] ; ret
0x000000000009d827 : lea eax, dword ptr [rip + 0xadaf3] ; ret
0x0000000000085755 : lea eax, dword ptr [rip + 0xaf225] ; ret
0x0000000000083905 : lea eax, dword ptr [rip + 0xbc4b5] ; ret
0x0000000000085c45 : lea eax, dword ptr [rip + 0xbccf5] ; ret
0x0000000000081685 : lea eax, dword ptr [rip + 0xbcf85] ; ret
0x0000000000085d65 : lea eax, dword ptr [rip + 0xbe3e5] ; ret
0x0000000000084fdf : lea eax, dword ptr [rip + 0xc243b] ; ret
0x0000000000084fe7 : lea eax, dword ptr [rip + 0xc4bc3] ; ret
0x000000000007ff92 : lea eax, dword ptr [rip + 0xc98f8] ; ret
0x000000000009d80b : lea eax, dword ptr [rip + 0xca4f] ; ret
0x000000000009cc4b : lea eax, dword ptr [rip + 0xd69f] ; ret
0x00000000000801f5 : lea eax, dword ptr [rip + 5] ; ret
0x0000000000085e14 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000082071 : lea eax, dword ptr [rip + 9] ; ret
0x000000000008bccb : lea eax, dword ptr [rip - 0x501] ; ret
0x00000000000aa8a1 : lea eax, dword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000e6d0b : lea eax, dword ptr [rsp - 1] ; jmp 0xe6cd9
0x00000000000b58bf : lea ebp, dword ptr [rax + 1] ; jne 0xb58a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f109b : lea ebp, dword ptr [rdi + rax] ; jmp 0xf10b0
0x00000000000ffc56 : lea ebx, dword ptr [rbx + 0x5b01002a] ; ret
0x0000000000197adc : lea ebx, dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x000000000015aa11 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000009db4a : lea ecx, dword ptr [rax + 1] ; call rbx
0x000000000009dc92 : lea ecx, dword ptr [rax + 4] ; call rbx
0x000000000012a010 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000096dfe : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x00000000000eba05 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001418c6 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x141e19 ; ret
0x0000000000141bc4 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x141e19 ; ret
0x0000000000141be4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x141e19 ; ret
0x0000000000141c04 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x141e19 ; ret
0x0000000000141c26 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x141e19 ; ret
0x0000000000141c46 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x141e19 ; ret
0x0000000000141c66 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x141e19 ; ret
0x0000000000141abc : lea ecx, dword ptr [rdx + 1] ; jne 0x141e19 ; ret
0x0000000000141ade : lea ecx, dword ptr [rdx + 2] ; jne 0x141e19 ; ret
0x0000000000141b04 : lea ecx, dword ptr [rdx + 3] ; jne 0x141e19 ; ret
0x0000000000141b1c : lea ecx, dword ptr [rdx + 4] ; jne 0x141e19 ; ret
0x000000000006e611 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c816 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000141b42 : lea ecx, dword ptr [rdx + 5] ; jne 0x141e19 ; ret
0x0000000000141b64 : lea ecx, dword ptr [rdx + 6] ; jne 0x141e19 ; ret
0x0000000000141b82 : lea ecx, dword ptr [rdx + 7] ; jne 0x141e19 ; ret
0x000000000014185e : lea ecx, dword ptr [rdx + 8] ; jne 0x141e19 ; ret
0x0000000000141ba4 : lea ecx, dword ptr [rdx + 9] ; jne 0x141e19 ; ret
0x0000000000044100 : lea ecx, dword ptr [rdx] ; jmp 0x44156
0x00000000000458b0 : lea ecx, dword ptr [rdx] ; jmp 0x45906
0x0000000000051915 : lea ecx, dword ptr [rsi + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000009e04b : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x000000000009e0d9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000010f82e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000111f12 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x00000000001114e2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x000000000010ec75 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x00000000001836f4 : lea edi, dword ptr [rbx - 0x11] ; jmp qword ptr [rdx]
0x00000000000857e6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x857d8 ; mov rax, rdi ; ret
0x000000000008a856 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8a846 ; ret
0x000000000009796d : lea edi, dword ptr [rdi + 0x10] ; jne 0x98049 ; ret
0x0000000000099051 : lea edi, dword ptr [rdi + 0x10] ; jne 0x99859 ; ret
0x0000000000097990 : lea edi, dword ptr [rdi + 0x11] ; jne 0x98049 ; ret
0x0000000000099074 : lea edi, dword ptr [rdi + 0x11] ; jne 0x99859 ; ret
0x00000000000979b5 : lea edi, dword ptr [rdi + 0x12] ; jne 0x98049 ; ret
0x0000000000099099 : lea edi, dword ptr [rdi + 0x12] ; jne 0x99859 ; ret
0x00000000000979d3 : lea edi, dword ptr [rdi + 0x13] ; jne 0x98049 ; ret
0x00000000000990c7 : lea edi, dword ptr [rdi + 0x13] ; jne 0x99859 ; ret
0x00000000000979f3 : lea edi, dword ptr [rdi + 0x14] ; jne 0x98049 ; ret
0x00000000000990f7 : lea edi, dword ptr [rdi + 0x14] ; jne 0x99859 ; ret
0x0000000000097a16 : lea edi, dword ptr [rdi + 0x15] ; jne 0x98049 ; ret
0x000000000009912a : lea edi, dword ptr [rdi + 0x15] ; jne 0x99859 ; ret
0x0000000000097a35 : lea edi, dword ptr [rdi + 0x16] ; jne 0x98049 ; ret
0x0000000000099159 : lea edi, dword ptr [rdi + 0x16] ; jne 0x99859 ; ret
0x0000000000097a55 : lea edi, dword ptr [rdi + 0x17] ; jne 0x98049 ; ret
0x0000000000099189 : lea edi, dword ptr [rdi + 0x17] ; jne 0x99859 ; ret
0x0000000000097a75 : lea edi, dword ptr [rdi + 0x18] ; jne 0x98049 ; ret
0x00000000000991b9 : lea edi, dword ptr [rdi + 0x18] ; jne 0x99859 ; ret
0x0000000000097a98 : lea edi, dword ptr [rdi + 0x19] ; jne 0x98049 ; ret
0x00000000000991ec : lea edi, dword ptr [rdi + 0x19] ; jne 0x99859 ; ret
0x0000000000097acd : lea edi, dword ptr [rdi + 0x1a] ; jne 0x98049 ; ret
0x0000000000099221 : lea edi, dword ptr [rdi + 0x1a] ; jne 0x99859 ; ret
0x0000000000097afb : lea edi, dword ptr [rdi + 0x1b] ; jne 0x98049 ; ret
0x000000000009924f : lea edi, dword ptr [rdi + 0x1b] ; jne 0x99859 ; ret
0x0000000000097b2b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x98049 ; ret
0x000000000009927f : lea edi, dword ptr [rdi + 0x1c] ; jne 0x99859 ; ret
0x0000000000097b57 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x98049 ; ret
0x00000000000992ab : lea edi, dword ptr [rdi + 0x1d] ; jne 0x99859 ; ret
0x0000000000097b87 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x98049 ; ret
0x00000000000992db : lea edi, dword ptr [rdi + 0x1e] ; jne 0x99859 ; ret
0x0000000000097bb7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x98049 ; ret
0x000000000009930b : lea edi, dword ptr [rdi + 0x1f] ; jne 0x99859 ; ret
0x0000000000097be7 : lea edi, dword ptr [rdi + 0x20] ; jne 0x98049 ; ret
0x000000000009933b : lea edi, dword ptr [rdi + 0x20] ; jne 0x99859 ; ret
0x00000000000978b3 : lea edi, dword ptr [rdi + 0xa] ; jne 0x98049 ; ret
0x0000000000098f57 : lea edi, dword ptr [rdi + 0xa] ; jne 0x99859 ; ret
0x00000000000978d1 : lea edi, dword ptr [rdi + 0xb] ; jne 0x98049 ; ret
0x0000000000098f85 : lea edi, dword ptr [rdi + 0xb] ; jne 0x99859 ; ret
0x00000000000978f1 : lea edi, dword ptr [rdi + 0xc] ; jne 0x98049 ; ret
0x0000000000098fa5 : lea edi, dword ptr [rdi + 0xc] ; jne 0x99859 ; ret
0x0000000000097913 : lea edi, dword ptr [rdi + 0xd] ; jne 0x98049 ; ret
0x0000000000098fc7 : lea edi, dword ptr [rdi + 0xd] ; jne 0x99859 ; ret
0x0000000000097933 : lea edi, dword ptr [rdi + 0xe] ; jne 0x98049 ; ret
0x0000000000098ff7 : lea edi, dword ptr [rdi + 0xe] ; jne 0x99859 ; ret
0x0000000000097953 : lea edi, dword ptr [rdi + 0xf] ; jne 0x98049 ; ret
0x0000000000099027 : lea edi, dword ptr [rdi + 0xf] ; jne 0x99859 ; ret
0x0000000000097787 : lea edi, dword ptr [rdi + 1] ; jne 0x98049 ; ret
0x0000000000098e2a : lea edi, dword ptr [rdi + 1] ; jne 0x99859 ; ret
0x00000000000977ab : lea edi, dword ptr [rdi + 2] ; jne 0x98049 ; ret
0x0000000000098e4f : lea edi, dword ptr [rdi + 2] ; jne 0x99859 ; ret
0x00000000000977ce : lea edi, dword ptr [rdi + 3] ; jne 0x98049 ; ret
0x0000000000098e72 : lea edi, dword ptr [rdi + 3] ; jne 0x99859 ; ret
0x00000000000977e9 : lea edi, dword ptr [rdi + 4] ; jne 0x98049 ; ret
0x0000000000098e8d : lea edi, dword ptr [rdi + 4] ; jne 0x99859 ; ret
0x000000000009780c : lea edi, dword ptr [rdi + 5] ; jne 0x98049 ; ret
0x0000000000098eb0 : lea edi, dword ptr [rdi + 5] ; jne 0x99859 ; ret
0x0000000000097831 : lea edi, dword ptr [rdi + 6] ; jne 0x98049 ; ret
0x0000000000098ed5 : lea edi, dword ptr [rdi + 6] ; jne 0x99859 ; ret
0x000000000009784f : lea edi, dword ptr [rdi + 7] ; jne 0x98049 ; ret
0x0000000000098ef3 : lea edi, dword ptr [rdi + 7] ; jne 0x99859 ; ret
0x000000000009786b : lea edi, dword ptr [rdi + 8] ; jne 0x98049 ; ret
0x0000000000098f0f : lea edi, dword ptr [rdi + 8] ; jne 0x99859 ; ret
0x000000000009788e : lea edi, dword ptr [rdi + 9] ; jne 0x98049 ; ret
0x0000000000098f32 : lea edi, dword ptr [rdi + 9] ; jne 0x99859 ; ret
0x0000000000046f31 : lea edi, dword ptr [rip + 0x1208f1] ; call 0x731c8
0x0000000000100821 : lea edi, dword ptr [rip + 0x2a9035] ; call rax
0x00000000000b6ef9 : lea edi, dword ptr [rip + 0xb32d1] ; call 0x731c8
0x00000000000f551e : lea edi, dword ptr [rip - 0x174] ; call rax
0x0000000000021bdc : lea edi, dword ptr [rsi + rdx] ; call rax
0x00000000000ac5a0 : lea edx, dword ptr [rax + 1] ; cmp rdx, rcx ; jb 0xac579 ; ret
0x0000000000035dc9 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x36f2ba], edx ; ret
0x0000000000053a81 : lea edx, dword ptr [rax + 8] ; mov qword ptr [r12 + 8], rdx ; jmp 0x53a56
0x000000000004927b : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4924e
0x000000000012a0e4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000091411 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000ebc37 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000006e9fd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000080286 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000012a4d8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000010bba1 : lea edx, dword ptr [rip + 0x298fd9] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000ad595 : lea edx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006d4b0 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eb2 : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004122f : lea esi, dword ptr [rip + 0x19b] ; call rax
0x000000000006b4fa : lea esi, dword ptr [rip + 0x30] ; call rax
0x00000000000769fa : lea esi, dword ptr [rip - 0x12f0] ; call rax
0x0000000000076dfa : lea esi, dword ptr [rip - 0x16f0] ; call rax
0x0000000000075972 : lea esi, dword ptr [rip - 0x268] ; call rax
0x000000000006b7a2 : lea esi, dword ptr [rip - 0x278] ; call rax
0x0000000000075bda : lea esi, dword ptr [rip - 0x4d0] ; call rax
0x000000000010c355 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115c32 : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000003725e : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000069458 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000007e06d : lea esp, dword ptr [rsp + 0x20] ; mov rbx, rbp ; call 0x6a2e9
0x0000000000080285 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000f109a : lea r13, qword ptr [r15 + r8] ; jmp 0xf10b1
0x000000000012a00f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000440ff : lea r9, qword ptr [rdx] ; jmp 0x44157
0x00000000000458af : lea r9, qword ptr [rdx] ; jmp 0x45907
0x000000000009e04a : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009e0d8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000e6d0a : lea rax, qword ptr [r12 - 1] ; jmp 0xe6cda
0x000000000009b8f7 : lea rax, qword ptr [r8 + 1] ; pop r12 ; ret
0x00000000000aaa7c : lea rax, qword ptr [r8 + rcx] ; ret
0x00000000000bb771 : lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000084f43 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000084f53 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000091713 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x0000000000084f23 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000b5801 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000045bf5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x45c17
0x000000000010bf5a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000bed84 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000bec79 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000083afc : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000009b593 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000986bb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000986d0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000986ee : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009870e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000098731 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000098750 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000098770 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000098790 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000987b3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000987d8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000987f6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000098816 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000098832 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000098852 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000098872 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000098892 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000996e2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000099948 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009860c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009862c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009864e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009866e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009868e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000986a8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000910b3 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000910c7 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000910d2 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000000910e6 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000000910f6 : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000091106 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000985ba : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000910a6 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000985d9 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000985ee : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000084f78 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084f88 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084e72 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000008c796 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000001244c3 : lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000010404f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000839f8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009d3cd : lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009d530 : lea rax, qword ptr [rdi - 0xc] ; ret
0x000000000009d550 : lea rax, qword ptr [rdi - 4] ; ret
0x000000000009d540 : lea rax, qword ptr [rdi - 8] ; ret
0x0000000000098542 : lea rax, qword ptr [rdi] ; ret
0x00000000001440bc : lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000001440dc : lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000001440fe : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000014411e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000014413e : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000143fce : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000143ff6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000014400c : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000144024 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000014403a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000014404c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000014406a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000143f76 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000014407c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000014409c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002e0e4 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000007cc70 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000143fe4 : lea rax, qword ptr [rdx] ; ret
0x0000000000082024 : lea rax, qword ptr [rip + 0x11e35] ; ret
0x000000000007fda4 : lea rax, qword ptr [rip + 0x12495] ; ret
0x0000000000021c30 : lea rax, qword ptr [rip + 0x141094] ; ret
0x0000000000021c40 : lea rax, qword ptr [rip + 0x1431c1] ; ret
0x0000000000084fca : lea rax, qword ptr [rip + 0x1f] ; ret
0x00000000000670c2 : lea rax, qword ptr [rip + 0x340657] ; pop rbx ; pop rbp ; ret
0x00000000000220ff : lea rax, qword ptr [rip + 0x38827a] ; ret
0x00000000000f5bf4 : lea rax, qword ptr [rip + 0x3c2a5] ; ret
0x00000000000f5c94 : lea rax, qword ptr [rip + 0x3ecd5] ; ret
0x000000000008a7b1 : lea rax, qword ptr [rip + 0x7868] ; ret
0x0000000000085db0 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008a7c5 : lea rax, qword ptr [rip + 0x9f7c4] ; ret
0x0000000000083fa1 : lea rax, qword ptr [rip + 0xa04d8] ; ret
0x0000000000083c21 : lea rax, qword ptr [rip + 0xa0738] ; ret
0x0000000000081791 : lea rax, qword ptr [rip + 0xa2a88] ; ret
0x000000000009cc52 : lea rax, qword ptr [rip + 0xaa147] ; ret
0x000000000009d81e : lea rax, qword ptr [rip + 0xab23b] ; ret
0x000000000009d826 : lea rax, qword ptr [rip + 0xadaf3] ; ret
0x0000000000085754 : lea rax, qword ptr [rip + 0xaf225] ; ret
0x0000000000083904 : lea rax, qword ptr [rip + 0xbc4b5] ; ret
0x0000000000085c44 : lea rax, qword ptr [rip + 0xbccf5] ; ret
0x0000000000081684 : lea rax, qword ptr [rip + 0xbcf85] ; ret
0x0000000000085d64 : lea rax, qword ptr [rip + 0xbe3e5] ; ret
0x0000000000084fde : lea rax, qword ptr [rip + 0xc243b] ; ret
0x0000000000084fe6 : lea rax, qword ptr [rip + 0xc4bc3] ; ret
0x000000000007ff91 : lea rax, qword ptr [rip + 0xc98f8] ; ret
0x000000000009d80a : lea rax, qword ptr [rip + 0xca4f] ; ret
0x000000000009cc4a : lea rax, qword ptr [rip + 0xd69f] ; ret
0x00000000000801f4 : lea rax, qword ptr [rip + 5] ; ret
0x0000000000085e13 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000082070 : lea rax, qword ptr [rip + 9] ; ret
0x000000000008bcca : lea rax, qword ptr [rip - 0x501] ; ret
0x00000000000aa8a0 : lea rax, qword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x000000000009d509 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000096dfd : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009db49 : lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009dc91 : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000eba04 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000006c815 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000021bdb : lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000010f82d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000111f11 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001114e1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000010ec74 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x00000000000857e5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x857d9 ; mov rax, rdi ; ret
0x000000000008a855 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8a847 ; ret
0x0000000000046f30 : lea rdi, qword ptr [rip + 0x1208f1] ; call 0x731c9
0x0000000000100820 : lea rdi, qword ptr [rip + 0x2a9035] ; call rax
0x00000000000b6ef8 : lea rdi, qword ptr [rip + 0xb32d1] ; call 0x731c9
0x00000000000f551d : lea rdi, qword ptr [rip - 0x174] ; call rax
0x000000000012a0e3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000004927a : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4924f
0x00000000000ebc36 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000012a4d7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000004122e : lea rsi, qword ptr [rip + 0x19b] ; call rax
0x000000000006b4f9 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x00000000000769f9 : lea rsi, qword ptr [rip - 0x12f0] ; call rax
0x0000000000076df9 : lea rsi, qword ptr [rip - 0x16f0] ; call rax
0x0000000000075971 : lea rsi, qword ptr [rip - 0x268] ; call rax
0x000000000006b7a1 : lea rsi, qword ptr [rip - 0x278] ; call rax
0x0000000000075bd9 : lea rsi, qword ptr [rip - 0x4d0] ; call rax
0x000000000010c354 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000115c31 : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000003725d : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000becb3 : leave ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000793ca : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000357a4 : leave ; add edi, esi ; ret 0
0x0000000000002bc8 : leave ; clc ; ret
0x0000000000194ed5 : leave ; cmc ; jmp qword ptr [rdx]
0x0000000000083cc6 : leave ; cmove rax, rdx ; ret
0x00000000001242c9 : leave ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x000000000002c026 : leave ; je 0x2c02e ; call rcx
0x0000000000067829 : leave ; je 0x67834 ; ret
0x0000000000091b4a : leave ; je 0x91b10 ; mov byte ptr [r10 + 1], 0 ; ret
0x000000000008ea18 : leave ; jg 0x8ea06 ; or byte ptr [rdi], sil ; ret
0x0000000000091181 : leave ; jne 0x91174 ; ret
0x000000000009b370 : leave ; jne 0x9b363 ; ret
0x000000000009b420 : leave ; jne 0x9b413 ; ret
0x000000000009b6e0 : leave ; jne 0x9b6d7 ; sub rax, 1 ; ret
0x000000000009d5a4 : leave ; jne 0x9d59c ; ret
0x00000000000c22e3 : leave ; jne 0xc22c9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c2339 : leave ; jne 0xc2329 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efda6 : leave ; jne 0xefd94 ; ret
0x00000000001244c2 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x00000000000968e1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000009cff9 : leave ; mov dword ptr [r8 + 4], ecx ; jne 0x9cfd0 ; ret
0x000000000009bdc4 : leave ; mov dword ptr [rdx], ecx ; jne 0x9bdbe ; ret
0x000000000017bb3e : leave ; mov ecx, 0xd1cffee ; cld ; mov bh, 0xee ; jmp qword ptr [rdx]
0x0000000000090fdf : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000003ea02 : leave ; ret
0x00000000001822b0 : leave ; ret 0xffef
0x0000000000160124 : leave ; sal ch, 0xff ; leave ; sal ch, 0xff ; pop rbp ; ret 0xfff5
0x000000000016001c : leave ; sal ch, 0xff ; leave ; sal ch, 0xff ; ret 0xfff5
0x0000000000160128 : leave ; sal ch, 0xff ; pop rbp ; ret 0xfff5
0x0000000000160020 : leave ; sal ch, 0xff ; ret 0xfff5
0x0000000000196ed4 : leave ; sub al, 0xf6 ; jmp qword ptr [rdx]
0x0000000000074b86 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000756ab : les r9d, ptr [rax + 0x29] ; ret 0x8948
0x000000000015fa3b : ljmp ptr [rax + 0x16fff509] ; in al, dx ; hlt ; call qword ptr [rsi]
0x000000000015f9bb : ljmp ptr [rax + 0xb] ; cmc ; call qword ptr [rsi]
0x000000000016f683 : ljmp ptr [rax + rcx*8 + 0xba40000] ; out dx, eax ; call rsp
0x000000000016d58f : ljmp ptr [rax] ; cmp ah, bh ; push rax ; cmp esp, edi ; call rax
0x000000000016ee43 : ljmp ptr [rbp + rdx*4 + 0x71f40000] ; in al, dx ; call rsp
0x000000000016000b : ljmp ptr [rbx] ; ret 0xfff5
0x0000000000160863 : ljmp ptr [rcx + 0x64fff6c2] ; ret
0x0000000000171443 : ljmp ptr [rcx + rdx*4 + 0x77740001] ; hlt ; call rsp
0x0000000000160df5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x000000000015f837 : ljmp ptr [rcx - 0x7b000b0d] ; add dh, ch ; call rax
0x000000000001f5af : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f58f
0x000000000016003f : ljmp ptr [rdi - 0x44000a3e] ; ret 0xfff5
0x0000000000173ab3 : ljmp ptr [rdx + rdi*2 + 0x18940002] ; stc ; call rsp
0x000000000016de4b : ljmp ptr [rdx - 0x6f] ; cld ; call qword ptr [rax]
0x000000000008be16 : ljmp ptr [rdx] ; cmp rdx, rcx ; jne 0x8be18 ; ret
0x000000000015f9ab : ljmp ptr [rdx] ; or ch, dh ; call qword ptr [rsi]
0x000000000017498b : ljmp ptr [rsp + rbx*8 - 0x5fdbfffe] ; cli ; jmp rsp
0x0000000000170d43 : ljmp ptr [rsp - 0x12abffff] ; int1 ; jmp rsp
0x00000000001477fe : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000006daba : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019454d : lock add dword ptr [rax], eax ; ret
0x00000000000e04f3 : lock and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x0000000000112695 : lock dec dword ptr [rax - 0x77] ; ret
0x00000000001197a0 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x1197b9 ; xor eax, eax ; ret
0x000000000011f3b0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014ad90 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000017fccd : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dl, ch ; call rdx
0x00000000001717e5 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; je 0x1717b2 ; hlt ; call rsp
0x0000000000185244 : lodsb al, byte ptr [rsi] ; add dword ptr [rcx], eax ; add byte ptr [rax + 0x6e], ch ; sti ; call qword ptr [rax]
0x0000000000170d44 : lodsb al, byte ptr [rsi] ; add dword ptr fs:[rax], eax ; push rsp ; in eax, dx ; int1 ; jmp rsp
0x00000000000d9a25 : lodsb al, byte ptr [rsi] ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x000000000017d92c : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rax] ; add al, dh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187444 : lodsb al, byte ptr [rsi] ; and eax, dword ptr [rcx] ; add al, bl ; outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x0000000000192e75 : lodsb al, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000016f684 : lodsb al, byte ptr [rsi] ; enter 0, -0x5c ; or ebp, edi ; call rsp
0x000000000017498c : lodsb al, byte ptr [rsi] ; fadd qword ptr [rdx] ; add byte ptr [rax], ah ; cli ; jmp rsp
0x000000000015ec75 : lodsb al, byte ptr [rsi] ; inc eax ; scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x00000000001771a5 : lodsb al, byte ptr [rsi] ; jmp 0x1771a9
0x000000000018c644 : lodsb al, byte ptr [rsi] ; jne 0x18c64f ; add byte ptr [rax - 4], bl ; hlt ; jmp qword ptr [rcx]
0x000000000018cc44 : lodsb al, byte ptr [rsi] ; jnp 0x18cc4f ; add al, cl ; sbb dh, ch ; jmp rdi
0x000000000018c944 : lodsb al, byte ptr [rsi] ; js 0x18c94f ; add al, ch ; or ch, dh ; jmp qword ptr [rcx]
0x000000000017831c : lodsb al, byte ptr [rsi] ; loopne 0x17830d ; jmp qword ptr [rdx]
0x000000000018355c : lodsb al, byte ptr [rsi] ; loopne 0x183564 ; add byte ptr [rcx], ah ; ret
0x000000000014c7a8 : lodsb al, byte ptr [rsi] ; mov al, 0x25 ; add byte ptr [rbp + 0x1e], dh ; ret
0x000000000018da44 : lodsb al, byte ptr [rsi] ; mov dword ptr [rcx], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rsi]
0x000000000018dc44 : lodsb al, byte ptr [rsi] ; mov eax, dword ptr [rcx] ; add al, ch ; push rbx ; cmc ; jmp qword ptr [rcx]
0x000000000011f9d4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015d09d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000183744 : lodsb al, byte ptr [rsi] ; out 0, al ; add byte ptr [rax - 0x47], bl ; out dx, eax ; call qword ptr [rdx]
0x000000000017ab44 : lodsb al, byte ptr [rsi] ; pop rdx ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0x13] ; call qword ptr [rsi]
0x00000000000f539f : lodsb al, byte ptr [rsi] ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000171b2c : lodsb al, byte ptr [rsi] ; ret
0x0000000000181344 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000108bb8 : lodsb al, byte ptr [rsi] ; ret 0x29
0x0000000000171b0c : lodsb al, byte ptr [rsi] ; ret 1
0x0000000000176b44 : lodsb al, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], bh ; jmp 0x176b52
0x000000000019382c : lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000001963dc : lodsb al, byte ptr [rsi] ; std ; cmc ; jmp qword ptr [rdx]
0x0000000000177c44 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; fsub st(3), st(0) ; jmp qword ptr [rcx]
0x000000000018f944 : lodsb al, byte ptr [rsi] ; test al, 1 ; add byte ptr [rax], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x000000000016ee44 : lodsb al, byte ptr [rsi] ; xchg eax, ebp ; add byte ptr [rax], al ; hlt ; jno 0x16ee3e ; call rsp
0x0000000000171444 : lodsb al, byte ptr [rsi] ; xchg eax, ecx ; add dword ptr [rax], eax ; je 0x1714c8 ; hlt ; call rsp
0x00000000000e4ff0 : lodsb al, byte ptr [rsi] ; xor ch, byte ptr [rax + rax] ; add rsp, 0x18 ; ret
0x0000000000039dd4 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016e3cd : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rsi]
0x000000000015edb1 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x000000000016e589 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000016e391 : lodsd eax, dword ptr [rsi] ; cld ; jmp rax
0x000000000016e50d : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000193395 : lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000017a169 : lodsd eax, dword ptr [rsi] ; in al, dx ; jmp rbx
0x00000000001771c1 : lodsd eax, dword ptr [rsi] ; jmp 0x1771c5
0x000000000010357f : lodsd eax, dword ptr [rsi] ; mov eax, 0xffffffff ; ret
0x0000000000123540 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017eebc : lodsd eax, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x0000000000044862 : lodsd eax, dword ptr [rsi] ; ret
0x000000000009f535 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000106a9c : loop 0x106a2e ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011deeb : loop 0x11df3e ; add ecx, ebx ; call rax
0x0000000000133bba : loop 0x133bb5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133bb9 : loop 0x133bb6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013668a : loop 0x136685 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000136689 : loop 0x136686 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001391aa : loop 0x1391a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001391a9 : loop 0x1391a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d43a : loop 0x15d48f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000016d389 : loop 0x16d388 ; call rax
0x0000000000174189 : loop 0x174186 ; jmp rsp
0x00000000001783ad : loop 0x17839c ; jmp qword ptr [rdx]
0x00000000001783ac : loop 0x17839d ; jmp qword ptr [rdx]
0x00000000001783f5 : loop 0x1783e4 ; jmp qword ptr [rdx]
0x000000000019c891 : loop 0x19c88c ; call rsi
0x0000000000021bd9 : loop 0x21be5 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000000025c5 : loop 0x259f ; ret 0x23cb
0x00000000000359d9 : loop 0x359e3 ; jne 0x359ef ; xor eax, eax ; nop ; ret
0x00000000000381f7 : loop 0x38220 ; mov eax, eax ; or rax, rdx ; ret
0x000000000005191a : loop 0x51961 ; call qword ptr [rbx + rax*8]
0x000000000005a029 : loop 0x5a02f ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000068132 : loop 0x680c4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000743c3 : loop 0x74414 ; mov eax, dword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x0000000000091bf9 : loop 0x91c06 ; mov rax, rdi ; jne 0x91c15 ; ret
0x000000000009200d : loop 0x92045 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000097a5a : loop 0x97a65 ; add byte ptr [rax], al ; ret
0x000000000009d989 : loop 0x9d996 ; mov rax, rdi ; jne 0x9d9a5 ; ret
0x00000000000ac35b : loop 0xac393 ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000b3ac1 : loop 0xb3a89 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c91ac : loop 0xc91b8 ; xor esi, esi ; call 0x85628
0x00000000000da4e0 : loop 0xda4ec ; je 0xda4f0 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000da7a0 : loop 0xda7ac ; je 0xda7b0 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000f54ba : loop 0xf54fd ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000ff229 : loop 0xff1bb ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010ec3e : loope 0x10ebd3 ; ret
0x0000000000110752 : loope 0x110766 ; ret 0x8d49
0x0000000000133b2a : loope 0x133b25 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000133b29 : loope 0x133b26 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001365fa : loope 0x1365f5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001365f9 : loope 0x1365f6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000013911a : loope 0x139115 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000139119 : loope 0x139116 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000141c2b : loope 0x141c32 ; add byte ptr [rax], al ; ret
0x0000000000149abb : loope 0x149ac5 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014bd9e : loope 0x14be04 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001611c9 : loope 0x1611d3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000016f2a1 : loope 0x16f291 ; call rsp
0x0000000000172d39 : loope 0x172d34 ; call rsp
0x0000000000174a1d : loope 0x174a25 ; add ah, dl ; ret
0x0000000000174a25 : loope 0x174a2d ; add ah, dh ; ret
0x0000000000174a35 : loope 0x174a3f ; add byte ptr [rsp + rax*8 - 6], al ; call rsp
0x0000000000174d3d : loope 0x174d46 ; add byte ptr [rax + rax - 5], dl ; call rsp
0x0000000000178365 : loope 0x178354 ; jmp qword ptr [rdx]
0x0000000000181ab4 : loope 0x181af8 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001835ed : loope 0x1835f3 ; add bh, cl ; ret 0xffef
0x0000000000022e7f : loope 0x22ed2 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000043eb6 : loope 0x43e76 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000043f96 : loope 0x43f56 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000446f7 : loope 0x44749 ; mov dword ptr [rdi], ecx ; ret
0x0000000000044728 : loope 0x4477b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000004479d : loope 0x447f0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000006bdbb : loope 0x6be0e ; mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000071181 : loope 0x71156 ; mov dword ptr [rdi], ecx ; ret
0x000000000008ac5b : loope 0x8ac6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000009b269 : loope 0x9b2d8 ; nop dword ptr [rax + rax] ; ret
0x000000000009bc17 : loope 0x9bbd8 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009cece : loope 0x9cee3 ; je 0x9cef4 ; ret
0x00000000000aaa77 : loope 0xaaa88 ; sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x00000000000b64bd : loope 0xb644a ; ret 0xf631
0x00000000000cfb2b : loope 0xcfb56 ; sti ; dec dword ptr [rax - 0x77] ; jmp 0x4ccf8487
0x00000000000f24da : loope 0xf24df ; dec dword ptr [rcx] ; ret
0x0000000000103354 : loopne 0x103353 ; add eax, 0x10 ; ret
0x0000000000103768 : loopne 0x1037ce ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000103860 : loopne 0x103857 ; ret
0x0000000000103807 : loopne 0x10386d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000103e7e : loopne 0x103e89 ; add eax, 8 ; ret
0x000000000010401b : loopne 0x104028 ; cdqe ; shr rax, 4 ; ret
0x00000000001065ff : loopne 0x1065f6 ; ret
0x0000000000108315 : loopne 0x108322 ; pop r12 ; sub eax, 1 ; pop r13 ; ret
0x0000000000112cc3 : loopne 0x112d18 ; mov ecx, ebp ; mov rsi, rbx ; call qword ptr [rax]
0x00000000001130d0 : loopne 0x1130dd ; sub eax, 1 ; add rsp, 0x18 ; ret
0x0000000000113a87 : loopne 0x113a90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116f51 : loopne 0x116fc1 ; nop dword ptr [rax + rax] ; ret
0x000000000012a531 : loopne 0x12a548 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a530 : loopne 0x12a549 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a681 : loopne 0x12a698 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a680 : loopne 0x12a699 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a7d1 : loopne 0x12a7e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a7d0 : loopne 0x12a7e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a921 : loopne 0x12a938 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a920 : loopne 0x12a939 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aa71 : loopne 0x12aa88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012aa70 : loopne 0x12aa89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012abc1 : loopne 0x12abd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012abc0 : loopne 0x12abd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ad11 : loopne 0x12ad28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ad10 : loopne 0x12ad29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ae5f : loopne 0x12ae76 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ae5e : loopne 0x12ae77 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012afb1 : loopne 0x12afc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012afb0 : loopne 0x12afc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b101 : loopne 0x12b118 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b100 : loopne 0x12b119 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b251 : loopne 0x12b268 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b250 : loopne 0x12b269 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b3a1 : loopne 0x12b3b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b3a0 : loopne 0x12b3b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b4f1 : loopne 0x12b508 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b4f0 : loopne 0x12b509 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b641 : loopne 0x12b658 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b640 : loopne 0x12b659 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b791 : loopne 0x12b7a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012b790 : loopne 0x12b7a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf01 : loopne 0x12cf18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012cf00 : loopne 0x12cf19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d051 : loopne 0x12d068 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d050 : loopne 0x12d069 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d1a1 : loopne 0x12d1b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d1a0 : loopne 0x12d1b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2f1 : loopne 0x12d308 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d2f0 : loopne 0x12d309 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d441 : loopne 0x12d458 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d440 : loopne 0x12d459 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d591 : loopne 0x12d5a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d590 : loopne 0x12d5a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d6e1 : loopne 0x12d6f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d6e0 : loopne 0x12d6f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d82f : loopne 0x12d846 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d82e : loopne 0x12d847 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d981 : loopne 0x12d998 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012d980 : loopne 0x12d999 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dad1 : loopne 0x12dae8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dad0 : loopne 0x12dae9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dc21 : loopne 0x12dc38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dc20 : loopne 0x12dc39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dd71 : loopne 0x12dd88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dd70 : loopne 0x12dd89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dec1 : loopne 0x12ded8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012dec0 : loopne 0x12ded9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e011 : loopne 0x12e028 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e010 : loopne 0x12e029 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e161 : loopne 0x12e178 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012e160 : loopne 0x12e179 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f8d1 : loopne 0x12f8e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012f8d0 : loopne 0x12f8e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fa21 : loopne 0x12fa38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fa20 : loopne 0x12fa39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fb71 : loopne 0x12fb88 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fb70 : loopne 0x12fb89 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fcc1 : loopne 0x12fcd8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fcc0 : loopne 0x12fcd9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fe11 : loopne 0x12fe28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012fe10 : loopne 0x12fe29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ff61 : loopne 0x12ff78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012ff60 : loopne 0x12ff79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001300b1 : loopne 0x1300c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001300b0 : loopne 0x1300c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001301ff : loopne 0x130216 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001301fe : loopne 0x130217 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130351 : loopne 0x130368 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130350 : loopne 0x130369 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001304a1 : loopne 0x1304b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001304a0 : loopne 0x1304b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001305f1 : loopne 0x130608 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001305f0 : loopne 0x130609 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130741 : loopne 0x130758 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130740 : loopne 0x130759 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130891 : loopne 0x1308a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130890 : loopne 0x1308a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001309e1 : loopne 0x1309f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001309e0 : loopne 0x1309f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130b31 : loopne 0x130b48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000130b30 : loopne 0x130b49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000159478 : loopne 0x15941b ; in eax, dx ; jmp rax
0x000000000015947c : loopne 0x15941f ; in eax, dx ; jmp rax
0x0000000000159480 : loopne 0x159423 ; in eax, dx ; jmp rax
0x000000000015aa14 : loopne 0x15a9f4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000015eb50 : loopne 0x15eb6c ; jmp qword ptr [rax]
0x000000000015eb60 : loopne 0x15eb81 ; jmp qword ptr [rax]
0x000000000015eb70 : loopne 0x15eb96 ; jmp qword ptr [rax]
0x000000000015eb80 : loopne 0x15ebab ; jmp qword ptr [rax]
0x000000000015eca8 : loopne 0x15ec6c ; jmp rax
0x000000000015ecac : loopne 0x15ec77 ; push qword ptr [rax - 0x2f000d3e] ; ret 0xfff2
0x000000000015ee15 : loopne 0x15ee16 ; call qword ptr [rax]
0x000000000015eec4 : loopne 0x15ee55 ; inc dword ptr [rax] ; mov ebx, esi ; jmp qword ptr [rax]
0x000000000015eee4 : loopne 0x15ee76 ; inc dword ptr [rax] ; mov dh, bl ; jmp qword ptr [rax]
0x000000000015ef04 : loopne 0x15ee97 ; inc dword ptr [rax] ; mov esi, ebx ; jmp qword ptr [rax]
0x000000000015ef38 : loopne 0x15eec9 ; call qword ptr [rax]
0x000000000015ef88 : loopne 0x15ef1e ; inc dword ptr [rax] ; mov dr0, ebx ; call qword ptr [rax]
0x000000000015f0ac : loopne 0x15f052 ; inc dword ptr [rax] ; sahf ; jmp qword ptr [rax]
0x000000000015f0e4 : loopne 0x15f088 ; call qword ptr [rax]
0x000000000016ce50 : loopne 0x16ce7e ; sti ; call rax
0x000000000016d464 : loopne 0x16d481 ; cld ; jmp rax
0x000000000016d468 : loopne 0x16d487 ; cld ; jmp rax
0x000000000016d4e4 : loopne 0x16d500 ; cld ; jmp rax
0x000000000016d4e8 : loopne 0x16d506 ; cld ; jmp rax
0x000000000016d4ec : loopne 0x16d510 ; cld ; push qword ptr [rax + 0xe] ; cld ; jmp qword ptr [rax]
0x000000000016d54c : loopne 0x16d55c ; cld ; jmp qword ptr [rax]
0x000000000016d6bc : loopne 0x16d6fc ; cld ; call rax
0x000000000016e18c : loopne 0x16e14c ; cld ; push qword ptr [rsi - 0x49] ; cld ; jmp rsi
0x0000000000172085 : loopne 0x17208e ; add byte ptr [rsp - 0xa], ah ; call rsp
0x0000000000177a80 : loopne 0x177a5d ; jmp 0x177a86
0x000000000017831d : loopne 0x17830c ; jmp qword ptr [rdx]
0x000000000017a860 : loopne 0x17a8a0 ; in eax, dx ; call qword ptr [rdi]
0x000000000017bae0 : loopne 0x17babe ; out dx, al ; call qword ptr [rdx]
0x000000000017bfcc : loopne 0x17bf8b ; out dx, al ; jmp qword ptr [rdx]
0x000000000017c0a1 : loopne 0x17c093 ; jmp qword ptr [rax]
0x000000000017c119 : loopne 0x17c10b ; call qword ptr [rax]
0x000000000017e695 : loopne 0x17e687 ; jmp qword ptr [rdx]
0x000000000018194c : loopne 0x181981 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000182f00 : loopne 0x182e99 ; out dx, eax ; call qword ptr [rdi]
0x000000000018355d : loopne 0x183563 ; add byte ptr [rcx], ah ; ret
0x00000000001835a5 : loopne 0x1835ab ; add al, bh ; ret 0xffef
0x0000000000183710 : loopne 0x18369e ; cld ; call qword ptr [rdx]
0x0000000000183d29 : loopne 0x183d1c ; jmp qword ptr [rax]
0x0000000000184330 : loopne 0x18434d ; cli ; call qword ptr [rax]
0x0000000000186835 : loopne 0x18682a ; jmp qword ptr [rdx]
0x000000000018687d : loopne 0x186872 ; jmp qword ptr [rdx]
0x00000000001868c5 : loopne 0x1868ba ; jmp qword ptr [rdx]
0x000000000018693d : loopne 0x186932 ; jmp qword ptr [rdx]
0x0000000000186985 : loopne 0x18697a ; jmp qword ptr [rdx]
0x000000000018b880 : loopne 0x18b823 ; hlt ; call qword ptr [rax]
0x000000000018c170 : loopne 0x18c167 ; hlt ; jmp qword ptr [rsi]
0x000000000019414c : loopne 0x19410a ; cmc ; jmp qword ptr [rdx]
0x000000000002e3a3 : loopne 0x2e3b2 ; movzx eax, ax ; ret
0x000000000002e3e3 : loopne 0x2e3ec ; movzx eax, ax ; ret
0x000000000002e483 : loopne 0x2e48e ; movzx eax, ax ; ret
0x000000000002e563 : loopne 0x2e568 ; ret
0x000000000002e5dc : loopne 0x2e5e1 ; ret
0x000000000002e5ec : loopne 0x2e5fb ; movzx eax, ax ; ret
0x000000000002e62c : loopne 0x2e635 ; movzx eax, ax ; ret
0x000000000002e5b3 : loopne 0x2e636 ; ret
0x000000000002e6cc : loopne 0x2e6d7 ; movzx eax, ax ; ret
0x0000000000034aa5 : loopne 0x34ab1 ; ret
0x0000000000035b34 : loopne 0x35b84 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000441dd : loopne 0x441e6 ; sub eax, 1 ; ret
0x0000000000044516 : loopne 0x44562 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000068cff : loopne 0x68d4d ; mov dword ptr [rdi], edx ; ret
0x000000000006a0bf : loopne 0x6a0c5 ; add byte ptr [rax], al ; jmp rax
0x000000000006a0eb : loopne 0x6a0f1 ; add byte ptr [rax], al ; call rax
0x000000000006a11d : loopne 0x6a123 ; add byte ptr [rax], al ; call rax
0x000000000006a15f : loopne 0x6a165 ; add byte ptr [rax], al ; jmp rax
0x00000000000716d9 : loopne 0x7173f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000724f6 : loopne 0x7255c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000072567 : loopne 0x725c9 ; pop rbp ; pop r12 ; ret
0x0000000000072c19 : loopne 0x72c7f ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073526 : loopne 0x7352b ; ret
0x0000000000073536 : loopne 0x7353b ; ret
0x000000000007466a : loopne 0x746b4 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000074718 : loopne 0x74762 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076afd : loopne 0x76b61 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000779e8 : loopne 0x77a4e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f178 : loopne 0x7f1de ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000007f34d : loopne 0x7f3b3 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000856df : loopne 0x856d6 ; ret
0x000000000008aecc : loopne 0x8aede ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000008ca3c : loopne 0x8ca82 ; pop rsp ; ret
0x000000000008ca37 : loopne 0x8ca9c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000097b5c : loopne 0x97b66 ; add byte ptr [rax], al ; ret
0x000000000009b94a : loopne 0x9b952 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000009bbcd : loopne 0x9bbe7 ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x000000000009bc0d : loopne 0x9bc27 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a8f44 : loopne 0xa8f8a ; pop rsp ; ret
0x00000000000a9016 : loopne 0xa905e ; pop rsp ; pop r13 ; ret
0x00000000000ab84c : loopne 0xab896 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000ab838 : loopne 0xab89e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b869c : loopne 0xb86d1 ; add byte ptr [rax - 0x77], cl ; ret 0xbae9
0x00000000000bb230 : loopne 0xbb296 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000c02e8 : loopne 0xc0275 ; ret
0x00000000000c21d2 : loopne 0xc21d9 ; pop r15 ; ret
0x00000000000c2215 : loopne 0xc2220 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000c3602 : loopne 0xc3609 ; pop rbp ; ret
0x00000000000c36e9 : loopne 0xc36f4 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000c4caf : loopne 0xc4cba ; pop rbx ; sub eax, 1 ; pop rbp ; ret
0x00000000000d2d55 : loopne 0xd2d68 ; ret
0x00000000000da97c : loopne 0xda986 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000dbde6 : loopne 0xdbe4a ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e1758 : loopne 0xe17be ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e210c : loopne 0xe216e ; pop rbp ; pop r12 ; ret
0x00000000000e56ee : loopne 0xe567b ; ret
0x00000000000e74ee : loopne 0xe7554 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eb2b0 : loopne 0xeb2bc ; nop word ptr [rax + rax] ; ret
0x00000000000eb2d2 : loopne 0xeb2e1 ; movzx eax, ax ; ret
0x00000000000eb350 : loopne 0xeb35c ; nop word ptr [rax + rax] ; ret
0x00000000000eb3f0 : loopne 0xeb3fc ; nop word ptr [rax + rax] ; ret
0x00000000000eb412 : loopne 0xeb417 ; ret
0x00000000000eb490 : loopne 0xeb49c ; nop word ptr [rax + rax] ; ret
0x00000000000eb4b2 : loopne 0xeb4bb ; movzx eax, ax ; ret
0x00000000000eb530 : loopne 0xeb53c ; nop word ptr [rax + rax] ; ret
0x00000000000eb5c0 : loopne 0xeb5cc ; nop word ptr [rax + rax] ; ret
0x00000000000eb660 : loopne 0xeb66c ; nop word ptr [rax + rax] ; ret
0x00000000000eb700 : loopne 0xeb70c ; nop word ptr [rax + rax] ; ret
0x00000000000eb7a0 : loopne 0xeb7ac ; nop word ptr [rax + rax] ; ret
0x00000000000eb7c2 : loopne 0xeb7cd ; movzx eax, ax ; ret
0x00000000000eb840 : loopne 0xeb84c ; nop word ptr [rax + rax] ; ret
0x00000000000eb8db : loopne 0xeb8e4 ; nop dword ptr [rax] ; ret
0x00000000000eb980 : loopne 0xeb98c ; nop word ptr [rax + rax] ; ret
0x00000000000ebb5a : loopne 0xebb64 ; nop dword ptr [rax] ; ret
0x00000000000ebcb2 : loopne 0xebcbc ; nop dword ptr [rax] ; ret
0x00000000000ebccb : loopne 0xebcda ; movzx eax, ax ; ret
0x00000000000ebd42 : loopne 0xebd4c ; nop dword ptr [rax] ; ret
0x00000000000ebdd2 : loopne 0xebddc ; nop dword ptr [rax] ; ret
0x00000000000ebdeb : loopne 0xebdf0 ; ret
0x00000000000ebe52 : loopne 0xebe5c ; nop dword ptr [rax] ; ret
0x00000000000ebe6b : loopne 0xebe74 ; movzx eax, ax ; ret
0x00000000000ebee2 : loopne 0xebeec ; nop dword ptr [rax] ; ret
0x00000000000ebf62 : loopne 0xebf6c ; nop dword ptr [rax] ; ret
0x00000000000ebff2 : loopne 0xebffc ; nop dword ptr [rax] ; ret
0x00000000000ec082 : loopne 0xec08c ; nop dword ptr [rax] ; ret
0x00000000000ec112 : loopne 0xec11c ; nop dword ptr [rax] ; ret
0x00000000000ec12b : loopne 0xec136 ; movzx eax, ax ; ret
0x00000000000ec1a2 : loopne 0xec1ac ; nop dword ptr [rax] ; ret
0x00000000000ec2c2 : loopne 0xec2cc ; nop dword ptr [rax] ; ret
0x00000000000ec47a : loopne 0xec484 ; nop dword ptr [rax] ; ret
0x00000000000f25b7 : loopne 0xf25bc ; dec dword ptr [rcx] ; ret
0x00000000000f453b : loopne 0xf4540 ; ret
0x00000000000f4c68 : loopne 0xf4c7d ; cmp eax, 4 ; je 0xf4c77 ; ret
0x00000000000f4db7 : loopne 0xf4dc9 ; pop r12 ; ret
0x00000000000f8db0 : loopne 0xf8dc0 ; or eax, esi ; bswap eax ; ret
0x00000000000f8dc1 : loopne 0xf8ddc ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x000000000010ecdf : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000016f3ad : mov ah, 0 ; add byte ptr [rbp + 0x52], bh ; in eax, dx ; call rsp
0x000000000015a42a : mov ah, 0x13 ; ret
0x000000000016f5f0 : mov ah, 0x1d ; out dx, al ; call rsp
0x0000000000042268 : mov ah, 0x24 ; rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x000000000007a156 : mov ah, 0x32 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000174490 : mov ah, 0x42 ; cli ; jmp rsp
0x0000000000170974 : mov ah, 0x50 ; add dword ptr [rax], eax ; xor al, 0xa ; int1 ; call rsp
0x000000000016ed68 : mov ah, 0x67 ; in al, dx ; jmp rsp
0x000000000016d8f0 : mov ah, 0x6e ; cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x0000000000174e48 : mov ah, 0x75 ; sti ; call rsp
0x0000000000173a54 : mov ah, 0x76 ; add al, byte ptr [rax] ; in al, 8 ; stc ; jmp rsp
0x00000000001712dc : mov ah, 0x8a ; add dword ptr [rax], eax ; xor al, 0xd9 ; jmp rsp
0x000000000016f6f0 : mov ah, 0x8a ; out dx, eax ; jmp rsp
0x0000000000171394 : mov ah, 0x8d ; add dword ptr [rax], eax ; mov ah, 0xfc ; call rsp
0x0000000000171108 : mov ah, 0x90 ; jmp rsp
0x000000000016ee0c : mov ah, 0x94 ; add byte ptr [rax], al ; xor al, 0x6f ; in al, dx ; call rsp
0x000000000016dddc : mov ah, 0x96 ; cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016ef0c : mov ah, 0x98 ; add byte ptr [rax], al ; jp 0x16ef06 ; jmp rsp
0x000000000016f0c8 : mov ah, 0x9d ; in al, dx ; jmp rsp
0x000000000015a8d0 : mov ah, 0xa5 ; ret
0x0000000000174114 : mov ah, 0xa8 ; add al, byte ptr [rax] ; and al, 0xd9 ; stc ; call rsp
0x0000000000174184 : mov ah, 0xab ; add al, byte ptr [rax] ; add al, 0xe2 ; stc ; jmp rsp
0x0000000000171210 : mov ah, 0xbc ; jmp rsp
0x000000000017c5ac : mov ah, 0xbc ; out dx, al ; jmp qword ptr [rdx]
0x000000000016e2d4 : mov ah, 0xbd ; cld ; inc dword ptr [rbp + rdi*4 - 4] ; call rsp
0x0000000000174e80 : mov ah, 0xc ; cld ; jmp rsp
0x0000000000171e50 : mov ah, 0xc2 ; idiv bh ; fadd dword ptr [rcx] ; add ah, al ; ret 0xfff6
0x0000000000174a18 : mov ah, 0xc3 ; cli ; push qword ptr [rcx + 2] ; add ah, dl ; ret
0x000000000017458c : mov ah, 0xc5 ; add al, byte ptr [rax] ; add al, 0x54 ; cli ; jmp rsp
0x0000000000182264 : mov ah, 0xcd ; add byte ptr [rax], al ; ret 0xffef
0x0000000000170ca0 : mov ah, 0xd7 ; int1 ; jmp rsp
0x000000000003e598 : mov ah, 0xe7 ; adc al, byte ptr [rax] ; jmp 0x3e565
0x000000000019394c : mov ah, 0xe8 ; add dword ptr [rax], eax ; and byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x00000000000681fa : mov ah, 0xf ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000193ef5 : mov ah, 0xf5 ; jmp qword ptr [rdx]
0x000000000016e399 : mov ah, 0xfc ; call rax
0x0000000000171398 : mov ah, 0xfc ; call rsp
0x000000000016e419 : mov ah, 0xfc ; jmp qword ptr [rdx + 0x22fffcb3]
0x000000000016d025 : mov ah, 0xfd ; jmp qword ptr [rsi + 0x26fffdb4]
0x000000000016d029 : mov ah, 0xfd ; jmp qword ptr [rsi]
0x000000000019ebb4 : mov ah, 5 ; add byte ptr [rax], al ; ret
0x0000000000171030 : mov ah, 5 ; call rsp
0x0000000000174290 : mov ah, 5 ; cli ; call rsp
0x00000000000ea45f : mov ah, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000016dec5 : mov ah, bh ; call qword ptr [rax]
0x000000000016e0c5 : mov ah, bh ; jmp qword ptr [rax + 0x10fffc87]
0x000000000016df45 : mov ah, bh ; jmp rdx
0x000000000015a224 : mov ah, bl ; push rsi ; ret
0x00000000000f5960 : mov al, 0 ; add byte ptr [rax], al ; call 0x81c16
0x00000000001988a0 : mov al, 0x19 ; idiv edi ; ret 2
0x000000000017e9a0 : mov al, 0x1e ; out dx, eax ; jmp rbx
0x0000000000189600 : mov al, 0x21 ; jmp qword ptr [rdi]
0x000000000015ece4 : mov al, 0x22 ; dec eax ; and dh, bl ; jmp rax
0x000000000010be0c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000010bdc5 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000189680 : mov al, 0x23 ; jmp rdx
0x000000000014c7a9 : mov al, 0x25 ; add byte ptr [rbp + 0x1e], dh ; ret
0x000000000017fc00 : mov al, 0x31 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000007a5b8 : mov al, 0x32 ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000111d89 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000bb89e : mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000111529 : mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000116f48 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000001763f0 : mov al, 0x57 ; std ; jmp qword ptr [rax]
0x000000000014c95c : mov al, 0x5b ; in eax, dx ; jmp qword ptr [rax]
0x000000000016d9cc : mov al, 0x61 ; cld ; jmp qword ptr [rsi]
0x000000000016e0d0 : mov al, 0x69 ; cld ; call rax
0x000000000016d77c : mov al, 0x6d ; cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x000000000016d954 : mov al, 0x71 ; cld ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x000000000015ec10 : mov al, 0x74 ; inc eax ; jbe 0x15ec10 ; call rax
0x000000000018e7a0 : mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x000000000015ee9c : mov al, 0x82 ; call rax
0x000000000015eebc : mov al, 0x83 ; inc eax ; mov bl, dh ; jmp rax
0x000000000016e088 : mov al, 0x87 ; cld ; jmp qword ptr [rax]
0x000000000015ed40 : mov al, 0x89 ; cld ; call rax
0x000000000015ef34 : mov al, 0x8c ; jmp rax
0x000000000015ed60 : mov al, 0x92 ; cld ; call rax
0x000000000016de80 : mov al, 0x92 ; cld ; inc dword ptr [rax - 0x6e] ; cld ; call rax
0x000000000016dc68 : mov al, 0x95 ; cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000018efa0 : mov al, 0x97 ; cmc ; jmp qword ptr [rcx]
0x000000000018f270 : mov al, 0x9a ; cmc ; jmp qword ptr [rcx]
0x000000000016cf84 : mov al, 0xa2 ; sti ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000015f180 : mov al, 0xa4 ; call rax
0x000000000015f1a0 : mov al, 0xa5 ; call rax
0x000000000015f1c4 : mov al, 0xa5 ; inc eax ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000000000016e378 : mov al, 0xb9 ; cld ; inc dword ptr [rax - 0x47] ; cld ; call rax
0x000000000016e160 : mov al, 0xbc ; cld ; inc dword ptr [rax - 0x44] ; cld ; call rax
0x000000000015ecb0 : mov al, 0xc2 ; call rax
0x000000000019528c : mov al, 0xcf ; cmc ; jmp qword ptr [rdx]
0x0000000000195734 : mov al, 0xd0 ; cmc ; jmp qword ptr [rdx]
0x000000000015eb0c : mov al, 0xe3 ; int1 ; call qword ptr [rax]
0x00000000000ee25d : mov al, 0xeb ; movsd dword ptr [rdi], dword ptr [rsi] ; mov edx, eax ; jmp 0xee258
0x000000000015c6d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000000e2093 : mov al, 0xf3 ; ret
0x000000000018fb01 : mov al, 0xf5 ; call qword ptr [rdx]
0x000000000018c370 : mov al, 0xf5 ; hlt ; jmp qword ptr [rdi]
0x0000000000172ab1 : mov al, 0xf7 ; call rsp
0x000000000016e3b9 : mov al, 0xfc ; call rax
0x000000000016e439 : mov al, 0xfc ; jmp qword ptr [rdx + 0x22fffcaf]
0x000000000016e435 : mov al, 0xfc ; jmp qword ptr [rdx]
0x000000000016e5b5 : mov al, 0xfc ; jmp rax
0x000000000016cfb1 : mov al, 0xfd ; inc dword ptr [rdx] ; mov cl, 0xfd ; call rdx
0x0000000000178de0 : mov al, 0xfd ; jmp 0x178de6
0x000000000016cfc1 : mov al, 0xfd ; jmp qword ptr [rax]
0x00000000001166d7 : mov al, 1 ; ret
0x00000000001861b0 : mov al, 2 ; call qword ptr [rax]
0x0000000000124301 : mov al, 3 ; add byte ptr [rax + 0x63], cl ; ret 0xf66
0x000000000019c0c0 : mov al, 3 ; sti ; jmp qword ptr [rdx]
0x0000000000097b8c : mov al, 4 ; add byte ptr [rax], al ; ret
0x000000000009778c : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000069fe8 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000106fe1 : mov al, byte ptr [rbx - 0x75] ; adc r8d, dword ptr [rbx + rax*4] ; ret
0x00000000000ebc39 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x0000000000093cbb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000093ce9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000093d6d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000001712dd : mov al, byte ptr [rcx] ; add byte ptr [rcx + rbx*8], dh ; jmp rsp
0x0000000000143fe0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000093c95 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000170429 : mov al, dh ; call rsp
0x00000000000bb50c : mov ax, 0xfde8 ; jne 0xbb4e2 ; ret
0x0000000000093ca5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000016f3fd : mov bh, 0 ; add byte ptr [rsp + rdx*2], al ; in eax, dx ; call rsp
0x00000000001348f1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000a9670 : mov bh, 0x2f ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000079e2e : mov bh, 0x32 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002b13e : mov bh, 0x37 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002171d : mov bh, 0x3a ; cmp byte ptr [rax], al ; pop r12 ; ret
0x0000000000072405 : mov bh, 0x3d ; std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000b6427 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000ab5fc : mov bh, 0x47 ; adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000033204 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x0000000000149958 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000abf1c : mov bh, 0x55 ; ret 0xf41
0x00000000000c5243 : mov bh, 0x79 ; ret 0x6348
0x00000000000abac7 : mov bh, 0x7d ; ret 0xb70f
0x0000000000002bc4 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x000000000015b704 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002e3a6 : mov bh, 0xc0 ; ret
0x0000000000177319 : mov bh, 0xeb ; call qword ptr [rcx]
0x000000000017ae99 : mov bh, 0xed ; call qword ptr [rax]
0x000000000017bb45 : mov bh, 0xee ; jmp qword ptr [rdx]
0x00000000001711d1 : mov bh, 0xf3 ; jmp rsp
0x000000000018bb29 : mov bh, 0xf4 ; jmp rdx
0x00000000000f8dc4 : mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000003748 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x3732 ; ret 0x975
0x000000000016e211 : mov bh, 0xfc ; call rdx
0x000000000016e38d : mov bh, 0xfc ; jmp qword ptr [rax]
0x000000000016e191 : mov bh, 0xfc ; jmp rsi
0x000000000016e18d : mov bh, 0xfc ; push qword ptr [rsi - 0x49] ; cld ; jmp rsi
0x000000000016d03d : mov bh, 0xfd ; call rsi
0x00000000000e9c33 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e39f : mov bh, 4 ; js 0x2e32f ; loopne 0x2e3b6 ; movzx eax, ax ; ret
0x000000000002e3df : mov bh, 4 ; js 0x2e36f ; loopne 0x2e3f0 ; movzx eax, ax ; ret
0x000000000002e47f : mov bh, 4 ; js 0x2e40f ; loopne 0x2e492 ; movzx eax, ax ; ret
0x000000000002e55f : mov bh, 4 ; js 0x2e4ec ; loopne 0x2e56c ; ret
0x000000000002e5d8 : mov bh, 4 ; js 0x2e565 ; loopne 0x2e5e5 ; ret
0x000000000002e5e8 : mov bh, 4 ; js 0x2e578 ; loopne 0x2e5ff ; movzx eax, ax ; ret
0x000000000002e628 : mov bh, 4 ; js 0x2e5b8 ; loopne 0x2e639 ; movzx eax, ax ; ret
0x000000000002e6c8 : mov bh, 4 ; js 0x2e658 ; loopne 0x2e6db ; movzx eax, ax ; ret
0x00000000000eb2ce : mov bh, 4 ; js 0xeb25e ; loopne 0xeb2e5 ; movzx eax, ax ; ret
0x00000000000eb40e : mov bh, 4 ; js 0xeb39b ; loopne 0xeb41b ; ret
0x00000000000eb4ae : mov bh, 4 ; js 0xeb43e ; loopne 0xeb4bf ; movzx eax, ax ; ret
0x00000000000eb7be : mov bh, 4 ; js 0xeb74e ; loopne 0xeb7d1 ; movzx eax, ax ; ret
0x00000000000ebcc7 : mov bh, 4 ; js 0xebc57 ; loopne 0xebcde ; movzx eax, ax ; ret
0x00000000000ebde7 : mov bh, 4 ; js 0xebd74 ; loopne 0xebdf4 ; ret
0x00000000000ebe67 : mov bh, 4 ; js 0xebdf7 ; loopne 0xebe78 ; movzx eax, ax ; ret
0x00000000000ec127 : mov bh, 4 ; js 0xec0b7 ; loopne 0xec13a ; movzx eax, ax ; ret
0x000000000011bc9b : mov bh, 5 ; jmp rsp
0x000000000015ce13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000da921 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016e075 : mov bh, ah ; call rax
0x000000000016dff5 : mov bh, ah ; jmp rsp
0x000000000015ed45 : mov bh, ah ; push rax ; mov edi, esp ; call qword ptr [rax]
0x0000000000177608 : mov bh, cl ; jmp 0x17760e
0x0000000000172779 : mov bh, dh ; call rsp
0x000000000016f36d : mov bl, 0 ; add ah, al ; in eax, dx ; call rsp
0x000000000014b24e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000e9c7c : mov bl, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000c92db : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x000000000015c7e3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000c91dc : mov bl, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000007ac01 : mov bl, 0xa1 ; xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000017cd74 : mov bl, 0xc4 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194fc4 : mov bl, 0xca ; cmc ; jmp qword ptr [rdx]
0x0000000000001b0f : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000008b991 : mov bl, 0xf ; test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000003aa1 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000172ae1 : mov bl, 0xf7 ; jmp rsp
0x000000000016e3a1 : mov bl, 0xfc ; call rax
0x000000000016e421 : mov bl, 0xfc ; jmp qword ptr [rdx + 0x22fffcb2]
0x000000000016e41d : mov bl, 0xfc ; jmp qword ptr [rdx]
0x000000000016e59d : mov bl, 0xfc ; jmp rax
0x0000000000196394 : mov bl, 0xfd ; cmc ; jmp qword ptr [rdx]
0x000000000016d021 : mov bl, 0xfd ; jmp qword ptr [rsi]
0x00000000001742bd : mov bl, 2 ; add byte ptr [rsp + rcx], ah ; cli ; call rsp
0x00000000001946c4 : mov bl, al ; cmc ; jmp qword ptr [rdx]
0x000000000015eec5 : mov bl, dh ; inc dword ptr [rax] ; mov ebx, esi ; jmp qword ptr [rax]
0x000000000015eec1 : mov bl, dh ; jmp rax
0x0000000000091b4d : mov byte ptr [r10 + 1], 0 ; ret
0x00000000000f60ed : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x0000000000117f35 : mov byte ptr [r8 + 1], r9b ; ret
0x0000000000041bef : mov byte ptr [r8 + rdx], 0 ; ret
0x000000000002f26b : mov byte ptr [r8 - 0x77], r9b ; ret
0x00000000000e56ea : mov byte ptr [r9 + r15 - 0x20], 0x89 ; ret
0x00000000000e3185 : mov byte ptr [r9 - 1], 0 ; ret
0x0000000000034854 : mov byte ptr [rax + 0x12], dl ; add byte ptr [rdi], cl ; push rsp ; ret
0x000000000002d36c : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000d2339 : mov byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000117f36 : mov byte ptr [rax + 1], cl ; ret
0x00000000000aaccc : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000045f3e : mov byte ptr [rax + 8], 0 ; ret
0x00000000001104ec : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011d3fd : mov byte ptr [rax + rcx], dl ; ret
0x0000000000041bf0 : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000077dac : mov byte ptr [rax + rsi], bh ; ret
0x0000000000077dab : mov byte ptr [rax + rsi], dil ; ret
0x000000000002f26c : mov byte ptr [rax - 0x77], cl ; ret
0x00000000000351c9 : mov byte ptr [rax - 0x77], cl ; ret 0xba41
0x0000000000090d31 : mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f0bd6 : mov byte ptr [rax], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f0bbc : mov byte ptr [rax], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e633e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035644 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001142e7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000968e2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000103ffb : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035cbf : mov byte ptr [rbp - 0x12], dh ; mov eax, 1 ; ret
0x00000000000651fe : mov byte ptr [rbp - 0x1a1], 1 ; jmp 0x61420
0x00000000001032b3 : mov byte ptr [rbx + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f60ee : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x000000000018d6e8 : mov byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000006b564 : mov byte ptr [rbx], 0 ; add bl, dh ; ret
0x00000000000e1e86 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000115e45 : mov byte ptr [rbx], al ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000189528 : mov byte ptr [rbx], bl ; jmp qword ptr [rcx]
0x00000000000edff4 : mov byte ptr [rbx], ch ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000002f5e : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000c2247 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0xf631
0x00000000000f9008 : mov byte ptr [rcx + 0xf], 0xb6 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x0000000000141ca3 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000141cc2 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000141d03 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000090fe3 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x00000000000e56eb : mov byte ptr [rcx + rdi - 0x20], 0x89 ; ret
0x00000000000e3186 : mov byte ptr [rcx - 1], 0 ; ret
0x0000000000091cec : mov byte ptr [rcx], 0 ; cmp rcx, rdx ; jne 0x91cf1 ; ret
0x0000000000171b75 : mov byte ptr [rcx], 0 ; in al, -0x48 ; cmc ; call rsp
0x0000000000091414 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000091340 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000103332 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000002b997 : mov byte ptr [rcx], 0x83 ; ret
0x00000000000ce118 : mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000091d27 : mov byte ptr [rcx], al ; jne 0x91d15 ; ret
0x0000000000184158 : mov byte ptr [rcx], al ; ret
0x000000000006d65a : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x000000000006d659 : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x0000000000141c80 : mov byte ptr [rcx], dl ; ret
0x0000000000091d26 : mov byte ptr [rcx], r8b ; jne 0x91d16 ; ret
0x000000000009af5a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000994fb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000097d1b : mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009af6b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000986b8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000097048 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009af70 : mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009af92 : mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afb0 : mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009afd0 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009872e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009709e : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000099581 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000097d71 : mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009aff1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009aff6 : mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009b012 : mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009b032 : mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009b052 : mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000099603 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000097df3 : mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009b073 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000987b0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000097120 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009b078 : mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009b09a : mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0b8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009b0d8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009b0f4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009b114 : mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009b134 : mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009b154 : mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000097ef5 : mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009b175 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009b17a : mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009b1ca : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009aea0 : mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aebe : mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009aede : mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009af00 : mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009af20 : mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009af40 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009add6 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000103bf2 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000103bf1 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000910c3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000091023 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009ade8 : mov byte ptr [rdi + 2], ch ; ret
0x0000000000098566 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096f66 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000099389 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000097c39 : mov byte ptr [rdi + 2], dl ; ret
0x000000000009adf9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009adfe : mov byte ptr [rdi + 3], ch ; ret
0x00000000000910e2 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000091042 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009ae16 : mov byte ptr [rdi + 4], ch ; ret
0x0000000000098582 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096f82 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000993b7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097c57 : mov byte ptr [rdi + 4], dl ; ret
0x000000000009ae27 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae2c : mov byte ptr [rdi + 5], ch ; ret
0x0000000000091069 : mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ae3e : mov byte ptr [rdi + 6], ch ; ret
0x000000000009ae5c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000c1f30 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000c1ef6 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000c1f60 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000c1f87 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000c1fd0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000c1fbd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000c1f20 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000c1f00 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009ae68 : mov byte ptr [rdi + 8], ch ; ret
0x0000000000096fc3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000099409 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000097c99 : mov byte ptr [rdi + 8], dl ; ret
0x000000000009ae79 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009ae7e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000103bcb : mov byte ptr [rdi + rsi], 0 ; ret
0x000000000018d928 : mov byte ptr [rdi - 0xb], al ; jmp rdx
0x000000000010dd4e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10dd49 ; ret
0x0000000000090fbe : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012bb5b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000090ff0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f573 : mov byte ptr [rdi], 0 ; ret
0x00000000000359e8 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000c1f50 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000f5deb : mov byte ptr [rdi], al ; jne 0xf5ddf ; mov rax, rdi ; ret
0x00000000000f5fab : mov byte ptr [rdi], al ; jne 0xf5f9f ; mov rax, r10 ; ret
0x00000000000c1fa9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000009adc2 : mov byte ptr [rdi], ch ; ret
0x0000000000063a8a : mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff0], esp ; ret 0x348
0x000000000006282e : mov byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x76fffffd], esi ; ret 0x348
0x00000000000629a7 : mov byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x76fffffe], ebx ; ret 0x348
0x0000000000090f29 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x0000000000098540 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000096f40 : mov byte ptr [rdi], dh ; ret
0x0000000000099362 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097c12 : mov byte ptr [rdi], dl ; ret
0x000000000009add2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000096a6a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x0000000000091b4e : mov byte ptr [rdx + 1], 0 ; ret
0x0000000000144009 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000093cbe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000144037 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000093cec : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000096a00 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000093d70 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x00000000001155b1 : mov byte ptr [rdx + rdi], 0 ; ret
0x0000000000186ce8 : mov byte ptr [rdx + rsi*8], bh ; call qword ptr [rcx]
0x00000000000fd81a : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000e7301 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x0000000000143fe2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000093c97 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000081794 : mov byte ptr [rdx], ch ; or al, byte ptr [rax] ; ret
0x000000000015f9d4 : mov byte ptr [rdx], cl ; cmc ; call qword ptr [rsi]
0x00000000000ffc54 : mov byte ptr [rip + 0x2a9b8d], 1 ; pop rbx ; ret
0x000000000002d5c8 : mov byte ptr [rip + 0x3794ef], dl ; ret
0x000000000000245c : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000008bd14 : mov byte ptr [rsi + rdx + 1], al ; jg 0x8bd07 ; ret
0x000000000018b468 : mov byte ptr [rsi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000000460a3 : mov byte ptr [rsi], al ; jne 0x46087 ; mov rax, rsi ; ret
0x000000000004601f : mov byte ptr [rsi], dl ; jne 0x4600f ; mov rax, rsi ; ret
0x00000000000fb294 : mov ch, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015a222 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x000000000015b563 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000179644 : mov ch, 0x63 ; in al, dx ; jmp qword ptr [rdx]
0x00000000000c4682 : mov ch, 0x83 ; ret 0x8901
0x00000000000a9732 : mov ch, 0x89 ; ret 0xe283
0x000000000015c8ff : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001928d4 : mov ch, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x000000000015d2aa : mov ch, 0xab ; ret
0x0000000000003747 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3733 ; ret 0x975
0x000000000019457c : mov ch, 0xc0 ; cmc ; jmp qword ptr [rdx]
0x0000000000083907 : mov ch, 0xc4 ; or eax, dword ptr [rax] ; ret
0x00000000000680aa : mov ch, 0xf ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000017f2ec : mov ch, 0xf3 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196829 : mov ch, 0xf6 ; call rdx
0x0000000000196304 : mov ch, 0xfd ; cmc ; jmp qword ptr [rdx]
0x000000000016cff1 : mov ch, 0xfd ; inc dword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000016d02d : mov ch, 0xfd ; jmp qword ptr [rsi + 0x26fffdb5]
0x000000000016d031 : mov ch, 0xfd ; jmp qword ptr [rsi]
0x000000000019f288 : mov ch, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000148376 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f6f1 : mov ch, bh ; jmp rsp
0x000000000018ece9 : mov ch, dh ; jmp qword ptr [rcx]
0x0000000000171b31 : mov ch, dh ; push rsp ; ret
0x0000000000084edb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000003b54 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000fc183 : mov cl, 0x35 ; call rbx
0x000000000006b390 : mov cl, 0x35 ; stosb byte ptr [rdi], al ; ret
0x00000000000f4e2b : mov cl, 0x3d ; xchg dword ptr [rdi + 0x2b], edx ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000001824d4 : mov cl, 0x63 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000002bc5 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x0000000000023113 : mov cl, 0x72 ; cmp byte ptr [rax], al ; ret
0x000000000011b243 : mov cl, 0x78 ; sub byte ptr [rax], al ; pop r12 ; jmp rax
0x000000000016d1cc : mov cl, 0xc7 ; std ; call qword ptr [rax]
0x000000000016d11c : mov cl, 0xc7 ; std ; call rcx
0x000000000016d18c : mov cl, 0xc7 ; std ; jmp qword ptr [rdi]
0x000000000017efbc : mov cl, 0xf2 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193ca5 : mov cl, 0xf5 ; jmp qword ptr [rdx]
0x00000000001736c1 : mov cl, 0xf8 ; jmp rsp
0x000000000016e3b1 : mov cl, 0xfc ; call rax
0x000000000016e431 : mov cl, 0xfc ; jmp qword ptr [rdx + 0x22fffcb0]
0x000000000016e42d : mov cl, 0xfc ; jmp qword ptr [rdx]
0x000000000016e5ad : mov cl, 0xfc ; jmp rax
0x000000000016cfc5 : mov cl, 0xfd ; call qword ptr [rax]
0x000000000016cfb5 : mov cl, 0xfd ; call rdx
0x00000000000eba07 : mov cl, 3 ; add al, 0xa ; ret
0x000000000019dcb0 : mov cl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000088035 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000080284 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000015c6d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009cecb : mov cl, dl ; and cl, 0xf ; je 0x9cef7 ; ret
0x000000000015c98c : mov cs, edi ; ret 0x8b36
0x0000000000124dfe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000096f60 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001806c5 : mov dh, 0 ; add byte ptr [rax + 0x4b], bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000753c6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007484f : mov dh, 0 ; pop rbx ; ret
0x0000000000073583 : mov dh, 0 ; ret
0x000000000008ed5f : mov dh, 0x11 ; jmp 0x8ed28
0x0000000000134961 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000850c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000000338c0 : mov dh, 0x17 ; test dl, dl ; jne 0x338a6 ; ret
0x00000000000bc4a3 : mov dh, 0x17 ; test dl, dl ; jne 0xbc487 ; xor eax, eax ; ret
0x00000000000b1526 : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f60cf : mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000bcf7f : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003a491 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f900b : mov dh, 0x44 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x0000000000105bfa : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000051a51 : mov dh, 0x46 ; or al, 0x89 ; ret 0xeac0
0x000000000014ae21 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014ae11 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014ade1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000014ae01 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014adf1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000091b36 : mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000015b6c2 : mov dh, 0x4e ; ret 0x474c
0x00000000000275e1 : mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000103d9d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000032032 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000068b68 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000014ae25 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000014ae15 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000014ade5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000014adf5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000016d7c4 : mov dh, 0x6c ; cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x00000000000d4814 : mov dh, 0x85 ; xor eax, 0xfffffff ; ret 0x8588
0x000000000016dcb0 : mov dh, 0x94 ; cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x000000000016d038 : mov dh, 0xb6 ; std ; inc dword ptr [rsi - 0x49] ; std ; call rsi
0x000000000016e1a8 : mov dh, 0xbb ; cld ; inc dword ptr [rsi - 0x45] ; cld ; call rsi
0x0000000000090ae3 : mov dh, 0xc ; adc byte ptr [rax - 0x7cb7e8f4], cl ; ret 0x4801
0x000000000007fb95 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000090b04 : mov dh, 0xc ; js 0xffffffff83512120 ; ret 0x4901
0x000000000010c348 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001162bc : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010beed : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011bb98 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000aa2b1 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000bb76f : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000034e9d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000068668 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000cbf0c : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000c058e : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006871c : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000dd405 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006770d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x00000000000225a9 : mov dh, 0xc0 ; neg eax ; ret
0x0000000000110307 : mov dh, 0xc0 ; pop r12 ; ret
0x000000000010cfae : mov dh, 0xc0 ; pop rbp ; ret
0x00000000000e55b2 : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003595a : mov dh, 0xc0 ; ret
0x000000000009bb58 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000009bb80 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007551c : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d65e : mov dh, 0xc7 ; ret
0x000000000015c904 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c296c : mov dh, 0xc8 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000a64d8 : mov dh, 0xca ; cmp dl, 0xff ; cmovne eax, ecx ; ret
0x0000000000056d59 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000ae639 : mov dh, 0xd2 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000850ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000b1611 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000056e72 : mov dh, 0xdb ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000081631 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000147454 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000000cbe5c : mov dh, 0xed ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x00000000000f8dad : mov dh, 0xf6 ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000172b21 : mov dh, 0xf7 ; jmp rsp
0x000000000010a562 : mov dh, 0xf9 ; sub dword ptr [rax], eax ; test eax, eax ; je 0x10a578 ; ret
0x000000000016d0b9 : mov dh, 0xfd ; call qword ptr [rax]
0x000000000016cff5 : mov dh, 0xfd ; call rcx
0x000000000016d039 : mov dh, 0xfd ; inc dword ptr [rsi - 0x49] ; std ; call rsi
0x00000000000753d1 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cdb27 : mov dh, 4 ; xor byte ptr [rcx], bh ; ret 0x1772
0x0000000000147451 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000850c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000081634 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000170469 : mov dh, al ; jmp rsp
0x000000000015ef05 : mov dh, bl ; inc dword ptr [rax] ; mov esi, ebx ; jmp qword ptr [rax]
0x000000000015eefd : mov dh, bl ; inc eax ; mov dh, bl ; jmp rax
0x000000000015eee9 : mov dh, bl ; jmp qword ptr [rax]
0x000000000015ef01 : mov dh, bl ; jmp rax
0x000000000019ced6 : mov dh, byte ptr [rax] ; idiv edi ; sbb al, 0xd ; xor dil, r14b ; jmp qword ptr [rdx]
0x000000000009bd2e : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x000000000007c66d : mov dh, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; imul ecx ; ret
0x000000000007ee08 : mov dh, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007ee07 : mov dh, byte ptr gs:[rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000185a89 : mov dh, cl ; jmp rsi
0x0000000000171da1 : mov dh, dh ; jmp rsp
0x000000000018ab58 : mov dh, dl ; call rcx
0x000000000016d03c : mov dil, 0xfd ; call rsi
0x0000000000003a4c : mov dl, 0x1e ; ret
0x000000000010790d : mov dl, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000016d828 : mov dl, 0x6f ; cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x000000000002e0e7 : mov dl, 0x8b ; add al, 7 ; ret
0x000000000016dd14 : mov dl, 0x97 ; cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x00000000000bb7a5 : mov dl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016e3a9 : mov dl, 0xfc ; call rax
0x000000000016e429 : mov dl, 0xfc ; jmp qword ptr [rdx + 0x22fffcb1]
0x000000000016e425 : mov dl, 0xfc ; jmp qword ptr [rdx]
0x000000000016e5a5 : mov dl, 0xfc ; jmp rax
0x000000000015edfd : mov dl, 0xfd ; call qword ptr [rax - 0x2f00022b]
0x000000000016d01d : mov dl, 0xfd ; jmp qword ptr [rsi + 0x26fffdb3]
0x000000000016cfbd : mov dl, 0xfd ; push qword ptr [rax - 0x50] ; std ; jmp qword ptr [rax]
0x00000000000d145a : mov dl, 7 ; sti ; dec dword ptr [rax + 1] ; ret
0x000000000011c341 : mov dl, bh ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000174931 : mov dl, bh ; jmp rsp
0x0000000000097c33 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000097c52 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000097c93 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000012bbe0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000099360 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097c10 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000009add0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000018c0f8 : mov dl, dh ; hlt ; call qword ptr [rcx]
0x000000000018c128 : mov dl, dh ; hlt ; jmp qword ptr [rax]
0x000000000015ef8d : mov dr0, ebx ; call qword ptr [rax]
0x000000000015efa5 : mov dr0, ebx ; inc eax ; mov dr0, ebx ; jmp rax
0x000000000015ef91 : mov dr0, ebx ; jmp qword ptr [rax]
0x000000000015efa9 : mov dr0, ebx ; jmp rax
0x0000000000187dc5 : mov dr0, edx ; jmp qword ptr [rdx]
0x00000000000280b6 : mov dr1, ebx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000016df15 : mov dr1, esp ; call qword ptr [rdx]
0x000000000016e095 : mov dr1, esp ; call rax
0x000000000016e055 : mov dr1, esp ; jmp rax
0x0000000000124572 : mov dr1, word ptr [rip - 0xc000001] ; ret
0x00000000000787f8 : mov ds, word ptr [rcx] ; add bl, dh ; ret
0x00000000000e8622 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000badd3 : mov dword ptr [0x2d0], esi ; ret
0x0000000000024ef7 : mov dword ptr [r13 + 0x54], eax ; pop r13 ; pop r14 ; ret
0x00000000000e0a24 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000e0a1f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000010ed99 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x000000000009cffa : mov dword ptr [r8 + 4], ecx ; jne 0x9cfcf ; ret
0x000000000010edaa : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000103e31 : mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000103da4 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f5228 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x0000000000111ebc : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x000000000006dea9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006dee9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e5a01 : mov dword ptr [rax + 0x10], esi ; ret
0x000000000006e449 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000072e49 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000c437b : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000c43ad : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000e0a25 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000e0a20 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000006dead : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000006e4e7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000010ed9a : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000111d9c : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x000000000006783b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000009cffb : mov dword ptr [rax + 4], ecx ; jne 0x9cfce ; ret
0x000000000014c877 : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x000000000007653a : mov dword ptr [rax + 8], 0 ; ret
0x00000000000677c5 : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x000000000010ed14 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x000000000007e925 : mov dword ptr [rax + 8], esi ; ret
0x00000000000c2a7c : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085702 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000191294 : mov dword ptr [rax - 0xb], edx ; jmp qword ptr [rdx]
0x00000000000c42b1 : mov dword ptr [rax - 8], edx ; cmp esi, dword ptr [rdi + 4] ; jl 0xc42b1 ; ret
0x00000000000b61c2 : mov dword ptr [rax], 0 ; jmp 0xb6194
0x0000000000116dcd : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000e1598 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000352f5 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000000e5628 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000e55e3 : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000aa818 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000006b3d5 : mov dword ptr [rax], 0x89480000 ; ret 0x8b48
0x000000000007b120 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000007b2e0 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000016f635 : mov dword ptr [rax], 0xee2a5400 ; jmp rsp
0x00000000000e10f8 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000b5f25 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000225b6 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000009cb83 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010edab : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000d1ccf : mov dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x000000000007bbe6 : mov dword ptr [rax], ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045f3c : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006e615 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c81a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000103e32 : mov dword ptr [rax], ecx ; mov qword ptr [r9], r10 ; ret
0x00000000000d65c1 : mov dword ptr [rax], edi ; add rsp, 0x10 ; xor al, al ; pop rbx ; ret
0x000000000007bfa6 : mov dword ptr [rax], edi ; ret
0x00000000000e84e1 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009d8d1 : mov dword ptr [rax], edx ; jne 0x9d8cd ; ret
0x0000000000103da5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000e0a33 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x000000000002e054 : mov dword ptr [rax], edx ; ret
0x000000000006ea01 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000f759a : mov dword ptr [rax], esi ; jne 0xf758d ; ret
0x00000000000d1cce : mov dword ptr [rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000024ef8 : mov dword ptr [rbp + 0x54], eax ; pop r13 ; pop r14 ; ret
0x00000000000da5e2 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000514b1 : mov dword ptr [rbp - 0x1188], ecx ; jmp rax
0x0000000000065194 : mov dword ptr [rbp - 0x140], eax ; jmp 0x6141f
0x0000000000065142 : mov dword ptr [rbp - 0x140], ecx ; jmp 0x6141f
0x0000000000022d13 : mov dword ptr [rbp - 0x58], eax ; call rcx
0x0000000000046578 : mov dword ptr [rbp - 0x5c0], ecx ; jmp rax
0x00000000000f419c : mov dword ptr [rbp - 0x70], edx ; mov rdx, r12 ; call rax
0x00000000000f445f : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000f3a44 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f3dc0 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f3e40 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000004d6c4 : mov dword ptr [rbp - 0xc8], eax ; mov rdi, rbx ; call rax
0x00000000001031e0 : mov dword ptr [rbp], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007eb17 : mov dword ptr [rbp], eax ; je 0x7ebf1 ; call rax
0x000000000007ec91 : mov dword ptr [rbp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102212 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102211 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b6a7 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000011da76 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000073a47 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000b6009 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor eax, eax ; jmp 0xb5fde
0x0000000000074219 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000efbb4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078ebe : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116a52 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011da23 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000efbe4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075ea3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000116aa9 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cfc6b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000ac24e : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072e75 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000007f9b7 : mov dword ptr [rbx + 0x30], eax ; call rcx
0x00000000000c23ae : mov dword ptr [rbx + 0x34], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000050387 : mov dword ptr [rbx + 0x35], esi ; add byte ptr [rbp + 0x67], dh ; mov eax, edx ; pop rbx ; ret
0x000000000007f9b1 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000034e9f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e04f6 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000007fa72 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x0000000000075f0b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000010c50b : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074a72 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006df37 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073937 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x00000000001820de : mov dword ptr [rbx + 0xd1cffef], eax ; add byte ptr [rsi - 0x11], bl ; jmp qword ptr [rdx]
0x00000000000c242c : mov dword ptr [rbx + 8], eax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc23ff
0x000000000002b6c7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000efb84 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035845 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007609d : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007fd2d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5612 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000019e2f4 : mov dword ptr [rbx], 0x6c50000 ; add byte ptr [rax], al ; ret
0x000000000010c834 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000011dc1e : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007610a : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007fa6f : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000001138f2 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000e55ac : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000113127 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112e06 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000de3f7 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000354ae : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000006e44c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000017ab0c : mov dword ptr [rbx], edi ; in eax, dx ; jmp qword ptr [rdx]
0x000000000007f9b5 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000006cbdc : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075ea6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006a1f8 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ecfc : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000001115d8 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000111535 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000111605 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002187d : mov dword ptr [rcx + 0x968], edx ; ret
0x0000000000141ce2 : mov dword ptr [rcx + 3], edx ; ret
0x0000000000141cd3 : mov dword ptr [rcx + 4], edx ; ret
0x000000000009d8a0 : mov dword ptr [rcx + 4], esi ; jne 0x9d8b1 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000141d44 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000141d54 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000141d23 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000141d14 : mov dword ptr [rcx + 8], edx ; ret
0x000000000009d8a5 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000090f76 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000197a94 : mov dword ptr [rcx - 0xa], ebx ; jmp qword ptr [rdx]
0x000000000009d1b0 : mov dword ptr [rcx], 0 ; jne 0x9d1b1 ; ret
0x00000000000bc6b4 : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000000bc494 : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x000000000018da45 : mov dword ptr [rcx], eax ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rsi]
0x00000000000c48dc : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009d1e6 : mov dword ptr [rcx], eax ; jne 0x9d1d5 ; ret
0x000000000003534a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006d4b7 : mov dword ptr [rcx], eax ; ret
0x0000000000070f54 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000f5229 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000000000006d301 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000103de9 : mov dword ptr [rcx], edi ; ret
0x0000000000084c37 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x00000000000251d4 : mov dword ptr [rcx], edx ; jmp 0x2519d
0x0000000000141ca1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000141cc0 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000141d01 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000141ce0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000141d21 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000141d31 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000141d41 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141d51 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141d61 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141d71 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000141cd0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000141d11 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000103da8 : mov dword ptr [rcx], edx ; ret
0x000000000009d1e5 : mov dword ptr [rcx], r8d ; jne 0x9d1d6 ; ret
0x00000000000db1bb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000db1f2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000986cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009951d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009870b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009955b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009878d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000995dd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009709b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000097d6e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009711d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000448af : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009af8d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afcb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009b04d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000097df0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x0000000000097160 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000097180 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000097141 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e598b : mov dword ptr [rdi + 0x10], esi ; mov qword ptr [rdx], rdi ; ret
0x00000000000db1e0 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x00000000000987f3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000099643 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000097163 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009b0b3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000116791 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x0000000000075e33 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073207 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000008b0da : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000987d5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000099625 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000098813 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000099663 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000097145 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009b095 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0d3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000011675f : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x0000000000116734 : mov dword ptr [rdi + 0x18], edx ; ret
0x00000000001166d1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001166f6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000ab68d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; ret
0x000000000010cd4f : mov dword ptr [rdi + 0x20], edx ; ret
0x00000000001166d4 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000111dfc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000116861 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000c1e9b : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000c1e9e : mov dword ptr [rdi + 0x30], eax ; ret
0x000000000008afc9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000111db4 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x0000000000075e63 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077b70 : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000035af9 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000da90e : mov dword ptr [rdi + 0x80], edx ; ret
0x0000000000103375 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009874d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009959d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000970bd : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000009b00d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000986eb : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009953b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009876d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000995bd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009707b : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009afab : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009b02d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001347a5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001345e8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134888 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000134735 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134578 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000038ee0 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000985b7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000993e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001346c5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134508 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000096fa7 : mov dword ptr [rdi + 3], edx ; ret
0x000000000009ae57 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000910a3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000091003 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x0000000000077b5a : mov dword ptr [rdi + 4], eax ; ret
0x0000000000038eda : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000910f3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000993c9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000134498 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000091053 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x0000000000096f99 : mov dword ptr [rdi + 4], edx ; ret
0x000000000009ae39 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000da960 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000910a2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000091002 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009864b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009948b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000134428 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009700b : mov dword ptr [rdi + 5], edx ; ret
0x000000000009aefb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009866b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000994ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001343b8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009701b : mov dword ptr [rdi + 6], edx ; ret
0x000000000009af1b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x0000000000098609 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000099449 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009868b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000994cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000134348 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000096fe9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000009aeb9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009af3b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e30e8 : mov dword ptr [rdi + 8], 0 ; ret
0x0000000000075e37 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000e0670 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000044834 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004927f : mov dword ptr [rdi + 8], edx ; jmp 0x4924a
0x000000000009942b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000098629 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000099469 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000985eb : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000044064 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000007357f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000010d50d : mov dword ptr [rdi + 8], edx ; pop rbx ; ret
0x000000000003884a : mov dword ptr [rdi + 8], edx ; ret
0x000000000009ae9b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aed9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000e30d8 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000085709 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000085712 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000012b8a5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b8e3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004479f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000012bc2c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133df8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012be0c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133d78 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bffc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133cf8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c1cd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133c69 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c3cd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133bd9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c5cd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133b49 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000097f30 : mov dword ptr [rdi - 1], edx ; ret
0x000000000012bfad : mov dword ptr [rdi - 2], ecx ; ret
0x000000000012bdc5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000012bfa9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000090f47 : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000012c389 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000012ba5f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000090f8b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000012c386 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000090fa5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000012c586 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000090fc1 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x000000000012c786 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004472a : mov dword ptr [rdi - 8], ecx ; ret
0x000000000012b8e7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000012ba5c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bb58 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012baa4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133e78 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000382f0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000034d23 : mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000459de : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000e30d5 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000008ae0a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000044724 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000004482e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000103322 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000502a6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000090f52 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00000000000910d0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000098585 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000985d7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000098564 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096f64 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000099387 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000097c37 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000091040 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000993b5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097c55 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000099407 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000097c97 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000985b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000993e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000096fa5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000091000 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x0000000000098607 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000099447 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000096fe7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000098627 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000099467 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000096ff7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000085707 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000097008 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000097018 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000097028 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003885a : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008570f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000091030 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000091050 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000096f96 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000096fd8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000446f9 : mov dword ptr [rdi], ecx ; ret
0x0000000000098554 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000099374 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000098572 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000993a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000985c4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000993f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000097f50 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000097f91 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000097fb1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000097fc1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000097fd1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000097fe1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000097f60 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000097fa1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fb34 : mov dword ptr [rdi], edx ; ret
0x000000000009ade4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ae12 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ae64 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000910b1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000091021 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000459bf : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000091011 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x0000000000103337 : mov dword ptr [rdi], esi ; ret
0x00000000000da941 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x0000000000103f2b : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x0000000000069fe7 : mov dword ptr [rdx + 0x140], ecx ; ret
0x0000000000073aa5 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x000000000006d2fe : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d4b4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000010c4c0 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000010c49c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010c4a0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000144067 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000093d2c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000144049 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000093d0e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001440fb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000144079 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000013fd29 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000014411b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000144099 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000013fd39 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000001440b9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000014413b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000093db0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000001440d9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000143fcb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000093d92 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000000c4830 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000111571 : mov dword ptr [rdx + 8], edi ; ret
0x00000000000b799a : mov dword ptr [rdx], eax ; add rsp, 0x40 ; mov eax, esi ; pop rbx ; ret
0x0000000000143ff4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000144022 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000143f74 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000dbfaa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000045a73 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000093ca9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000b718e : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x0000000000035097 : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000eaac6 : mov dword ptr [rdx], eax ; ret
0x0000000000071c6f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000000fd28 : mov dword ptr [rdx], ebx ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret 8
0x00000000000840fe : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000d1a21 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009bdc5 : mov dword ptr [rdx], ecx ; jne 0x9bdbd ; ret
0x000000000003887c : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x000000000006e216 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000459c6 : mov dword ptr [rdx], ecx ; ret
0x00000000000cf3bb : mov dword ptr [rdx], edi ; ret
0x00000000001021d4 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x00000000000b780b : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b78b9 : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000011156e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000008b2ff : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f54b8 : mov dword ptr [rip + 0x2b3ce2], edx ; pop rbp ; ret
0x00000000000ee357 : mov dword ptr [rip + 0x2b84a3], eax ; call 0x6a5f8
0x00000000000ea6c0 : mov dword ptr [rip + 0x2bab5a], ebx ; pop rbx ; ret
0x00000000000e44fa : mov dword ptr [rip + 0x2c0d10], edi ; ret
0x00000000000e2425 : mov dword ptr [rip + 0x2c4395], eax ; mov rdx, rax ; jmp 0xe23c7
0x00000000000e3836 : mov dword ptr [rip + 0x2c4934], eax ; mov rdx, rax ; jmp 0xe3818
0x0000000000083ce2 : mov dword ptr [rip + 0x323c20], eax ; ret
0x000000000007e931 : mov dword ptr [rip + 0x328f39], esi ; ret
0x0000000000035de3 : mov dword ptr [rip + 0x36f29f], eax ; mov eax, edx ; ret
0x0000000000035dcc : mov dword ptr [rip + 0x36f2ba], edx ; ret
0x000000000002171b : mov dword ptr [rip + 0x383ab7], eax ; pop r12 ; ret
0x000000000001f4fb : mov dword ptr [rip + 0x3873e7], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000021e72 : mov dword ptr [rip + 0x388508], eax ; pop rbx ; ret
0x0000000000021e71 : mov dword ptr [rip + 0x388508], r8d ; pop rbx ; ret
0x00000000000cff74 : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000038e06 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00000000000387c4 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e59c4 : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000387c8 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000d07c9 : mov dword ptr [rsi + 0x30], ebp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006e925 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000df926 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000da87f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000038e50 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000038e97 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000009d044 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000cff57 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000010b6c1 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000cff70 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000e59fd : mov dword ptr [rsi + 8], edx ; mov qword ptr [rax + 0x10], rsi ; ret
0x00000000000aa311 : mov dword ptr [rsi + rcx], edx ; jne 0xaa30e ; ret
0x00000000001021c6 : mov dword ptr [rsi + rdx - 0xb8], ecx ; ret
0x000000000010b6df : mov dword ptr [rsi], 0 ; ret
0x0000000000090fa3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000010b750 : mov dword ptr [rsi], 0xa ; ret
0x000000000010b740 : mov dword ptr [rsi], 0xb ; ret
0x000000000010b790 : mov dword ptr [rsi], 0xc ; ret
0x000000000009f56e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0x9f529
0x00000000000a1abe : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa1a79
0x00000000000a3f1e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa3ed9
0x000000000010b780 : mov dword ptr [rsi], 8 ; ret
0x000000000010541b : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x0000000000077ebb : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x00000000001197c0 : mov dword ptr [rsi], eax ; or eax, 0xffffffff ; ret
0x000000000007320b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003887e : mov dword ptr [rsi], ecx ; ret
0x0000000000103379 : mov dword ptr [rsi], edi ; ret
0x00000000000f8cc9 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000007ab7e : mov dword ptr [rsp + 0x10], eax ; call rdx
0x0000000000034b65 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000007ab79 : mov dword ptr [rsp + 0x20], ecx ; mov qword ptr [rsp + 0x10], rax ; call rdx
0x000000000007a94b : mov dword ptr [rsp + 0x28], edi ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007a97a : mov dword ptr [rsp + 0x28], edx ; call rax
0x00000000000f590b : mov dword ptr [rsp + 0xa0], edi ; call 0x81c19
0x00000000000f595d : mov dword ptr [rsp + 0xb0], eax ; call 0x81c19
0x000000000010a463 : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000007fa20 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000027e62 : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000025240 : mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025a0e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025156 : mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000116b6c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000788a3 : mov dword ptr [rsp + 8], ecx ; call qword ptr [rax]
0x0000000000027122 : mov dword ptr [rsp + 8], edi ; mov rdi, qword ptr [rsp + 0x48] ; call rax
0x0000000000113060 : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000053a85 : mov dword ptr [rsp + 8], edx ; jmp 0x53a52
0x0000000000034c45 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000045b66 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034e15 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x000000000010add8 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x000000000002782d : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000d44c1 : mov dword ptr [rsp], eax ; call r12
0x0000000000022f25 : mov dword ptr [rsp], eax ; call rbx
0x000000000007e9dd : mov dword ptr [rsp], eax ; je 0x7eaa9 ; call rax
0x0000000000113a5b : mov dword ptr [rsp], ecx ; pop r12 ; ret
0x00000000000b6d3d : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x00000000000badd2 : mov dword ptr fs:[0x2d0], esi ; ret
0x00000000000e1597 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000e5627 : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000aa817 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000007b2df : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000b5f24 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000225b5 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000e0a32 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000d1ccd : mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000102210 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035349 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000dbfa9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000b9ac4 : mov dword ptr fs:[rdx], eax ; mov rax, rdi ; ret
0x0000000000035096 : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b780a : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000b78b8 : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000012bdc0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000096f50 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000109f04 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x000000000009bc18 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000e0fdd : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000db1d3 : mov eax, 0x16 ; jbe 0xdb1e8 ; ret
0x000000000007df87 : mov eax, 0x16 ; je 0x7df97 ; ret
0x00000000000da935 : mov eax, 0x16 ; je 0xda948 ; ret
0x0000000000174375 : mov eax, 0x1b340002 ; cli ; call rsp
0x0000000000039fd9 : mov eax, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x00000000000db208 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x000000000009bc3b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000bb650 : mov eax, 0x20 ; ret
0x000000000002e587 : mov eax, 0x200 ; ret
0x000000000009bc34 : mov eax, 0x30 ; pop rbx ; ret
0x000000000007bfb3 : mov eax, 0x32 ; add byte ptr [rax], al ; ret
0x000000000002b032 : mov eax, 0x39480037 ; ret 0x7773
0x000000000009bc2d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000bb6a0 : mov eax, 0x40 ; ret
0x000000000015a81b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000022803 : mov eax, 0x48ef894c ; mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000085bba : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000db7f0 : mov eax, 0x5f ; syscall ; ret
0x000000000009bc26 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000e750a : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x00000000000badf0 : mov eax, 0x66 ; syscall ; ret
0x00000000000bae10 : mov eax, 0x68 ; syscall ; ret
0x00000000000bae00 : mov eax, 0x6b ; syscall ; ret
0x00000000000bae20 : mov eax, 0x6c ; syscall ; ret
0x00000000000bade0 : mov eax, 0x6e ; syscall ; ret
0x00000000000bb020 : mov eax, 0x6f ; syscall ; ret
0x000000000016e8e1 : mov eax, 0x795cffeb ; add byte ptr [rax], al ; je 0x16e8b4 ; jmp 0x16e8f3
0x00000000000bb559 : mov eax, 0x7d00 ; ret
0x00000000000bb588 : mov eax, 0x7e ; ret
0x00000000000bb4db : mov eax, 0x7f ; ret
0x000000000009bc1f : mov eax, 0x80 ; pop rbx ; ret
0x00000000000da110 : mov eax, 0x83000000 ; ret
0x0000000000046e44 : mov eax, 0x83fffffb ; ret 0x8908
0x0000000000046e9f : mov eax, 0x83fffffb ; ret 0x8910
0x0000000000026028 : mov eax, 0x85000000 ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000000000010c583 : mov eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000010ee27 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000016e185 : mov eax, 0xb850fffc ; cld ; jmp rax
0x000000000016d089 : mov eax, 0xb98bfffd ; std ; call qword ptr [rax]
0x00000000000c60ff : mov eax, 0xc ; test edx, edx ; cmovne eax, edx ; jmp 0xc60eb
0x0000000000033bc3 : mov eax, 0xc031fffe ; pop rbx ; ret
0x0000000000162c4c : mov eax, 0xc8fffb43 ; sti ; call rax
0x00000000000bb50d : mov eax, 0xc975fde8 ; ret
0x00000000000f8cb8 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000000f4bd2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000017bc5f : mov eax, 0xd1cffee ; sub al, 0xb8 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000113a86 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e89e0 : mov eax, 0xe4 ; syscall ; ret
0x000000000007bd71 : mov eax, 0xe8000008 ; ret
0x00000000000d2cad : mov eax, 0xf ; je 0xd2cc8 ; ret
0x00000000000bb57f : mov eax, 0xfa ; ret
0x00000000000bb5a0 : mov eax, 0xfc17 ; ret
0x00000000000bb590 : mov eax, 0xfffa ; ret
0x00000000000b9a7c : mov eax, 0xfffffff2 ; ret
0x00000000000f5291 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x0000000000024f07 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x000000000006ead1 : mov eax, 0xffffffff ; ja 0x6eae8 ; ret
0x0000000000103c00 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x000000000006cde2 : mov eax, 0xffffffff ; pop r12 ; ret
0x0000000000103cbe : mov eax, 0xffffffff ; pop r14 ; ret
0x000000000006f5a5 : mov eax, 0xffffffff ; pop r15 ; ret
0x000000000007005d : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002b0a7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c68c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033bee : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b1c0 : mov eax, 0xffffffff ; ret
0x0000000000038252 : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000e257e : mov eax, 1 ; add rsp, 8 ; ret
0x000000000014b920 : mov eax, 1 ; jg 0x14b939 ; neg eax ; ret
0x000000000009cc10 : mov eax, 1 ; jg 0x9cc22 ; neg eax ; ret
0x0000000000149876 : mov eax, 1 ; jl 0x149889 ; neg eax ; ret
0x000000000007a34b : mov eax, 1 ; jmp 0x7a31a
0x0000000000116d02 : mov eax, 1 ; jne 0x116d17 ; ret
0x0000000000116d42 : mov eax, 1 ; jne 0x116d57 ; ret
0x00000000000bb7b2 : mov eax, 1 ; js 0xbb7c8 ; ret
0x00000000000459c1 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000010cd49 : mov eax, 1 ; mov qword ptr [rdi + 0x20], rdx ; ret
0x000000000006cdce : mov eax, 1 ; pop r12 ; ret
0x00000000000502bd : mov eax, 1 ; pop r13 ; ret
0x00000000000501ef : mov eax, 1 ; pop r14 ; ret
0x00000000000d349d : mov eax, 1 ; pop r15 ; ret
0x000000000010faf1 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000024214 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000006e400 : mov eax, 1 ; pop rbx ; ret
0x000000000002ad70 : mov eax, 1 ; ret
0x000000000009cf31 : mov eax, 2 ; ret
0x00000000000e78d6 : mov eax, 3 ; pop rbx ; pop rbp ; ret
0x000000000009cf41 : mov eax, 3 ; ret
0x0000000000102563 : mov eax, 3 ; syscall ; ret
0x000000000009cf51 : mov eax, 4 ; ret
0x00000000000d730d : mov eax, 5 ; pop r12 ; ret
0x000000000009cf61 : mov eax, 5 ; ret
0x000000000009cf71 : mov eax, 6 ; ret
0x00000000000251cf : mov eax, 7 ; mov dword ptr [rcx], edx ; jmp 0x251a2
0x00000000000f321c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x000000000009cf81 : mov eax, 7 ; ret
0x000000000009bc42 : mov eax, 8 ; pop rbx ; ret
0x00000000000da6ee : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001704c1 : mov eax, dr0 ; call rsp
0x000000000009b925 : mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000011da88 : mov eax, dword ptr [rax + 0x108] ; jmp rax
0x000000000011dbcc : mov eax, dword ptr [rax + 0x10] ; jmp rax
0x00000000000eaae8 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000006e24c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000eab33 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000075f3c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000107137 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x107147 ; ret
0x00000000000e1698 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xe16ab ; ret
0x000000000006e72b : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000006e60b : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000f44e0 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000eb177 : mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000762c8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000111484 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000743c5 : mov eax, dword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x000000000006bbd3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007643c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000006bdbd : mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070844 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000111d34 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000038286 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002d63e : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000e77c1 : mov eax, dword ptr [rax + 0xc8] ; ret
0x000000000011d98f : mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x00000000000230a7 : mov eax, dword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x0000000000115b35 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000e779a : mov eax, dword ptr [rax + 8] ; ret
0x00000000000f4fa7 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0xf4f79 ; leave ; ret
0x000000000002bc9a : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2bcac ; call rax
0x000000000002e585 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e747 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e09f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000115b2a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002d63c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002e55c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000038283 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000107419 : mov eax, dword ptr [rax] ; ret
0x000000000007cfc4 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7cfd4 ; call rax
0x00000000000c35b8 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c6638 : mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x00000000000e5c25 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000b69bb : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000023931 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000072e71 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000010c441 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000b9fa8 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xb9fba ; call rax
0x00000000000f445c : mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001138ba : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1138d0 ; pop rbx ; ret
0x0000000000113926 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1138e4 ; pop rbx ; ret
0x00000000000ba1a5 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xba1bb ; call rax
0x0000000000093d29 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000009b926 : mov eax, dword ptr [rcx + 4] ; pop r12 ; ret
0x000000000013fd26 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000013fd36 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000093dad : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000093dcd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000012091a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000001221f2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000018dc45 : mov eax, dword ptr [rcx] ; add al, ch ; push rbx ; cmc ; jmp qword ptr [rcx]
0x000000000018dc2d : mov eax, dword ptr [rcx] ; add al, dl ; push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000144020 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000111590 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000093cd5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000143f71 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000013fc41 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000143ff1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000093ca6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000006e97f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x0000000000076eb0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000076ed8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000014c85c : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x14c870 ; pop rbx ; ret
0x00000000000f4ca0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0xf4cb8 ; ret
0x0000000000116a7c : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116691 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010b6be : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000b6361 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000009cb90 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x9cc18 ; ret
0x000000000009cba5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x9cc18 ; ret
0x000000000010b737 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001169f0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000072eb1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000009cbb0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9cc18 ; ret
0x000000000009cbcb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x9cc18 ; ret
0x000000000009cbe0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x9cc18 ; ret
0x000000000009cbf5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x9cc18 ; ret
0x000000000009cc00 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9cc18 ; ret
0x000000000010b76f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072da1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070841 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000077151 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000000713e8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x71400 ; ret
0x00000000000da950 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000e0620 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000010c351 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000116459 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000116469 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000115b31 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000115b26 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000114089 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000115c21 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000009d5b5 : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x9d591 ; ret
0x000000000002e0e8 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000072e10 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000072de0 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000111e20 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f4cb5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000b6460 : mov eax, dword ptr [rdi] ; ret
0x0000000000073520 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000073530 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000010fa64 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10fa76 ; ret
0x000000000010fa63 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10fa77 ; ret
0x0000000000114694 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1146a6 ; ret
0x0000000000114693 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1146a7 ; ret
0x000000000009d684 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x9d680 ; xor eax, eax ; ret
0x000000000007081b : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000d2cf1 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002e513 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000033b63 : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000009bd29 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x9bd19 ; ret
0x0000000000088036 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000010bba8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x0000000000070068 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000cf3b8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000006e617 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c81c : mov eax, dword ptr [rdx] ; ret
0x0000000000076e91 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x76e90 ; ret
0x000000000011b291 : mov eax, dword ptr [rip + 0x287869] ; jmp rax
0x000000000011b241 : mov eax, dword ptr [rip + 0x2878b1] ; pop r12 ; jmp rax
0x000000000011b1e1 : mov eax, dword ptr [rip + 0x287909] ; pop r12 ; jmp rax
0x000000000011b2f2 : mov eax, dword ptr [rip + 0x28b430] ; call qword ptr [rax]
0x000000000011acd6 : mov eax, dword ptr [rip + 0x28ba4c] ; call qword ptr [rax]
0x0000000000101071 : mov eax, dword ptr [rip + 0x2a5839] ; ret
0x00000000000eb171 : mov eax, dword ptr [rip + 0x2b9ce9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007bf9f : mov eax, dword ptr [rip + 0x328f2b] ; mov qword ptr [rax], rdi ; ret
0x000000000007abff : mov eax, dword ptr [rip + 0x32a1b3] ; xor edi, edi ; call qword ptr [rax]
0x0000000000077131 : mov eax, dword ptr [rip + 0x32ef09] ; ret
0x0000000000035da0 : mov eax, dword ptr [rip + 0x36f2e2] ; ret
0x0000000000035d90 : mov eax, dword ptr [rip + 0x36f2f6] ; ret
0x000000000002e04d : mov eax, dword ptr [rip + 0x376d85] ; mov qword ptr [rax], rdx ; ret
0x000000000002af61 : mov eax, dword ptr [rip + 0x37b9b9] ; ret
0x0000000000023111 : mov eax, dword ptr [rip + 0x3872b1] ; ret
0x0000000000023101 : mov eax, dword ptr [rip + 0x3872d1] ; ret
0x00000000000d1f7e : mov eax, dword ptr [rsi + 0x14] ; ret
0x000000000002e741 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e751 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000c43a9 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000103f27 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000002d621 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000011d546 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000021dc6 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000021b3f : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000ba561 : mov eax, dword ptr [rsp + 0x20] ; jmp 0xba52f
0x00000000000aaed8 : mov eax, dword ptr [rsp + 0x38] ; call rax
0x000000000002971f : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027828 : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000e0a59 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000b9c94 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x000000000011daed : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000a9134 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002ec1d : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000e1266 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000e2090 : mov eax, dword ptr [rsp - 0x50] ; ret
0x0000000000110064 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e13b0 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000eb1d3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eb234 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000004e388 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000002244c : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000077fdb : mov eax, eax ; nop dword ptr [rax] ; ret
0x00000000000381f9 : mov eax, eax ; or rax, rdx ; ret
0x000000000006c351 : mov eax, eax ; pop rbx ; ret
0x000000000004be8b : mov eax, eax ; ret
0x00000000000aa7c9 : mov eax, ebp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000747da : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006cbda : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068b12 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x000000000006da26 : mov eax, ebp ; pop r13 ; ret
0x000000000006b319 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000069736 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004bdd3 : mov eax, ebp ; pop rbp ; ret
0x00000000000e5890 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000698c0 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073b1d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035530 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000441a3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001136c1 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008b1e7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b6b32 : mov eax, ebx ; call rax
0x00000000000e72ff : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002b816 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006a29a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000325cf : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003859b : mov eax, ebx ; pop rbx ; ret
0x0000000000044067 : mov eax, ecx ; adc eax, eax ; ret
0x000000000008c22f : mov eax, ecx ; jmp 0x8c122
0x00000000000b3492 : mov eax, ecx ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000002ed83 : mov eax, ecx ; pop r13 ; ret
0x000000000011a9f8 : mov eax, ecx ; pop r14 ; ret
0x000000000002ed09 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032ff5 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ebaa : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000033b7f : mov eax, ecx ; pop rbx ; ret
0x0000000000033b89 : mov eax, ecx ; ret
0x00000000000f5e4f : mov eax, edi ; add rsp, 8 ; ret
0x000000000002e5b0 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f8d66 : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f8d40 : mov eax, edi ; bswap eax ; ret
0x00000000001733c1 : mov eax, edi ; call rsp
0x0000000000045e29 : mov eax, edi ; cmovae rax, rsi ; ret
0x0000000000038201 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000091bfc : mov eax, edi ; jne 0x91c12 ; ret
0x000000000009d98c : mov eax, edi ; jne 0x9d9a2 ; ret
0x00000000000e31ea : mov eax, edi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000091067 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009d6fb : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000ebc40 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x000000000002ef4c : mov eax, edi ; pop r13 ; ret
0x000000000002ef36 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f6081 : mov eax, edi ; pop rbx ; ret
0x00000000000225bc : mov eax, edi ; ret
0x00000000000f8d50 : mov eax, edi ; ror ax, 8 ; ret
0x00000000000381a2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f8a0a : mov eax, edi ; sar rax, 6 ; ret
0x00000000000f8de6 : mov eax, edi ; shr eax, 0x18 ; ret
0x000000000011db3c : mov eax, edx ; add rsp, 0x28 ; ret
0x00000000000e1f79 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000671b0 : mov eax, edx ; add rsp, 0x98 ; ret
0x00000000000ae2fc : mov eax, edx ; add rsp, 8 ; ret
0x00000000000d1ebd : mov eax, edx ; je 0xd1f16 ; ret
0x00000000000badab : mov eax, edx ; jle 0xbadb6 ; ret
0x0000000000103de6 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000500b5 : mov eax, edx ; pop r12 ; ret
0x000000000008cefc : mov eax, edx ; pop r14 ; ret
0x00000000000b6043 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c4eb : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000679eb : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000430b2 : mov eax, edx ; pop rbx ; ret
0x0000000000035de9 : mov eax, edx ; ret
0x00000000000b7191 : mov eax, esi ; add rsp, 8 ; ret
0x0000000000034f56 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000f6a05 : mov eax, esi ; pop r12 ; ret
0x00000000001169c3 : mov eax, esi ; pop r13 ; ret
0x00000000000b643d : mov eax, esi ; pop r14 ; ret
0x0000000000116999 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000037cda : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000b79a0 : mov eax, esi ; pop rbx ; ret
0x0000000000045df1 : mov eax, esi ; ret
0x0000000000103e7b : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x0000000000112cc2 : mov eax, esp ; mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000ab84b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a9015 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000008ca3b : mov eax, esp ; pop r12 ; ret
0x0000000000076afc : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072566 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9014 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000a8f42 : mov eax, r12d ; pop r12 ; ret
0x0000000000076afb : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072565 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9098 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x000000000006da25 : mov eax, r13d ; pop r13 ; ret
0x00000000000d71b5 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004e387 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006c350 : mov eax, r8d ; pop rbx ; ret
0x000000000004be8a : mov eax, r8d ; ret
0x00000000000e07f5 : mov eax, r9d ; pop r13 ; ret
0x00000000000e08c5 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001021d0 : mov eax, r9d ; ret
0x00000000000ba0c0 : mov eax, ss ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e2499 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x0000000000091701 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000091711 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000916f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000e4a6f : mov ebp, 0x48fff6c3 ; mov eax, ebx ; pop rbx ; ret
0x0000000000171a95 : mov ebp, 0x63740001 ; cmc ; call rsp
0x00000000000faa74 : mov ebp, 0x8948002a ; ret 0x8948
0x000000000016e19d : mov ebp, 0xbc96fffc ; cld ; jmp qword ptr [rsi]
0x000000000016e2d5 : mov ebp, 0xbd44fffc ; cld ; call rsp
0x00000000001593dd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x000000000017c5a7 : mov ebp, 0xd1cffee ; mov ah, 0xbc ; out dx, al ; jmp qword ptr [rdx]
0x000000000017c6d7 : mov ebp, 0xd1cffee ; push 0xbd ; out dx, al ; jmp qword ptr [rdx]
0x0000000000091771 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000091751 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000091731 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000091822 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x0000000000083968 : mov ebp, 0xf80148c0 ; ret
0x0000000000083bec : mov ebp, 0xf80148c6 ; ret
0x000000000015b446 : mov ebp, 0xfb67d10d ; ret
0x000000000004695c : mov ebp, 0xfffffaa0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000bcd59 : mov ebp, 0xfffffcf0 ; call r15
0x0000000000101454 : mov ebp, 0xfffffe0c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000bdddc : mov ebp, 0xfffffe38 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000d4134 : mov ebp, 0xffffff58 ; call r12
0x00000000000b22e1 : mov ebp, dword ptr [rax + 8] ; jmp 0xb22ac
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000113c49 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x113c5d
0x000000000001f8fd : mov ebp, eax ; mov rsi, rax ; call 0xebc07
0x000000000005a86f : mov ebp, ebx ; jmp 0x56b67
0x00000000000fda8d : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000034f5c : mov ebp, ecx ; jmp rdx
0x000000000006a0e6 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000018ed91 : mov ebp, esi ; jmp qword ptr [rcx]
0x00000000000f53a4 : mov ebp, esp ; pop rbp ; ret
0x0000000000091b4c : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x91b52
0x00000000001129f1 : mov ebx, 0x48ffff07 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000dc131 : mov ebx, 0x48fffffe ; add esp, 0x20 ; pop rbx ; ret
0x0000000000171a3d : mov ebx, 0x5b640001 ; cmc ; jmp rsp
0x000000000016f4ad : mov ebx, 0x70e40000 ; in eax, dx ; call rsp
0x00000000000c2511 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000000f4c04 : mov ebx, 0xafb8341 ; je 0xf4c13 ; ret
0x000000000016e36d : mov ebx, 0xba90fffc ; cld ; jmp qword ptr [rax]
0x000000000015fe61 : mov ebx, 0xbac8fff5 ; cmc ; jmp qword ptr [rax]
0x000000000016e1a9 : mov ebx, 0xbb46fffc ; cld ; call rsi
0x00000000001593db : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000007c1d2 : mov ebx, 0xc031ffff ; pop rbx ; ret
0x0000000000160044 : mov ebx, 0xc5fff5c2 ; ret 0xfff5
0x000000000010ec76 : mov ebx, 0xc8 ; call rax
0x000000000017bfc7 : mov ebx, 0xd1cffee ; loopne 0x17bf90 ; out dx, al ; jmp qword ptr [rdx]
0x000000000010317a : mov ebx, 0xfffffff5 ; call 0x1f477
0x000000000015ef39 : mov ebx, dr0 ; call qword ptr [rax]
0x000000000015ef41 : mov ebx, dr0 ; call rax
0x000000000015ef35 : mov ebx, dr0 ; jmp rax
0x000000000010bf7b : mov ebx, eax ; jne 0x10bf19 ; xor eax, eax ; pop rbx ; ret
0x00000000000e0d9f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c2301 : mov ebx, eax ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000007e072 : mov ebx, ebp ; call 0x6a2e4
0x00000000000c22cf : mov ebx, ecx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000076167 : mov ebx, edi ; je 0x76175 ; pop rbx ; ret
0x000000000002ce66 : mov ebx, edi ; test rax, rax ; je 0x2ce76 ; call rax
0x0000000000075247 : mov ebx, edx ; jne 0x75255 ; pop rbx ; ret
0x0000000000160854 : mov ebx, es ; idiv bh ; std ; ret
0x000000000015eee5 : mov ebx, esi ; inc dword ptr [rax] ; mov dh, bl ; jmp qword ptr [rax]
0x000000000015eedd : mov ebx, esi ; inc eax ; mov ebx, esi ; jmp rax
0x000000000015eec9 : mov ebx, esi ; jmp qword ptr [rax]
0x000000000015eee1 : mov ebx, esi ; jmp rax
0x000000000001f8ec : mov ebx, esi ; sub rsp, 0x68 ; call 0xebb78
0x000000000014c1b7 : mov ecx, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f5bc2 : mov ecx, 0x2b47 ; jne 0xf5bd7 ; call 0x21dd9
0x00000000000c3b60 : mov ecx, 0x5d5bfff5 ; xor eax, eax ; pop r12 ; ret
0x0000000000041c1f : mov ecx, 0x8948fffe ; ret
0x000000000016e241 : mov ecx, 0xb892fffc ; cld ; jmp qword ptr [rdx]
0x000000000016e379 : mov ecx, 0xb940fffc ; cld ; call rax
0x000000000016e2f9 : mov ecx, 0xb954fffc ; cld ; jmp rsp
0x000000000016e1b9 : mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x000000000016d049 : mov ecx, 0xb9a6fffd ; std ; jmp qword ptr [rdi]
0x000000000016d00d : mov ecx, 0xba3efffd ; std ; call rsi
0x00000000001593d9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000017bb3f : mov ecx, 0xd1cffee ; cld ; mov bh, 0xee ; jmp qword ptr [rdx]
0x0000000000194037 : mov ecx, 0xd1cfff5 ; sub al, 0xb8 ; cmc ; jmp qword ptr [rdx]
0x000000000000314c : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000c3ca6 : mov ecx, 0xd67dfd39 ; mov edx, eax ; jmp 0xc3c90
0x000000000002c021 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2c033 ; call rcx
0x00000000000c3c77 : mov ecx, dword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xc3c99
0x00000000000abd17 : mov ecx, dword ptr [rbx] ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x00000000001097e7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000000efd22 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x0000000000043ae6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000012a00e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000076ea1 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000088033 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000011dee7 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x000000000009d5a1 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x9d59f ; ret
0x0000000000043e26 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012c383 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c583 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c783 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000096f80 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000096fc1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001347a3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000134733 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001346c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001345e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134575 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134505 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134495 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134425 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001343b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134345 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134885 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000096f61 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009e3c9 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000010f175 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000aa09b : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x000000000010ef7e : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000010b38e : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000001021a9 : mov ecx, eax ; jg 0x102199 ; mov eax, 0xffffffff ; ret
0x0000000000039214 : mov ecx, eax ; jmp 0x3910a
0x000000000010b718 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000e08d3 : mov ecx, eax ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x0000000000091356 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009e582 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x0000000000112cc5 : mov ecx, ebp ; mov rsi, rbx ; call qword ptr [rax]
0x0000000000090fde : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000039680 : mov ecx, edi ; jmp 0x395ca
0x0000000000091344 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000070ba1 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x00000000001166bf : mov ecx, edx ; cmp rdx, rcx ; je 0x1166d8 ; ret
0x00000000001166be : mov ecx, edx ; cmp rdx, rcx ; je 0x1166d9 ; ret
0x0000000000076437 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000e3183 : mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000007df85 : mov ecx, esi ; mov eax, 0x16 ; je 0x7df99 ; ret
0x000000000009de2b : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x0000000000174a24 : mov ecx, fs ; add al, byte ptr [rax] ; hlt ; ret
0x00000000000f07e8 : mov edi, 0x2000004 ; call rax
0x0000000000005f48 : mov edi, 0x22000003 ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000017448d : mov edi, 0x42b40002 ; cli ; jmp rsp
0x0000000000038c53 : mov edi, 0x48003718 ; add esp, 8 ; ret
0x00000000000b15c0 : mov edi, 0x4a7c8d44 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000010df2d : mov edi, 0x8900007f ; ret 0xc031
0x000000000007bea6 : mov edi, 0x8b8 ; call 0x780c7
0x000000000011e7d3 : mov edi, 0xc0850028 ; jne 0x11e7e9 ; xor eax, eax ; ret
0x0000000000191095 : mov edi, 0xd8080001 ; cmc ; call rsp
0x000000000006a0ea : mov edi, 0xe0 ; call rax
0x000000000006a0be : mov edi, 0xe0 ; jmp rax
0x000000000009bb04 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x00000000000d908e : mov edi, 1 ; call rax
0x0000000000192024 : mov edi, cs ; add dword ptr [rax], eax ; sub sil, sil ; jmp qword ptr [rsi]
0x00000000001953c4 : mov edi, cs ; cmc ; jmp qword ptr [rdx]
0x0000000000022d0f : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x00000000000bcd58 : mov edi, dword ptr [rbp - 0x310] ; call r15
0x00000000000b6a45 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000d4133 : mov edi, dword ptr [rbp - 0xa8] ; call r12
0x000000000009de2e : mov edi, dword ptr [rbp] ; call r12
0x000000000002305a : mov edi, dword ptr [rbx + 0x18] ; call rax
0x00000000000c3ca4 : mov edi, dword ptr [rcx + rdi*4] ; cmp ebp, edi ; jge 0xc3c89 ; mov edx, eax ; jmp 0xc3c92
0x000000000010fa61 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10fa79 ; ret
0x0000000000114691 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1146a9 ; ret
0x0000000000043aea : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006a0e9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006a0bd : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000007324c : mov edi, dword ptr [rdi] ; call 0x1f474
0x00000000000f3594 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000015b706 : mov edi, dword ptr [rdx] ; ret
0x00000000000e5a65 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002ad16 : mov edi, dword ptr [rsp + 0x18] ; call r15
0x000000000002523c : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025a0a : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025152 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027127 : mov edi, dword ptr [rsp + 0x48] ; call rax
0x000000000002770f : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027e5e : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000028621 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000000291bc : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026b9e : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000021d74 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x000000000009db46 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000d4a33 : mov edi, eax ; call r12
0x000000000004601d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x46011 ; mov rax, rsi ; ret
0x00000000001097e4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000005f54c : mov edi, ebp ; add r14, 1 ; call 0xeb7d8
0x0000000000044e37 : mov edi, ebp ; call 0x440c9
0x00000000000adda1 : mov edi, ebp ; call 0x6a0a4
0x00000000000da1b4 : mov edi, ebp ; call 0xd6414
0x000000000010ff18 : mov edi, ebp ; call 0xdc1b4
0x000000000005f509 : mov edi, ebp ; call 0xeb7d4
0x000000000010a9e4 : mov edi, ebp ; call qword ptr [rax]
0x000000000010c01e : mov edi, ebp ; call qword ptr [rbx]
0x00000000000c22d5 : mov edi, ebp ; call r12
0x00000000000e6151 : mov edi, ebp ; call r14
0x000000000010a1ba : mov edi, ebp ; call rax
0x000000000009e27d : mov edi, ebp ; call rbx
0x0000000000116891 : mov edi, ebp ; call rcx
0x000000000007f2eb : mov edi, ebp ; call rdx
0x000000000010f172 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010ef7b : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000022805 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000010b596 : mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000070ba4 : mov edi, ebp ; xor r8d, r8d ; call r12
0x0000000000073254 : mov edi, ebx ; call 0x1f474
0x000000000010a819 : mov edi, ebx ; call qword ptr [rax]
0x0000000000108721 : mov edi, ebx ; call r10
0x000000000002af17 : mov edi, ebx ; call r12
0x00000000000efce7 : mov edi, ebx ; call r14
0x000000000002329d : mov edi, ebx ; call r15
0x000000000004d6cb : mov edi, ebx ; call rax
0x000000000011d543 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000e588d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000010b38b : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000113177 : mov edi, ebx ; pop rbx ; jmp 0x1f475
0x000000000006e727 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e607 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000011cb4a : mov edi, ebx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x0000000000115990 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000014c008 : mov edi, ebx ; test rdi, rdi ; jne 0x14c002 ; pop rbx ; ret
0x000000000005e5ca : mov edi, ecx ; call 0x8a7e4
0x000000000011a570 : mov edi, ecx ; call 0xe4759
0x000000000007fa76 : mov edi, ecx ; call rcx
0x0000000000023f0a : mov edi, edi ; call 0x80204
0x000000000007a950 : mov edi, edi ; call qword ptr [rax]
0x00000000000b6671 : mov edi, edi ; call rbx
0x000000000007f213 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000ebde4 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f4cb8 : mov edi, edx ; jmp rax
0x00000000000460a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x46089 ; mov rax, rsi ; ret
0x000000000010b128 : mov edi, esi ; call rax
0x00000000000e5c22 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000002392e : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000007eda2 : mov edi, esi ; mov rdx, r15 ; call rax
0x000000000001fe6e : mov edi, esp ; call qword ptr [r14]
0x000000000015ed49 : mov edi, esp ; call qword ptr [rax]
0x000000000007cbba : mov edi, esp ; call rax
0x0000000000115a01 : mov edi, esp ; call rdx
0x000000000016dfed : mov edi, esp ; jmp rsp
0x00000000000f023c : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000f023b : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x000000000005f54b : mov edi, r13d ; add r14, 1 ; call 0xeb7d9
0x000000000005f508 : mov edi, r13d ; call 0xeb7d5
0x0000000000073aa6 : mov edx, 0x140 ; pop rbx ; ret
0x000000000005e42a : mov edx, 0x1f0fffff ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000000c65c9 : mov edx, 0x5c415d5b ; ret
0x000000000016e050 : mov edx, 0x60fffc86 ; mov dr1, esp ; jmp rax
0x00000000000c466f : mov edx, 0x75cf3840 ; ret
0x00000000000520b1 : mov edx, 0x7ef ; call 0x2e2d7
0x00000000001100a8 : mov edx, 0x801f0f ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000052085 : mov edx, 0x81e ; call 0x2e2d7
0x000000000014c312 : mov edx, 0x850025e4 ; sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000007bd03 : mov edx, 0x89480032 ; ret
0x000000000016e231 : mov edx, 0xba52fffc ; cld ; jmp rdx
0x000000000016e171 : mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000015fe59 : mov edx, 0xbae8fff5 ; cmc ; jmp qword ptr [rax]
0x000000000015abbe : mov edx, 0xcac982a4 ; call 0xffffffffaed84a3e
0x0000000000194147 : mov edx, 0xd1cfff5 ; loopne 0x19410f ; cmc ; jmp qword ptr [rdx]
0x00000000000bb529 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x00000000000ede20 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000116146 : mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x00000000000da753 : mov edx, dword ptr [r12 + 4] ; jmp 0xda722
0x0000000000072e45 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000ba125 : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xba13b ; call rdx
0x000000000006e218 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021b3c : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000009eb18 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x9eb17 ; ret
0x0000000000078fb0 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x78fc0 ; call rdx
0x00000000000f3bf0 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000119544 : mov edx, dword ptr [rbp - 0xc0] ; jmp 0x119516
0x0000000000073f0e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000f40a7 : mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f821f : mov edx, dword ptr [rbx] ; jmp 0xf81e9
0x00000000001221ef : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000012091d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000f4eaa : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0xf4ea8 ; leave ; ret
0x000000000014bd09 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x14bd20 ; call rdx
0x0000000000070dde : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; pop rbx ; ret
0x00000000000f4cb1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000009dd15 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007fd55 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x7fd59 ; ret
0x000000000014bc00 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14bc12 ; call rdx
0x0000000000047218 : mov edx, dword ptr [rip + 0x35f53a] ; call qword ptr [rdx + rax*8 - 0x40]
0x00000000000f3a41 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000c4377 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x0000000000096fa2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000096f93 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000096fe3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000aa2e1 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xaa2b6 ; ret
0x0000000000096ff3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000012bdc1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000012c180 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012ba11 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000098570 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000993a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000096f70 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000009ae10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000985c1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000993f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000096fb1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000098551 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000099371 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096f51 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f07e4 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x00000000000f06e7 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000b6d41 : mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000da754 : mov edx, dword ptr [rsp + 4] ; jmp 0xda721
0x000000000011db46 : mov edx, eax ; jmp 0x11db3c
0x000000000011dba8 : mov edx, eax ; jmp 0x11db95
0x0000000000045bfa : mov edx, eax ; jmp 0x45c12
0x00000000000488c3 : mov edx, eax ; jmp 0x488ff
0x0000000000048ab8 : mov edx, eax ; jmp 0x48ade
0x000000000006c5a1 : mov edx, eax ; jmp 0x6c547
0x000000000006c767 : mov edx, eax ; jmp 0x6c72b
0x000000000006c902 : mov edx, eax ; jmp 0x6c8bd
0x000000000006d243 : mov edx, eax ; jmp 0x6d204
0x000000000006d3ed : mov edx, eax ; jmp 0x6d3a6
0x000000000006d59e : mov edx, eax ; jmp 0x6d55b
0x00000000000714c9 : mov edx, eax ; jmp 0x71489
0x0000000000071a3e : mov edx, eax ; jmp 0x71a02
0x0000000000071baa : mov edx, eax ; jmp 0x71b64
0x0000000000071e99 : mov edx, eax ; jmp 0x71e59
0x0000000000091b54 : mov edx, eax ; jmp 0x91b4a
0x000000000009f553 : mov edx, eax ; jmp 0x9f521
0x00000000000a1aa3 : mov edx, eax ; jmp 0xa1a71
0x00000000000a3f03 : mov edx, eax ; jmp 0xa3ed1
0x00000000000bd555 : mov edx, eax ; jmp 0xbd577
0x00000000000c3cab : mov edx, eax ; jmp 0xc3c8b
0x00000000000c3c7d : mov edx, eax ; jmp 0xc3c93
0x00000000000c4d1e : mov edx, eax ; jmp 0xc4d2f
0x00000000000de398 : mov edx, eax ; jmp 0xde35e
0x00000000000e242c : mov edx, eax ; jmp 0xe23c0
0x00000000000e383d : mov edx, eax ; jmp 0xe3811
0x00000000000ee260 : mov edx, eax ; jmp 0xee255
0x00000000000f901b : mov edx, eax ; jmp 0xf8fe4
0x00000000000fffb5 : mov edx, eax ; jmp 0xfff75
0x00000000000f0243 : mov edx, eax ; jmp rcx
0x00000000000f3dc4 : mov edx, ebp ; call rax
0x000000000009e27a : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000022e81 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000011354c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000010cdcd : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000f8c36 : mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x000000000002067c : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x20691
0x00000000000b600d : mov edx, ebp ; xor eax, eax ; jmp 0xb5fda
0x00000000000f3e44 : mov edx, ebx ; call rax
0x000000000007f216 : mov edx, ebx ; mov rsi, r13 ; call rax
0x000000000007f3d2 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000007eda5 : mov edx, edi ; call rax
0x0000000000060a83 : mov edx, edi ; mov rsi, qword ptr [rip + 0x3444d4] ; call rax
0x0000000000058107 : mov edx, edi ; mov rsi, qword ptr [rip + 0x34ce50] ; call rax
0x00000000000fd5de : mov edx, edi ; mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x00000000000efce1 : mov edx, edi ; mov rsi, r12 ; mov rdi, rbx ; call r14
0x000000000016f5cc : mov edx, es ; add byte ptr [rax], al ; js 0x16f5f5 ; out dx, al ; call rsp
0x000000000006fc82 : mov edx, esi ; mov rdi, rbx ; call rax
0x000000000010ced1 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000011deea : mov edx, esp ; add r9, r11 ; call rax
0x00000000000f3a48 : mov edx, esp ; call rax
0x00000000000743c2 : mov edx, esp ; mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x00000000000f8c35 : mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x00000000000c3c7c : mov edx, r8d ; jmp 0xc3c94
0x000000000008e88a : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x00000000000a0d39 : mov es, word ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000991be : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000174465 : mov esi, 0x36f40002 ; cli ; jmp rsp
0x000000000007e889 : mov esi, 0x3948feda ; ret 0x2f74
0x0000000000039dcf : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009d46e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000180ecd : mov esi, 0x50500000 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000383be : mov esi, 0x5b00065b ; ret
0x00000000000efda3 : mov esi, 0x75c9840a ; out -0xd, eax ; ret
0x000000000004be84 : mov esi, 0x77cf39ca ; fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000015fe00 : mov esi, 0x7fff538 ; cmc ; jmp rbx
0x00000000000fd4a7 : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000003e435 : mov esi, 0x8349016a ; ret 0xeb01
0x00000000000911d5 : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x00000000000ec814 : mov esi, 0x8948002b ; ret 0x8948
0x000000000007ea4a : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007eb7f : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000016e155 : mov esi, 0xbd90fffc ; cld ; jmp qword ptr [rax]
0x000000000015ff49 : mov esi, 0xbecafff5 ; cmc ; call rsp
0x00000000000912cd : mov esi, 0xc0844507 ; jne 0x912c1 ; xor eax, eax ; ret
0x00000000001593de : mov esi, 0xc2c1c0bf ; ret
0x000000000008191b : mov esi, 0xc3d089d6 ; xor edx, edx ; mov eax, edx ; ret
0x00000000000efb32 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000022302 : mov esi, 0xc8b2404 ; xchg byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000009117d : mov esi, 0xc984070c ; jne 0x91178 ; ret
0x0000000000091205 : mov esi, 0xca390714 ; je 0x91208 ; ret
0x0000000000091131 : mov esi, 0xd2840714 ; jne 0x91130 ; ret
0x0000000000050b5e : mov esi, 0xeb0001d6 ; ret 0x2dbe
0x0000000000002bcd : mov esi, 0xf8cbeb8f ; ret
0x000000000003a29f : mov esi, 0xfc8341c9 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000010a813 : mov esi, 1 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000068be9 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000010a933 : mov esi, 2 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001137b5 : mov esi, 3 ; mov rdi, r13 ; call qword ptr [rax]
0x000000000010a9de : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000bd54e : mov esi, dword ptr [rbp - 0x1c0] ; mov rdx, rax ; jmp 0xbd57e
0x00000000000b6a41 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022808 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000060a86 : mov esi, dword ptr [rip + 0x3444d4] ; call rax
0x000000000005810a : mov esi, dword ptr [rip + 0x34ce50] ; call rax
0x0000000000056893 : mov esi, dword ptr [rip + 0x34e6c7] ; call rax
0x0000000000051307 : mov esi, dword ptr [rip + 0x353c53] ; call rax
0x000000000004bc53 : mov esi, dword ptr [rip + 0x359307] ; call rax
0x0000000000046407 : mov esi, dword ptr [rip + 0x35eb53] ; call rax
0x0000000000043e2a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000109fb8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000022e84 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000007c0eb : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000007cbb5 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x00000000000aaed3 : mov esi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000000f06ec : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000007c683 : mov esi, dword ptr [rsp] ; jmp rax
0x00000000000fd5e1 : mov esi, dword ptr [rsp] ; mov rdi, r12 ; call rax
0x000000000008cada : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x8caf5 ; jmp 0x8caaf
0x000000000001f900 : mov esi, eax ; call 0xebc04
0x000000000005a86c : mov esi, eax ; mov r13, rbx ; jmp 0x56b6a
0x00000000000da1b1 : mov esi, eax ; mov rdi, r13 ; call 0xd6417
0x0000000000109eed : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000036603 : mov esi, ebp ; call r12
0x000000000007f219 : mov esi, ebp ; call rax
0x000000000009dc8f : mov esi, ebp ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000007f3d5 : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000005e5c7 : mov esi, ebp ; mov rdi, r9 ; call 0x8a7e7
0x000000000007f58d : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000011cb4e : mov esi, ebp ; pop rbp ; jmp rax
0x0000000000112cc8 : mov esi, ebx ; call qword ptr [rax]
0x000000000015ef09 : mov esi, ebx ; jmp qword ptr [rax]
0x00000000000e614e : mov esi, ebx ; mov rdi, r13 ; call r14
0x000000000007f2e8 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000011408d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000c22d2 : mov esi, ebx ; mov rdi, rbp ; call r12
0x000000000011688e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000015ef21 : mov esi, ebx ; push rax ; mov esi, ebx ; jmp qword ptr [rax]
0x0000000000023f07 : mov esi, ecx ; mov rdi, r15 ; call 0x80207
0x000000000010871c : mov esi, edi ; xor edx, edx ; mov rdi, rbx ; call r10
0x000000000010f7ca : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x0000000000078852 : mov esi, edx ; call qword ptr [rax]
0x00000000000f3598 : mov esi, edx ; call rax
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000017ecac : mov esi, edx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000111d84 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000bb899 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000111524 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aab45 : mov esi, esi ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000072402 : mov esi, esp ; call 0x461c9
0x00000000000db22a : mov esi, esp ; call 0xe0c69
0x0000000000115c25 : mov esi, esp ; call qword ptr [rax]
0x00000000000f8c33 : mov esi, esp ; mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x000000000011354f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000010c445 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000efce4 : mov esi, esp ; mov rdi, rbx ; call r14
0x000000000007ec82 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000016fa74 : mov esi, fs ; add byte ptr [rax], al ; jmp 0xffffffffd516ea58
0x000000000016f054 : mov esp, 0x140000a1 ; cdq ; in al, dx ; call rsp
0x00000000001744d4 : mov esp, 0x140002c1 ; cli ; jmp rsp
0x00000000000ca0f6 : mov esp, 0x15024 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000098448 : mov esp, 0x1d8d4cd2 ; ret
0x0000000000170e0c : mov esp, 0x24000168 ; call rsp
0x000000000017b354 : mov esp, 0x28000062 ; ret
0x0000000000186e54 : mov esp, 0x2800011d ; jmp qword ptr [rcx]
0x000000000017204c : mov esp, 0x340001df ; fdivr st(6), st(0) ; call rsp
0x00000000001723dc : mov esp, 0x340001f1 ; cmp bh, dh ; call rsp
0x0000000000189a6c : mov esp, 0x37000145 ; hlt ; jmp qword ptr [rax]
0x000000000019c354 : mov esp, 0x38000272 ; ret
0x000000000016f3fc : mov esp, 0x40000b7 ; push rsp ; in eax, dx ; call rsp
0x00000000000e2e33 : mov esp, 0x401f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174c64 : mov esp, 0x440002ee ; in eax, dx ; cli ; call rsp
0x0000000000085bf7 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000114292 : mov esp, 0x440f49dd ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000084f21 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000084f51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000084f41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000176a54 : mov esp, 0x48000019 ; jl 0x176a4d ; call qword ptr [rbx]
0x0000000000177454 : mov esp, 0x48000023 ; ret
0x000000000016eb24 : mov esp, 0x54000084 ; add esp, ebp ; call rsp
0x0000000000170914 : mov esp, 0x5400014c ; add ecx, esi ; call rsp
0x000000000017422c : mov esp, 0x540002af ; idiv ecx ; call rsp
0x0000000000179854 : mov esp, 0x58000047 ; ja 0x17984e ; call qword ptr [rsi]
0x000000000016e20c : mov esp, 0x62fffcb7 ; mov bh, 0xfc ; call rdx
0x00000000001729bc : mov esp, 0x6400020c ; test al, 0xf7 ; call rsp
0x000000000018ef54 : mov esp, 0x6800019e ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x0000000000170f6c : mov esp, 0x74000171 ; call rsp
0x0000000000171f54 : mov esp, 0x740001db ; sal dh, 1 ; call rsp
0x0000000000174c94 : mov esp, 0x740002ef ; cli ; call rsp
0x0000000000192054 : mov esp, 0x780001cf ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000016fc84 : mov esp, 0x790000f7 ; out dx, eax ; out dx, eax ; jmp rsp
0x000000000016ea24 : mov esp, 0x84000081 ; std ; jmp 0x16ea32
0x0000000000170424 : mov esp, 0x8400012c ; mov al, dh ; call rsp
0x0000000000170b64 : mov esp, 0x84000159 ; insd dword ptr [rdi], dx ; int1 ; call rsp
0x0000000000172cdc : mov esp, 0x84000218 ; fdivr st(7), st(0) ; call rsp
0x000000000018ab54 : mov esp, 0x8800015a ; salc ; call rcx
0x0000000000069aa3 : mov esp, 0x89480000 ; fucompi st(0) ; ret 0xfb59
0x00000000000fab7c : mov esp, 0x8948002a ; ret 0xb9
0x000000000007bd6f : mov esp, 0x8b824 ; add al, ch ; ret
0x000000000017376c : mov esp, 0x9400025f ; ret
0x0000000000184e54 : mov esp, 0x980000fd ; ret
0x000000000018c354 : mov esp, 0x98000172 ; cmc ; hlt ; jmp qword ptr [rcx]
0x0000000000191d54 : mov esp, 0x980001cc ; sub dh, dh ; jmp qword ptr [rsi]
0x00000000000f590c : mov esp, 0xa024 ; add al, ch ; stc ; ret 0xfff8
0x00000000001703b4 : mov esp, 0xb400012a ; jg 0x1703b2 ; call rsp
0x0000000000174e44 : mov esp, 0xb400015c ; jne 0x174e4d ; call rsp
0x000000000016e161 : mov esp, 0xbc40fffc ; cld ; call rax
0x000000000016e35d : mov esp, 0xbc50fffc ; cld ; jmp rax
0x000000000016e21d : mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x0000000000154aa0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x0000000000085be6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000005b85b : mov esp, 0xc748ffff ; ret
0x0000000000186354 : mov esp, 0xc8000112 ; adc esi, edx ; call rsi
0x000000000018c154 : mov esp, 0xc8000170 ; hlt ; jmp qword ptr [rcx]
0x0000000000081dbb : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000017c36f : mov esp, 0xd1cffee ; jl 0x17c33a ; out dx, al ; jmp qword ptr [rdx]
0x0000000000172aac : mov esp, 0xd400020f ; mov al, 0xf7 ; call rsp
0x0000000000173cec : mov esp, 0xd4000287 ; pop rax ; stc ; call rsp
0x000000000016fbdc : mov esp, 0xd60000f2 ; out 0xef, al ; jmp rsp
0x000000000017067c : mov esp, 0xe4000147 ; fdiv st(0) ; call rsp
0x0000000000172634 : mov esp, 0xe40001fc ; movsxd rsi, edi ; call rsp
0x000000000018e254 : mov esp, 0xe8000191 ; cmc ; jmp qword ptr [rcx]
0x000000000016e92c : mov esp, 0xf400007b ; iretd ; jmp 0x16e93a
0x0000000000187354 : mov esp, 0xf8000122 ; jmp qword ptr [ecx]
0x000000000008c59b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000084f31 : mov esp, 0xf80148c0 ; ret
0x000000000016e065 : mov esp, dr1 ; call rax
0x000000000016dfe5 : mov esp, dr1 ; jmp rsp
0x000000000016f94c : mov esp, ds ; add byte ptr [rax], al ; push 0xbf ; out dx, eax ; call rsp
0x0000000000113c4c : mov esp, dword ptr [rax] ; jmp 0x113c5a
0x0000000000021741 : mov esp, eax ; call 0x9baf8
0x000000000001f910 : mov esp, eax ; call 0xebc04
0x0000000000034f59 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x0000000000183711 : mov esp, edi ; call qword ptr [rdx]
0x000000000015ed41 : mov esp, edi ; call rax
0x0000000000187034 : mov esp, edi ; int1 ; jmp qword ptr [rdx]
0x000000000016dec1 : mov esp, edi ; jmp qword ptr [rax + 0x10fffc88]
0x000000000015ed7d : mov esp, edi ; jmp qword ptr [rax]
0x000000000016dffd : mov esp, edi ; jmp rsp
0x000000000016df41 : mov esp, edi ; push qword ptr [rdx - 0x78] ; cld ; jmp rdx
0x0000000000183d24 : mov esp, gs ; add byte ptr [rax], al ; test al, 0xe0 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001797f4 : mov fs, word ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x000000000016d750 : mov gs, word ptr [rbx - 4] ; call qword ptr [rax]
0x0000000000053a84 : mov qword ptr [r12 + 8], rdx ; jmp 0x53a53
0x0000000000113a5a : mov qword ptr [r12], rcx ; pop r12 ; ret
0x000000000004927e : mov qword ptr [r15 + 8], rdx ; jmp 0x4924b
0x000000000010ed13 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x000000000010ede2 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000103da7 : mov qword ptr [r9], r10 ; ret
0x0000000000103de8 : mov qword ptr [r9], rdi ; ret
0x000000000006dea8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006dee8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e5a00 : mov qword ptr [rax + 0x10], rsi ; ret
0x000000000006e448 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000072e48 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c437a : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000c43ac : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000006deac : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000006e4e6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000014c876 : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000076539 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000677c4 : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000007e924 : mov qword ptr [rax + 8], rsi ; ret
0x00000000000e10f7 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000b61c1 : mov qword ptr [rax], 0 ; jmp 0xb6195
0x0000000000045f3b : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006e614 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000006c819 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000007bfa5 : mov qword ptr [rax], rdi ; ret
0x00000000000e84e0 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e053 : mov qword ptr [rax], rdx ; ret
0x000000000006ea00 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000514b0 : mov qword ptr [rbp - 0x1188], rcx ; jmp rax
0x0000000000065193 : mov qword ptr [rbp - 0x140], rax ; jmp 0x61420
0x0000000000065141 : mov qword ptr [rbp - 0x140], rcx ; jmp 0x61420
0x0000000000022d12 : mov qword ptr [rbp - 0x58], rax ; call rcx
0x0000000000046577 : mov qword ptr [rbp - 0x5c0], rcx ; jmp rax
0x00000000000f419b : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r12 ; call rax
0x000000000007ec90 : mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b6a6 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000011da75 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000073a46 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000074218 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000116a51 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011da22 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000116aa8 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075ea2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000cfc6a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000ac24d : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072e74 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000007fa71 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000e04f5 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000075f0a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000073936 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00000000000c242b : mov qword ptr [rbx + 8], rax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc2400
0x000000000007609c : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007fd2c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e5611 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000011dc1d : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001138f1 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000de3f6 : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000007f9b4 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000010ecfb : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002187c : mov qword ptr [rcx + 0x968], rdx ; ret
0x0000000000141d43 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141d53 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141d63 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141d73 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000c48db : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000070f53 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000141d00 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000141d20 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000141d30 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000141d40 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000141d50 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000141d60 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000141d70 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000141d10 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000141cf0 : mov qword ptr [rcx], rdx ; ret
0x00000000000db1ba : mov qword ptr [rdi + 0x100], rdx ; ret
0x00000000000448ae : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009878c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000995dc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009711c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000970fc : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009b04c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000097def : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009715f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009717f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000097140 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e598a : mov qword ptr [rdi + 0x10], rsi ; mov qword ptr [rdx], rdi ; ret
0x0000000000075e32 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073206 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000116733 : mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000001166d0 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001166f5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000ab68c : mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x000000000010cd4e : mov qword ptr [rdi + 0x20], rdx ; ret
0x0000000000111dfb : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000008afc8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000111db3 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x0000000000075e62 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000035af8 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000da90d : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009874c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009959c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000970bc : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009b00c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009876c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000995bc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000970dc : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009b02c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001345e7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134577 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134507 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000134497 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009864a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009948a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000134427 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009700a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000009aefa : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009866a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000994aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000001343b7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009701a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000009af1a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009868a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000994ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000134347 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009702a : mov qword ptr [rdi + 7], rdx ; ret
0x000000000009af3a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000e30e7 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000044063 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000044833 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000075e36 : mov qword ptr [rdi + 8], rax ; ret
0x000000000007357e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000010d50c : mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x0000000000038849 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000e30d7 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000085711 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000012b8a4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b8e2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000004479e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000012bc2b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133df7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012be0b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133d77 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012bffb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133cf7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000012c1cc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133c68 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c3cc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133bd8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012c5cc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000133b48 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000097f70 : mov qword ptr [rdi - 1], rdx ; ret
0x0000000000044729 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000012b8a8 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000012b8e6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000012ba5b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bb57 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012baa3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133e77 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000502a5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000446f8 : mov qword ptr [rdi], r9 ; ret
0x00000000000459dd : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000e30d4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000008ae09 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000103321 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000985d6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000097c96 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000096fe6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000096ff6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000097007 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000097017 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000097027 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x0000000000038859 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008570e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000096fd7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000008ad88 : mov qword ptr [rdi], rcx ; ret
0x00000000000985c3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000993f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000097f90 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000097fb0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000097fc0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000097fd0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000097fe0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000097fa0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fb33 : mov qword ptr [rdi], rdx ; ret
0x000000000009ae63 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000103336 : mov qword ptr [rdi], rsi ; ret
0x0000000000103f2a : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x0000000000069fe6 : mov qword ptr [rdx + 0x140], rcx ; ret
0x0000000000073aa4 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x000000000006d2fd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x000000000006d4b3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000010c4bf : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000010c49b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010c49f : mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001440fa : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000013fd6a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000014411a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000013fd8a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000014413a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000013fdaa : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000143fca : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000013fc9a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000111570 : mov qword ptr [rdx + 8], rdi ; ret
0x0000000000143f73 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001115c7 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000013fc43 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000071c6e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000840fd : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000006e215 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000076ea3 : mov qword ptr [rdx], rcx ; ret
0x00000000000cf3ba : mov qword ptr [rdx], rdi ; ret
0x000000000011156d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f54b7 : mov qword ptr [rip + 0x2b3ce2], rdx ; pop rbp ; ret
0x00000000000ee356 : mov qword ptr [rip + 0x2b84a3], rax ; call 0x6a5f9
0x00000000000ea6bf : mov qword ptr [rip + 0x2bab5a], rbx ; pop rbx ; ret
0x00000000000e2424 : mov qword ptr [rip + 0x2c4395], rax ; mov rdx, rax ; jmp 0xe23c8
0x00000000000e3835 : mov qword ptr [rip + 0x2c4934], rax ; mov rdx, rax ; jmp 0xe3819
0x0000000000083ce1 : mov qword ptr [rip + 0x323c20], rax ; ret
0x000000000007e930 : mov qword ptr [rip + 0x328f39], rsi ; ret
0x000000000002171a : mov qword ptr [rip + 0x383ab7], rax ; pop r12 ; ret
0x00000000000cff73 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000010b6fe : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000038e05 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e59c3 : mov qword ptr [rsi + 0x10], rdx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000387c7 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000006e924 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000da87e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000cff56 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000010b6ce : mov qword ptr [rsi + 8], rax ; ret
0x00000000000cff6f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000e59fc : mov qword ptr [rsi + 8], rdx ; mov qword ptr [rax + 0x10], rsi ; ret
0x00000000001021c5 : mov qword ptr [rsi + rdx - 0xb8], rcx ; ret
0x0000000000077eba : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000007320a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000103378 : mov qword ptr [rsi], rdi ; ret
0x00000000000f8cc8 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000007ab7d : mov qword ptr [rsp + 0x10], rax ; call rdx
0x000000000007a94a : mov qword ptr [rsp + 0x28], r15 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007a979 : mov qword ptr [rsp + 0x28], rdx ; call rax
0x000000000010a462 : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000007fa1f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000027712 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000116b6b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000788a2 : mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000011305f : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x000000000010add7 : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000002782c : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000d44c0 : mov qword ptr [rsp], rax ; call r12
0x00000000000b6d3c : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000002e82c : mov qword ptr fs:[rax], rdx ; ret
0x00000000001138f0 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000091b53 : mov r10, r8 ; jmp 0x91b4b
0x000000000015abbd : mov r10d, 0xcac982a4 ; call 0xffffffffaed84a3f
0x0000000000119543 : mov r10d, dword ptr [rbp - 0xc0] ; jmp 0x119517
0x00000000000e9c7b : mov r11b, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000021740 : mov r12, rax ; call 0x9baf9
0x0000000000113c4b : mov r12d, dword ptr [rax] ; jmp 0x113c5b
0x000000000001f90f : mov r12d, eax ; call 0xebc05
0x000000000001f8fc : mov r13, rax ; mov rsi, rax ; call 0xebc08
0x000000000005a86e : mov r13, rbx ; jmp 0x56b68
0x00000000000b22e0 : mov r13d, dword ptr [rax + 8] ; jmp 0xb22ad
0x0000000000078851 : mov r14, rdx ; call qword ptr [rax]
0x000000000016cff4 : mov r14b, 0xfd ; call rcx
0x000000000005a86b : mov r14d, eax ; mov r13, rbx ; jmp 0x56b6b
0x00000000000e5c21 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000021dc5 : mov r8, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000112cc1 : mov r8, r12 ; mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x0000000000071278 : mov r8d, esi ; ret
0x0000000000039213 : mov r9, rax ; jmp 0x3910b
0x000000000003967f : mov r9, rdi ; jmp 0x395cb
0x00000000000e3182 : mov r9, rsi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000011dee6 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000b9a7b : mov rax, -0xe ; ret
0x0000000000073940 : mov rax, -1 ; pop rbx ; ret
0x0000000000035026 : mov rax, -1 ; ret
0x000000000009cf20 : mov rax, 1 ; ret
0x000000000009cf30 : mov rax, 2 ; ret
0x000000000009cf40 : mov rax, 3 ; ret
0x000000000009cf50 : mov rax, 4 ; ret
0x000000000009cf60 : mov rax, 5 ; ret
0x000000000009cf70 : mov rax, 6 ; ret
0x000000000009cf80 : mov rax, 7 ; ret
0x000000000011da87 : mov rax, qword ptr [rax + 0x108] ; jmp rax
0x000000000011dbcb : mov rax, qword ptr [rax + 0x10] ; jmp rax
0x00000000000eaae7 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000eab32 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000075f3b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000006e72a : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e60a : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000000f44df : mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000762c7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000111483 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000743c4 : mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x000000000006bbd2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007643b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000006bdbc : mov rax, qword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000070843 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000111d33 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e77b8 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000e77c0 : mov rax, qword ptr [rax + 0xc8] ; ret
0x000000000011d98e : mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x00000000000230a6 : mov rax, qword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x0000000000115b34 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000e7799 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002bc99 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2bcad ; call rax
0x000000000002e5a4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e09e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000115b29 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002d63b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000038282 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000107418 : mov rax, qword ptr [rax] ; ret
0x000000000007cfc3 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7cfd5 ; call rax
0x00000000000e5c24 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000b69ba : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000023930 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000072e70 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000b9fa7 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xb9fbb ; call rax
0x00000000001138b9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1138d1 ; pop rbx ; ret
0x0000000000113925 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1138e5 ; pop rbx ; ret
0x00000000000ba1a4 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xba1bc ; call rax
0x000000000013fc40 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000116a7b : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116690 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000b6360 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000010b736 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072eb0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000010b76e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000072da0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000070840 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000077150 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000010c350 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x0000000000116458 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000116468 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000115b30 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000115b25 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000115c20 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000f4cb4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002e542 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010bba7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000cf3b7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000076e90 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x76e91 ; ret
0x000000000011b290 : mov rax, qword ptr [rip + 0x287869] ; jmp rax
0x000000000011b240 : mov rax, qword ptr [rip + 0x2878b1] ; pop r12 ; jmp rax
0x000000000011b1e0 : mov rax, qword ptr [rip + 0x287909] ; pop r12 ; jmp rax
0x000000000011b2f1 : mov rax, qword ptr [rip + 0x28b430] ; call qword ptr [rax]
0x000000000011acd5 : mov rax, qword ptr [rip + 0x28ba4c] ; call qword ptr [rax]
0x0000000000101070 : mov rax, qword ptr [rip + 0x2a5839] ; ret
0x000000000007abfe : mov rax, qword ptr [rip + 0x32a1b3] ; xor edi, edi ; call qword ptr [rax]
0x0000000000077130 : mov rax, qword ptr [rip + 0x32ef09] ; ret
0x000000000002af60 : mov rax, qword ptr [rip + 0x37b9b9] ; ret
0x0000000000023110 : mov rax, qword ptr [rip + 0x3872b1] ; ret
0x0000000000023100 : mov rax, qword ptr [rip + 0x3872d1] ; ret
0x000000000002d620 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000011d545 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021b3e : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000ba560 : mov rax, qword ptr [rsp + 0x20] ; jmp 0xba530
0x00000000000aaed7 : mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000002971e : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027827 : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000002ec1c : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000e1265 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000e208f : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000e13af : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000eb1d2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000eb233 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000107417 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000084100 : mov rax, r10 ; pop rbx ; ret
0x00000000000f5faf : mov rax, r10 ; ret
0x000000000008b301 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab84a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008ca3a : mov rax, r12 ; pop r12 ; ret
0x00000000000e210a : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000068b11 : mov rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000698bf : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b643c : mov rax, r14 ; pop r14 ; ret
0x0000000000077fda : mov rax, r8 ; nop dword ptr [rax] ; ret
0x0000000000077ebd : mov rax, r8 ; ret
0x00000000000aa7c8 : mov rax, rbp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000747d9 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006cbd9 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b318 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000069ee1 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000e588f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006b2eb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073b1c : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007337f : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008b1e6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b6b31 : mov rax, rbx ; call rax
0x00000000000e72fe : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002b815 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006a299 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000325ce : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003859a : mov rax, rbx ; pop rbx ; ret
0x000000000002ed82 : mov rax, rcx ; pop r13 ; ret
0x000000000002ed08 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000032ff4 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eba9 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000033b7e : mov rax, rcx ; pop rbx ; ret
0x0000000000033b88 : mov rax, rcx ; ret
0x00000000000f5e4e : mov rax, rdi ; add rsp, 8 ; ret
0x0000000000045e28 : mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000038200 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000091bfb : mov rax, rdi ; jne 0x91c13 ; ret
0x000000000009d98b : mov rax, rdi ; jne 0x9d9a3 ; ret
0x00000000000e31e9 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000091066 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009d6fa : mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000002ef4b : mov rax, rdi ; pop r13 ; ret
0x000000000002ef35 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f6080 : mov rax, rdi ; pop rbx ; ret
0x0000000000077160 : mov rax, rdi ; ret
0x00000000000f8a09 : mov rax, rdi ; sar rax, 6 ; ret
0x000000000011db3b : mov rax, rdx ; add rsp, 0x28 ; ret
0x00000000000ae2fb : mov rax, rdx ; add rsp, 8 ; ret
0x000000000006bcea : mov rax, rdx ; pop r12 ; ret
0x00000000000b6042 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c4ea : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006be8a : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000430b1 : mov rax, rdx ; pop rbx ; ret
0x0000000000044239 : mov rax, rdx ; ret
0x00000000000b7190 : mov rax, rsi ; add rsp, 8 ; ret
0x0000000000037cd9 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000fd517 : mov rax, rsi ; pop rbx ; ret
0x0000000000045df0 : mov rax, rsi ; ret
0x0000000000034f5b : mov rbp, r9 ; jmp rdx
0x00000000000f53a3 : mov rbp, rsp ; pop rbp ; ret
0x000000000010bf7a : mov rbx, rax ; jne 0x10bf1a ; xor eax, eax ; pop rbx ; ret
0x00000000000e0d9e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007e071 : mov rbx, rbp ; call 0x6a2e5
0x0000000000076166 : mov rbx, rdi ; je 0x76176 ; pop rbx ; ret
0x000000000002ce65 : mov rbx, rdi ; test rax, rax ; je 0x2ce77 ; call rax
0x0000000000075246 : mov rbx, rdx ; jne 0x75256 ; pop rbx ; ret
0x000000000001f8eb : mov rbx, rsi ; sub rsp, 0x68 ; call 0xebb79
0x000000000002c020 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2c034 ; call rcx
0x00000000000c3c76 : mov rcx, qword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xc3c9a
0x00000000001097e6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000076ea0 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000096fc0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000010f174 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010ef7d : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000010b38d : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000009e581 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000112cc4 : mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x000000000009de2a : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000091355 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000091343 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000009db45 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000009de2d : mov rdi, qword ptr [r13] ; call r12
0x0000000000022d0e : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x00000000000bcd57 : mov rdi, qword ptr [rbp - 0x310] ; call r15
0x00000000000b6a44 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000d4132 : mov rdi, qword ptr [rbp - 0xa8] ; call r12
0x0000000000023059 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000043ae9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006a0e8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006a0bc : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007324b : mov rdi, qword ptr [rdi] ; call 0x1f475
0x00000000000f3593 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002ad15 : mov rdi, qword ptr [rsp + 0x18] ; call r15
0x0000000000025151 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027126 : mov rdi, qword ptr [rsp + 0x48] ; call rax
0x000000000002770e : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026b9d : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000021d73 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x000000000001fe6d : mov rdi, r12 ; call qword ptr [r14]
0x000000000007cbb9 : mov rdi, r12 ; call rax
0x00000000000adda0 : mov rdi, r13 ; call 0x6a0a5
0x00000000000da1b3 : mov rdi, r13 ; call 0xd6415
0x00000000001137ba : mov rdi, r13 ; call qword ptr [rax]
0x00000000000e6150 : mov rdi, r13 ; call r14
0x000000000007f2ea : mov rdi, r13 ; call rdx
0x0000000000022804 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000070ba3 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000010b127 : mov rdi, r14 ; call rax
0x000000000002392d : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000007eda1 : mov rdi, r14 ; mov rdx, r15 ; call rax
0x0000000000023f09 : mov rdi, r15 ; call 0x80205
0x000000000007a94f : mov rdi, r15 ; call qword ptr [rax]
0x00000000000b6670 : mov rdi, r15 ; call rbx
0x000000000007f212 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000005e5c9 : mov rdi, r9 ; call 0x8a7e5
0x000000000007fa75 : mov rdi, r9 ; call rcx
0x00000000000d4a32 : mov rdi, rax ; call r12
0x00000000001097e3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000010a9e3 : mov rdi, rbp ; call qword ptr [rax]
0x000000000010c01d : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000c22d4 : mov rdi, rbp ; call r12
0x0000000000109fbc : mov rdi, rbp ; call r14
0x000000000010a1b9 : mov rdi, rbp ; call rax
0x000000000009e27c : mov rdi, rbp ; call rbx
0x0000000000116890 : mov rdi, rbp ; call rcx
0x000000000010bc3b : mov rdi, rbp ; call rdx
0x000000000010f171 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010ef7a : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000010b595 : mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000073253 : mov rdi, rbx ; call 0x1f475
0x000000000010a818 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000108720 : mov rdi, rbx ; call r10
0x000000000002af16 : mov rdi, rbx ; call r12
0x00000000000efce6 : mov rdi, rbx ; call r14
0x000000000002329c : mov rdi, rbx ; call r15
0x000000000004d6ca : mov rdi, rbx ; call rax
0x000000000011d542 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000010b38a : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000113176 : mov rdi, rbx ; pop rbx ; jmp 0x1f476
0x000000000006e726 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e606 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000011cb49 : mov rdi, rbx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000011598f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f4cb7 : mov rdi, rdx ; jmp rax
0x00000000001098e5 : mov rdi, rsp ; call rax
0x0000000000115a00 : mov rdi, rsp ; call rdx
0x00000000000f4ea9 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0xf4ea9 ; leave ; ret
0x0000000000072e44 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000ba124 : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xba13c ; call rdx
0x0000000000021b3b : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000078faf : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x78fc1 ; call rdx
0x000000000014bd08 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x14bd21 ; call rdx
0x000000000014bbff : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x14bc13 ; call rdx
0x0000000000047217 : mov rdx, qword ptr [rip + 0x35f53a] ; call qword ptr [rdx + rax*8 - 0x40]
0x000000000012ba10 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000096fb0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b6d40 : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000011dee9 : mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000f3a47 : mov rdx, r12 ; call rax
0x00000000000743c1 : mov rdx, r12 ; mov rax, qword ptr [rax + 0x40] ; pop r12 ; jmp rax
0x00000000000f3dc3 : mov rdx, r13 ; call rax
0x000000000009e279 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000011354b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002067b : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x20692
0x000000000006fc81 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x000000000010ced0 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000007eda4 : mov rdx, r15 ; call rax
0x0000000000045bf9 : mov rdx, r8 ; jmp 0x45c13
0x00000000000c4d1d : mov rdx, r8 ; jmp 0xc4d30
0x000000000011db45 : mov rdx, rax ; jmp 0x11db3d
0x000000000011dba7 : mov rdx, rax ; jmp 0x11db96
0x00000000000488c2 : mov rdx, rax ; jmp 0x48900
0x0000000000048ab7 : mov rdx, rax ; jmp 0x48adf
0x00000000000bd554 : mov rdx, rax ; jmp 0xbd578
0x00000000000de397 : mov rdx, rax ; jmp 0xde35f
0x00000000000e242b : mov rdx, rax ; jmp 0xe23c1
0x00000000000e383c : mov rdx, rax ; jmp 0xe3812
0x00000000000f0242 : mov rdx, rax ; jmp rcx
0x0000000000022e80 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000010cdcc : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000b600c : mov rdx, rbp ; xor eax, eax ; jmp 0xb5fdb
0x00000000000f3e43 : mov rdx, rbx ; call rax
0x000000000007f215 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x000000000007f3d1 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bd54d : mov rsi, qword ptr [rbp - 0x1c0] ; mov rdx, rax ; jmp 0xbd57f
0x00000000000b6a40 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x0000000000022807 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000060a85 : mov rsi, qword ptr [rip + 0x3444d4] ; call rax
0x0000000000058109 : mov rsi, qword ptr [rip + 0x34ce50] ; call rax
0x0000000000056892 : mov rsi, qword ptr [rip + 0x34e6c7] ; call rax
0x0000000000051306 : mov rsi, qword ptr [rip + 0x353c53] ; call rax
0x000000000004bc52 : mov rsi, qword ptr [rip + 0x359307] ; call rax
0x0000000000046406 : mov rsi, qword ptr [rip + 0x35eb53] ; call rax
0x0000000000043e29 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000109fb7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000022e83 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000007c0ea : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000007cbb4 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x00000000000f06eb : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007c682 : mov rsi, qword ptr [rsp] ; jmp rax
0x00000000000fd5e0 : mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x000000000011354e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000efce3 : mov rsi, r12 ; mov rdi, rbx ; call r14
0x000000000007ec81 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x000000000007f218 : mov rsi, r13 ; call rax
0x000000000009dc8e : mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000007f3d4 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000005e5c6 : mov rsi, r13 ; mov rdi, r9 ; call 0x8a7e8
0x00000000000aab44 : mov rsi, r14 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f8ff : mov rsi, rax ; call 0xebc05
0x00000000000da1b0 : mov rsi, rax ; mov rdi, r13 ; call 0xd6418
0x0000000000036602 : mov rsi, rbp ; call r12
0x000000000007f58c : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011cb4d : mov rsi, rbp ; pop rbp ; jmp rax
0x0000000000112cc7 : mov rsi, rbx ; call qword ptr [rax]
0x00000000000e614d : mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000007f2e7 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000011408c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000c22d1 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000011688d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000023f06 : mov rsi, rcx ; mov rdi, r15 ; call 0x80208
0x000000000010871b : mov rsi, rdi ; xor edx, edx ; mov rdi, rbx ; call r10
0x000000000010f7c9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000000f3597 : mov rsi, rdx ; call rax
0x0000000000115c24 : mov rsi, rsp ; call qword ptr [rax]
0x000000000010c444 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000034f58 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000001192fc : mov word ptr [r15], cs ; xchg eax, esp ; ret 0xea83
0x00000000000e0a23 : mov word ptr [r8 + 0x21], si ; ret
0x000000000018d924 : mov word ptr [rax + 0x47880001], cs ; cmc ; jmp rdx
0x000000000016f3ac : mov word ptr [rax + rax - 0x12ad8300], dr0 ; call rsp
0x00000000000d9a50 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000085701 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000c798b : mov word ptr [rax - 0x7b], cs ; rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000977b0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x0000000000187124 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; jmp qword ptr [rcx]
0x0000000000172eec : mov word ptr [rax], gs ; add al, byte ptr [rax] ; add r15d, eax ; call rsp
0x0000000000171a94 : mov word ptr [rbp + 0x63740001], dr1 ; cmc ; call rsp
0x0000000000141cd2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000141d13 : mov word ptr [rcx + 8], dx ; ret
0x0000000000171c4c : mov word ptr [rcx + rax - 0x9e66600], dr0 ; call rsp
0x000000000018f524 : mov word ptr [rcx + rax - 0xa618800], fs ; jmp qword ptr [rcx]
0x00000000001715dc : mov word ptr [rcx + rax - 0xb6ca900], ds ; call rsp
0x0000000000189524 : mov word ptr [rcx + rax], es ; mov byte ptr [rbx], bl ; jmp qword ptr [rcx]
0x00000000000ca156 : mov word ptr [rcx + rsi*2], fs ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x000000000018f224 : mov word ptr [rcx - 0x6597ffff], fs ; cmc ; jmp qword ptr [rcx]
0x0000000000141ca0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000141c90 : mov word ptr [rcx], dx ; ret
0x0000000000171355 : mov word ptr [rcx], es ; add ah, ah ; hlt ; jmp rsp
0x000000000018dcf5 : mov word ptr [rcx], es ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rax]
0x00000000000986cc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009951c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009705c : mov word ptr [rdi + 0x10], cx ; ret
0x000000000009af8c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000987d4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000099624 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000097144 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000009b094 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000016f2d4 : mov word ptr [rdi + 0x29440000], gs ; in eax, dx ; jmp rsp
0x0000000000134887 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000038edf : mov word ptr [rdi + 2], dx ; ret
0x00000000001733bc : mov word ptr [rdi + 2], es ; add bl, cl ; mov eax, edi ; call rsp
0x00000000000910f2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000993c8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000091052 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000096f98 : mov word ptr [rdi + 4], dx ; ret
0x000000000009ae38 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009942a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000985ea : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000096fda : mov word ptr [rdi + 8], dx ; ret
0x000000000009ae9a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000012bfac : mov word ptr [rdi - 2], cx ; ret
0x000000000012bdc4 : mov word ptr [rdi - 2], dx ; ret
0x000000000012bfa8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000001192fd : mov word ptr [rdi], cs ; xchg eax, esp ; ret 0xea83
0x0000000000096f63 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000097c36 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000013488b : mov word ptr [rdi], cx ; ret
0x0000000000098553 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000099373 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000096f53 : mov word ptr [rdi], dx ; ret
0x000000000009ade3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000910b0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000091010 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000da940 : mov word ptr [rdi], si ; xor al, al ; ret
0x0000000000196824 : mov word ptr [rdi], ss ; add al, byte ptr [rax] ; call 0xffffffffd3195ee9
0x000000000018bb24 : mov word ptr [rdx + 1], gs ; add byte ptr [rax - 0x49], bl ; hlt ; jmp rdx
0x0000000000144048 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000093d0d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000093d91 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x0000000000173eb4 : mov word ptr [rdx - 0x616ffffe], ss ; stc ; call rsp
0x0000000000143ff3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000093ca8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000eab26 : mov word ptr [rdx], ax ; ret
0x0000000000170094 : mov word ptr [rdx], ss ; add dword ptr [rax], eax ; xchg byte ptr [rdx - 0x10], al ; call rsp
0x00000000001843ea : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000df925 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000038e4f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000038e96 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000da923 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000034c44 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034e14 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000192402 : movabs al, byte ptr [0x41200e0a01020320] ; ret
0x00000000000de068 : movabs al, byte ptr [0x840f01f883000001] ; ret
0x00000000000ccca1 : movabs al, byte ptr [0x840f10c2f6000000] ; ret 0x13
0x0000000000060cbd : movabs al, byte ptr [0x840fc08548000000] ; ret 0x35
0x0000000000059124 : movabs al, byte ptr [0x8900000000fffffd] ; ret
0x00000000000ab76c : movabs al, byte ptr [0x8948ef8948fffd64] ; ret
0x000000000017aefe : movabs al, byte ptr [0xeda2f50d1cffee24] ; jmp qword ptr [rdx]
0x000000000017da96 : movabs al, byte ptr [0xeec8190d1cffeec8] ; jmp qword ptr [rdx]
0x0000000000186f56 : movabs al, byte ptr [0xf1fc5d0d1cfff1fe] ; jmp qword ptr [rdx]
0x000000000015ff38 : movabs byte ptr [0x69fff5beacfff5be], al ; ret
0x00000000000bc79a : movabs byte ptr [0x8948c08548ffff97], al ; ret
0x0000000000180cee : movabs byte ptr [0xef27f30d1cffef2a], al ; jmp qword ptr [rdx]
0x0000000000194796 : movabs byte ptr [0xf5c41d0d1cfff5c4], al ; jmp qword ptr [rdx]
0x00000000000c7729 : movabs dword ptr [0x3901408d41000009], eax ; ret 0x8e0f
0x00000000000c3723 : movabs dword ptr [0x5bffffff67820fca], eax ; ret
0x0000000000020e8a : movabs dword ptr [0x8348c5ff411972c1], eax ; ret
0x0000000000194aa6 : movabs dword ptr [0xf5c6750d1cfff5c7], eax ; jmp qword ptr [rdx]
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000005cb5b : movabs eax, dword ptr [0x8948c08548fffc28] ; ret
0x000000000002456b : movabs eax, dword ptr [0x8948c08548ffffae] ; ret
0x00000000000a3fdb : movabs eax, dword ptr [0xc8b489848000b5c] ; ret 0x8b49
0x00000000001836ee : movabs eax, dword ptr [0xef7b8d0d1cffef7e] ; jmp qword ptr [rdx]
0x0000000000194316 : movabs eax, dword ptr [0xf5c05d0d1cfff5c0] ; jmp qword ptr [rdx]
0x0000000000194d5e : movabs eax, dword ptr [0xf5c83c0d1cfff5c9] ; jmp qword ptr [rdx]
0x0000000000194c26 : movabs eax, dword ptr [0xf5c8600d1cfff5c8] ; jmp qword ptr [rdx]
0x00000000000345f6 : movapd xmm0, xmm1 ; ret
0x0000000000034774 : movaps xmm0, xmm1 ; jne 0x34789 ; add rsp, 8 ; ret
0x0000000000034a4f : movaps xmm0, xmm1 ; jne 0x34a69 ; add rsp, 8 ; ret
0x00000000000345f7 : movaps xmm0, xmm1 ; ret
0x000000000012a532 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a52e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000012a5dc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034706 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034516 : movd mm0, eax ; ret
0x0000000000034705 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000034515 : movd mm0, rax ; ret
0x0000000000034932 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x000000000003457f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000348c6 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000345f3 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x000000000003457e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000345f2 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000034a20 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003489c : movd xmm0, eax ; ret
0x0000000000034931 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348c5 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000097030 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009888d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000996dd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000097ef0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000971fd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000099943 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000098133 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000013455f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001344ef : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013447f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013440f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009882d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009967d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009719d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000013439f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009884d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009969d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000971bd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000013432f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009886d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000996bd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000971dd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000013494f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001348df : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013486f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001347ff : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013478f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013471f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001346af : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000013463f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001345cf : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000085666 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x0000000000133abb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000133b2b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000097ff0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000994e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000986a4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000097d17 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000097044 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000097087 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000097077 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000970f8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000970b8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000970d8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000097058 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000971f9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000097199 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000971b9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000971d9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000097034 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009af54 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000134334 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000093df2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000093e12 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000093e32 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000093c7c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000093c26 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000093df3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x0000000000093e13 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x0000000000093e33 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x0000000000093c7d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x0000000000093c27 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000097031 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009888e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000996de : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x0000000000097ef1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000971fe : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000009b14e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000099944 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x0000000000098134 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000009b1c4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000134560 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001344f0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134480 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134410 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009882e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009967e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009719e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000009b0ee : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000001343a0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009884e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009969e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000971be : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000009b10e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000134330 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009886e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000996be : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000971de : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000009b12e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000134950 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001348e0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134870 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134800 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134790 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134720 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001346b0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000134640 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001345d0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000085653 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x85668 ; ret
0x0000000000085652 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x85669 ; ret
0x0000000000085668 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000133abc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000133b2c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000134267 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001341e7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134157 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001340d7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000134057 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133fd7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133f57 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133ed7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133e57 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133dd7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133d57 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133cd7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133c47 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133bb7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000133b27 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000097ff1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000994e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000986a5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000097d18 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x0000000000097045 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000097098 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000097d6b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x0000000000097088 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000097078 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000970f9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000970b9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000970d9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000097059 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000971fa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009719a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000971ba : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000971da : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x0000000000097035 : movq qword ptr [rdi], mm0 ; ret
0x000000000009af55 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000134335 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034704 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000034514 : movq xmm0, rax ; ret
0x000000000003457d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000345f1 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000172168 : movsb byte ptr [rdi], byte ptr [rsi] ; add bh, dh ; call rsp
0x00000000000c2512 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xc24a5
0x000000000018f525 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; js 0x18f4ce ; cmc ; jmp qword ptr [rcx]
0x000000000018f53d : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000016fe60 : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, esi ; jmp rsp
0x000000000015f189 : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rax]
0x000000000015f181 : movsb byte ptr [rdi], byte ptr [rsi] ; call rax
0x0000000000171088 : movsb byte ptr [rdi], byte ptr [rsi] ; call rsp
0x0000000000173621 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp rsp
0x000000000016e74c : movsb byte ptr [rdi], byte ptr [rsi] ; imul eax, dword ptr [rax], 0 ; in al, 0x36 ; jmp 0x16e75a
0x0000000000174bec : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; add al, byte ptr [rax] ; adc al, 0xe7 ; cli ; jmp rsp
0x000000000015b582 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000017af4d : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000174cf4 : movsb byte ptr [rdi], byte ptr [rsi] ; int1 ; add al, byte ptr [rax] ; xor al, 0xfb ; cli ; call rsp
0x000000000016e9b4 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x16e9be ; add byte ptr [rsi + rsi*8 - 0x15], ah ; jmp rsp
0x0000000000171b10 : movsb byte ptr [rdi], byte ptr [rsi] ; jl 0x171b0d ; push rsp ; ret 1
0x0000000000183a3c : movsb byte ptr [rdi], byte ptr [rsi] ; jmp 0xffffffffc3183a47
0x000000000015c7dd : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x15c836 ; jmp 0x15c777
0x00000000001702f0 : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1702e6 ; jmp rsp
0x0000000000174374 : movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0x1b340002 ; cli ; call rsp
0x000000000018f53c : movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000175e3c : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0x10700000 ; jmp 0x175e4a
0x000000000016f688 : movsb byte ptr [rdi], byte ptr [rsi] ; or ebp, edi ; call rsp
0x000000000017b71d : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181e14 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019a13c : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; add al, byte ptr [rax] ; sub byte ptr [rax - 9], 0xff ; ret
0x000000000015f185 : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rax]
0x0000000000105fbb : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000174ab8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf ; cli ; call rsp
0x000000000016f584 : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rax], 0 ; test bh, ch ; in eax, dx ; call rsp
0x000000000019580c : movsb byte ptr [rdi], byte ptr [rsi] ; sal ch, 1 ; jmp qword ptr [rdx]
0x0000000000176a3c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], al ; jmp 0x176a4a
0x000000000016cf89 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000017034c : movsb byte ptr [rdi], byte ptr [rsi] ; sub byte ptr [rcx], al ; add byte ptr [rdx + rdi*2 - 0x10], dh ; call rsp
0x000000000018d63c : movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], eax ; add al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000018e23c : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ecx ; add dword ptr [rax], eax ; shl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000a1011 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000015ec69 : movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000000000018f871 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019077c : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000016f191 : movsd dword ptr [rdi], dword ptr [rsi] ; in al, dx ; jmp rsp
0x000000000015f1d5 : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x000000000015f1c5 : movsd dword ptr [rdi], dword ptr [rsi] ; inc eax ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000000000015ce15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000015f1cd : movsd dword ptr [rdi], dword ptr [rsi] ; jmp rax
0x000000000015c6d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000ee25f : movsd dword ptr [rdi], dword ptr [rsi] ; mov edx, eax ; jmp 0xee256
0x00000000000f1f42 : movsd dword ptr [rdi], dword ptr [rsi] ; push -0x76000001 ; ret 0x8948
0x0000000000044752 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000016003c : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfff5
0x00000000000f5bf7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 3
0x0000000000034582 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003454b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000e4aed : movsd qword ptr [rsp], xmm1 ; call 0x50da7
0x00000000000aa918 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000045b23 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000018f888 : movsq qword ptr [rdi], qword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000000348c9 : movss dword ptr [rdi], xmm1 ; ret
0x00000000000348b0 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000045add : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000efb31 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009117c : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x91179 ; ret
0x00000000000efda2 : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xefd98 ; ret
0x0000000000091204 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x91209 ; ret
0x0000000000091130 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x91131 ; ret
0x000000000008191a : movsx edx, dh ; mov eax, edx ; ret
0x0000000000081919 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000efda1 : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xefd99 ; ret
0x00000000000ceee7 : movsxd r11, dword ptr [r9 + r11*4] ; add r11, r9 ; jmp r11
0x000000000008aece : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002c8bc : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000080281 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000131f3b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000012a00b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000090fe0 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000090f18 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x000000000007d0c2 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000068d78 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000555e9 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r14 ; jmp rax
0x00000000000493f0 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r9 ; jmp rax
0x0000000000033429 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000006866a : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000cbf0e : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000011113e : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x000000000002edc0 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x000000000002244e : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000b3494 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006871e : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000068f03 : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x000000000009bb37 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000038606 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000001243b7 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000124277 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000012433e : movsxd rax, ecx ; ret
0x0000000000182ac1 : movsxd rbp, edi ; call qword ptr [rsi]
0x000000000018248d : movsxd rbp, edi ; jmp qword ptr [rdx]
0x0000000000179645 : movsxd rbp, esp ; jmp qword ptr [rdx]
0x000000000009766a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000014743d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000096df9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000cbe5e : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000068e39 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000111d86 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c296e : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000124269 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001242c8 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xca39
0x00000000001244c1 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x00000000001155af : movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x000000000002e745 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e5d5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000016d9c1 : movsxd rdi, esp ; call rax
0x000000000016da41 : movsxd rdi, esp ; jmp qword ptr [rdx + 0x12fffc62]
0x000000000016db81 : movsxd rdi, esp ; push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000012a0df : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005f7ed : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x0000000000056e74 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000007cd75 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000af322 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000bb89b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000c242f : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xc23fc
0x0000000000056d5b : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000ae63b : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000033201 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000111526 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000009bc0f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000009bbcf : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x000000000018e179 : movsxd rsi, ebp ; call qword ptr [rdx]
0x0000000000171a99 : movsxd rsi, ebp ; call rsp
0x0000000000172639 : movsxd rsi, edi ; call rsp
0x0000000000103bc9 : movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x000000000014adac : movsxd rsi, esi ; ret 0x7520
0x00000000000e063a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x0000000000038b59 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000aa919 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000045ade : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000045b24 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000034583 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003454c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000348b1 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000e4aee : movups xmmword ptr [rsp], xmm1 ; call 0x50da6
0x000000000010c347 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001162bb : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010beec : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011bb97 : movzx eax, al ; add rsp, 8 ; ret
0x00000000000aa2b0 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000bb76e : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x0000000000034e9c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c058d : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000dd404 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006770c : movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000225a8 : movzx eax, al ; neg eax ; ret
0x0000000000110306 : movzx eax, al ; pop r12 ; ret
0x000000000010cfad : movzx eax, al ; pop rbp ; ret
0x00000000000e55b1 : movzx eax, al ; pop rbx ; ret
0x0000000000035959 : movzx eax, al ; ret
0x000000000002e3a5 : movzx eax, ax ; ret
0x000000000006d65d : movzx eax, bh ; ret
0x000000000007551a : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076716 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000753c5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007484e : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000073582 : movzx eax, byte ptr [rax] ; ret
0x00000000000d2d50 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x0000000000081618 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000147450 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000850c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000081633 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000753d0 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007551b : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009bb57 : movzx eax, cl ; pop rbx ; ret
0x000000000006d65c : movzx eax, dil ; ret
0x000000000009bb7f : movzx eax, dl ; pop rbx ; ret
0x000000000002e55e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000da920 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000009b36a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9b369 ; ret
0x000000000009b41a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x9b419 ; ret
0x00000000001482f4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000081630 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000147453 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000e9c32 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000008ed5e : movzx edx, byte ptr [rcx] ; jmp 0x8ed29
0x00000000000338bf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x338a7 ; ret
0x00000000000bc4a2 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xbc488 ; xor eax, eax ; ret
0x0000000000091f21 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000011d3f9 : movzx edx, byte ptr [rsi + rcx] ; mov byte ptr [rax + rcx], dl ; ret
0x000000000011ea2f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000091db3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014add4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000014ae34 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000014ae24 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000014ae14 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000014ae04 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000014adf4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000014ade4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000134280 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001480a7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000014adbb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000134960 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000850c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000850e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000134200 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001348f0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000f8dc3 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x000000000008ed5d : movzx r10d, byte ptr [rcx] ; jmp 0x8ed2a
0x00000000000dd1c4 : movzx rax, al ; ret
0x0000000000083a37 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000039b85 : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000003e595 : mulps xmm0, xmmword ptr [rip + 0x12e7b4] ; jmp 0x3e568
0x000000000003e594 : mulsd xmm0, qword ptr [rip + 0x12e7b4] ; jmp 0x3e569
0x000000000003c354 : mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000039b84 : mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000181f34 : neg byte ptr [rbp - 0x11] ; jmp qword ptr [rdx]
0x00000000001822dc : neg byte ptr [rdi - 0x11] ; jmp qword ptr [rdx]
0x00000000000e1d71 : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112d53 : neg eax ; add rsp, 0x18 ; ret
0x0000000000113085 : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000d1ccb : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000035347 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000b9ac2 : neg eax ; mov dword ptr fs:[rdx], eax ; mov rax, rdi ; ret
0x0000000000035094 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000ecd74 : neg eax ; pop r13 ; ret
0x000000000009eee3 : neg eax ; pop r15 ; ret
0x00000000000dd407 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006770f : neg eax ; pop rbx ; ret
0x00000000000225ab : neg eax ; ret
0x000000000007ef51 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f521c : neg ecx ; cmp edx, 0xea ; cmovne eax, ecx ; ret
0x0000000000078881 : neg edi ; call qword ptr [rax]
0x00000000000dbf81 : neg edx ; cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x00000000000e0a30 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000009eee2 : neg rax ; pop r15 ; ret
0x0000000000078880 : neg rdi ; call qword ptr [rax]
0x00000000000344bc : nop ; adc byte ptr [rbx], 0 ; orpd xmm0, xmm1 ; ret
0x000000000019d5b0 : nop ; add al, bh ; call rdx
0x00000000000290fa : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001339b7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000021c83 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014775c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e180d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000018e175 : nop ; add dword ptr [rax], eax ; js 0x18e1e3 ; cmc ; call qword ptr [rdx]
0x00000000000555ec : nop ; add rax, r14 ; jmp rax
0x00000000000493f3 : nop ; add rax, r9 ; jmp rax
0x00000000000af325 : nop ; add rax, rdx ; jmp rax
0x00000000000a913f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000230ef : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007338f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000016d6d4 : nop ; and esp, edi ; jmp rax
0x0000000000084f1f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000916df : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009186f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000015f005 : nop ; call qword ptr [rax]
0x000000000011de0f : nop ; call r8
0x000000000018f180 : nop ; cdq ; cmc ; jmp qword ptr [rcx]
0x000000000017fa34 : nop ; clc ; out dx, al ; jmp qword ptr [rdx]
0x000000000016d5a8 : nop ; cld ; call qword ptr [rax + 0x20fffc45]
0x000000000016d5ac : nop ; cld ; jmp qword ptr [rax]
0x000000000016d55c : nop ; cld ; sti ; jmp rax
0x000000000018a190 : nop ; cwde ; jmp rdx
0x000000000016d37c : nop ; fdivp st(3) ; jmp rax
0x000000000015ee10 : nop ; fdivp st(5) ; call rax
0x000000000016d2cc : nop ; hlt ; sti ; jmp qword ptr [rax]
0x000000000016cf1c : nop ; jl 0x16cf1d ; jmp rax
0x000000000015f009 : nop ; jmp qword ptr [rax]
0x0000000000171109 : nop ; jmp rsp
0x000000000019c890 : nop ; loop 0x19c88d ; call rsi
0x000000000017e694 : nop ; loopne 0x17e688 ; jmp qword ptr [rdx]
0x000000000012bbdf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000010b73f : nop ; mov dword ptr [rsi], 0xb ; ret
0x000000000012bdbf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000bb58f : nop ; mov eax, 0xfffa ; ret
0x000000000006e58f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b1bf : nop ; mov eax, 0xffffffff ; ret
0x000000000009dd1f : nop ; mov eax, 1 ; ret
0x0000000000114a5f : nop ; mov eax, 2 ; ret
0x00000000000f445b : nop ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000009cbaf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x9cc19 ; ret
0x000000000009cbff : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x9cc19 ; ret
0x00000000000b645f : nop ; mov eax, dword ptr [rdi] ; ret
0x000000000007351f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000f8d4f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000001021cf : nop ; mov eax, r9d ; ret
0x000000000012c17f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009856f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007393f : nop ; mov rax, -1 ; pop rbx ; ret
0x00000000000770cf : nop ; mov rax, -1 ; ret
0x0000000000072eaf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072d9f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000115b2f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000115c1f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000ba55f : nop ; mov rax, qword ptr [rsp + 0x20] ; jmp 0xba531
0x00000000000381ff : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000045def : nop ; mov rax, rsi ; ret
0x0000000000076e9f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x00000000000f419e : nop ; mov rdx, r12 ; call rax
0x00000000000da93f : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009702f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000da91f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000016d548 : nop ; or bh, ah ; jmp rax
0x000000000015ee20 : nop ; out -3, eax ; call rax
0x0000000000181bd4 : nop ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016f719 : nop ; out dx, eax ; jmp rsp
0x000000000016d774 : nop ; outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000034a9f : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000c658f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f85f : nop ; pop rbx ; ret
0x0000000000021553 : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x00000000001810a0 : nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x0000000000179560 : nop ; push rdi ; in al, dx ; jmp rax
0x0000000000005f50 : nop ; ret
0x0000000000002f66 : nop ; ret 0x5bdb
0x000000000018f540 : nop ; sahf ; cmc ; jmp qword ptr [rcx]
0x000000000015ec5c : nop ; sahf ; jmp rax
0x0000000000173eb8 : nop ; sahf ; stc ; call rsp
0x000000000019364c : nop ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000001776a0 : nop ; shr ebx, 1 ; call qword ptr [rdx]
0x0000000000178db0 : nop ; std ; jmp 0x178db6
0x000000000016d2c8 : nop ; sti ; call qword ptr [rax + 0x20fffbf4]
0x000000000016d728 : nop ; sub ah, bh ; jmp rax
0x0000000000100824 : nop ; sub al, byte ptr [rax] ; call rax
0x0000000000192070 : nop ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000076edf : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000e602f : nop ; test rdi, rdi ; jne 0xe6047 ; ret
0x0000000000081dcf : nop ; test rsi, rsi ; jne 0x81de2 ; xor rax, rax ; ret
0x0000000000176fb0 : nop ; xchg eax, ebp ; jmp 0x176fb6
0x000000000016de78 : nop ; xchg eax, ebx ; cld ; jmp qword ptr [rax]
0x000000000016dc60 : nop ; xchg eax, esi ; cld ; jmp qword ptr [rax]
0x000000000018ee70 : nop ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000007082f : nop ; xor eax, eax ; ret
0x0000000000084f9f : nop ; xor rax, rax ; ret
0x000000000014bad3 : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x0000000000034d2b : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x00000000001058c3 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000006eadb : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000096f6b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b635b : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000043073 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000033b83 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000008a783 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000075fd3 : nop dword ptr [rax + rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000004306b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000002d613 : nop dword ptr [rax + rax] ; ret
0x000000000003831b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000037a43 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009cc1b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000067845 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009ceec : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000014c235 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000014c809 : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000009d7dd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009d7cd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009d7d5 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000f5225 : nop dword ptr [rax] ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000bb69d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000bb585 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000070825 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000ffc5d : nop dword ptr [rax] ; mov eax, 1 ; pop rbx ; ret
0x000000000002e5ad : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006c355 : nop dword ptr [rax] ; mov eax, edi ; ret
0x0000000000069b5c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000010ff14 : nop dword ptr [rax] ; mov edi, ebp ; call 0xdc1b8
0x0000000000097c3d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000008ad84 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x0000000000033b8c : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x00000000000f607c : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000000bc4e4 : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000e2e34 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2e3d : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000032efc : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002c7b1 : nop dword ptr [rax] ; ret
0x000000000009d0bc : nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000006a165 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000097bf7 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000034d2a : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000006eada : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000009eae2 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000981da : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000004306a : nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000002d612 : nop word ptr [rax + rax] ; ret
0x00000000000c36f2 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000037a42 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009cc1a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000016dcc0 : not byte ptr [rdx - 0x6d790004] ; cld ; call qword ptr [rsi]
0x00000000000adc45 : not eax ; add eax, 0x16e ; ret
0x0000000000116cd1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000034440 : not eax ; and eax, ecx ; ret
0x0000000000034aef : not eax ; and eax, edx ; ret
0x0000000000035993 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000c35fe : not eax ; pop rbx ; and eax, 2 ; pop rbp ; ret
0x0000000000035992 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000001784cc : or ah, ah ; jmp 0x1784d2
0x000000000019470c : or ah, al ; cmc ; jmp qword ptr [rdx]
0x0000000000159530 : or ah, byte ptr [rdx - 0x5de70013] ; in eax, dx ; call rdi
0x000000000011f9a7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001235b9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f9d5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000e10da : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e77c2 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000c6100 : or al, 0 ; add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; jmp 0xc60ea
0x000000000007b122 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007b2e2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003991e : or al, 0 ; add byte ptr [rbp + 0x35], dh ; add rsp, 8 ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x000000000009bb35 : or al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000005f4e : or al, 0 ; nop ; ret
0x000000000000fd2e : or al, 0 ; push rax ; ret 8
0x0000000000008786 : or al, 0 ; ret
0x0000000000007406 : or al, 0 ; ret 0xd
0x000000000008ea15 : or al, 0x10 ; test ecx, ecx ; jg 0x8ea09 ; or byte ptr [rdi], sil ; ret
0x0000000000051916 : or al, 0x16 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000008bd12 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x8bd09 ; ret
0x0000000000081616 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000e4af0 : or al, 0x24 ; call 0x50da4
0x0000000000113a5c : or al, 0x24 ; pop r12 ; ret
0x00000000000e87aa : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x00000000001819dc : or al, 0x3e ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000f4db8 : or al, 0x41 ; pop rsp ; ret
0x00000000000676a8 : or al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x0000000000023c4b : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003860a : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000b9c97 : or al, 0x48 ; add esp, 0x28 ; ret
0x000000000011daf0 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000034a53 : or al, 0x48 ; add esp, 8 ; ret
0x0000000000103377 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000007a978 : or al, 0x48 ; mov dword ptr [rsp + 0x28], edx ; call rax
0x000000000006a0bb : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x000000000010385b : or al, 0x4c ; cmp edx, eax ; jne 0x103848 ; ret
0x00000000000aa71a : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000017ada4 : or al, 0x5d ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0x13], ah ; call rdx
0x000000000017b3a4 : or al, 0x63 ; add byte ptr [rax], al ; js 0x17b374 ; out dx, al ; jmp qword ptr [rcx]
0x00000000000dac03 : or al, 0x74 ; ret 0x7fbf
0x0000000000084b18 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000018c6a4 : or al, 0x76 ; add dword ptr [rax], eax ; call 0x2218bbb0
0x000000000018c9a4 : or al, 0x79 ; add dword ptr [rax], eax ; or rbp, rsi ; jmp qword ptr [rcx]
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000009766c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000009b941 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x0000000000090fe2 : or al, 0x88 ; add rax, r9 ; jmp rax
0x0000000000068e3b : or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000000dc049 : or al, 0x89 ; ret
0x0000000000051a53 : or al, 0x89 ; ret 0xeac0
0x00000000000c2970 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000080283 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000088034 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000131f3d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000012a00d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000014743f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000096dfb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000018f3a4 : or al, 0xa3 ; add dword ptr [rax], eax ; pushfq ; cmc ; jmp qword ptr [rcx]
0x00000000000cbe60 : or al, 0xa8 ; add rax, rcx ; jmp rax
0x0000000000002baa : or al, 0xaf ; xbegin 0xfffffffff8c6efae ; ret
0x000000000012a011 : or al, 0xb ; jmp r9
0x0000000000096dff : or al, 0xb ; jmp rcx
0x0000000000111d88 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x0000000000116f47 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000eba06 : or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000111d9e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000191ea4 : or al, 0xce ; add dword ptr [rax], eax ; cmp al, cl ; clc ; jmp qword ptr [rsi]
0x00000000001829a4 : or al, 0xd9 ; add byte ptr [rax], al ; pop rax ; pop rsi ; out dx, eax ; jmp rcx
0x00000000000d2dd8 : or al, 0xe8 ; ret 0xfffe
0x0000000000193fa4 : or al, 0xef ; add dword ptr [rax], eax ; cwde ; push rdx ; idiv bh ; ret 3
0x000000000009cb05 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000978f3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000183fe9 : or al, 0xf0 ; call qword ptr [rax]
0x00000000001890b1 : or al, 0xf3 ; jmp qword ptr [rcx]
0x0000000000134483 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000d2cb3 : or al, 0xf3 ; ret
0x0000000000068b6a : or al, 0xf6 ; ret 0x7404
0x0000000000172f51 : or al, 0xf8 ; call rsp
0x000000000002c022 : or al, 0xf8 ; test rcx, rcx ; je 0x2c032 ; call rcx
0x00000000001742c1 : or al, 0xfa ; call rsp
0x0000000000174e81 : or al, 0xfc ; jmp rsp
0x00000000000db0f2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000db1e2 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x00000000001729bd : or al, 2 ; add byte ptr [rax + rbp*4 - 9], ah ; call rsp
0x0000000000097b30 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000017ae81 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000009117e : or al, 7 ; test cl, cl ; jne 0x91177 ; ret
0x0000000000191098 : or al, bl ; cmc ; call rsp
0x000000000011eb7d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121791 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011eba1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000010b752 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000ca648 : or al, byte ptr [rax] ; add byte ptr [rbp + 0x634c0143], cl ; ret
0x00000000000bee88 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000bbbf9 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000081796 : or al, byte ptr [rax] ; ret
0x0000000000032b36 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000009d5a2 : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000181afc : or al, byte ptr [rbx - 0x11] ; jmp qword ptr [rdx]
0x00000000000ca74c : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000ca46c : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x000000000016ff75 : or al, byte ptr [rcx] ; add byte ptr [rsi], al ; xor esi, eax ; call rsp
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000126b67 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010df2b : or al, ch ; mov edi, 0x8900007f ; ret 0xc031
0x0000000000039817 : or al, ch ; push rbx ; ret
0x0000000000033123 : or al, ch ; ret
0x00000000000d2278 : or al, ch ; ret 0xf66c
0x0000000000041c1c : or al, ch ; scasb al, byte ptr [rdi] ; mov ecx, 0x8948fffe ; ret
0x000000000016d210 : or al, ch ; sti ; call rax
0x000000000016d549 : or bh, ah ; jmp rax
0x000000000011651f : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000731ed : or bh, byte ptr [rax - 1] ; ret
0x00000000000c35fd : or bh, dh ; rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xc360e ; pop rbp ; ret
0x00000000000c92de : or bh, dh ; ret
0x00000000000e3bcf : or bh, dh ; ret 0xfc07
0x00000000001197be : or bl, al ; mov dword ptr [rsi], eax ; or eax, 0xffffffff ; ret
0x000000000009d7db : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000e59ca : or bl, al ; nop dword ptr [rax] ; ret
0x0000000000104053 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c467f : or bl, byte ptr [rbp + 0x75] ; mov ch, 0x83 ; ret 0x8901
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b5e ; ret
0x00000000000b54a5 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008cc85 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000067872 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000010357d : or bl, ch ; lodsd eax, dword ptr [rsi] ; mov eax, 0xffffffff ; ret
0x0000000000049281 : or bl, ch ; ret 0x8b48
0x0000000000053a88 : or bl, ch ; ret 0xbd83
0x00000000000b22e3 : or bl, ch ; ret 0xf983
0x0000000000134643 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002e0ff : or bl, dh ; ret
0x00000000000c1f88 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000cc1eb : or byte ptr [r10], r12b ; jmp 0xcbe7f
0x00000000000c1f01 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000bec7b : or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000033b28 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000cc261 : or byte ptr [r11], r12b ; jmp 0xcbe7f
0x0000000000093d8f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000c1ef7 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000c1fbe : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000000a8b46 : or byte ptr [r15], 0x97 ; ret 0x8941
0x00000000000c242d : or byte ptr [r8 + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xc883
0x000000000003405e : or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000c1fd1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c3b44 : or byte ptr [r8 - 0x75], r9b ; jl 0xc3b6b ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000011645a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x0000000000093d6e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x000000000013fc98 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010c442 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000011408a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000d3a28 : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000037a72 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000007b5df : or byte ptr [r8 - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x0000000000126d42 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cc1d1 : or byte ptr [r8], r12b ; jmp 0xcbe7f
0x0000000000093dce : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000000c1f61 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000cc247 : or byte ptr [r9], r12b ; jmp 0xcbe7f
0x00000000000c1f21 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000109f03 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000007887c : or byte ptr [rax + 0x21], cl ; xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000774b7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000004e53c : or byte ptr [rax + 0x39], cl ; ret
0x000000000007e881 : or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000007c94b : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000c242e : or byte ptr [rax + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xc883
0x000000000018544d : or byte ptr [rax + 0xb], cl ; add dl, bh ; ret
0x000000000003405f : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000003449b : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x0000000000024213 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000010ed16 : or byte ptr [rax + 1], bh ; ret
0x0000000000030efa : or byte ptr [rax + 1], cl ; ret
0x00000000000e78d5 : or byte ptr [rax + 3], bh ; pop rbx ; pop rbp ; ret
0x00000000000f321b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000010d6d9 : or byte ptr [rax + 9], cl ; ret 0xb60f
0x00000000000c1fd2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aa56d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000bed83 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x0000000000084fc9 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000008a7b0 : or byte ptr [rax - 0x73], cl ; add eax, 0x7868 ; ret
0x000000000009d81d : or byte ptr [rax - 0x73], cl ; add eax, 0xab23b ; ret
0x0000000000084fdd : or byte ptr [rax - 0x73], cl ; add eax, 0xc243b ; ret
0x000000000009d809 : or byte ptr [rax - 0x73], cl ; add eax, 0xca4f ; ret
0x000000000009cc49 : or byte ptr [rax - 0x73], cl ; add eax, 0xd69f ; ret
0x00000000000bec78 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000eb1d1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000eb232 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000027125 : or byte ptr [rax - 0x75], cl ; jl 0x27154 ; call rax
0x00000000000c3b45 : or byte ptr [rax - 0x75], cl ; jl 0xc3b6a ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000011645b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006a119 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000010b76d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000111d32 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000093d6f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000116b90 : or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x00000000000f3e42 : or byte ptr [rax - 0x77], 0xda ; call rax
0x0000000000093c80 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000f8a08 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000325cd : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000011408b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000011cb48 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000011598e : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000e5989 : or byte ptr [rax - 0x77], cl ; ja 0xe59a6 ; mov qword ptr [rdx], rdi ; ret
0x00000000000c43ab : or byte ptr [rax - 0x77], cl ; jo 0xc43d7 ; xor eax, eax ; ret
0x00000000000e59ff : or byte ptr [rax - 0x77], cl ; jo 0xe5a19 ; ret
0x000000000003405b : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000013fc99 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000010c443 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000036601 : or byte ptr [rax - 0x77], cl ; out dx, al ; call r12
0x00000000000e59c2 : or byte ptr [rax - 0x77], cl ; push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0xe59dc ; ret
0x000000000006be89 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000037fd5 : or byte ptr [rax - 0x77], cl ; ret
0x00000000001162ef : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000efd55 : or byte ptr [rax - 0x77], cl ; ret 0x4d64
0x000000000003d8d0 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a5158 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010dca7 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000037a73 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000011dba6 : or byte ptr [rax - 0x77], cl ; ret 0xe8eb
0x00000000000ac24c : or byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000e5988 : or byte ptr [rax - 0x77], r9b ; ja 0xe59a7 ; mov qword ptr [rdx], rdi ; ret
0x00000000000c43aa : or byte ptr [rax - 0x77], r9b ; jo 0xc43d8 ; xor eax, eax ; ret
0x0000000000027dd3 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rbx - 0x18] ; ret 0xf5b
0x000000000007fd57 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000007fdc9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000298af : or byte ptr [rax - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000007b34b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002dd9e : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000c3171 : or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x000000000008ae16 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008ae9e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000bdc94 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000050193 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x0000000000050262 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000a323f : or byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000007b5e0 : or byte ptr [rax - 0x7d], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000002150c : or byte ptr [rax - 0x7f], cl ; ret
0x000000000018b688 : or byte ptr [rax - 0xc], ch ; call qword ptr [rdx]
0x000000000006c68b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000021559 : or byte ptr [rax - 1], cl ; ret 0x3941
0x000000000011eddc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011da89 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000cc1d2 : or byte ptr [rax], ah ; jmp 0xcbe7e
0x000000000007bd72 : or byte ptr [rax], al ; add al, ch ; ret
0x0000000000052087 : or byte ptr [rax], al ; add al, ch ; ret 0xfffd
0x0000000000021555 : or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x00000000000d406c : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000077cff : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000011eddd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121931 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ee01 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ab2fa : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007653c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000017cc8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; ret 0x14
0x0000000000017cf8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000017c98 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x14
0x000000000001af50 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1630
0x0000000000018580 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1639
0x000000000000b8e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x000000000009bc43 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010b782 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bd007 : or byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000022567 : or byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000000000f1db7 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000d83d8 : or byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000045f40 : or byte ptr [rax], al ; ret
0x000000000009ae9d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aedb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009ae7b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006701b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000012533e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000103d2d : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x0000000000107fb4 : or byte ptr [rbp - 0x17], dh ; add rsp, 0x18 ; ret
0x00000000000aa2e6 : or byte ptr [rbp - 0x3c], dh ; ret
0x000000000009d6e9 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000027caf : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x00000000000f4fa9 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x00000000000f44dc : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010b593 : or byte ptr [rbx + 0x48], bl ; mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000003c87 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000010c60b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000006e252 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000ecd6f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000000245cb : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000073787 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000230f3 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010cfab : or byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x0000000000177503 : or byte ptr [rbx + rcx + 0x52], al ; ret
0x000000000017ae83 : or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000033b29 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000c6636 : or byte ptr [rbx - 0x75], bl ; add al, 0x5d ; pop r12 ; ret
0x00000000000d3697 : or byte ptr [rbx - 0x76b3fe20], al ; out 0x89, al ; ret 0xca83
0x00000000000ca5f5 : or byte ptr [rbx - 0x76bbfe10], al ; ret
0x00000000000c5bd8 : or byte ptr [rbx - 0x7bf0ff06], al ; ret 1
0x0000000000186df8 : or byte ptr [rbx - 0xe], al ; jmp qword ptr [rax]
0x00000000000cc262 : or byte ptr [rbx], ah ; jmp 0xcbe7e
0x00000000001192fa : or byte ptr [rbx], bh ; mov word ptr [r15], cs ; xchg eax, esp ; ret 0xea83
0x00000000001192f9 : or byte ptr [rbx], dil ; mov word ptr [r15], cs ; xchg eax, esp ; ret 0xea83
0x000000000008409a : or byte ptr [rcx + 0x29], cl ; ret
0x00000000000442f3 : or byte ptr [rcx + 0x29], cl ; ret 0x8349
0x000000000004594b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000f6889 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000108015 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000003ebfd : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8545
0x000000000004419b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000044dd0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000119273 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000e8831 : or byte ptr [rcx - 0x17fbdb84], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000033009 : or byte ptr [rcx - 0x17fbdb8c], cl ; std ; ret
0x00000000000441a2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000093dcf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000c62d7 : or byte ptr [rcx - 0x76b7ffa3], cl ; ret
0x000000000004927d : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8b48
0x0000000000053a83 : or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x53a54
0x000000000010dc8c : or byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004d98c : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x78e8
0x00000000000ce9a4 : or byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 - 0x77], r9b ; ret
0x00000000000ba4b8 : or byte ptr [rcx - 0x7ce7dbb4], cl ; ret
0x00000000001939f8 : or byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x000000000018da48 : or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rsi]
0x00000000001873f8 : or byte ptr [rcx - 0xe], ch ; call rsi
0x00000000000cc248 : or byte ptr [rcx], ah ; jmp 0xcbe7e
0x000000000011da8a : or byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000db102 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003558e : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000db1f4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b5e5 : or byte ptr [rcx], al ; jmp 0x7b5af
0x00000000000c1fa7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000c1f22 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000aa2e3 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000011767a : or byte ptr [rcx], bh ; ret 0x1d75
0x00000000000c1f62 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000f5410 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000023fec : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000cf4a0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000043138 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000434d2 : or byte ptr [rcx], dh ; ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000117679 : or byte ptr [rcx], dil ; ret 0x1d75
0x000000000015d09e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000ceee6 : or byte ptr [rdi + 0x63], cl ; sbb al, 0x99 ; add r11, r9 ; jmp r11
0x0000000000028684 : or byte ptr [rdi], 0x85 ; salc ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e543a : or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x00000000000a8b47 : or byte ptr [rdi], 0x97 ; ret 0x8941
0x000000000015fa1c : or byte ptr [rdi], al ; cmc ; call qword ptr [rsi]
0x000000000002e3a4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007609f : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000073581 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000225a7 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x00000000000414b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000012a5db : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000c5f67 : or byte ptr [rdi], cl ; test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000021b7f : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc031
0x000000000008ea1c : or byte ptr [rdi], dh ; ret
0x000000000008ea1b : or byte ptr [rdi], sil ; ret
0x00000000001928ce : or byte ptr [rdx + 0xd1cfff5], ch ; mov ch, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000001032c2 : or byte ptr [rdx + rdx*4 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000007aa17 : or byte ptr [rdx + rsi - 0x7af0fe00], ch ; ret
0x00000000000cc1ec : or byte ptr [rdx], ah ; jmp 0xcbe7e
0x0000000000172875 : or byte ptr [rdx], al ; add byte ptr [rax - 9], dl ; jmp rsp
0x00000000000f8b0b : or byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c1f02 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000c1f89 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000e0622 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000e0621 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000e0918 : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x9e75
0x00000000000c1ff5 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000096981 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000010a812 : or byte ptr [rsi + 1], bh ; mov rdi, rbx ; call qword ptr [rax]
0x000000000010a932 : or byte ptr [rsi + 2], bh ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000093d90 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000193bf8 : or byte ptr [rsi - 0xa], cl ; call qword ptr [rdi]
0x00000000000c1fbf : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000c1ef8 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c86 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000008cae1 : or ch, bl ; ret 0x1f0f
0x000000000015f9ad : or ch, dh ; call qword ptr [rsi]
0x000000000018c2f8 : or ch, dh ; hlt ; jmp qword ptr [rcx]
0x000000000018c919 : or ch, dh ; jmp qword ptr [rcx]
0x000000000015f9a9 : or ch, dh ; ljmp ptr [rdx] ; or ch, dh ; call qword ptr [rsi]
0x0000000000173a59 : or cl, bh ; jmp rsp
0x0000000000034c9b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000aa3ae : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000006f3f8 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000cfcf6 : or cl, byte ptr [rax - 0x77] ; ret 0x21e8
0x000000000003d024 : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x00000000001131fa : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000aca62 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000068134 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006e217 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000000f8de5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000011dee8 : or cl, byte ptr [rcx + rcx*4 - 0x1e] ; add r9, r11 ; call rax
0x00000000000d1ebc : or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x00000000000f8d65 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000017ae80 : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000007484d : or cl, byte ptr [rdi] ; mov dh, 0 ; pop rbx ; ret
0x0000000000034a77 : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000d311b : or cl, byte ptr [rdi] ; test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x0000000000141bc6 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000118521 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000005a026 : or cl, ch ; pop rsp ; loop 0x5a032 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000540e0 : or cl, ch ; ret
0x0000000000002bc7 : or cl, cl ; clc ; ret
0x0000000000083cc5 : or cl, cl ; cmove rax, rdx ; ret
0x0000000000045f3d : or dh, al ; or byte ptr [rax], al ; ret
0x0000000000188fe1 : or dh, bl ; jmp qword ptr [rcx]
0x0000000000134563 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000eba0a : or dh, bl ; ret
0x000000000006c34d : or dh, byte ptr [rbp + 0x23] ; mov eax, r8d ; pop rbx ; ret
0x000000000007117c : or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071276 : or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000071fd1 : or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x000000000006c001 : or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a00 : or dh, byte ptr [rbp + 0x69] ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x0000000000067876 : or dh, byte ptr [rbp + 2] ; ret
0x000000000009bdc6 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000000c35aa : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015f9d5 : or dh, ch ; call qword ptr [rsi]
0x0000000000170979 : or dh, cl ; call rsp
0x000000000007a07b : or dh, dh ; ret 0x7404
0x000000000007b259 : or dh, dh ; ret 0x7502
0x00000000000dbb33 : or dh, dh ; ret 0x7540
0x000000000007a097 : or dh, dh ; ret 0xf04
0x000000000002f73e : or dh, dh ; ret 0xfdf
0x0000000000035e35 : or dl, bh ; je 0x35e48 ; add rsp, 0x10 ; ret
0x0000000000035f37 : or dl, bh ; je 0x35f48 ; add rsp, 0x10 ; ret
0x000000000003342c : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000000ab534 : or dword ptr [rax + 1], ecx ; ret
0x000000000010ec73 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000006723a : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000002c36f : or dword ptr [rax - 0x7af0ffc8], eax ; ret 0xfffe
0x0000000000022256 : or dword ptr [rax - 0x7d], 0x834801c2 ; ret
0x0000000000107470 : or dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000f109f : or dword ptr [rax - 0x7d], ecx ; ret
0x00000000000c7950 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000007ff5e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000021880 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000003a2fe : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000011ed0d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001251ef : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ec67 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000b442 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000071402 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000225b8 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000da6ef : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082073 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c772a : or dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret 0x8e0f
0x0000000000095ed5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000cd06c : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000ca3b4 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008a7ca : or dword ptr [rax], eax ; ret
0x0000000000148876 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000017ab06 : or dword ptr [rbp*8 - 0x76f2e301], edi ; cmp ebp, ebp ; jmp qword ptr [rdx]
0x00000000000eefb6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010be76 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x000000000007b5e2 : or dword ptr [rbx + rbp + 8], 1 ; jmp 0x7b5b2
0x00000000001137e4 : or dword ptr [rbx - 0x17d3db84], ecx ; ret 0xfc89
0x00000000000befac : or dword ptr [rbx - 0x7bf0a308], eax ; ret 5
0x000000000007dfa6 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000007486c : or dword ptr [rbx], 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006a0f6 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074230 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000077958 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000011b1e3 : or dword ptr [rcx + 0x28], edi ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000185a1d : or dword ptr [rcx], eax ; add byte ptr [rax - 0x79], dl ; int1 ; jmp qword ptr [rcx]
0x0000000000185a85 : or dword ptr [rcx], eax ; add byte ptr [rax], cl ; mov dh, cl ; jmp rsi
0x00000000000c4340 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000035973 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000e06d7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000035b36 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000141ba6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000e50fa : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e4b3a : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aea5e : or dword ptr [rdi], ecx ; xchg ebx, ebx ; and al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001728bd : or dword ptr [rdx], eax ; add byte ptr [rdx - 9], ah ; call rsp
0x0000000000175e3d : or eax, 0x10700000 ; jmp 0x175e49
0x00000000000e0bea : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000344bb : or eax, 0x138090 ; orpd xmm0, xmm1 ; ret
0x0000000000160000 : or eax, 0x17fff5c2 ; ret 0xfff5
0x0000000000160064 : or eax, 0x19fff5c3 ; ret
0x0000000000098831 : or eax, 0x1c478d48 ; ret
0x0000000000099681 : or eax, 0x1d478d48 ; ret
0x0000000000141c28 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000014c7a7 : or eax, 0x25b0ac ; jne 0x14c7d4 ; ret
0x00000000000e0ba1 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000a8b41 : or eax, 0x3948d231 ; or byte ptr [r15], 0x97 ; ret 0x8941
0x000000000008c792 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000ae2fa : or eax, 0x48d08948 ; add esp, 8 ; ret
0x0000000000067102 : or eax, 0x5bd88948 ; ret
0x0000000000097915 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000011f8b7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000121451 : or eax, 0x83480000 ; ret 0xe910
0x000000000011f8e5 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000eed1d : or eax, 0x83480feb ; ret
0x000000000002b992 : or eax, 0x83492374 ; mov byte ptr [rcx], 0x83 ; ret
0x00000000000ce63d : or eax, 0x854dfff5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000098fc9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000083d42 : or eax, 0x8c48348 ; ret
0x000000000006b38e : or eax, 0xaa35b10f ; ret
0x000000000002dc57 : or eax, 0xe9000000 ; ret
0x000000000015c6d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000134413 : or eax, 0xf7f0ff3 ; ret
0x00000000000cc265 : or eax, 0xf7fffffc ; ret 0
0x000000000001fc5d : or eax, 0xfc08500 ; xchg eax, ebp ; ret
0x00000000001780ed : or eax, 0xffebd5da ; sbb al, 0xd ; ret
0x000000000017a4f5 : or eax, 0xffecfc07 ; sbb al, 0xd ; ret 0xecfa
0x000000000017f1e5 : or eax, 0xffeef486 ; sbb al, 0xd ; ret 0xeef3
0x0000000000180bcd : or eax, 0xffef2bae ; sbb al, 0xd ; jmp qword ptr [rbx]
0x0000000000180b85 : or eax, 0xffef2bef ; sbb al, 0xd ; ret 0xef23
0x000000000019495d : or eax, 0xfff5c52c ; sbb al, 0xd ; out dx, eax ; ret
0x000000000003509a : or eax, 0xffffffff ; ret
0x0000000000077b57 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000077b54 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000011eaad : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001215f1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ead1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000006ee2 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019137c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret 1
0x000000000010b742 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000b6efd : or eax, dword ptr [rax] ; call 0x731c4
0x00000000000add9e : or eax, dword ptr [rax] ; mov rdi, r13 ; call 0x6a0a7
0x00000000000af320 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000081689 : or eax, dword ptr [rax] ; ret
0x000000000017ae85 : or eax, dword ptr [rdx] ; ret
0x000000000018544f : or eax, dword ptr [rdx] ; xlatb ; ret
0x0000000000006ee1 : or eax, dword ptr gs:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000034702 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x000000000019d819 : or eax, edi ; call qword ptr [rcx]
0x00000000000e8796 : or eax, edi ; ret
0x0000000000041b8d : or eax, edx ; cmp r8, rdi ; jne 0x41b70 ; ret
0x000000000008ae07 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000003492f : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000e87d2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00000000000381fc : or eax, edx ; ret
0x00000000000347f9 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000f8db2 : or eax, esi ; bswap eax ; ret
0x000000000016fdf1 : or eax, esi ; call rsp
0x00000000000e066e : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000e87d5 : or eax, esi ; or rax, rdi ; ret
0x0000000000076ed4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000df001 : or ebp, dword ptr [rdx + rdi*8] ; dec dword ptr [rax + 0x39] ; ret
0x00000000000700a8 : or ebp, eax ; ret 0xfaf3
0x000000000016f689 : or ebp, edi ; call rsp
0x000000000019d923 : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000015fa3d : or ebp, esi ; call qword ptr [rsi]
0x000000000018c979 : or ebp, esi ; jmp qword ptr [rcx]
0x000000000017871c : or ebp, esp ; jmp 0x178722
0x00000000001345d3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000000713ee : or ebx, esi ; ret
0x000000000007cd92 : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000007443f : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000038cb0 : or ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000028370 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000e3817 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000f00a5 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4c30
0x0000000000077959 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000009cba4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009cbf4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000190f74 : or ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x000000000002067a : or ecx, dword ptr [rcx + rcx*4 - 0x16] ; sub rdx, rbx ; inc rdx ; jmp 0x20693
0x00000000000f171f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000978d3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x0000000000034c84 : or ecx, eax ; je 0x34c2c ; ret
0x00000000001109c4 : or edi, dword ptr [rax + 1] ; ret
0x000000000010bb94 : or edi, dword ptr [rax + 2] ; ret
0x00000000000f3574 : or edi, dword ptr [rax + 7] ; ret
0x0000000000077133 : or edi, ebp ; xor al, byte ptr [rax] ; ret
0x000000000014c13f : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009b267 : or edi, edi ; loope 0x9b2da ; nop dword ptr [rax + rax] ; ret
0x000000000016d54d : or edi, esp ; jmp qword ptr [rax]
0x000000000007486d : or edx, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000662f1 : or edx, dword ptr [rcx - 0x7ab70005] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000174b08 : or esi, 0xfffffffa ; jmp rsp
0x0000000000109974 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077da8 : or esi, dword ptr [rcx] ; xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x000000000006a1f6 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015f9bd : or esi, ebp ; call qword ptr [rsi]
0x0000000000189061 : or esi, ebx ; call qword ptr [rdx]
0x00000000001344f3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000e6034 : or esi, ebx ; ret
0x00000000000c225a : or esi, edx ; jne 0xc2265 ; ret
0x00000000000efd23 : or esi, esi ; jno 0xefd31 ; cmovne eax, edx ; ret
0x00000000000c2259 : or esi, r10d ; jne 0xc2266 ; ret
0x000000000006a0f7 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074231 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f5f : or esp, dword ptr [rdx] ; js 0x2f19 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000df924 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000016d545 : or esp, edi ; call qword ptr [rax - 0x1f0003f6]
0x000000000007b5e1 : or qword ptr [rbx + rbp + 8], 1 ; jmp 0x7b5b3
0x00000000000c433f : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000035972 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000035b35 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000141ba5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000134642 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001345d2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000134562 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001344f2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000add9d : or r8, qword ptr [r8] ; mov rdi, r13 ; call 0x6a0a8
0x000000000017ae84 : or r8d, dword ptr [rdx] ; ret
0x0000000000034c83 : or r9d, r8d ; je 0x34c2d ; ret
0x0000000000141c27 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000001fc5c : or rax, 0xfc08500 ; xchg eax, ebp ; ret
0x0000000000035099 : or rax, 0xffffffffffffffff ; ret
0x0000000000126a42 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018544e : or rax, qword ptr [rdx] ; xlatb ; ret
0x000000000008ae06 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000e87d7 : or rax, rdi ; ret
0x0000000000041b8c : or rax, rdx ; cmp r8, rdi ; jne 0x41b71 ; ret
0x00000000000381fb : or rax, rdx ; ret
0x00000000000e87d4 : or rax, rsi ; or rax, rdi ; ret
0x000000000018c9a8 : or rbp, rsi ; jmp qword ptr [rcx]
0x00000000000344c0 : orpd xmm0, xmm1 ; ret
0x00000000000344c1 : orps xmm0, xmm1 ; ret
0x000000000003485e : orps xmm0, xmm3 ; ret
0x0000000000178a45 : out -0x15, eax ; jmp qword ptr [rdx]
0x00000000001754fd : out -0x16, eax ; jmp qword ptr [rdx]
0x00000000000d2ed8 : out -0x18, eax ; ret 0xfffd
0x0000000000119a85 : out -0x18, eax ; test dword ptr [rcx - 0x76b7000a], eax ; ret 0x854d
0x000000000015b580 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000038355 : out -0x57, eax ; add byte ptr ss:[rax + 0x39], cl ; ret
0x00000000000372b1 : out -0x77, eax ; ret
0x0000000000069a72 : out -0x77, eax ; ret 0xc031
0x000000000002e5c3 : out -0x80, eax ; sete al ; ret
0x00000000001608f5 : out -0xa, eax ; call rbx
0x000000000015d2a8 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000018df15 : out -0xc, eax ; jmp qword ptr [rdx]
0x0000000000133e5a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000efda8 : out -0xd, eax ; ret
0x0000000000187c21 : out -0xe, eax ; call qword ptr [rbx]
0x0000000000187c09 : out -0xe, eax ; call qword ptr [rsi]
0x000000000011dba3 : out -1, eax ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe8eb
0x00000000000f121d : out -1, eax ; push rbx ; ret
0x000000000015ee21 : out -3, eax ; call rax
0x000000000016d2b1 : out -5, eax ; jmp qword ptr [rax]
0x000000000016d2d1 : out -5, eax ; jmp rax
0x0000000000174bf1 : out -6, eax ; jmp rsp
0x000000000018370d : out 0, al ; add al, ah ; mov esp, edi ; call qword ptr [rdx]
0x0000000000183745 : out 0, al ; add byte ptr [rax - 0x47], bl ; out dx, eax ; call qword ptr [rdx]
0x000000000010c019 : out 0, al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000016fa9d : out 0, eax ; add dl, bh ; salc ; out dx, eax ; jmp rsp
0x000000000003e599 : out 0x12, eax ; add bl, ch ; ret 0x8b44
0x000000000001fe6f : out 0x41, eax ; call qword ptr [rsi]
0x00000000000f8c34 : out 0x44, al ; mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x00000000000f3111 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000241ee : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000113550 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000010c446 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000efce5 : out 0x48, al ; mov edi, ebx ; call r14
0x000000000007ec83 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000009cc90 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044238 : out 0x48, eax ; mov eax, edx ; ret
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x0000000000076733 : out 0x5b, al ; ret
0x00000000000f023d : out 0x5b, eax ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000001143f8 : out 0x5b, eax ; ret
0x000000000001f4fd : out 0x73, eax ; cmp byte ptr [rax], al ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000d369d : out 0x89, al ; ret 0xca83
0x0000000000188134 : out 0x95, al ; jmp qword ptr [rdx]
0x0000000000182c9b : out 0xa, al ; ret
0x0000000000002462 : out 0xa9, al ; ret 0xbd07
0x000000000017843c : out 0xe3, al ; jmp 0x178442
0x0000000000072403 : out 0xe8, al ; mov bh, 0x3d ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000002fe98 : out 0xe8, al ; ret 6
0x00000000000f638f : out 0xe8, al ; sub edi, esi ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000175545 : out 0xea, al ; jmp qword ptr [rdx]
0x0000000000178c3d : out 0xeb, al ; jmp qword ptr [rdx]
0x000000000016fbe1 : out 0xef, al ; jmp rsp
0x000000000002ab36 : out 0xf, eax ; xchg eax, ebp ; ret
0x0000000000133dda : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008bd19 : out 0xf3, al ; ret
0x000000000019ca49 : out 0xf7, al ; call qword ptr [rax]
0x000000000016d331 : out 0xfb, al ; call qword ptr [rax]
0x000000000003bd86 : out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x0000000000062a5e : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000071284 : out 1, al ; mov eax, esi ; ret
0x0000000000172195 : out 1, eax ; add ah, ah ; adc dh, bh ; jmp rsp
0x000000000010404d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000fe7f2 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000008ac79 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000071281 : out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x0000000000174c65 : out dx, al ; add al, byte ptr [rax] ; in eax, dx ; cli ; call rsp
0x0000000000103bef : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x103bfc ; ret
0x000000000008d2fb : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000103bec : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x103bff ; ret
0x0000000000109eee : out dx, al ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000017bc82 : out dx, al ; call qword ptr [rax]
0x000000000017b2f2 : out dx, al ; call qword ptr [rdx]
0x0000000000036604 : out dx, al ; call r12
0x000000000007f21a : out dx, al ; call rax
0x000000000016f5d2 : out dx, al ; call rsp
0x000000000016f5ca : out dx, al ; dec dword ptr [rdx + rax*8 + 0x1c780000] ; out dx, al ; call rsp
0x000000000016f65a : out dx, al ; dec dword ptr [rsi + rax*8 - 0x7d7b0000] ; out dx, al ; call rsp
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000015c6d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000015f821 : out dx, al ; hlt ; dec dword ptr [rdx - 0x12] ; hlt ; jmp qword ptr [rdx]
0x000000000015f825 : out dx, al ; hlt ; jmp qword ptr [rdx]
0x000000000003f94f : out dx, al ; jmp 0x3f3a0
0x000000000017c0a2 : out dx, al ; jmp qword ptr [rax]
0x000000000017b3aa : out dx, al ; jmp qword ptr [rcx]
0x000000000017afe6 : out dx, al ; jmp qword ptr [rdx]
0x000000000017c83a : out dx, al ; jmp rsi
0x000000000016f63a : out dx, al ; jmp rsp
0x000000000000374d : out dx, al ; jne 0x372d ; ret 0x975
0x000000000009dc90 : out dx, al ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000035cc1 : out dx, al ; mov eax, 1 ; ret
0x000000000000314b : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000012bc2a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009db44 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000007f3d6 : out dx, al ; mov rdi, r12 ; call rax
0x000000000005e5c8 : out dx, al ; mov rdi, r9 ; call 0x8a7e6
0x000000000007f58e : out dx, al ; mov rdi, rbx ; call rax
0x00000000001341ea : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012509e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011cb4f : out dx, al ; pop rbp ; jmp rax
0x000000000016f632 : out dx, al ; push qword ptr [rdi + rax*8] ; add byte ptr [rax], al ; push rsp ; sub ch, dh ; jmp rsp
0x0000000000028703 : out dx, al ; ret 0
0x0000000000002592 : out dx, al ; ret 0x88ad
0x000000000007ccfe : out dx, al ; ret 0xe
0x00000000000e806e : out dx, al ; ret 3
0x000000000015ee2d : out dx, al ; std ; call qword ptr [rax - 0x2f000210]
0x000000000016d301 : out dx, al ; sti ; call qword ptr [rax]
0x000000000016d2a1 : out dx, al ; sti ; call rax
0x000000000009d689 : out dx, al ; xor eax, eax ; ret
0x0000000000182565 : out dx, ax ; jmp qword ptr [rdx]
0x000000000009bf3d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000008b0f5 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000174c95 : out dx, eax ; add al, byte ptr [rax] ; je 0x174c93 ; cli ; call rsp
0x0000000000193fa5 : out dx, eax ; add dword ptr [rax], eax ; cwde ; push rdx ; idiv bh ; ret 3
0x0000000000172355 : out dx, eax ; add dword ptr [rax], eax ; hlt ; xor edi, esi ; jmp rsp
0x000000000005f54d : out dx, eax ; add r14, 1 ; call 0xeb7d7
0x000000000014c170 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000044e38 : out dx, eax ; call 0x440c8
0x00000000000adda2 : out dx, eax ; call 0x6a0a3
0x00000000000da1b5 : out dx, eax ; call 0xd6413
0x000000000010ff19 : out dx, eax ; call 0xdc1b3
0x000000000005f50a : out dx, eax ; call 0xeb7d3
0x000000000010a9e5 : out dx, eax ; call qword ptr [rax]
0x000000000010c01f : out dx, eax ; call qword ptr [rbx]
0x000000000017f39a : out dx, eax ; call qword ptr [rcx]
0x0000000000182f02 : out dx, eax ; call qword ptr [rdi]
0x0000000000181662 : out dx, eax ; call qword ptr [rdx]
0x00000000001815ea : out dx, eax ; call qword ptr [rsi]
0x00000000000c22d6 : out dx, eax ; call r12
0x00000000000e6152 : out dx, eax ; call r14
0x000000000010a1bb : out dx, eax ; call rax
0x000000000009e27e : out dx, eax ; call rbx
0x0000000000116892 : out dx, eax ; call rcx
0x000000000007f2ec : out dx, eax ; call rdx
0x000000000016f68a : out dx, eax ; call rsp
0x00000000001905b4 : out dx, eax ; cmc ; jmp qword ptr [rdx]
0x000000000016fa72 : out dx, eax ; dec dword ptr [rsi - 0x2b170000] ; out dx, eax ; call rsp
0x000000000016f94a : out dx, eax ; dec dword ptr [rsp + rbx*8 - 0x40960000] ; out dx, eax ; call rsp
0x000000000016f6ea : out dx, eax ; inc esp ; retf ; add byte ptr [rax], al ; mov ah, 0x8a ; out dx, eax ; jmp rsp
0x0000000000170d61 : out dx, eax ; int1 ; call rsp
0x00000000001782c9 : out dx, eax ; jmp 0x1782cd
0x000000000017fd42 : out dx, eax ; jmp qword ptr [rax]
0x000000000015def6 : out dx, eax ; jmp qword ptr [rcx]
0x000000000017e3d2 : out dx, eax ; jmp qword ptr [rdx]
0x00000000001804e2 : out dx, eax ; jmp rax
0x000000000017e9a2 : out dx, eax ; jmp rbx
0x00000000001829aa : out dx, eax ; jmp rcx
0x0000000000183dba : out dx, eax ; jmp rdx
0x000000000016f6f2 : out dx, eax ; jmp rsp
0x0000000000183664 : out dx, eax ; jnp 0x183659 ; jmp qword ptr [rdx]
0x000000000016f8b2 : out dx, eax ; lcall ptr [rax + rbx*8 - 0x46f50000] ; out dx, eax ; jmp rsp
0x000000000016fa9a : out dx, eax ; lcall ptr [rdi - 0x29060000] ; out dx, eax ; jmp rsp
0x00000000000f4eb0 : out dx, eax ; leave ; ret
0x000000000016f682 : out dx, eax ; ljmp ptr [rax + rcx*8 + 0xba40000] ; out dx, eax ; call rsp
0x0000000000079e2d : out dx, eax ; mov bh, 0x32 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000d2cf0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000012ba5a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bb56 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012baa2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e7798 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000448f0 : out dx, eax ; mov rax, rdx ; ret
0x000000000010f173 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010ef7c : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000022806 : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000013426a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000012519d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017f12c : out dx, eax ; out dx, al ; jmp qword ptr [rdx]
0x000000000016fc89 : out dx, eax ; out dx, eax ; jmp rsp
0x000000000006e831 : out dx, eax ; pop rbx ; ret
0x000000000016fc9a : out dx, eax ; push qword ptr [rdi + rsi*8] ; add ah, dl ; out dx, eax ; out dx, eax ; jmp rsp
0x00000000001474c3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001474d8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001474ed : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000348e7 : out dx, eax ; ret
0x000000000009b4b3 : out dx, eax ; ret 0xf66
0x0000000000023f0d : out dx, eax ; ret 5
0x00000000001489dc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001489c5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001489ae : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014746a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016d325 : out dx, eax ; sti ; call rax
0x000000000009d970 : out dx, eax ; sub rax, 4 ; ret
0x0000000000077134 : out dx, eax ; xor al, byte ptr [rax] ; ret
0x000000000010b597 : out dx, eax ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000043e90 : out dx, eax ; xor eax, eax ; ret
0x0000000000070ba5 : out dx, eax ; xor r8d, r8d ; call r12
0x0000000000120d5e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000adc48 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000c9dbf : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000014997e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170ead : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, 0xd6 ; call rsp
0x0000000000187449 : outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x000000000016d7b9 : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000016e11d : outsb dx, byte ptr [rsi] ; cld ; call rax
0x000000000016d8f5 : outsb dx, byte ptr [rsi] ; cld ; call rsp
0x000000000016d8f1 : outsb dx, byte ptr [rsi] ; cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x000000000016d775 : outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000034933 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000003e673 : outsb dx, byte ptr [rsi] ; in eax, -1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000015ce83 : outsb dx, byte ptr [rsi] ; ja 0x15ce0c ; ret 0x48f
0x000000000018275c : outsb dx, byte ptr [rsi] ; jae 0x182751 ; jmp qword ptr [rdx]
0x000000000006c75a : outsb dx, byte ptr [rsi] ; mov eax, edx ; pop rbx ; ret
0x000000000015abc4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000185249 : outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000085b1a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000000d07ca : outsb dx, byte ptr [rsi] ; xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x000000000018c085 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; hlt ; jmp qword ptr [rdi]
0x00000000000e1912 : outsd dx, dword ptr [rsi] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000104837 : outsd dx, dword ptr [rsi] ; add rsp, 8 ; ret
0x000000000010c908 : outsd dx, dword ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x8b48
0x000000000016d771 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x000000000016d969 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000016e0e1 : outsd dx, dword ptr [rsi] ; cld ; call rax
0x000000000016d82d : outsd dx, dword ptr [rsi] ; cld ; call rdx
0x000000000016d829 : outsd dx, dword ptr [rsi] ; cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x000000000016d7ad : outsd dx, dword ptr [rsi] ; cld ; jmp rsi
0x00000000000f84ea : outsd dx, dword ptr [rsi] ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000803d8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000861ee : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000016ee11 : outsd dx, dword ptr [rsi] ; in al, dx ; call rsp
0x0000000000187481 : outsd dx, dword ptr [rsi] ; jmp qword ptr [rdx]
0x000000000018263d : outsd dx, dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001487dd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000014887d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000083a3a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000005f45d : outsd dx, dword ptr [rsi] ; ret
0x000000000015b586 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000012c397 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000000000148882 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000083a8a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001197a2 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x1197b7 ; xor eax, eax ; ret
0x0000000000107970 : outsd dx, dword ptr [rsi] ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x000000000015b585 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000016d471 : paddb mm7, mm7 ; xor byte ptr [rcx], dl ; cld ; call qword ptr [rax]
0x000000000011e9a2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000009cee4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000009cecf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000011e9a1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015c985 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000015c986 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000091051 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x0000000000091625 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000189ab8 : pcmpgtw mm6, mm4 ; jmp qword ptr [rax]
0x00000000000347d1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034aa1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000091633 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000916d5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x91759 ; xor eax, eax ; ret
0x00000000000347d0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034aa0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000081c46 : pmovmskb edx, mm4 ; test edx, edx ; je 0x81c5a ; bsf eax, edx ; ret
0x000000000006bce7 : pop bx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000188a2c : pop fs ; jmp qword ptr [rdx]
0x000000000016ecc5 : pop qword ptr [rax] ; add byte ptr [rcx - 0x14], ah ; jmp rsp
0x0000000000195f1e : pop qword ptr [rax] ; idiv bh ; sbb al, 0xd ; test edi, ecx ; cmc ; jmp qword ptr [rdx]
0x000000000011133c : pop qword ptr [rdi + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000173ded : pop qword ptr [rdx] ; add byte ptr [rbx + rax*4], dl ; stc ; jmp rsp
0x0000000000197714 : pop qword ptr [rdx] ; add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000000f4bb4 : pop r10 ; ret
0x000000000015ce0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000006bdc2 : pop r12 ; jmp rax
0x00000000000502bb : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x00000000001169c1 : pop r12 ; mov eax, esi ; pop r13 ; ret
0x00000000000a9096 : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x000000000006da23 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000e07f3 : pop r12 ; mov eax, r9d ; pop r13 ; ret
0x0000000000068b0f : pop r12 ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000002ed80 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002ef49 : pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000f0240 : pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000ecd72 : pop r12 ; neg eax ; pop r13 ; ret
0x00000000000f8c38 : pop r12 ; pop r13 ; jmp rax
0x000000000011a9f4 : pop r12 ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x000000000008cef8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000b6438 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000007c8ec : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6ab : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002247b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fe80 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024120 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011610e : pop r12 ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x000000000006945c : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fe01 : pop r12 ; pop r13 ; ret
0x00000000000a9050 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000a65c7 : pop r12 ; pop r14 ; ret
0x0000000000037262 : pop r12 ; pop rbp ; ret
0x000000000002161e : pop r12 ; ret
0x0000000000108317 : pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000006e7c7 : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000f8c3a : pop r13 ; jmp rax
0x0000000000103cbc : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x00000000000501ed : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000011a9f6 : pop r13 ; mov eax, ecx ; pop r14 ; ret
0x000000000008cefa : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000b643a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000181eec : pop r13 ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000ee692 : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x000000000009eede : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x000000000003e9fb : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007c8ee : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6ad : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002247d : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fe82 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024122 : pop r13 ; pop r14 ; ret
0x000000000006f0d6 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000effe2 : pop r13 ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x0000000000116110 : pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000c27b8 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006945e : pop r13 ; pop rbp ; ret
0x000000000001fe03 : pop r13 ; ret
0x00000000000a9052 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000c21cf : pop r14 ; and eax, 1 ; pop r15 ; ret
0x0000000000044413 : pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000006f5a3 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000d349b : pop r14 ; mov eax, 1 ; pop r15 ; ret
0x0000000000116144 : pop r14 ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003c352 : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000039b82 : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000c2217 : pop r14 ; neg eax ; pop r15 ; ret
0x000000000009eee0 : pop r14 ; neg rax ; pop r15 ; ret
0x000000000003e9fd : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007c8f0 : pop r14 ; pop r15 ; jmp rax
0x000000000001f6af : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002247f : pop r14 ; pop r15 ; ret
0x000000000001fe84 : pop r14 ; pop rbp ; ret
0x0000000000024124 : pop r14 ; ret
0x000000000006f0d8 : pop r14 ; sar rax, 2 ; ret
0x00000000000effe4 : pop r14 ; sub eax, edi ; pop r15 ; ret
0x0000000000116112 : pop r14 ; xor eax, eax ; jmp rcx
0x00000000000c27ba : pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000003e9ff : pop r15 ; fmulp st(1) ; ret
0x000000000007c8f2 : pop r15 ; jmp rax
0x000000000001f6b1 : pop r15 ; pop rbp ; ret
0x0000000000022481 : pop r15 ; ret
0x0000000000111606 : pop r8 ; mov eax, 1 ; ret
0x0000000000077b71 : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000010cd06 : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000016cd1f : pop r9 ; clc ; ret 0x6e1f
0x0000000000111d4e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000017368d : pop rax ; add al, byte ptr [rax] ; in al, -0x57 ; clc ; jmp rsp
0x000000000003b19b : pop rax ; add eax, 0xc7480000 ; ret
0x000000000010c85b : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000111f14 : pop rax ; call rax
0x000000000018c648 : pop rax ; cld ; hlt ; jmp qword ptr [rcx]
0x000000000018e1f8 : pop rax ; cmc ; jmp qword ptr [rcx]
0x00000000000c42c7 : pop rax ; cmp al, 0x11 ; je 0xc42d7 ; xor eax, eax ; ret
0x000000000017f5d4 : pop rax ; hlt ; out dx, al ; jmp qword ptr [rdx]
0x000000000017ab49 : pop rax ; in eax, dx ; call qword ptr [rsi]
0x0000000000179858 : pop rax ; ja 0x17984a ; call qword ptr [rsi]
0x0000000000176a88 : pop rax ; jl 0x176a79 ; call qword ptr [rbx]
0x0000000000111d56 : pop rax ; jmp rcx
0x000000000017c118 : pop rax ; loopne 0x17c10c ; call qword ptr [rax]
0x000000000018bb28 : pop rax ; mov bh, 0xf4 ; jmp rdx
0x00000000000291bf : pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026ba1 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000007a34a : pop rax ; mov eax, 1 ; jmp 0x7a31b
0x0000000000111607 : pop rax ; mov eax, 1 ; ret
0x000000000002e584 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e512 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000010c49e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000c92dd : pop rax ; or bh, dh ; ret
0x0000000000095ed4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000077b72 : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000181cad : pop rax ; out dx, eax ; jmp qword ptr [rdx]
0x000000000001f501 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000010cd07 : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000e8629 : pop rax ; pop rdi ; call rax
0x00000000001829a8 : pop rax ; pop rsi ; out dx, eax ; jmp rcx
0x00000000000f5070 : pop rax ; push rdi ; sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000038288 : pop rax ; ret
0x00000000000fa5cc : pop rax ; ret 0x2a
0x0000000000189498 : pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x0000000000173cf1 : pop rax ; stc ; call rsp
0x0000000000176281 : pop rax ; std ; jmp qword ptr [rdi]
0x000000000016ced5 : pop rax ; sti ; jmp qword ptr [rax]
0x0000000000183db8 : pop rax ; sti ; out dx, eax ; jmp rdx
0x0000000000101074 : pop rax ; sub al, byte ptr [rax] ; ret
0x0000000000191e18 : pop rax ; sub esi, esi ; jmp qword ptr [rsi]
0x00000000000c62d9 : pop rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017ae95 : pop rbp ; add byte ptr [rax], al ; clc ; mov bh, 0xed ; call qword ptr [rax]
0x000000000017ada5 : pop rbp ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0x13], ah ; call rdx
0x00000000000681c7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000010c60d : pop rbp ; add eax, edx ; ret
0x00000000000f4db5 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000186f5c : pop rbp ; cld ; int1 ; jmp qword ptr [rdx]
0x0000000000174621 : pop rbp ; cli ; jmp rsp
0x000000000018e089 : pop rbp ; cmc ; jmp qword ptr [rbx]
0x0000000000197ad7 : pop rbp ; idiv bh ; sbb al, 0xd ; lea ebx, dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x000000000002022f : pop rbp ; jmp 0x20240
0x000000000006e254 : pop rbp ; jmp rax
0x0000000000109ef5 : pop rbp ; jmp rcx
0x000000000010b59a : pop rbp ; jmp rdx
0x000000000009b8f6 : pop rbp ; lea rax, qword ptr [r8 + 1] ; pop r12 ; ret
0x000000000006cde1 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x0000000000103cbd : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000006cdcd : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000501ee : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000d730c : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x000000000009b924 : pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000011a9f7 : pop rbp ; mov eax, ecx ; pop r14 ; ret
0x00000000000500b4 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000008cefb : pop rbp ; mov eax, edx ; pop r14 ; ret
0x00000000000f6a04 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000a9013 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000a8f41 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000113a59 : pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x000000000008ca39 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000b643b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x000000000006bce9 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000110305 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000181501 : pop rbp ; out dx, eax ; jmp qword ptr [rax]
0x0000000000181e5d : pop rbp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000007c5d3 : pop rbp ; pop r12 ; jmp rax
0x00000000001169c0 : pop rbp ; pop r12 ; mov eax, esi ; pop r13 ; ret
0x000000000006da22 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000e07f2 : pop rbp ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x000000000002ed7f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002ef48 : pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000f023f : pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000ecd71 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000011a9f3 : pop rbp ; pop r12 ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x000000000008cef7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000007c8eb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002247a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000002411f : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fe00 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a904f : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000a65c6 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002161d : pop rbp ; pop r12 ; ret
0x000000000003c351 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000039b81 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000ee693 : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x000000000009eedf : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x000000000003e9fc : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007c8ef : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6ae : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002247e : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001fe83 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000024123 : pop rbp ; pop r14 ; ret
0x000000000006f0d7 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000effe3 : pop rbp ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x0000000000116111 : pop rbp ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000c27b9 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006945f : pop rbp ; pop rbp ; ret
0x00000000000441a8 : pop rbp ; pop rbx ; ret
0x000000000001f503 : pop rbp ; ret
0x000000000016012c : pop rbp ; ret 0xfff5
0x0000000000069732 : pop rbp ; sti ; lcall ptr [rbx - 0x77] ; call 0xffffffffc362d8a2
0x00000000000f49e3 : pop rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf49f9 ; xor eax, eax ; ret
0x00000000000f4a13 : pop rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a29 ; xor eax, eax ; ret
0x00000000000f4a43 : pop rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a59 ; xor eax, eax ; ret
0x00000000000f4a73 : pop rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a89 ; xor eax, eax ; ret
0x00000000000f4aa3 : pop rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4ab9 ; xor eax, eax ; ret
0x0000000000070bb8 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000fd817 : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000075231 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000a9053 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000000f35a1 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x0000000000174dfd : pop rbx ; add dword ptr [rax], eax ; and bl, r15b ; jmp rsp
0x0000000000180b44 : pop rbx ; and ch, bh ; jmp qword ptr [rdx]
0x000000000015a158 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009bbaf : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000009bbef : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000c3600 : pop rbx ; and eax, 2 ; pop rbp ; ret
0x000000000017f974 : pop rbx ; clc ; out dx, al ; jmp qword ptr [rdx]
0x0000000000171a41 : pop rbx ; cmc ; jmp rsp
0x000000000015a156 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006aa83 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000737ae : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000045781 : pop rbx ; idiv bh ; dec ecx ; ret
0x000000000014c95d : pop rbx ; in eax, dx ; jmp qword ptr [rax]
0x00000000001826cc : pop rbx ; jb 0x1826c1 ; jmp qword ptr [rdx]
0x0000000000113179 : pop rbx ; jmp 0x1f473
0x000000000006bbda : pop rbx ; jmp rax
0x000000000007005c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000c1f52 : pop rbx ; mov eax, 1 ; ret
0x0000000000038285 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c6637 : pop rbx ; mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x000000000009bc59 : pop rbx ; mov eax, eax ; ret
0x00000000000b9de3 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000069735 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004bdd2 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000006e729 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000006e609 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006b317 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000069ee0 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010b594 : pop rbx ; mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000011cb4c : pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000010cfac : pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000001fe7f : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006945b : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000037261 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000010c60c : pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000000f4db4 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x000000000006e253 : pop rbx ; pop rbp ; jmp rax
0x000000000006cde0 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000006cdcc : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000d730b : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x000000000009b923 : pop rbx ; pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x00000000000500b3 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f6a03 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000a9012 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x0000000000113a58 : pop rbx ; pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x000000000008ca38 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000006bce8 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000110304 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x000000000007c5d2 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001169bf : pop rbx ; pop rbp ; pop r12 ; mov eax, esi ; pop r13 ; ret
0x000000000006da21 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000e07f1 : pop rbx ; pop rbp ; pop r12 ; mov eax, r9d ; pop r13 ; ret
0x000000000002ed7e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002ef47 : pop rbx ; pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000f023e : pop rbx ; pop rbp ; pop r12 ; mov rdx, rax ; jmp rcx
0x00000000000ecd70 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000002411e : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fdff : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a65c5 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000002161c : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f502 : pop rbx ; pop rbp ; ret
0x00000000000fd816 : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000075230 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000021e78 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x000000000015d440 : pop rbx ; ret 0x6f9
0x00000000000e0fac : pop rbx ; sar eax, 0x1f ; ret
0x00000000001934ac : pop rbx ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000010cd08 : pop rbx ; sete al ; movzx eax, al ; ret
0x000000000016cedd : pop rbx ; sti ; call rax
0x00000000000cf3b4 : pop rbx ; sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000c4cb1 : pop rbx ; sub eax, 1 ; pop rbp ; ret
0x000000000009e108 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000004312b : pop rbx ; xor eax, eax ; pop rbp ; ret
0x0000000000009698 : pop rcx ; add al, 0 ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xd
0x00000000001736bd : pop rcx ; add al, byte ptr [rax] ; jns 0x173679 ; clc ; jmp rsp
0x000000000017a9fd : pop rcx ; add byte ptr [rax], al ; and byte ptr [rdi - 0x13], dl ; call rdi
0x00000000000787f9 : pop rcx ; add byte ptr [rax], al ; ret
0x0000000000170b65 : pop rcx ; add dword ptr [rax], eax ; test byte ptr [rbp - 0xf], ch ; call rsp
0x00000000000eeeb6 : pop rcx ; add dword ptr [rdx + rdx*8 + 0x3948ec75], eax ; ret
0x000000000003e596 : pop rcx ; add eax, 0x12e7b4 ; jmp 0x3e567
0x000000000016c570 : pop rcx ; clc ; ret 0x6e1f
0x0000000000159435 : pop rcx ; in eax, dx ; call rax
0x000000000017f004 : pop rcx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x00000000000e4de2 : pop rcx ; ret 0xc383
0x000000000012a5d8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017376d : pop rdi ; add al, byte ptr [rax] ; xchg eax, esp ; ret
0x00000000000db8da : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000017b3d5 : pop rdi ; add byte ptr [rax], al ; cmc ; ret
0x0000000000170c9d : pop rdi ; add dword ptr [rax], eax ; mov ah, 0xd7 ; int1 ; jmp rsp
0x000000000012582d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e862a : pop rdi ; call rax
0x00000000001710b9 : pop rdi ; call rsp
0x00000000001730c9 : pop rdi ; clc ; jmp rsp
0x000000000003ea00 : pop rdi ; fmulp st(1) ; ret
0x000000000012bff9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012be09 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015c6fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000007c8f3 : pop rdi ; jmp rax
0x000000000015b6c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000012bc29 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001822dd : pop rdi ; out dx, eax ; jmp qword ptr [rdx]
0x000000000012ba59 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bb55 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000012baa1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f6b2 : pop rdi ; pop rbp ; ret
0x0000000000022482 : pop rdi ; ret
0x000000000007838d : pop rdi ; ret 0xe
0x00000000000f47d3 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf47e9 ; xor eax, eax ; ret
0x00000000000f4803 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4819 ; xor eax, eax ; ret
0x00000000000f4833 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4849 ; xor eax, eax ; ret
0x00000000000f4863 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4879 ; xor eax, eax ; ret
0x00000000000f4893 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf48a9 ; xor eax, eax ; ret
0x00000000000f48c3 : pop rdi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf48d9 ; xor eax, eax ; ret
0x000000000017ab45 : pop rdx ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0x13] ; call qword ptr [rsi]
0x0000000000041bec : pop rdx ; add byte ptr ss:[rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x000000000018ab05 : pop rdx ; add dword ptr [rax], eax ; call 0xffffffffe8189ede
0x000000000018ab55 : pop rdx ; add dword ptr [rax], eax ; mov dh, dl ; call rcx
0x0000000000120126 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000000748a7 : pop rdx ; cdqe ; ret
0x000000000016dc4d : pop rdx ; cld ; lcall ptr [rsi - 0x6f] ; cld ; jmp rax
0x0000000000189a9c : pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000160034 : pop rdx ; cmc ; lcall ptr [rcx - 0x5a000a3e] ; ret 0xfff5
0x000000000017f58c : pop rdx ; hlt ; out dx, al ; jmp qword ptr [rdx]
0x0000000000003a4a : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x000000000015c2e1 : pop rdx ; je 0x15c2ab ; ret 0xacfc
0x000000000000314d : pop rdx ; jmp 0xffffffffc25d05fb
0x000000000015d2a7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00000000000f4bb3 : pop rdx ; pop r10 ; ret
0x000000000007c0ef : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000f4bd9 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x000000000016ced9 : pop rdx ; sti ; push rax ; pop rbx ; sti ; call rax
0x00000000000ea6c2 : pop rdx ; stosd dword ptr [rdi], eax ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000015ce10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000009d505 : pop rdx ; test al, 0xf0 ; jne 0x9d539 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000188294 : pop rdx ; xchg eax, edi ; jmp qword ptr [rdx]
0x000000000012572e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c21d0 : pop rsi ; and eax, 1 ; pop r15 ; ret
0x0000000000197a8f : pop rsi ; idiv bh ; sbb al, 0xd ; mov dword ptr [rcx - 0xa], ebx ; jmp qword ptr [rdx]
0x0000000000044414 : pop rsi ; idiv r9 ; pop r15 ; ret
0x000000000007d2e2 : pop rsi ; jle 0x7d320 ; add byte ptr [rbp - 0xcf98740], al ; ret
0x000000000006f5a4 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000d349c : pop rsi ; mov eax, 1 ; pop r15 ; ret
0x0000000000116145 : pop rsi ; mov edx, 0xffffffff ; xor eax, eax ; jmp rcx
0x000000000003c353 : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000039b83 : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000c2218 : pop rsi ; neg eax ; pop r15 ; ret
0x000000000009eee1 : pop rsi ; neg rax ; pop r15 ; ret
0x000000000008ae15 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003bd85 : pop rsi ; out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000001829f9 : pop rsi ; out dx, eax ; call rax
0x0000000000181f7d : pop rsi ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001829a9 : pop rsi ; out dx, eax ; jmp rcx
0x000000000003e9fe : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x000000000007c8f1 : pop rsi ; pop r15 ; jmp rax
0x000000000001f6b0 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022480 : pop rsi ; pop r15 ; ret
0x000000000001fe85 : pop rsi ; pop rbp ; ret
0x0000000000024125 : pop rsi ; ret
0x000000000006f0d9 : pop rsi ; sar rax, 2 ; ret
0x00000000000dd954 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f48f3 : pop rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4909 ; xor eax, eax ; ret
0x00000000000f4923 : pop rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4939 ; xor eax, eax ; ret
0x00000000000f4953 : pop rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4969 ; xor eax, eax ; ret
0x00000000000f4983 : pop rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4999 ; xor eax, eax ; ret
0x00000000000effe5 : pop rsi ; sub eax, edi ; pop r15 ; ret
0x00000000000f7d5e : pop rsi ; xchg eax, ebx ; cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000016dc50 : pop rsi ; xchg eax, ecx ; cld ; jmp rax
0x0000000000116113 : pop rsi ; xor eax, eax ; jmp rcx
0x00000000000c27bb : pop rsi ; xor eax, eax ; pop r15 ; ret
0x0000000000120f70 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001861f4 : pop rsp ; adc dword ptr [rcx], eax ; add al, bh ; add dh, dl ; jmp rax
0x0000000000120424 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000174e45 : pop rsp ; add dword ptr [rax], eax ; mov ah, 0x75 ; sti ; call rsp
0x000000000018acdd : pop rsp ; add dword ptr [rax], eax ; push rax ; out dx, eax ; call qword ptr [rcx]
0x00000000001894f4 : pop rsp ; add dword ptr [rax], r8d ; pop rax ; sbb esi, ebx ; jmp qword ptr [rcx]
0x000000000018b4f4 : pop rsp ; add dword ptr fs:[rax], eax ; sbb byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x0000000000121c70 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000aa915 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000171e5c : pop rsp ; fadd dword ptr [rcx] ; add ah, ah ; ret 0xfff6
0x00000000001829f4 : pop rsp ; fld dword ptr [rax] ; add al, bh ; pop rsi ; out dx, eax ; call rax
0x000000000018c3f4 : pop rsp ; jae 0x18c3ff ; add byte ptr [rax - 0xa], cl ; hlt ; jmp rbx
0x000000000018c2f4 : pop rsp ; jb 0x18c2ff ; add byte ptr [rax], cl ; cmc ; hlt ; jmp qword ptr [rcx]
0x000000000019c4f4 : pop rsp ; je 0x19c500 ; add byte ptr [rax], bh ; add bl, bh ; jmp qword ptr [rdx]
0x000000000006bdc3 : pop rsp ; jmp rax
0x000000000005a028 : pop rsp ; loop 0x5a030 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000024ef6 : pop rsp ; mov dword ptr [r13 + 0x54], eax ; pop r13 ; pop r14 ; ret
0x00000000000502bc : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x00000000001169c2 : pop rsp ; mov eax, esi ; pop r13 ; ret
0x00000000000a9097 : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x000000000006da24 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x00000000000e07f4 : pop rsp ; mov eax, r9d ; pop r13 ; ret
0x0000000000068b10 : pop rsp ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000002ed81 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000002ef4a : pop rsp ; mov rax, rdi ; pop r13 ; ret
0x00000000000f0241 : pop rsp ; mov rdx, rax ; jmp rcx
0x000000000018dcf4 : pop rsp ; mov word ptr [rcx], es ; add byte ptr [rax + 0x55], ch ; cmc ; call qword ptr [rax]
0x00000000000ecd73 : pop rsp ; neg eax ; pop r13 ; ret
0x000000000011ee00 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000017ae7f : pop rsp ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000181379 : pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000170eac : pop rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, 0xd6 ; call rsp
0x00000000000f8c39 : pop rsp ; pop r13 ; jmp rax
0x000000000011a9f5 : pop rsp ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x000000000008cef9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000b6439 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000000ee691 : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x000000000003e9fa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000007c8ed : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6ac : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002247c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001fe81 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024121 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006f0d5 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000effe1 : pop rsp ; pop r13 ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x000000000011610f : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; jmp rcx
0x00000000000c27b7 : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006945d : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fe02 : pop rsp ; pop r13 ; ret
0x00000000000a9051 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000a65c8 : pop rsp ; pop r14 ; ret
0x0000000000037263 : pop rsp ; pop rbp ; ret
0x00000000000037ec : pop rsp ; ret
0x0000000000003151 : pop rsp ; ret 0x52c0
0x00000000001912f4 : pop rsp ; ret 1
0x0000000000186af4 : pop rsp ; sbb al, byte ptr [rcx] ; add byte ptr [rax], ch ; cld ; jmp qword ptr [rbx]
0x00000000001769f4 : pop rsp ; sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; jl 0x1769ed ; call qword ptr [rdx]
0x0000000000186df4 : pop rsp ; sbb eax, 0x43080001 ; jmp qword ptr [rax]
0x0000000000195edc : pop rsp ; stc ; cmc ; jmp qword ptr [rdx]
0x0000000000108318 : pop rsp ; sub eax, 1 ; pop r13 ; ret
0x00000000000f4ad3 : pop rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4ae9 ; xor eax, eax ; ret
0x00000000000f4b03 : pop rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b19 ; xor eax, eax ; ret
0x00000000000f4b33 : pop rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b49 ; xor eax, eax ; ret
0x00000000000f4b63 : pop rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b79 ; xor eax, eax ; ret
0x000000000006e7c8 : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000116ef4 : pop rsp ; test dword ptr [rax + rax], 0x503d8d48 ; ret
0x000000000018d7f4 : pop rsp ; xchg dword ptr [rcx], eax ; add byte ptr [rax + 0x46], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018e1f4 : pop rsp ; xchg eax, ecx ; add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x0000000000173f65 : popfq ; add al, byte ptr [rax] ; in al, -0x51 ; stc ; jmp rsp
0x000000000016efe5 : popfq ; add byte ptr [rax], al ; xchg ax, bx ; in al, dx ; jmp rsp
0x000000000018edbd : popfq ; add dword ptr [rax], eax ; mov ebp, esi ; jmp qword ptr [rcx]
0x000000000018ee6d : popfq ; add dword ptr [rax], eax ; nop ; xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000018ee85 : popfq ; add dword ptr [rax], eax ; test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x00000000000f5577 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000018f4c9 : popfq ; cmc ; call qword ptr [rsi]
0x000000000018f439 : popfq ; cmc ; jmp qword ptr [rcx]
0x000000000017aac4 : popfq ; cmp ebp, ebp ; jmp qword ptr [rdx]
0x000000000016f0c9 : popfq ; in al, dx ; jmp rsp
0x000000000015f0ad : popfq ; inc dword ptr [rax] ; sahf ; jmp qword ptr [rax]
0x000000000015f0a5 : popfq ; inc eax ; popfq ; jmp rax
0x0000000000178a3e : popfq ; jmp 0xd348a38
0x000000000015f0a9 : popfq ; jmp rax
0x00000000000f901a : popfq ; mov edx, eax ; jmp 0xf8fe5
0x000000000008d33d : popfq ; mov rax, rdi ; ret
0x00000000000d0ccb : popfq ; push -0x7c000001 ; ret
0x000000000007834f : popfq ; ret 0xe
0x000000000009bb09 : popfq ; ret 0xea81
0x0000000000122650 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010a57b : popfq ; stc ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000019236c : popfq ; wait ; cmc ; jmp qword ptr [rdx]
0x0000000000134332 : psllq mm1, qword ptr [r15] ; jg 0x13434d ; ret
0x0000000000136e02 : psllq mm1, qword ptr [r15] ; jg 0x136e1d ; ret
0x0000000000139922 : psllq mm1, qword ptr [r15] ; jg 0x13993d ; ret
0x0000000000134333 : psllq mm1, qword ptr [rdi] ; jg 0x13434c ; ret
0x0000000000136e03 : psllq mm1, qword ptr [rdi] ; jg 0x136e1c ; ret
0x0000000000139923 : psllq mm1, qword ptr [rdi] ; jg 0x13993c ; ret
0x0000000000097076 : psllq mm1, qword ptr [rdi] ; jg 0x9708a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097075 : psllq mm1, qword ptr [rdi] ; jg 0x9708b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000970d7 : psllq mm1, qword ptr [rdi] ; jg 0x970ec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000097d46 : psllq mm1, qword ptr [rdi] ; jg 0x97d5a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097d45 : psllq mm1, qword ptr [rdi] ; jg 0x97d5b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000097da7 : psllq mm1, qword ptr [rdi] ; jg 0x97dbc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009a156 : psllq mm1, qword ptr [rdi] ; jg 0x9a16a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009a155 : psllq mm1, qword ptr [rdi] ; jg 0x9a16b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009a1b7 : psllq mm1, qword ptr [rdi] ; jg 0x9a1cc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009ac26 : psllq mm1, qword ptr [rdi] ; jg 0x9ac3a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ac25 : psllq mm1, qword ptr [rdi] ; jg 0x9ac3b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009ac87 : psllq mm1, qword ptr [rdi] ; jg 0x9ac9c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ad78f : psubb mm1, qword ptr [rax - 0x77] ; ret
0x0000000000002bdd : push -0x7329150 ; ret
0x00000000000f1f43 : push -0x76000001 ; ret 0x8948
0x00000000000da5f4 : push -0x76000002 ; ret 0xcb8
0x000000000003d612 : push -0x76b71177 ; ret 0x8948
0x000000000006991c : push -0x76ffffff ; ret 0xe283
0x00000000000d0ccc : push -0x7c000001 ; ret
0x00000000000597cf : push -0x7cfffff8 ; ret 0x8308
0x0000000000149964 : push -0x9ffffff ; ret 0x7501
0x000000000002187f : push -0xcfffff7 ; ret
0x000000000009d4f7 : push -0xfb872b8 ; ret
0x000000000017badd : push 0 ; add al, ah ; fldz ; call qword ptr [rdx]
0x000000000015f9bc : push 0x16fff50b ; in al, dx ; hlt ; call qword ptr [rsi]
0x0000000000170e0d : push 0x2e240001 ; call rsp
0x00000000000b58c0 : push 0x5bdc7501 ; pop rbp ; pop r12 ; ret
0x000000000010a1ed : push 0x5c415d5b ; pop r13 ; ret
0x000000000016d995 : push 0x6870fffc ; cld ; jmp rax
0x000000000015ce82 : push 0x6e ; ja 0x15ce0d ; ret 0x48f
0x000000000016de4c : push 0x91 ; cld ; call qword ptr [rax]
0x000000000017c6dc : push 0xbd ; out dx, al ; jmp qword ptr [rdx]
0x000000000016f950 : push 0xbf ; out dx, eax ; call rsp
0x000000000017963f : push 0xd1cffec ; mov ch, 0x63 ; in al, dx ; jmp qword ptr [rdx]
0x00000000000c890f : push 0xf5 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000197dd9 : push 0xf8 ; call qword ptr [rax]
0x000000000016cefd : push 0xfb ; call rax
0x000000000018bb25 : push 1 ; add byte ptr [rax - 0x49], bl ; hlt ; jmp rdx
0x000000000011149e : push 2 ; add rdi, 0x68 ; jmp rcx
0x0000000000097ad2 : push 5 ; add byte ptr [rax], al ; ret
0x000000000016d4d3 : push qword ptr [rax + 0x10] ; cld ; inc dword ptr [rax + 0x12] ; cld ; jmp qword ptr [rax]
0x000000000016ce33 : push qword ptr [rax + 0x23] ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016d6eb : push qword ptr [rax + 0x29] ; cld ; inc eax ; sub bh, ah ; call qword ptr [rax]
0x000000000016d73f : push qword ptr [rax + 0x30] ; cld ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000016cf83 : push qword ptr [rax + 0x30fffba2] ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000016d77b : push qword ptr [rax + 0x40fffc6d] ; insd dword ptr [rdi], dx ; cld ; call rax
0x000000000016d953 : push qword ptr [rax + 0x40fffc71] ; jno 0x16d95f ; call rax
0x000000000016de7f : push qword ptr [rax + 0x40fffc92] ; xchg eax, edx ; cld ; call rax
0x000000000016dc67 : push qword ptr [rax + 0x40fffc95] ; xchg eax, ebp ; cld ; call rax
0x000000000016e08f : push qword ptr [rax + 0x50fffc86] ; mov dr1, esp ; call rax
0x000000000016db83 : push qword ptr [rax + 0x62] ; cld ; jmp rax
0x000000000016d997 : push qword ptr [rax + 0x68] ; cld ; jmp rax
0x000000000016d4ef : push qword ptr [rax + 0xe] ; cld ; jmp qword ptr [rax]
0x000000000016d46f : push qword ptr [rax + 0xf] ; cld ; push qword ptr [rax] ; adc esp, edi ; call qword ptr [rax]
0x0000000000174113 : push qword ptr [rax + rbp*4 - 0x26dbfffe] ; stc ; call rsp
0x000000000016ef0b : push qword ptr [rax + rbx*4 + 0x7a440000] ; in al, dx ; jmp rsp
0x0000000000171e63 : push qword ptr [rax + rbx*8 + 1] ; add ah, dh ; ret 0xfff6
0x0000000000170973 : push qword ptr [rax + rdx*2 + 0xa340001] ; int1 ; call rsp
0x00000000000b64ae : push qword ptr [rax + rsi - 0x77] ; ret 0xe283
0x000000000015d8c3 : push qword ptr [rax - 0x19000005] ; idiv edi ; jmp qword ptr [rcx]
0x000000000015ef33 : push qword ptr [rax - 0x1f000c74] ; mov ebx, dr0 ; call qword ptr [rax]
0x000000000016d3a7 : push qword ptr [rax - 0x28] ; sti ; inc eax ; fsincos ; call qword ptr [rax]
0x000000000015ecaf : push qword ptr [rax - 0x2f000d3e] ; ret 0xfff2
0x000000000016d353 : push qword ptr [rax - 0x2f] ; sti ; inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000015ece3 : push qword ptr [rax - 0x37000cde] ; and dh, bl ; jmp rax
0x000000000015f1c3 : push qword ptr [rax - 0x3f000c5b] ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000000000015eebb : push qword ptr [rax - 0x3f000c7d] ; mov bl, dh ; jmp rax
0x000000000015ec0f : push qword ptr [rax - 0x3f000d8c] ; jbe 0x15ec11 ; call rax
0x000000000015ec0e : push qword ptr [rax - 0x3f000d8c] ; jbe 0x15ec12 ; call rax
0x000000000016cfbf : push qword ptr [rax - 0x50] ; std ; jmp qword ptr [rax]
0x000000000015ec73 : push qword ptr [rax - 0x54] ; inc eax ; scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x000000000015ed8b : push qword ptr [rax - 0x60] ; cld ; jmp rax
0x000000000015f0ef : push qword ptr [rax - 0x60] ; jmp qword ptr [rax - 0x2f000c60]
0x000000000015ed77 : push qword ptr [rax - 0x67] ; cld ; call qword ptr [rax]
0x000000000016cf33 : push qword ptr [rax - 0x7c] ; sti ; inc eax ; test edi, ebx ; call qword ptr [rax]
0x000000000016d473 : push qword ptr [rax] ; adc esp, edi ; call qword ptr [rax]
0x000000000016ce23 : push qword ptr [rax] ; and bl, bh ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016d6b3 : push qword ptr [rax] ; cmp ah, bh ; inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000016d69b : push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax]
0x000000000015ed9b : push qword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x10fffca7]
0x00000000000968df : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000016e0c3 : push qword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax + 0x10fffc87]
0x000000000016debf : push qword ptr [rax] ; mov esp, edi ; jmp qword ptr [rax + 0x10fffc88]
0x000000000016cf87 : push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000015ecc7 : push qword ptr [rax] ; ret 0xfff2
0x000000000016e3c7 : push qword ptr [rax] ; scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x16fffcad]
0x000000000016cef3 : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x000000000016ce7b : push qword ptr [rax] ; xor al, 0xfb ; jmp qword ptr [rax]
0x000000000014b2e8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x00000000000e6032 : push qword ptr [rbp + 0xb] ; ret
0x00000000000700eb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000017458b : push qword ptr [rbp + rax*8 + 0x54040002] ; cli ; jmp rsp
0x000000000011cd90 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000171393 : push qword ptr [rbp + rcx*4 - 0x34bffff] ; call rsp
0x000000000016e2d3 : push qword ptr [rbp + rdi*4 - 0x42bb0004] ; cld ; call rsp
0x00000000000448ee : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009d96e : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x00000000000ffea8 : push qword ptr [rbp - 0x13] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010717b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014c00c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x0000000000044236 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x00000000000f310f : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076731 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000091be3 : push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x00000000000b9eb5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000da3b8 : push qword ptr [rbx + 0x34] ; ret
0x000000000003533c : push qword ptr [rbx + 1] ; ret
0x00000000000db409 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x0000000000043a56 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x000000000006e82c : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000174183 : push qword ptr [rbx + rbp*4 - 0x1dfbfffe] ; stc ; jmp rsp
0x00000000000700a6 : push qword ptr [rbx + rcx - 0x18] ; ret 0xfaf3
0x0000000000174a1b : push qword ptr [rcx + 2] ; add ah, dl ; ret
0x00000000000d6c13 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000651a5 : push qword ptr [rcx] ; fucomi st(0) ; ret
0x0000000000070544 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000060495 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000059a17 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005ccae : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000001033c3 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000718b6 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000db4ca : push qword ptr [rdi + 0x17] ; ret
0x00000000000db519 : push qword ptr [rdi + 0x18] ; ret
0x00000000000db67f : push qword ptr [rdi + 0x1a] ; ret
0x00000000000db626 : push qword ptr [rdi + 0x1b] ; ret
0x000000000003506c : push qword ptr [rdi + 0x1e] ; ret
0x00000000000db5c2 : push qword ptr [rdi + 0x1f] ; ret
0x00000000000e2ee8 : push qword ptr [rdi + 0x21] ; ret
0x00000000000dba7c : push qword ptr [rdi + 0x2f] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000dbf57 : push qword ptr [rdi + 0x32] ; ret
0x00000000000dfb5e : push qword ptr [rdi + 0x66] ; add rsp, 0x38 ; ret
0x00000000000e1910 : push qword ptr [rdi + 0x6f] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000353ab : push qword ptr [rdi + 1] ; ret
0x0000000000035315 : push qword ptr [rdi + 2] ; ret
0x00000000000dd2d2 : push qword ptr [rdi + 3] ; cdqe ; ret
0x00000000000e85a2 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x000000000006ead5 : push qword ptr [rdi + 8] ; ret
0x00000000000eab20 : push qword ptr [rdi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000016f633 : push qword ptr [rdi + rax*8] ; add byte ptr [rax], al ; push rsp ; sub ch, dh ; jmp rsp
0x000000000016fc9b : push qword ptr [rdi + rsi*8] ; add ah, dl ; out dx, eax ; out dx, eax ; jmp rsp
0x0000000000160073 : push qword ptr [rdi] ; ret
0x000000000016d827 : push qword ptr [rdx + 0x42fffc6f] ; outsd dx, dword ptr [rsi] ; cld ; call rdx
0x000000000016dd13 : push qword ptr [rdx + 0x42fffc97] ; xchg eax, edi ; cld ; call rdx
0x000000000016d80f : push qword ptr [rdx + 0x6b] ; cld ; jmp rdx
0x0000000000172d13 : push qword ptr [rdx + rbx + 2] ; add byte ptr [rdi + rbx*8 - 9], bh ; jmp rsp
0x0000000000027dd6 : push qword ptr [rdx + rbx - 0x18] ; ret 0xf5b
0x000000000006a843 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000001712db : push qword ptr [rdx + rcx*4 - 0x26cbffff] ; jmp rsp
0x000000000016eda3 : push qword ptr [rdx + rdx*4 + 0x69c40000] ; in al, dx ; call rsp
0x000000000016df43 : push qword ptr [rdx - 0x78] ; cld ; jmp rdx
0x000000000017501b : push qword ptr [rdx*4 - 0x221bfffe] ; std ; call rsp
0x000000000016e417 : push qword ptr [rdx] ; mov ah, 0xfc ; jmp qword ptr [rdx + 0x22fffcb3]
0x000000000016da3f : push qword ptr [rdx] ; movsxd rdi, esp ; jmp qword ptr [rdx + 0x12fffc62]
0x00000000001608c3 : push qword ptr [rdx] ; ret 0xfff6
0x000000000016000f : push qword ptr [rip + 0x3ffff5c2] ; ret 0xfff5
0x000000000016d7c3 : push qword ptr [rsi + 0x46fffc6c] ; insb byte ptr [rdi], dx ; cld ; call rsi
0x000000000016dcaf : push qword ptr [rsi + 0x46fffc94] ; xchg eax, esp ; cld ; call rsi
0x000000000016d037 : push qword ptr [rsi + 0x46fffdb6] ; mov bh, 0xfd ; call rsi
0x000000000016d8ef : push qword ptr [rsi + rbp*2 + 0x6e44fffc] ; cld ; call rsp
0x000000000016e503 : push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x0000000000058836 : push qword ptr [rsi + rcx - 0x18] ; ret 0xfc6b
0x000000000016dddb : push qword ptr [rsi + rdx*4 - 0x69bb0004] ; cld ; call rsp
0x0000000000173a53 : push qword ptr [rsi + rsi*2 + 0x8e40002] ; stc ; jmp rsp
0x000000000016e18f : push qword ptr [rsi - 0x49] ; cld ; jmp rsi
0x000000000016ee0b : push qword ptr [rsp + rdx*4 + 0x6f340000] ; in al, dx ; call rsp
0x0000000000111536 : push r12 ; mov eax, 1 ; ret
0x0000000000024ef9 : push r12 ; pop r13 ; pop r14 ; ret
0x0000000000075f0c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000016d493 : push rax ; adc ah, bh ; call rax
0x000000000016d47b : push rax ; adc al, 0xfc ; call rax
0x000000000007a3ab : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000111ebd : push rax ; adc byte ptr [rax + 1], bh ; ret
0x000000000006deaa : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000076ee1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000010a6c9 : push rax ; adc dh, dh ; ret 0x7401
0x000000000016d43c : push rax ; adc eax, 0x1730fffc ; cld ; call qword ptr [rax]
0x000000000016d4f7 : push rax ; adc esp, edi ; call rax
0x000000000019a13d : push rax ; add al, byte ptr [rax] ; sub byte ptr [rax - 9], 0xff ; ret
0x0000000000008781 : push rax ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000075f0d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000000b0c1 : push rax ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x000000000007357c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000ca0f8 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000018a18d : push rax ; add dword ptr [rax], eax ; nop ; cwde ; jmp rdx
0x0000000000170975 : push rax ; add dword ptr [rax], eax ; xor al, 0xa ; int1 ; call rsp
0x00000000000e6d8a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000116521 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001162d7 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011b3ef : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000c42b2 : push rax ; clc ; cmp esi, dword ptr [rdi + 4] ; jl 0xc42b0 ; ret
0x000000000016d5ec : push rax ; cld ; jmp rax
0x0000000000191205 : push rax ; cmc ; jmp qword ptr [rdx]
0x000000000016d24c : push rax ; cmc ; sti ; jmp rax
0x000000000016d698 : push rax ; cmp bh, ah ; push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax]
0x000000000006aaab : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000000e0a21 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000016d593 : push rax ; cmp esp, edi ; call rax
0x000000000015ed74 : push rax ; cwde ; cld ; push qword ptr [rax - 0x67] ; cld ; call qword ptr [rax]
0x00000000000275e2 : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000015ee0c : push rax ; fdiv st(5), st(0) ; call qword ptr [rax - 0x2f000222]
0x000000000016d2ec : push rax ; hlt ; sti ; jmp rax
0x000000000015ee1c : push rax ; in eax, -3 ; call qword ptr [rax - 0x2f000219]
0x000000000016e0d8 : push rax ; insb byte ptr [rdi], dx ; cld ; call rax
0x000000000016d97c : push rax ; insd dword ptr [rdi], dx ; cld ; jmp rax
0x000000000016e134 : push rax ; ja 0x16e136 ; call rax
0x000000000016e0e8 : push rax ; jb 0x16e0ea ; call rax
0x000000000016e12c : push rax ; je 0x16e12e ; call rax
0x000000000016e144 : push rax ; jge 0x16e146 ; call rax
0x000000000015ec1f : push rax ; jl 0x15ec1d ; inc dword ptr [rax] ; jg 0x15ec21 ; call qword ptr [rax]
0x000000000015ec1e : push rax ; jl 0x15ec1e ; inc dword ptr [rax] ; jg 0x15ec22 ; call qword ptr [rax]
0x0000000000176a70 : push rax ; jl 0x176a61 ; call qword ptr [rdx]
0x000000000016e108 : push rax ; jle 0x16e10a ; call rax
0x000000000016e0f0 : push rax ; jne 0x16e0f2 ; call rax
0x000000000016e124 : push rax ; jno 0x16e126 ; call rax
0x000000000016e100 : push rax ; jnp 0x16e102 ; call rax
0x000000000016d764 : push rax ; jo 0x16d766 ; jmp rax
0x000000000016e13c : push rax ; jp 0x16e13e ; call rax
0x000000000016e0f8 : push rax ; js 0x16e0fa ; call rax
0x000000000018fb00 : push rax ; mov al, 0xf5 ; call qword ptr [rdx]
0x000000000016e3b8 : push rax ; mov al, 0xfc ; call rax
0x000000000016e074 : push rax ; mov bh, ah ; call rax
0x000000000016e3a0 : push rax ; mov bl, 0xfc ; call rax
0x000000000016e3b0 : push rax ; mov cl, 0xfc ; call rax
0x000000000016e3a8 : push rax ; mov dl, 0xfc ; call rax
0x000000000016e094 : push rax ; mov dr1, esp ; call rax
0x0000000000027e61 : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000028624 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000015ed47 : push rax ; mov edi, esp ; call qword ptr [rax]
0x000000000016e06c : push rax ; mov edi, esp ; call rax
0x000000000016e16f : push rax ; mov edx, 0xba80fffc ; cld ; call qword ptr [rax]
0x000000000015ef23 : push rax ; mov esi, ebx ; jmp qword ptr [rax]
0x000000000016e064 : push rax ; mov esp, dr1 ; call rax
0x000000000016e07c : push rax ; mov esp, edi ; call rax
0x0000000000111d36 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000029722 : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000f3596 : push rax ; mov rsi, rdx ; call rax
0x000000000015f187 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rax]
0x000000000015f1d3 : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x0000000000111d9d : push rax ; or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010ed15 : push rax ; or byte ptr [rax + 1], bh ; ret
0x000000000011dba5 : push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe8eb
0x0000000000021554 : push rax ; or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x000000000004927c : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x8b48
0x0000000000053a82 : push rax ; or byte ptr [rcx - 0x77], cl ; push rsp ; and al, 8 ; jmp 0x53a55
0x000000000007a07a : push rax ; or dh, dh ; ret 0x7404
0x000000000007a096 : push rax ; or dh, dh ; ret 0xf04
0x000000000011ed0c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001755d4 : push rax ; out -0x16, eax ; jmp qword ptr [rdx]
0x00000000000f121c : push rax ; out -1, eax ; push rbx ; ret
0x000000000015ee2c : push rax ; out dx, al ; std ; call qword ptr [rax - 0x2f000210]
0x000000000016d29f : push rax ; out dx, al ; sti ; call rax
0x00000000001825ac : push rax ; out dx, ax ; jmp qword ptr [rdx]
0x000000000018ace0 : push rax ; out dx, eax ; call qword ptr [rcx]
0x0000000000180ed1 : push rax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000016e11c : push rax ; outsb dx, byte ptr [rsi] ; cld ; call rax
0x000000000016e0e0 : push rax ; outsd dx, dword ptr [rsi] ; cld ; call rax
0x000000000016cd1e : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000010a832 : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a94e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016cedb : push rax ; pop rbx ; sti ; call rax
0x000000000016d993 : push rax ; push 0x6870fffc ; cld ; jmp rax
0x000000000016cefb : push rax ; push 0xfb ; call rax
0x0000000000180ed0 : push rax ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000345bf : push rax ; ret
0x0000000000017cd0 : push rax ; ret 0x14
0x000000000000fd30 : push rax ; ret 8
0x000000000015f0cb : push rax ; sahf ; call qword ptr [rax]
0x0000000000076ed6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006e44a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000000f12a1 : push rax ; sbb dh, dh ; ret 0x7504
0x000000000016d6d0 : push rax ; sbb eax, 0x2190fffc ; cld ; jmp rax
0x00000000000f4535 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000014cebc : push rax ; sti ; in eax, dx ; jmp qword ptr [rax]
0x000000000016cef0 : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x000000000016de68 : push rax ; xchg eax, ebp ; cld ; jmp rax
0x000000000015ed67 : push rax ; xchg eax, esp ; cld ; call qword ptr [rax]
0x0000000000185a20 : push rax ; xchg ecx, esi ; jmp qword ptr [rcx]
0x000000000007672d : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000010a89a : push rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015ee7b : push rax ; xor ebx, 0xf38200ff ; call qword ptr [rax]
0x0000000000114f0d : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000115065 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000da5e3 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017361d : push rbp ; add al, byte ptr [rax] ; add al, 0xa4 ; clc ; jmp rsp
0x000000000010ea3d : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x00000000000c5256 : push rbp ; cld ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000018dcf9 : push rbp ; cmc ; call qword ptr [rax]
0x000000000018b61c : push rbp ; hlt ; jmp qword ptr [rdx]
0x0000000000001cb1 : push rbp ; je 0x1cdf ; ret
0x0000000000176339 : push rbp ; jmp 0x17633d
0x00000000001966e5 : push rbp ; jmp qword ptr [rdx]
0x0000000000090d30 : push rbp ; mov byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000063a89 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rdi - 0x76fffff0], esp ; ret 0x348
0x000000000006282d : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rdx - 0x76fffffd], esi ; ret 0x348
0x00000000000629a6 : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x76fffffe], ebx ; ret 0x348
0x00000000000f419d : push rbp ; nop ; mov rdx, r12 ; call rax
0x0000000000123798 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f3e41 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000007b258 : push rbp ; or dh, dh ; ret 0x7502
0x0000000000181c1d : push rbp ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000108b0f : push rbp ; ret
0x00000000000ab887 : push rbp ; ret 0x2f
0x00000000000abd89 : push rbp ; ret 0x6348
0x00000000000aba80 : push rbp ; ret 0xb70f
0x00000000000abf1d : push rbp ; ret 0xf41
0x00000000000da1b7 : push rbp ; ret 0xffff
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x0000000000195e94 : push rbp ; stc ; cmc ; jmp qword ptr [rdx]
0x000000000007fa1c : push rbp ; xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000f53a0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000084f1a : push rbp ; xor rax, rax ; ret
0x00000000000c49a0 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000001032b4 : push rbx ; adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000c2431 : push rbx ; add al, 0xeb ; ret 0xc883
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000e72f1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000032033 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000018dc31 : push rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019097c : push rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000002043 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000018b5d4 : push rbx ; hlt ; jmp qword ptr [rdx]
0x00000000000bb78d : push rbx ; je 0xbb760 ; mov eax, 1 ; ret
0x00000000000bb78c : push rbx ; je 0xbb761 ; mov eax, 1 ; ret
0x000000000009d4dc : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000075245 : push rbx ; mov rbx, rdx ; jne 0x75257 ; pop rbx ; ret
0x0000000000098132 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x0000000000068b69 : push rbx ; or al, 0xf6 ; ret 0x7404
0x000000000007609e : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003c84 : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001810a1 : push rbx ; out dx, eax ; call qword ptr [rcx]
0x0000000000035ddc : push rbx ; ret
0x00000000001600a8 : push rbx ; ret 0xfff5
0x00000000000f1f61 : push rbx ; sbb dh, dh ; ret 0x8b08
0x0000000000073f0f : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000015c2dc : push rbx ; xchg eax, edx ; jae 0x15c2bb ; push rsi ; pop rdx ; je 0x15c2b0 ; ret 0xacfc
0x000000000010ecfd : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x0000000000091412 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000015b565 : push rcx ; call qword ptr [rsi]
0x00000000000bcac5 : push rcx ; cld ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c56bf : push rcx ; cld ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001974cf : push rcx ; idiv bh ; sbb al, 0xd ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rdx]
0x000000000016ec59 : push rcx ; in al, dx ; jmp rsp
0x0000000000001b28 : push rcx ; jns 0x1b35 ; ret
0x00000000001783f4 : push rcx ; loop 0x1783e5 ; jmp qword ptr [rdx]
0x00000000001832ce : push rcx ; ret
0x000000000009aff2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000099582 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000007e87c : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x00000000000cec16 : push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x000000000009b150 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009d6b6 : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x0000000000007400 : push rdi ; add al, 0 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret 0xd
0x000000000009ae28 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae3a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000910f4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000993ca : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x0000000000134499 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000091064 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000091054 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002e0fc : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000017a85d : push rdi ; add byte ptr [rax], al ; loopne 0x17a8a3 ; in eax, dx ; call qword ptr [rdi]
0x00000000000714c5 : push rdi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7148d
0x000000000009adfa : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009864c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009948c : push rdi ; add eax, 0xd478d48 ; ret
0x000000000009ae58 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000019d561 : push rdi ; call rcx
0x000000000012b8e8 : push rdi ; clc ; ret
0x000000000000389b : push rdi ; clc ; salc ; jb 0x3921 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000012ba60 : push rdi ; cld ; ret
0x000000000012c587 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000133d79 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000111db5 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000c0335 : push rdi ; fadd dword ptr [rbp - 0x77] ; ret
0x00000000000a81e0 : push rdi ; fiadd word ptr [rcx + 0x29] ; ret
0x00000000000a6c08 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x0000000000034a79 : push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000133cf9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000017971c : push rdi ; in al, dx ; jmp qword ptr [rdx]
0x0000000000179561 : push rdi ; in al, dx ; jmp rax
0x000000000017aa01 : push rdi ; in eax, dx ; call rdi
0x0000000000133b4a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000075e64 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000133bda : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000103376 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000049280 : push rdi ; or bl, ch ; ret 0x8b48
0x000000000007e880 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x6174
0x000000000003405a : push rdi ; or byte ptr [rax - 0x77], cl ; or byte ptr [r8 + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000009ae9c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aeda : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009ae7a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000aa2e5 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000004594a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004419a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000119272 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000441a1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000073580 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000098830 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000099680 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000178b1c : push rdi ; out -0x15, eax ; jmp qword ptr [rdx]
0x00000000001487de : push rdi ; ret
0x00000000000cc1be : push rdi ; ret 0
0x000000000014887e : push rdi ; ret 0xff3
0x000000000003921a : push rdi ; ret 0xffef
0x000000000016005b : push rdi ; ret 0xfff5
0x0000000000116735 : push rdi ; sbb bl, dh ; ret
0x0000000000116760 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x0000000000033b2c : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012c787 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001763f1 : push rdi ; std ; jmp qword ptr [rax]
0x000000000012bfaa : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000012c387 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000111dfd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000e633c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5071 : push rdi ; sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f4e2e : push rdi ; sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0xf4e19 ; ret
0x000000000009b130 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000001715e0 : push rdi ; xchg eax, ebx ; hlt ; call rsp
0x00000000000d0d4a : push rdi ; xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x840f
0x0000000000083a3b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000019a31d : push rdx ; add al, byte ptr [rax] ; xor byte ptr [rcx - 9], dh ; jmp qword ptr [rax]
0x0000000000103d9e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000113174 : push rdx ; and byte ptr [rax - 0x77], cl ; fistp word ptr [rbx - 0x17] ; int1 ; ret 0xfff0
0x000000000018dbd1 : push rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000193fa9 : push rdx ; idiv bh ; ret 3
0x000000000016f3b1 : push rdx ; in eax, dx ; call rsp
0x000000000016e21b : push rdx ; mov esp, 0xbc82fffc ; cld ; call qword ptr [rdx]
0x000000000007fd56 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000177506 : push rdx ; ret
0x0000000000173c89 : push rdx ; stc ; jmp rsp
0x0000000000195fb4 : push rdx ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000001b0d : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000016dd3c : push rdx ; xchg eax, ebx ; cld ; jmp rdx
0x000000000016df4c : push rdx ; xchg esp, edi ; jmp rdx
0x000000000007fc54 : push rdx ; xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000e59c5 : push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0xe59d9 ; ret
0x00000000001474c4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015fa6c : push rsi ; add al, 0xf5 ; call qword ptr [rdi]
0x0000000000134731 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001347a1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000097005 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000001346c1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000096fa3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000001474d9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000012ba12 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000186fa4 : push rsi ; cld ; int1 ; jmp qword ptr [rdx]
0x000000000012c181 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bdb5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bf95 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012c175 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000012bbd5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ce80 : push rsi ; cli ; push 0x6e ; ja 0x15ce0f ; ret 0x48f
0x000000000014ae26 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000014ae16 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001796d4 : push rsi ; in al, dx ; jmp qword ptr [rdx]
0x000000000014ade6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000000f3572 : push rsi ; je 0xf3588 ; mov eax, 7 ; ret
0x00000000000da90b : push rsi ; js 0xda95f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000db1b8 : push rsi ; js 0xdb20c ; mov dword ptr [rdi + 0x100], edx ; ret
0x000000000016cfb0 : push rsi ; mov al, 0xfd ; inc dword ptr [rdx] ; mov cl, 0xfd ; call rdx
0x000000000016e1b7 : push rsi ; mov ecx, 0xb986fffc ; cld ; call qword ptr [rsi]
0x00000000000e59fe : push rsi ; or byte ptr [rax - 0x77], cl ; jo 0xe5a1a ; ret
0x000000000008ae9d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000aa2e2 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000016d7ac : push rsi ; outsd dx, dword ptr [rsi] ; cld ; jmp rsi
0x000000000015c2e0 : push rsi ; pop rdx ; je 0x15c2ac ; ret 0xacfc
0x000000000003485f : push rsi ; ret
0x00000000000cb18a : push rsi ; ret 0x6620
0x00000000000cb17d : push rsi ; ret 0x7408
0x00000000000c9316 : push rsi ; ret 0x7420
0x00000000000921ca : push rsi ; ret 0x7518
0x00000000001177fa : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000173cb1 : push rsi ; stc ; call rsp
0x000000000016ced1 : push rsi ; sti ; inc dword ptr [rax + 0x58] ; sti ; jmp qword ptr [rax]
0x00000000000d5a6e : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000014adf6 : push rsi ; sub eax, edx ; ret
0x000000000016dc98 : push rsi ; xchg eax, edi ; cld ; jmp rsi
0x0000000000188374 : push rsi ; xchg eax, edi ; jmp qword ptr [rdx]
0x00000000000df927 : push rsi ; xor ax, ax ; ret
0x00000000001474ee : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000004f842 : push rsi ; xor eax, 0xbe0f4800 ; ret 0x4d64
0x0000000000174d40 : push rsp ; add bl, bh ; call rsp
0x0000000000170918 : push rsp ; add ecx, esi ; call rsp
0x000000000016eb28 : push rsp ; add esp, ebp ; call rsp
0x00000000000f3dbd : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000f3e3d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000f07e5 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000f06e8 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000007a97b : push rsp ; and al, 0x28 ; call rax
0x00000000000e1f76 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000676a6 : push rsp ; and al, 0xc ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000034d20 : push rsp ; and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000045b20 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000045ada : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000da755 : push rsp ; and al, 4 ; jmp 0xda720
0x0000000000053a86 : push rsp ; and al, 8 ; jmp 0x53a51
0x0000000000174591 : push rsp ; cli ; jmp rsp
0x00000000001788ec : push rsp ; cmp byte ptr [rax], al ; add al, al ; clc ; jmp 0x1788fa
0x0000000000174230 : push rsp ; idiv ecx ; call rsp
0x000000000016f401 : push rsp ; in eax, dx ; call rsp
0x0000000000170d48 : push rsp ; in eax, dx ; int1 ; jmp rsp
0x0000000000176231 : push rsp ; jmp 0x176235
0x0000000000189991 : push rsp ; jmp qword ptr [rbx]
0x00000000000bb556 : push rsp ; jne 0xbb4e3 ; mov eax, 0x7d00 ; ret
0x000000000016d8d8 : push rsp ; jno 0x16d8da ; jmp rsp
0x000000000009173b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000016e50c : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000111537 : push rsp ; mov eax, 1 ; ret
0x0000000000024efa : push rsp ; pop r13 ; pop r14 ; ret
0x0000000000034859 : push rsp ; ret
0x000000000002f4a4 : push rsp ; ret 0x48e8
0x000000000004721f : push rsp ; ret 0x4cc0
0x00000000001836c8 : push rsp ; ret 0xffef
0x0000000000171b13 : push rsp ; ret 1
0x0000000000171c10 : push rsp ; sbb dh, dh ; jmp rsp
0x0000000000040f7b : push rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000171710 : push rsp ; scasb al, byte ptr [rdi] ; hlt ; call rsp
0x000000000016f638 : push rsp ; sub ch, dh ; jmp rsp
0x000000000016de04 : push rsp ; xchg eax, edx ; cld ; jmp rsp
0x000000000007fae4 : push rsp ; xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000176334 : pushfq ; adc al, byte ptr [rax] ; add al, cl ; push rbp ; jmp 0x176342
0x0000000000120c30 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000e28e8 : pushfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000018ed75 : pushfq ; add dword ptr [rax], eax ; clc ; mov ch, dh ; jmp qword ptr [rcx]
0x00000000001715dd : pushfq ; add dword ptr [rax], eax ; push rdi ; xchg eax, ebx ; hlt ; call rsp
0x000000000018b634 : pushfq ; add dword ptr gs:[rax], eax ; sbb byte ptr [rax - 0xc], ch ; call qword ptr [rdi]
0x000000000015ec59 : pushfq ; call qword ptr [rax - 0x1f000d62]
0x000000000018f3a9 : pushfq ; cmc ; jmp qword ptr [rcx]
0x0000000000188d34 : pushfq ; cmp al, 1 ; add al, bl ; add bl, dh ; call rsp
0x0000000000179e99 : pushfq ; in al, dx ; jmp qword ptr [rsi]
0x000000000017ad2d : pushfq ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019454c : pushfq ; lock add dword ptr [rax], eax ; ret
0x0000000000115852 : pushfq ; lock dec dword ptr [rax - 0x77] ; ret
0x0000000000172084 : pushfq ; loopne 0x17208f ; add byte ptr [rsp - 0xa], ah ; call rsp
0x00000000001742bc : pushfq ; mov bl, 2 ; add byte ptr [rsp + rcx], ah ; cli ; call rsp
0x00000000000739fc : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004cbab : pushfq ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000121930 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f8e4 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x000000000016fa9c : pushfq ; out 0, eax ; add dl, bh ; salc ; out dx, eax ; jmp rsp
0x000000000017ef4c : pushfq ; out dx, al ; jmp qword ptr [rdx]
0x00000000001736bc : pushfq ; pop rcx ; add al, byte ptr [rax] ; jns 0x17367a ; clc ; jmp rsp
0x000000000016efe4 : pushfq ; popfq ; add byte ptr [rax], al ; xchg ax, bx ; in al, dx ; jmp rsp
0x000000000019124c : pushfq ; push rax ; cmc ; jmp qword ptr [rdx]
0x00000000000553b3 : pushfq ; ret
0x0000000000176934 : pushfq ; sbb byte ptr [rax], al ; add byte ptr [rax], bl ; jl 0x17692d ; call qword ptr [rsi]
0x00000000001741f4 : pushfq ; scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; xor al, 0xeb ; stc ; jmp rsp
0x00000000000eb174 : pushfq ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000187c34 : pushfq ; sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], bh ; call qword ptr [rbx]
0x0000000000117540 : pushfq ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015ee04 : rcl bh, 1 ; std ; call qword ptr [rax]
0x000000000016de64 : rcl byte ptr [rbp - 0x6aaf0004], 0xfc ; jmp rax
0x0000000000075244 : rcl byte ptr [rbx + 0x48], cl ; mov ebx, edx ; jne 0x75258 ; pop rbx ; ret
0x000000000015ed64 : rcl byte ptr [rbx - 0x6b0f0004], 1 ; cld ; call qword ptr [rax]
0x000000000018dc30 : rcl byte ptr [rbx - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000018828e : rcl byte ptr [rdi + 0xd1cfff2], cl ; pop rdx ; xchg eax, edi ; jmp qword ptr [rdx]
0x0000000000188176 : rcl byte ptr [rsi + 0xd1cfff2], cl ; xchg eax, r14d ; jmp qword ptr [rdx]
0x000000000016d3a0 : rcl ch, 1 ; sti ; jmp qword ptr [rax]
0x000000000016d358 : rcl dl, 0xfb ; call qword ptr [rax]
0x0000000000187ffe : rcl dword ptr [rbp + 0xd1cfff2], -0x80 ; xchg eax, ebp ; jmp qword ptr [rdx]
0x000000000007ade3 : rcl dword ptr [rip + 0x32a39f], -0x7d ; ret 0x8b01
0x000000000015c2df : rcl dword ptr [rsi + 0x5a], cl ; je 0x15c2ad ; ret 0xacfc
0x000000000015c2db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x15c2b1 ; ret 0xacfc
0x0000000000034bd0 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x00000000000441a7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000001fe7e : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f5412 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000737ad : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000070929 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000023fee : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000002b18b : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000110785 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b6044 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000007c4ec : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x00000000000679ec : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000c35ff : rcr byte ptr [rbx - 0x7d], 1 ; loopne 0xc360c ; pop rbp ; ret
0x000000000015c6fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000015f0e0 : rcr byte ptr [rdi - 0x601f000d], 0xf3 ; call qword ptr [rax]
0x000000000015f0c8 : rcr byte ptr [rsi - 0x610f000d], 1 ; call qword ptr [rax]
0x000000000016d3ac : rcr cl, 0xfb ; call qword ptr [rax]
0x00000000000441d9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000000937 : ret
0x0000000000021645 : ret 0
0x0000000000009788 : ret 0x10
0x000000000002d71f : ret 0x100
0x000000000002cfa8 : ret 0x101
0x00000000000007bf : ret 0x102
0x00000000000673da : ret 0x1050
0x000000000003d02c : ret 0x1075
0x000000000009724d : ret 0x11
0x000000000007a30a : ret 0x110
0x0000000000054cda : ret 0x112a
0x0000000000049d9a : ret 0x1139
0x000000000004417c : ret 0x114d
0x000000000004659a : ret 0x1173
0x00000000000b69c4 : ret 0x1174
0x000000000009f609 : ret 0x11e9
0x00000000000c3c7e : ret 0x11eb
0x0000000000154ea8 : ret 0x12
0x0000000000033119 : ret 0x1274
0x000000000003a014 : ret 0x1293
0x000000000009281a : ret 0x13
0x00000000000315fd : ret 0x1350
0x00000000000e141a : ret 0x137
0x00000000001124aa : ret 0x1372
0x000000000007bd50 : ret 0x1374
0x00000000000f5212 : ret 0x1376
0x0000000000028d23 : ret 0x13a1
0x0000000000045bfb : ret 0x13eb
0x0000000000017ca1 : ret 0x14
0x00000000000818fd : ret 0x144
0x00000000000d1f67 : ret 0x1474
0x0000000000042b09 : ret 0x1477
0x0000000000091779 : ret 0x147c
0x00000000000460fd : ret 0x148
0x00000000000cf1e0 : ret 0x148d
0x0000000000076742 : ret 0x149
0x00000000000dc768 : ret 0x14c
0x0000000000034890 : ret 0x1575
0x00000000000797f0 : ret 0x1589
0x000000000000a310 : ret 0x16
0x000000000001af58 : ret 0x1630
0x0000000000018588 : ret 0x1639
0x00000000000820da : ret 0x17
0x00000000000cdb2b : ret 0x1772
0x00000000000c4793 : ret 0x17e8
0x0000000000084f85 : ret 0x1876
0x0000000000043ba7 : ret 0x18b9
0x0000000000084c25 : ret 0x1974
0x000000000002d2c1 : ret 0x19e8
0x000000000005e0f7 : ret 0x19e9
0x000000000000b8e8 : ret 0x1a
0x000000000009f5d2 : ret 0x1a75
0x000000000015cc5a : ret 0x1ad4
0x000000000007a566 : ret 0x1ae9
0x00000000000b3d7d : ret 0x1b1
0x000000000015b3ed : ret 0x1b49
0x00000000000e9c62 : ret 0x1b72
0x00000000000db612 : ret 0x1b75
0x000000000004d873 : ret 0x1b8
0x00000000000c7758 : ret 0x1bb
0x0000000000001bf1 : ret 0x1bb7
0x00000000000ad2b8 : ret 0x1be
0x0000000000003467 : ret 0x1bf9
0x00000000001568e0 : ret 0x1d4
0x0000000000157078 : ret 0x1d5
0x0000000000084b26 : ret 0x1d74
0x000000000011767c : ret 0x1d75
0x00000000000021c9 : ret 0x1dd4
0x00000000000bd556 : ret 0x1deb
0x00000000000da439 : ret 0x1e8
0x000000000003a372 : ret 0x1f0f
0x000000000010331e : ret 0x1f72
0x000000000002d72e : ret 0x200
0x00000000000cd03d : ret 0x2041
0x000000000007fe9d : ret 0x2074
0x000000000004b4d2 : ret 0x20be
0x00000000000c964a : ret 0x20e8
0x0000000000007298 : ret 0x21
0x000000000003445e : ret 0x2148
0x00000000000cfcf9 : ret 0x21e8
0x000000000003b0cc : ret 0x21e9
0x0000000000048ab9 : ret 0x21eb
0x000000000007fe2b : ret 0x2275
0x000000000007ff58 : ret 0x2288
0x0000000000079c08 : ret 0x22e9
0x000000000000e870 : ret 0x23
0x00000000001489e2 : ret 0x2373
0x00000000000913ea : ret 0x2374
0x00000000000025c7 : ret 0x23cb
0x00000000001558e8 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x00000000000d36aa : ret 0x255
0x00000000000401ef : ret 0x26e9
0x0000000000081f16 : ret 0x2774
0x00000000000aa253 : ret 0x27e9
0x000000000000054f : ret 0x2800
0x00000000000929b5 : ret 0x280f
0x0000000000084f75 : ret 0x2876
0x000000000011b9da : ret 0x28e7
0x00000000000aea8e : ret 0x28f5
0x0000000000108bb9 : ret 0x29
0x0000000000112f4a : ret 0x291f
0x00000000000a5c52 : ret 0x2944
0x00000000000433dd : ret 0x2948
0x00000000000272a6 : ret 0x294c
0x00000000000448d4 : ret 0x2973
0x0000000000067b22 : ret 0x2975
0x0000000000110002 : ret 0x299f
0x000000000010ce7a : ret 0x29d0
0x0000000000075622 : ret 0x29e9
0x00000000000fa5cd : ret 0x2a
0x000000000010859a : ret 0x2a18
0x000000000010796a : ret 0x2a24
0x0000000000001b15 : ret 0x2a63
0x00000000000fcda2 : ret 0x2a80
0x00000000000fff0d : ret 0x2aa8
0x00000000000fff4a : ret 0x2aaa
0x00000000000fa372 : ret 0x2aef
0x00000000000e8b84 : ret 0x2b
0x00000000000ab987 : ret 0x2b3c
0x00000000000f0b8e : ret 0x2b48
0x0000000000024848 : ret 0x2b49
0x000000000008e891 : ret 0x2b4c
0x00000000000bbf3a : ret 0x2b5
0x00000000001110a2 : ret 0x2b74
0x000000000009bb12 : ret 0x2b77
0x00000000000e90a2 : ret 0x2bbd
0x00000000000ee30d : ret 0x2bc4
0x00000000000e0c06 : ret 0x2c73
0x0000000000032ab8 : ret 0x2ce9
0x0000000000103310 : ret 0x2d72
0x00000000000679b4 : ret 0x2d75
0x00000000000e10b4 : ret 0x2d77
0x0000000000050b63 : ret 0x2dbe
0x00000000000b8bdc : ret 0x2e
0x00000000000e5259 : ret 0x2eb
0x00000000000b9ca2 : ret 0x2eb1
0x000000000010baac : ret 0x2ee8
0x00000000000b8baa : ret 0x2ef2
0x0000000000005b58 : ret 0x2f
0x00000000000b630d : ret 0x2f44
0x00000000000b5a0a : ret 0x2f4d
0x000000000007e88e : ret 0x2f74
0x00000000000ad8b9 : ret 0x2fa2
0x00000000000ac9b2 : ret 0x2fb1
0x0000000000001b84 : ret 0x306a
0x0000000000105bff : ret 0x3108
0x0000000000051bd1 : ret 0x3145
0x000000000010d508 : ret 0x3148
0x00000000000e8c09 : ret 0x31e8
0x0000000000078ea1 : ret 0x32
0x000000000007f722 : ret 0x3257
0x00000000000fff71 : ret 0x3278
0x000000000007bea2 : ret 0x3292
0x000000000007cf42 : ret 0x32a8
0x000000000007d80d : ret 0x32cf
0x000000000006b50e : ret 0x33
0x000000000010d3ad : ret 0x334a
0x0000000000071e0d : ret 0x3389
0x000000000006155e : ret 0x34
0x0000000000091759 : ret 0x347c
0x0000000000031064 : ret 0x348
0x00000000000c4d2d : ret 0x3489
0x00000000000bff2b : ret 0x348b
0x0000000000103272 : ret 0x348d
0x00000000000d2fe8 : ret 0x349
0x0000000000060cc6 : ret 0x35
0x000000000005043a : ret 0x3549
0x00000000000d4650 : ret 0x3574
0x000000000004392a : ret 0x363d
0x000000000002796d : ret 0x3672
0x000000000006a4f7 : ret 0x3675
0x000000000003ad1a : ret 0x368d
0x000000000003654a : ret 0x3706
0x00000000000d26ac : ret 0x3775
0x0000000000042d70 : ret 0x37e9
0x00000000000488c4 : ret 0x37eb
0x0000000000135cca : ret 0x381
0x000000000015c53a : ret 0x3827
0x00000000000f7305 : ret 0x3875
0x0000000000084f65 : ret 0x3876
0x00000000000f743b : ret 0x3877
0x000000000015abc6 : ret 0x38ae
0x000000000006a80f : ret 0x38b
0x00000000000420ab : ret 0x3901
0x0000000000102bb5 : ret 0x3904
0x0000000000030b65 : ret 0x3908
0x00000000000ead9a : ret 0x3920
0x000000000002155c : ret 0x3941
0x00000000000476c8 : ret 0x3944
0x00000000000524dc : ret 0x3945
0x000000000003a4ec : ret 0x3948
0x000000000002d382 : ret 0x3949
0x00000000000f6e0d : ret 0x394c
0x0000000000033e2a : ret 0x394d
0x0000000000007238 : ret 0x3a
0x000000000009b362 : ret 0x3a01
0x00000000001489cb : ret 0x3a73
0x000000000005c265 : ret 0x3b01
0x00000000001191cf : ret 0x3b48
0x0000000000131dca : ret 0x3b7
0x000000000002e1ea : ret 0x3b8
0x0000000000131eca : ret 0x3ba
0x0000000000033eaf : ret 0x3c01
0x000000000007fe11 : ret 0x3c75
0x00000000000cccb5 : ret 0x3d
0x0000000000034500 : ret 0x3d75
0x0000000000023dea : ret 0x3d83
0x0000000000042ef7 : ret 0x3dbe
0x000000000009f5dd : ret 0x3de9
0x000000000010ba9c : ret 0x3ee8
0x000000000006d10c : ret 0x3f7
0x0000000000023d5e : ret 0x3f74
0x00000000000ab197 : ret 0x400
0x0000000000026d2a : ret 0x4001
0x00000000000cc061 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x00000000000d8011 : ret 0x403c
0x00000000000ab718 : ret 0x40e9
0x00000000000221c2 : ret 0x4101
0x0000000000103da2 : ret 0x4102
0x00000000000a4675 : ret 0x4104
0x000000000004821d : ret 0x4108
0x000000000004903e : ret 0x4110
0x00000000000dc645 : ret 0x4164
0x0000000000081c70 : ret 0x4166
0x0000000000024f0e : ret 0x41c3
0x000000000007fb9a : ret 0x4201
0x00000000000ab363 : ret 0x4240
0x0000000000091f5a : ret 0x4266
0x00000000000ab600 : ret 0x428d
0x000000000010da77 : ret 0x4388
0x00000000000dd548 : ret 0x43f6
0x000000000006b5d7 : ret 0x4401
0x00000000000a8a24 : ret 0x4404
0x00000000000babd5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x00000000001162f2 : ret 0x4489
0x00000000000e0be2 : ret 0x448b
0x00000000000d8ba2 : ret 0x44c7
0x00000000000ae968 : ret 0x44f6
0x000000000004d48e : ret 0x4501
0x00000000000a653e : ret 0x4505
0x0000000000031097 : ret 0x4508
0x00000000000f76c2 : ret 0x4510
0x00000000000f14c6 : ret 0x4528
0x00000000000d269e : ret 0x4575
0x00000000000d36b1 : ret 0x4589
0x00000000000d1e7f : ret 0x460f
0x0000000000063f57 : ret 0x4674
0x000000000009bed7 : ret 0x4675
0x0000000000106cb8 : ret 0x46c7
0x00000000000a6566 : ret 0x4701
0x000000000015b6c4 : ret 0x474c
0x000000000008a775 : ret 0x4788
0x00000000000dfaf3 : ret 0x47e8
0x0000000000022259 : ret 0x4801
0x000000000008ac81 : ret 0x4802
0x000000000008ad5d : ret 0x4803
0x0000000000025469 : ret 0x4804
0x000000000008ad2d : ret 0x4805
0x000000000008ad15 : ret 0x4806
0x00000000000ebfa2 : ret 0x4807
0x000000000002150b : ret 0x4808
0x00000000000ebe02 : ret 0x4809
0x00000000000ec0c2 : ret 0x480a
0x00000000000ebc62 : ret 0x480b
0x00000000000457a6 : ret 0x4810
0x000000000002af30 : ret 0x4811
0x0000000000113233 : ret 0x4812
0x00000000000ea07d : ret 0x4814
0x000000000007b13e : ret 0x4817
0x00000000000200f5 : ret 0x481e
0x0000000000046ce0 : ret 0x4820
0x00000000000915ad : ret 0x4840
0x0000000000021bd5 : ret 0x4847
0x00000000000ba065 : ret 0x4864
0x0000000000034545 : ret 0x4866
0x0000000000035f27 : ret 0x4877
0x00000000000a27ae : ret 0x4890
0x00000000000f0154 : ret 0x48b
0x0000000000081c4f : ret 0x48c3
0x0000000000038764 : ret 0x48d
0x000000000002f4a5 : ret 0x48e8
0x0000000000022f71 : ret 0x48e9
0x000000000015ce86 : ret 0x48f
0x000000000002230a : ret 0x4901
0x000000000008b191 : ret 0x4902
0x000000000010d1a5 : ret 0x4907
0x0000000000049a42 : ret 0x4908
0x00000000000ad7f2 : ret 0x4909
0x000000000011eab2 : ret 0x4910
0x00000000000038a3 : ret 0x49ec
0x0000000000035e25 : ret 0x4a77
0x00000000000e578f : ret 0x4b01
0x00000000000a99ca : ret 0x4b1
0x000000000007fa5b : ret 0x4b80
0x0000000000028556 : ret 0x4c01
0x000000000008aef1 : ret 0x4c02
0x000000000006305a : ret 0x4c04
0x000000000010383a : ret 0x4c0c
0x000000000004ce77 : ret 0x4c30
0x00000000000b56dc : ret 0x4c48
0x0000000000111a31 : ret 0x4c74
0x00000000000ae9f4 : ret 0x4c80
0x000000000010d147 : ret 0x4c8b
0x0000000000047220 : ret 0x4cc0
0x00000000000d7027 : ret 0x4d01
0x00000000000ea299 : ret 0x4d02
0x0000000000077e3f : ret 0x4d07
0x0000000000097272 : ret 0x4d10
0x000000000004f848 : ret 0x4d64
0x000000000010e9ea : ret 0x4e
0x00000000000ca15d : ret 0x4e0f
0x000000000015c8e7 : ret 0x4e27
0x00000000000e595f : ret 0x4e74
0x0000000000020683 : ret 0x4eb
0x00000000000a89ee : ret 0x4f8d
0x0000000000010a78 : ret 0x51
0x00000000000eaa33 : ret 0x5172
0x00000000001489b4 : ret 0x5173
0x0000000000043024 : ret 0x5174
0x000000000005a950 : ret 0x51e9
0x0000000000003152 : ret 0x52c0
0x000000000003a179 : ret 0x53c
0x00000000000ab07c : ret 0x543a
0x00000000000a6511 : ret 0x5441
0x0000000000091739 : ret 0x547c
0x0000000000045ad8 : ret 0x5489
0x0000000000042902 : ret 0x54e9
0x000000000015ab4c : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000aa3b1 : ret 0x5589
0x0000000000041d97 : ret 0x5641
0x000000000007fdf7 : ret 0x5675
0x00000000000c49a4 : ret 0x574
0x00000000000f7142 : ret 0x577
0x00000000000ddee6 : ret 0x5774
0x00000000000dc1e3 : ret 0x57e8
0x000000000015ce18 : ret 0x5803
0x000000000010e0f7 : ret 0x582
0x000000000006dc6d : ret 0x5877
0x000000000007a956 : ret 0x58b
0x00000000000b01aa : ret 0x59
0x000000000015a820 : ret 0x591c
0x0000000000065a3a : ret 0x5974
0x000000000007f111 : ret 0x59e8
0x00000000000d42f0 : ret 0x59e9
0x0000000000003231 : ret 0x5a51
0x000000000015b587 : ret 0x5ae4
0x00000000000affaa : ret 0x5b
0x00000000000cf38c : ret 0x5ba
0x0000000000002f67 : ret 0x5bdb
0x000000000000301d : ret 0x5cbe
0x000000000002440a : ret 0x5d9
0x0000000000062d0b : ret 0x5fe8
0x00000000000004b9 : ret 0x6080
0x00000000000705b4 : ret 0x60e9
0x000000000007e884 : ret 0x6174
0x0000000000002705 : ret 0x617e
0x00000000000da3d9 : ret 0x61e8
0x00000000000a8ad3 : ret 0x6273
0x000000000015d2b2 : ret 0x62c1
0x0000000000050273 : ret 0x6348
0x00000000000501a4 : ret 0x6349
0x00000000000c78f5 : ret 0x634d
0x000000000009beba : ret 0x6375
0x0000000000083def : ret 0x63be
0x0000000000091729 : ret 0x647c
0x00000000000b2840 : ret 0x64b8
0x00000000000322b8 : ret 0x65e9
0x00000000000917da : ret 0x6610
0x0000000000084ef2 : ret 0x6620
0x000000000000280b : ret 0x6642
0x0000000000080113 : ret 0x66c3
0x00000000000840fa : ret 0x672
0x00000000000b9a44 : ret 0x676
0x00000000000641ff : ret 0x6774
0x000000000015a83f : ret 0x67b2
0x00000000000ab58b : ret 0x67ba
0x00000000000b9ed3 : ret 0x67e8
0x0000000000046c79 : ret 0x689
0x000000000010315a : ret 0x68c
0x00000000000ab360 : ret 0x6948
0x00000000000c7db7 : ret 0x6a7e
0x0000000000073719 : ret 0x6ae9
0x00000000000bab2a : ret 0x6b74
0x00000000000bbed9 : ret 0x6b8
0x0000000000003c8a : ret 0x6bba
0x000000000002f5fe : ret 0x6ce8
0x000000000016c573 : ret 0x6e1f
0x000000000015d441 : ret 0x6f9
0x00000000000e8fc9 : ret 0x71e8
0x00000000000a78e3 : ret 0x7374
0x0000000000021424 : ret 0x7401
0x0000000000035a13 : ret 0x7402
0x0000000000068b6c : ret 0x7404
0x000000000006eb1e : ret 0x7408
0x0000000000069ef1 : ret 0x7420
0x000000000004ce95 : ret 0x7450
0x00000000000b4a62 : ret 0x748d
0x00000000000924a7 : ret 0x7501
0x00000000000359d4 : ret 0x7502
0x00000000000856ed : ret 0x7504
0x0000000000103298 : ret 0x7507
0x0000000000072db8 : ret 0x7508
0x000000000014993b : ret 0x7510
0x00000000000856e8 : ret 0x7518
0x0000000000149948 : ret 0x7520
0x00000000000c7819 : ret 0x7540
0x00000000000e09b1 : ret 0x7577
0x00000000000a856b : ret 0x7674
0x00000000001478a2 : ret 0x7677
0x000000000002483c : ret 0x774
0x00000000000bdde4 : ret 0x775
0x000000000002b037 : ret 0x7773
0x00000000000dbbc3 : ret 0x77e8
0x000000000007c025 : ret 0x7874
0x000000000004d992 : ret 0x78e8
0x0000000000002eb4 : ret 0x793b
0x00000000000ff997 : ret 0x7a8d
0x00000000000251ce : ret 0x7b8
0x000000000010314c : ret 0x7be9
0x00000000000349d5 : ret 0x7c7
0x00000000001173e0 : ret 0x7de9
0x0000000000084e82 : ret 0x7e20
0x00000000000b9f33 : ret 0x7e8
0x00000000000803dc : ret 0x7f10
0x00000000000dac05 : ret 0x7fbf
0x0000000000059022 : ret 0x7fe9
0x000000000013202e : ret 0x80
0x00000000000815b9 : ret 0x8000
0x000000000003249c : ret 0x8001
0x00000000000adad3 : ret 0x8010
0x000000000008190c : ret 0x8040
0x00000000000976ad : ret 0x8072
0x00000000000fe7f5 : ret 0x8080
0x0000000000003864 : ret 0x80fc
0x000000000003df25 : ret 0x8136
0x00000000000406b6 : ret 0x8141
0x000000000011077b : ret 0x8148
0x000000000004ea23 : ret 0x8166
0x0000000000061060 : ret 0x820f
0x00000000000728ca : ret 0x822
0x0000000000109b81 : ret 0x828d
0x00000000000c2519 : ret 0x82eb
0x000000000002bd65 : ret 0x8301
0x000000000010b9f8 : ret 0x8303
0x000000000001fafa : ret 0x8304
0x000000000005829b : ret 0x8308
0x0000000000041dcc : ret 0x830f
0x000000000002d0c8 : ret 0x8310
0x000000000001f54a : ret 0x8341
0x0000000000039939 : ret 0x8348
0x00000000000442f6 : ret 0x8349
0x00000000000589bc : ret 0x8401
0x0000000000050196 : ret 0x8404
0x0000000000021692 : ret 0x840f
0x0000000000077ef8 : ret 0x8441
0x0000000000073d35 : ret 0x8445
0x0000000000050265 : ret 0x8504
0x00000000000263c9 : ret 0x850f
0x0000000000039c48 : ret 0x8545
0x000000000002b422 : ret 0x8548
0x00000000000435ff : ret 0x854d
0x00000000000d481c : ret 0x8588
0x00000000000d3d45 : ret 0x8589
0x000000000004d741 : ret 0x858b
0x000000000004ab29 : ret 0x85c7
0x000000000004adb7 : ret 0x860f
0x00000000000351f5 : ret 0x870f
0x000000000015a15e : ret 0x871e
0x0000000000084f95 : ret 0x876
0x00000000000f64ec : ret 0x87e
0x00000000000e96b3 : ret 0x87e8
0x000000000004f900 : ret 0x8801
0x00000000000921e2 : ret 0x8802
0x00000000000bf952 : ret 0x8804
0x00000000000a7a52 : ret 0x880f
0x0000000000105a0d : ret 0x8841
0x00000000000c0034 : ret 0x8845
0x0000000000002594 : ret 0x88ad
0x000000000002c615 : ret 0x8901
0x0000000000046e49 : ret 0x8908
0x0000000000046ea4 : ret 0x8910
0x0000000000051b5d : ret 0x8941
0x000000000007bdd8 : ret 0x8944
0x00000000000d1f78 : ret 0x8948
0x0000000000021454 : ret 0x8949
0x000000000001f71b : ret 0x894c
0x0000000000077e43 : ret 0x894d
0x0000000000044dcb : ret 0x894e
0x000000000011cea1 : ret 0x8964
0x0000000000038ecd : ret 0x8966
0x0000000000084afa : ret 0x8a04
0x0000000000002537 : ret 0x8a4c
0x000000000004c2d7 : ret 0x8b01
0x00000000000f339b : ret 0x8b02
0x0000000000068ce2 : ret 0x8b04
0x000000000002e0be : ret 0x8b05
0x00000000000f1f64 : ret 0x8b08
0x00000000000c7218 : ret 0x8b10
0x000000000015c98e : ret 0x8b36
0x000000000002d032 : ret 0x8b41
0x000000000003e59d : ret 0x8b44
0x00000000000a840d : ret 0x8b45
0x000000000008de0a : ret 0x8b46
0x00000000000c6248 : ret 0x8b47
0x0000000000022b38 : ret 0x8b48
0x0000000000039f28 : ret 0x8b49
0x0000000000044d4e : ret 0x8b4a
0x00000000000302c3 : ret 0x8b4c
0x000000000006a6d8 : ret 0x8b64
0x00000000000bdba4 : ret 0x8ba
0x00000000000dae75 : ret 0x8be9
0x00000000000cf54e : ret 0x8c0f
0x000000000000376e : ret 0x8cba
0x00000000000d502e : ret 0x8ce9
0x00000000000900db : ret 0x8d01
0x0000000000068137 : ret 0x8d04
0x000000000004dbab : ret 0x8d0f
0x000000000004a1fd : ret 0x8d41
0x00000000000b21e8 : ret 0x8d44
0x0000000000021a88 : ret 0x8d48
0x00000000000302dc : ret 0x8d49
0x000000000005106f : ret 0x8d4a
0x000000000002468b : ret 0x8d4c
0x000000000004ea15 : ret 0x8d4d
0x0000000000051a9d : ret 0x8d89
0x000000000003b87d : ret 0x8e0f
0x00000000000e242d : ret 0x8feb
0x00000000000f9011 : ret 0x901
0x00000000000d7f3d : ret 0x9066
0x000000000002df8d : ret 0x90c3
0x000000000008d3aa : ret 0x90e9
0x000000000011a0a7 : ret 0x90eb
0x00000000000da1d9 : ret 0x91e8
0x000000000005b610 : ret 0x91e9
0x000000000007ea53 : ret 0x93be
0x000000000003e29c : ret 0x948
0x0000000000083ad8 : ret 0x94c
0x0000000000059a1f : ret 0x9529
0x00000000000309d6 : ret 0x953d
0x000000000015b7b3 : ret 0x9576
0x0000000000101532 : ret 0x9588
0x00000000000d1e11 : ret 0x970f
0x0000000000003750 : ret 0x975
0x00000000000e95a3 : ret 0x97e8
0x00000000000e4d20 : ret 0x9848
0x000000000007fe45 : ret 0x9874
0x000000000003033e : ret 0x9ce8
0x0000000000097690 : ret 0x9d72
0x00000000000aaeb3 : ret 0x9e0f
0x00000000000e091f : ret 0x9e75
0x0000000000046a2d : ret 0x9feb
0x000000000000b129 : ret 0xa
0x00000000000e1899 : ret 0xa1e8
0x000000000006c5a2 : ret 0xa1eb
0x000000000015b4a3 : ret 0xa514
0x0000000000090933 : ret 0xa575
0x000000000009f577 : ret 0xa6eb
0x000000000003d022 : ret 0xa77
0x000000000007adf3 : ret 0xa7e
0x000000000011bd1e : ret 0xa802
0x000000000005dd65 : ret 0xabe9
0x000000000015b927 : ret 0xac65
0x00000000000673ee : ret 0xace8
0x000000000015c2e4 : ret 0xacfc
0x00000000000ef7e0 : ret 0xae8
0x000000000000a451 : ret 0xb
0x00000000000e9089 : ret 0xb1e8
0x000000000010d86a : ret 0xb43
0x000000000006d3ee : ret 0xb4eb
0x0000000000071bab : ret 0xb5eb
0x000000000002f7b9 : ret 0xb60f
0x000000000006c903 : ret 0xb6eb
0x0000000000028a95 : ret 0xb70f
0x00000000000dd94c : ret 0xb74
0x00000000000db983 : ret 0xb7e8
0x0000000000021ed2 : ret 0xb8
0x0000000000102181 : ret 0xb804
0x000000000002068c : ret 0xb810
0x0000000000034461 : ret 0xb848
0x0000000000043bf5 : ret 0xb87f
0x00000000000c8119 : ret 0xb880
0x00000000000abd16 : ret 0xb8b
0x00000000000dd68b : ret 0xb8e9
0x000000000006d59f : ret 0xb8eb
0x00000000000b7313 : ret 0xb9
0x00000000000c7d1c : ret 0xb975
0x000000000015b7ee : ret 0xb9b9
0x00000000000351cc : ret 0xba41
0x00000000000b86a1 : ret 0xbae9
0x0000000000090198 : ret 0xbbe9
0x00000000000714ca : ret 0xbbeb
0x000000000006d244 : ret 0xbceb
0x0000000000002464 : ret 0xbd07
0x00000000001052c1 : ret 0xbd41
0x000000000004b5d7 : ret 0xbd83
0x00000000000d36d8 : ret 0xbde9
0x000000000015b544 : ret 0xbe57
0x000000000006c768 : ret 0xbfeb
0x000000000001f8f4 : ret 0xc
0x00000000000471bd : ret 0xc0
0x0000000000081479 : ret 0xc000
0x0000000000020234 : ret 0xc031
0x0000000000041f52 : ret 0xc083
0x0000000000083aa5 : ret 0xc085
0x00000000000a9755 : ret 0xc0e9
0x000000000004d83e : ret 0xc101
0x0000000000020fbb : ret 0xc148
0x0000000000109aa6 : ret 0xc166
0x00000000001124bd : ret 0xc173
0x000000000009b931 : ret 0xc183
0x00000000000e9d79 : ret 0xc1e8
0x000000000008e92c : ret 0xc1e9
0x00000000000de399 : ret 0xc1eb
0x000000000003876a : ret 0xc229
0x0000000000038908 : ret 0xc269
0x00000000000da5cb : ret 0xc283
0x0000000000148884 : ret 0xc2b2
0x000000000003825b : ret 0xc35b
0x00000000000e4de3 : ret 0xc383
0x00000000000cdde0 : ret 0xc3e9
0x00000000000efd2b : ret 0xc3f3
0x00000000001593e2 : ret 0xc4c3
0x00000000000f901c : ret 0xc4eb
0x000000000015b0f8 : ret 0xc4ff
0x00000000000c3410 : ret 0xc639
0x00000000000ca160 : ret 0xc689
0x00000000000a60f6 : ret 0xc6c
0x0000000000103ddb : ret 0xc741
0x0000000000034ff7 : ret 0xc748
0x0000000000118c44 : ret 0xc749
0x000000000009bf11 : ret 0xc75
0x00000000000e9373 : ret 0xc7e8
0x000000000003df2f : ret 0xc801
0x0000000000085559 : ret 0xc88
0x00000000000c2434 : ret 0xc883
0x00000000000d9a2d : ret 0xc889
0x00000000000e6fc2 : ret 0xc8e8
0x00000000000ad7b2 : ret 0xc8e9
0x00000000000c4148 : ret 0xc931
0x000000000011e0d1 : ret 0xc984
0x000000000010152b : ret 0xc985
0x000000000009f554 : ret 0xc9eb
0x000000000007feb6 : ret 0xc9ff
0x00000000001242cc : ret 0xca39
0x00000000000d369f : ret 0xca83
0x00000000000e51a9 : ret 0xcad9
0x000000000007dfc4 : ret 0xcb8
0x000000000001f5b8 : ret 0xcbeb
0x00000000000e02b8 : ret 0xcc80
0x000000000015ab8a : ret 0xcca7
0x000000000015cc6d : ret 0xcd11
0x0000000000097660 : ret 0xcd72
0x0000000000031f71 : ret 0xce80
0x000000000001f74e : ret 0xce89
0x00000000000c4d1f : ret 0xceb
0x000000000011737a : ret 0xcf89
0x00000000000e383e : ret 0xcfeb
0x0000000000005411 : ret 0xd
0x000000000008e97d : ret 0xd029
0x0000000000077c35 : ret 0xd075
0x00000000000348f3 : ret 0xd089
0x000000000008c509 : ret 0xd0e9
0x00000000000d3219 : ret 0xd101
0x000000000010145c : ret 0xd120
0x00000000000ae35b : ret 0xd129
0x00000000000aae3e : ret 0xd138
0x0000000000109b61 : ret 0xd189
0x0000000000033b30 : ret 0xd231
0x00000000000ab500 : ret 0xd269
0x00000000000479ca : ret 0xd284
0x00000000000c94da : ret 0xd285
0x0000000000039ba5 : ret 0xd348
0x00000000000cec1a : ret 0xd377
0x000000000000089a : ret 0xd5a4
0x000000000003db07 : ret 0xd6e9
0x00000000000e72d6 : ret 0xd74
0x00000000000e0fd6 : ret 0xd77
0x00000000000c6108 : ret 0xd7eb
0x00000000000aa9dc : ret 0xd889
0x000000000015c705 : ret 0xd8f
0x00000000000a1151 : ret 0xd929
0x00000000000c51e8 : ret 0xda29
0x00000000000f4d83 : ret 0xda75
0x0000000000034b1d : ret 0xdaf7
0x00000000000b5894 : ret 0xdb31
0x000000000010f43a : ret 0xdb78
0x00000000000c3cac : ret 0xdbeb
0x00000000000aa180 : ret 0xdc00
0x000000000015c7e6 : ret 0xdcd9
0x000000000015b762 : ret 0xde5d
0x0000000000041d7d : ret 0xde8
0x000000000015a4f1 : ret 0xde9e
0x000000000002b11a : ret 0xdf89
0x0000000000007cc1 : ret 0xe
0x0000000000081339 : ret 0xe000
0x00000000001498f9 : ret 0xe074
0x000000000010385e : ret 0xe075
0x00000000000cd2b1 : ret 0xe083
0x000000000017fe21 : ret 0xe0a
0x000000000010bbaa : ret 0xe0ff
0x0000000000057492 : ret 0xe181
0x0000000000051a5c : ret 0xe183
0x00000000000e0559 : ret 0xe1e8
0x00000000000f0244 : ret 0xe1ff
0x0000000000070085 : ret 0xe274
0x00000000000273e5 : ret 0xe281
0x0000000000027d36 : ret 0xe283
0x0000000000022454 : ret 0xe2ff
0x000000000007f1a5 : ret 0xe54
0x000000000004df57 : ret 0xe5e9
0x000000000015c906 : ret 0xe71f
0x0000000000021fd1 : ret 0xe783
0x000000000006b4a2 : ret 0xe8
0x00000000000df5e1 : ret 0xe801
0x0000000000105362 : ret 0xe82e
0x00000000000f1c75 : ret 0xe883
0x00000000000217e4 : ret 0xe8c1
0x000000000011dba9 : ret 0xe8eb
0x00000000000426d3 : ret 0xe901
0x0000000000068a56 : ret 0xe902
0x000000000006267b : ret 0xe908
0x0000000000120a96 : ret 0xe910
0x00000000000470e3 : ret 0xe920
0x000000000015ac67 : ret 0xe970
0x000000000009f5ec : ret 0xe974
0x00000000000f00ac : ret 0xe975
0x00000000000c7e14 : ret 0xe97f
0x0000000000046b66 : ret 0xe9c0
0x00000000000aaeb6 : ret 0xe9c1
0x000000000009bb0a : ret 0xea81
0x000000000011730f : ret 0xea83
0x0000000000051a55 : ret 0xeac0
0x0000000000021689 : ret 0xeac1
0x000000000003e43a : ret 0xeb01
0x0000000000068940 : ret 0xeb02
0x000000000001fb2f : ret 0xeb04
0x000000000005a02e : ret 0xeb08
0x000000000011ead6 : ret 0xeb10
0x00000000000c720a : ret 0xeb20
0x000000000003935a : ret 0xeb75
0x000000000015d418 : ret 0xec2
0x00000000000ccb7e : ret 0xece8
0x000000000017a4fc : ret 0xecfa
0x000000000017a53e : ret 0xecfb
0x000000000003aec0 : ret 0xed75
0x00000000000a68a0 : ret 0xed77
0x000000000007ad82 : ret 0xed9
0x00000000000a8ee5 : ret 0xee72
0x0000000000090bcc : ret 0xee75
0x00000000000a7c7f : ret 0xee77
0x00000000000e5299 : ret 0xeed9
0x00000000000b68cd : ret 0xeee9
0x000000000017f1ec : ret 0xeef3
0x0000000000180b8c : ret 0xef23
0x000000000015d0ba : ret 0xef32
0x000000000008f306 : ret 0xef75
0x00000000000a78de : ret 0xef77
0x0000000000021fc5 : ret 0xefc1
0x000000000016fa48 : ret 0xefd2
0x000000000000ff71 : ret 0xf
0x00000000000811f9 : ret 0xf000
0x000000000002f76f : ret 0xf01
0x0000000000076a43 : ret 0xf02
0x000000000007a099 : ret 0xf04
0x00000000000921c3 : ret 0xf077
0x00000000000ee261 : ret 0xf0eb
0x0000000000080392 : ret 0xf10
0x00000000000a8727 : ret 0xf175
0x000000000009183c : ret 0xf188
0x00000000000e9549 : ret 0xf1e8
0x0000000000091b55 : ret 0xf1eb
0x00000000000924c4 : ret 0xf20
0x00000000000ab65b : ret 0xf275
0x00000000000359cc : ret 0xf304
0x00000000000f171a : ret 0xf375
0x000000000011326a : ret 0xf3db
0x000000000006aab3 : ret 0xf40
0x000000000008ed62 : ret 0xf41
0x00000000000a91cf : ret 0xf44
0x000000000008fdde : ret 0xf45
0x000000000002592f : ret 0xf48
0x000000000003e432 : ret 0xf49
0x00000000001715b0 : ret 0xf490
0x0000000000045c92 : ret 0xf4d
0x000000000006734a : ret 0xf4e9
0x00000000000c5bf8 : ret 0xf57f
0x0000000000027dda : ret 0xf5b
0x00000000000c289a : ret 0xf5cb
0x00000000001965ee : ret 0xf5fe
0x00000000000d722d : ret 0xf601
0x00000000000d5e0a : ret 0xf60f
0x00000000000b64bf : ret 0xf631
0x000000000010766b : ret 0xf641
0x00000000000348ab : ret 0xf66
0x00000000000d227a : ret 0xf66c
0x000000000009b746 : ret 0xf685
0x00000000000e67fa : ret 0xf6a8
0x00000000000d7b1a : ret 0xf6e4
0x000000000011242a : ret 0xf72b
0x00000000000395d9 : ret 0xf748
0x000000000006b827 : ret 0xf7b
0x000000000010e61a : ret 0xf7c1
0x00000000000e1a43 : ret 0xf7e8
0x00000000000810b9 : ret 0xf800
0x000000000015a3d0 : ret 0xf869
0x000000000009e5d4 : ret 0xf883
0x000000000003130e : ret 0xf889
0x00000000000f751a : ret 0xf932
0x00000000000b22e5 : ret 0xf983
0x0000000000083c0a : ret 0xf9e1
0x000000000010c30b : ret 0xf9e9
0x00000000000a0fda : ret 0xfa36
0x00000000000f82ba : ret 0xfa5c
0x000000000008185d : ret 0xfa80
0x000000000003d739 : ret 0xfa81
0x00000000000e9884 : ret 0xfa83
0x000000000004c54f : ret 0xfac1
0x0000000000105134 : ret 0xfad1
0x00000000000700aa : ret 0xfaf3
0x0000000000069aaa : ret 0xfb59
0x000000000005d57f : ret 0xfbe8
0x0000000000080f79 : ret 0xfc00
0x000000000005eeaa : ret 0xfc05
0x00000000000e3bd1 : ret 0xfc07
0x0000000000081cf9 : ret 0xfc3
0x000000000016da14 : ret 0xfc68
0x000000000005883a : ret 0xfc6b
0x00000000001137ea : ret 0xfc89
0x000000000016dd38 : ret 0xfc93
0x000000000016e230 : ret 0xfcba
0x0000000000067342 : ret 0xfce9
0x00000000000c2498 : ret 0xfd83
0x000000000006636d : ret 0xfde8
0x000000000002f740 : ret 0xfdf
0x00000000000daa4a : ret 0xfdf8
0x0000000000080e39 : ret 0xfe00
0x00000000000fe18a : ret 0xfe33
0x00000000000a1b5b : ret 0xfe9
0x0000000000034b29 : ret 0xfeb8
0x000000000004c7f0 : ret 0xfec1
0x0000000000030baa : ret 0xfee8
0x0000000000080cf9 : ret 0xff00
0x0000000000133ba1 : ret 0xff2
0x0000000000091e8a : ret 0xff3
0x00000000000434a9 : ret 0xff31
0x0000000000090f1e : ret 0xff41
0x000000000007fdf4 : ret 0xff48
0x000000000001f841 : ret 0xff49
0x0000000000080bb9 : ret 0xff80
0x0000000000105836 : ret 0xff81
0x0000000000038251 : ret 0xffb8
0x000000000003e979 : ret 0xffbf
0x0000000000080a79 : ret 0xffc0
0x00000000000a0e0b : ret 0xffc1
0x00000000000adc5a : ret 0xffcc
0x00000000000de73a : ret 0xffcd
0x0000000000080939 : ret 0xffe0
0x000000000016e8e9 : ret 0xffeb
0x0000000000058d57 : ret 0xffec
0x00000000000b52f6 : ret 0xffed
0x000000000017b5a9 : ret 0xffee
0x000000000003921c : ret 0xffef
0x00000000000807f9 : ret 0xfff0
0x0000000000103181 : ret 0xfff1
0x000000000015ecc9 : ret 0xfff2
0x00000000000c1448 : ret 0xfff3
0x00000000001717e9 : ret 0xfff4
0x00000000000c1172 : ret 0xfff5
0x00000000000a06ca : ret 0xfff6
0x00000000000ee35f : ret 0xfff7
0x00000000000806b9 : ret 0xfff8
0x00000000000bf620 : ret 0xfff9
0x0000000000028434 : ret 0xfffa
0x0000000000063131 : ret 0xfffb
0x0000000000026b2e : ret 0xfffc
0x000000000002204a : ret 0xfffd
0x000000000002256b : ret 0xfffe
0x00000000000bb52a : ret 0xffff
0x0000000000000e20 : ret 1
0x0000000000001010 : ret 2
0x000000000000ec88 : ret 3
0x0000000000085059 : ret 4
0x0000000000023f0e : ret 5
0x0000000000006bc9 : ret 6
0x00000000000018ec : ret 7
0x000000000000fd31 : ret 8
0x0000000000027c0e : ret 9
0x000000000017b654 : retf -0x115d ; jmp qword ptr [rdx]
0x000000000001f5b3 : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f58b
0x0000000000088fef : retf -0x7af1 ; call qword ptr [rsi]
0x000000000015ff4c : retf -0xa42 ; call rsp
0x0000000000186f14 : retf -0xe05 ; jmp qword ptr [rdx]
0x000000000018676c : retf -0xe21 ; jmp qword ptr [rdx]
0x00000000001746a5 : retf ; add al, byte ptr [rax] ; cli ; jmp rsp
0x000000000016f6ed : retf ; add byte ptr [rax], al ; mov ah, 0x8a ; out dx, eax ; jmp rsp
0x0000000000171c0d : retf ; add dword ptr [rax], eax ; push rsp ; sbb dh, dh ; jmp rsp
0x0000000000180ab4 : retf ; and edi, ebp ; jmp qword ptr [rdx]
0x0000000000174ab9 : retf ; cli ; call rsp
0x000000000019500d : retf ; cmc ; jmp qword ptr [rdx]
0x00000000001866a4 : retf ; fcompi st(1) ; jmp qword ptr [rdx]
0x00000000000ceeed : retf ; jmp r11
0x000000000018ab09 : retf ; jmp rdi
0x00000000001733c0 : retf ; mov eax, edi ; call rsp
0x00000000000c22d0 : retf ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x000000000015f3ac : rol bh, 0xf3 ; jmp qword ptr [rax]
0x000000000009b425 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000004be8c : rol bl, 0x66 ; nop ; ret
0x00000000000916dd : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009dd1d : rol bl, 0x90 ; mov eax, 1 ; ret
0x000000000006e99c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000000850ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000008191e : rol bl, 1 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000038227 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000091e62 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000081f12 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000001582a0 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000009d8cd : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00000000000f7596 : rol byte ptr [rax*4 + 0x753089f6], 0xea ; ret
0x0000000000074280 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48c9], al ; ret 0x8948
0x000000000004226a : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001477ad : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018109d : rol byte ptr [rax], 0 ; nop ; push rbx ; out dx, eax ; call qword ptr [rcx]
0x0000000000067d2c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000010add3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000e6a17 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab377 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000035203 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000195ed6 : rol byte ptr [rax], 1 ; idiv bh ; sbb al, 0xd ; pop rsp ; stc ; cmc ; jmp qword ptr [rdx]
0x00000000000e5253 : rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xe5264
0x000000000008c6c2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000081f39 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000005f865 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000039b48 : rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x00000000000e5c20 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000057b98 : rol byte ptr [rbp - 0x78], 0x34 ; sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x0000000000059a19 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000005ccb0 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000000d42e9 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x59e9
0x00000000000d4dbf : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000d5027 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8ce9
0x000000000006c197 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x000000000009eb16 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x9eb19 ; ret
0x00000000000441db : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000eb544 : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000002e5c1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000002712c : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x0000000000032aaf : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2ce9
0x0000000000162c54 : rol byte ptr [rbx - 5], 1 ; jmp rax
0x000000000009cf42 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000010b9f5 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x000000000005546c : rol byte ptr [rcx + 0x39], 1 ; ret
0x00000000000500b6 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x000000000006bdc1 : rol byte ptr [rcx + 0x5c], cl ; jmp rax
0x000000000008cefd : rol byte ptr [rcx + 0x5e], 1 ; ret
0x000000000009bb01 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000c798e : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000008e8ad : rol byte ptr [rcx + 0xf], 0xb6 ; ret
0x00000000000818bd : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000c7db3 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x6a7e
0x000000000002a9f6 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ab585 : rol byte ptr [rcx + rcx*4 - 0x40], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x000000000010ceeb : rol byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x000000000015ee70 : rol byte ptr [rcx - 0x7e2f000d], 0xf3 ; jmp rax
0x000000000009cf22 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000019111d : rol byte ptr [rcx], 0 ; and bl, bl ; cmc ; jmp qword ptr [rdi]
0x000000000008f3c5 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000043bf2 : rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000c7e11 : rol byte ptr [rcx], 0x39 ; ret 0xe97f
0x000000000010bcd2 : rol byte ptr [rcx], 0x39 ; ret 0xf077
0x00000000000c5bf5 : rol byte ptr [rcx], 0x39 ; ret 0xf57f
0x0000000000043e8a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x43e89 ; xor eax, eax ; ret
0x0000000000043f6a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x43f69 ; xor eax, eax ; ret
0x00000000000eab24 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000009b943 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000002bd62 : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x00000000000f34e9 : rol byte ptr [rcx], 0x89 ; ret 0x8948
0x000000000008fe73 : rol byte ptr [rcx], 0x8d ; add qword ptr [rcx], rdi ; ret
0x00000000000ef63a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000c2256 : rol byte ptr [rcx], 0xf6 ; or esi, r10d ; jne 0xc2269 ; ret
0x00000000001920cd : rol byte ptr [rcx], 1 ; add al, al ; sub dh, dh ; jmp qword ptr [rdi]
0x000000000019209d : rol byte ptr [rcx], 1 ; add al, al ; sub dh, dh ; jmp qword ptr [rsi]
0x000000000016d56c : rol byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x0000000000171d85 : rol byte ptr [rcx], cl ; add byte ptr [rdi + rdi*2 - 0xa], dh ; jmp rsp
0x00000000000db32c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000009cf82 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000008d375 : rol byte ptr [rdx + rdx*8 - 0x3ebaf0b8], 0xf3 ; ret
0x000000000015eea0 : rol byte ptr [rdx - 0x7d0f000d], 1 ; call qword ptr [rax]
0x0000000000033ed0 : rol byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009cf32 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000022f23 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x00000000000e8625 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000badd6 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000019e008 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000000adc46 : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000606cc : rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x000000000009cf72 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001593e0 : rol cl, 0xc2 ; ret
0x00000000000359c7 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x00000000000aa9fd : rol cl, 1 ; call 0x48ccd328
0x0000000000113338 : rol cl, 1 ; call 0xffffffff80d42a54
0x00000000000fd819 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000017cbb4 : rol dl, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000009cecc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000016f585 : rol dword ptr [rax], 0 ; test bh, ch ; in eax, dx ; call rsp
0x00000000000916d7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000004b53b : rol dword ptr [rcx + 0x39], 1 ; ret 0x860f
0x00000000000e08d4 : rol dword ptr [rcx + 0x5c], 0x44 ; mov eax, ecx ; pop r13 ; ret
0x0000000000051a4e : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000032b32 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000c4263 : rol dword ptr [rcx], 0x3b ; adc al, 0xbe ; cmove eax, ecx ; ret
0x00000000000f74f8 : rol dword ptr [rcx], 0x45 ; test eax, eax ; jne 0xf74f0 ; ret
0x0000000000171d9d : rol dword ptr [rcx], cl ; add byte ptr [rax + rcx*4 - 0xa], ah ; jmp rsp
0x00000000001923ad : rol dword ptr [rcx], cl ; add byte ptr [rax - 0x61], ah ; sti ; jmp qword ptr [rsi]
0x000000000004df52 : rol dword ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0xe5e9
0x0000000000099079 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001744d5 : rol dword ptr [rdx], 0 ; adc al, 0x48 ; cli ; jmp rsp
0x0000000000174785 : rol dword ptr [rdx], 1 ; add byte ptr [rax + rdi*2], dl ; cli ; jmp rsp
0x0000000000048d5f : rol dword ptr [rdx], 1 ; add byte ptr [rbx - 0x7af0fe40], al ; ret
0x0000000000035b75 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000017d3bc : rol ebp, 1 ; out dx, al ; jmp qword ptr [rdx]
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000035b74 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f8d52 : ror ax, 8 ; ret
0x0000000000061646 : ror byte ptr [r13 + 1], 1 ; ret 0x8d4a
0x0000000000035994 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000035b76 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000034542 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x0000000000084f62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x84fa9 ; add rax, rdi ; ret
0x0000000000081dbf : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000009249e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e38ac : ror byte ptr [rax + 0x2c], 0 ; add rsp, 8 ; ret
0x00000000000e9c75 : ror byte ptr [rax + 0x39], 0xca ; cmovae rax, rsi ; ret
0x00000000000e10c2 : ror byte ptr [rax + 0x39], 0xd6 ; ja 0xe10d7 ; ret
0x00000000000f45b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000db32e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000045123 : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x00000000000aaeb0 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x00000000000a8b43 : ror byte ptr [rax + 0x39], cl ; or byte ptr [r15], 0x97 ; ret 0x8941
0x00000000000256eb : ror byte ptr [rax + 0x39], cl ; ret
0x000000000003cd3a : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000f5dea : ror byte ptr [rax + 0x48e97507], 0x89 ; clc ; ret
0x0000000000056d5a : ror byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000ae63a : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000042f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000e6d8e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000000e5255 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x000000000009df94 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x0000000000107974 : ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000e4c8b : ror byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000091823 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x000000000008c59c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000083969 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000009f5e9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000081dbc : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000570df : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x0000000000046e40 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x0000000000046e9b : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x00000000000c7212 : ror byte ptr [rax + 3], cl ; adc ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000000381fa : ror byte ptr [rax + 9], 0xd0 ; ret
0x00000000000850e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000aa4b5 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc233ee03
0x00000000000aa6d3 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000bb770 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000084f22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000084f52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000091712 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000084f42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000f551c : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x000000000007643a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000103335 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000091359 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000010bf79 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x10bf1b ; xor eax, eax ; pop rbx ; ret
0x000000000010f7c8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000f53a2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000038858 : ror byte ptr [rax - 0x77], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f54b6 : ror byte ptr [rax - 0x77], 1 ; adc eax, 0x2b3ce2 ; pop rbp ; ret
0x000000000004d98f : ror byte ptr [rax - 0x77], 1 ; ret 0x78e8
0x0000000000038eca : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000074615 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000ad765 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000000338a9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000001115c6 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000b81a4 : ror byte ptr [rax - 0x77], cl ; ret
0x000000000010da99 : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000101050 : ror byte ptr [rax - 0x7af0ffd6], 1 ; ret 0xc
0x000000000006c194 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x000000000008e977 : ror byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xd029
0x00000000000e552e : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdx + rax + 0x5b], dh ; ret
0x0000000000032fe3 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006f1ef : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000112ee2 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000dd1c0 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000011bb99 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x0000000000037bbd : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000414b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000011e231 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000004313a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000116bda : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001025e6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000091772 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000091752 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000091732 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000b9a4e : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000007b196 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc290f9b5
0x0000000000116b8c : ror byte ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000003aad6 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000037c90 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000118047 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x000000000008f5b7 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8301
0x00000000000718b8 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000b1545 : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000097686 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000028912 : ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000028553 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000732f7 : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000003de53 : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000737ea : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b412 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x0000000000103e81 : ror byte ptr [rax], 0xc3 ; nop dword ptr [rax] ; ret
0x0000000000083cc4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000008e10e : ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000061647 : ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x0000000000098449 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret
0x000000000015ef80 : ror byte ptr [rbp - 0x722f000d], 0xf3 ; jmp rax
0x0000000000043c9d : ror byte ptr [rbp - 0x75], 1 ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000434d4 : ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x000000000009f544 : ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x00000000001192f7 : ror byte ptr [rbx + 0x453b0840], cl ; mov word ptr [rdi], cs ; xchg eax, esp ; ret 0xea83
0x000000000015ef20 : ror byte ptr [rbx - 0x740f000d], 0xf3 ; jmp qword ptr [rax]
0x000000000016e068 : ror byte ptr [rbx - 0x74af0004], 1 ; cld ; call rax
0x00000000000bb50a : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xbb4e4 ; ret
0x0000000000041b8e : ror byte ptr [rcx + 0x39], 1 ; clc ; jne 0x41b6f ; ret
0x0000000000081f3f : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000db60f : ror byte ptr [rcx + 0x39], 1 ; ret 0x1b75
0x000000000002809f : ror byte ptr [rcx + 0x39], cl ; ret
0x00000000000257bb : ror byte ptr [rcx + 0x41082444], cl ; call rsi
0x00000000000aa9b5 : ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x000000000010ceee : ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x0000000000034b64 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000003a335 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000034e9e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000016e078 : ror byte ptr [rcx - 0x76af0004], 1 ; cld ; call rax
0x0000000000103374 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x000000000010ede1 : ror byte ptr [rcx - 0x77], 0 ; mov eax, 1 ; ret
0x000000000008b2f0 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x000000000009726f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x000000000009d8d0 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000aa310 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000e87ac : ror byte ptr [rcx], 0xf8 ; ret
0x00000000000858e9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000015eff4 : ror byte ptr [rdi - 0x702f000d], 0xf3 ; jmp rax
0x0000000000077fdc : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x00000000000ef4cf : ror byte ptr [rdi], 0x82 ; ret
0x00000000000433d4 : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000003a2fa : ror byte ptr [rdi], 0x84 ; cdq ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000004009e : ror byte ptr [rdi], 0x84 ; ret
0x00000000000662f7 : ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000060cc3 : ror byte ptr [rdi], 0x84 ; ret 0x35
0x000000000002602d : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000000000024bcf : ror byte ptr [rdi], 0x84 ; stc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013e7ea : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000009169c : ror byte ptr [rdi], 0x85 ; jge 0x916aa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095ed1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000022343 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000092817 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000011c33f : ror byte ptr [rdi], 0x88 ; cli ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001186af : ror byte ptr [rdi], 0x89 ; ret
0x00000000000c5c9b : ror byte ptr [rdi], 0x8e ; ret 0
0x00000000000bb41f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000112ccf : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000ab079 : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x00000000000b09d2 : ror byte ptr [rdi], 0x94 ; ret 0x6348
0x000000000005d4f3 : ror byte ptr [rdi], 0x94 ; ret 0x8941
0x0000000000021a85 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x000000000012426e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000001f79e : ror byte ptr [rdi], 0x95 ; ret
0x00000000000705b1 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x000000000010d02d : ror byte ptr [rdi], 0x95 ; ret 0x8348
0x000000000010c432 : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x0000000000070516 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x0000000000069b25 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000009e5d1 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x0000000000059a1c : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x00000000000ab588 : ror byte ptr [rdi], 0xaf ; ret 0x67ba
0x00000000000bb76d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000011bb96 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x7d], 0xc4 ; or bl, dh ; ret
0x000000000006770b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000d1e5f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000dd3aa : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000338be : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x338a8 ; ret
0x00000000000c340d : ror byte ptr [rdi], 1 ; ret 0xc639
0x00000000000cb1dc : ror byte ptr [rdi], 1 ; ret 0xce89
0x000000000005ccb3 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000000917bd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000e7510 : ror byte ptr [rdi], cl ; ret 0x66c3
0x0000000000046c76 : ror byte ptr [rdi], cl ; ret 0x689
0x0000000000051b5a : ror byte ptr [rdi], cl ; ret 0x8941
0x00000000000e4d1d : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000038258 : ror byte ptr [rdi], cl ; ret 0xc35b
0x00000000000c6105 : ror byte ptr [rdi], cl ; ret 0xd7eb
0x00000000000d46c9 : ror byte ptr [rdi], cl ; test bh, bh ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000ed6ac : ror byte ptr [rdi], cl ; test dword ptr [rsi + rdi*8 - 0x76b70001], ecx ; ret
0x00000000000d69b5 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000aaf81 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000cf02f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe083
0x000000000007ef4d : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000015ed44 : ror byte ptr [rdx - 0x740f0004], 1 ; cld ; call qword ptr [rax]
0x000000000016e070 : ror byte ptr [rdx - 0x75af0004], 1 ; cld ; call rax
0x00000000000ce63c : ror byte ptr [rip - 0x7ab2000b], 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016e060 : ror byte ptr [rsp + rdi*8 - 0x373af01], 1 ; call rax
0x00000000000baf41 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000e6cec : ror dword ptr [rax + 0xf], cl ; ret
0x00000000001243b8 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000124278 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x0000000000039f64 : ror dword ptr [rax + 1], 1 ; ret 0x8b48
0x0000000000113c32 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x000000000003d33e : ror dword ptr [rax - 0x3f], -8 ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x00000000000c499d : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x0000000000044c53 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000000ab68b : ror dword ptr [rax - 0x77], 0x4f ; and byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e72fd : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000028a92 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x000000000010d84a : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000010da8c : ror dword ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006de6d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x6de67 ; ret
0x0000000000075c3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x75c37 ; ret
0x00000000000453f5 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x0000000000074dcf : ror dword ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000005a025 : ror dword ptr [rax], -0x17 ; pop rsp ; loop 0x5a033 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000074f09 : ror dword ptr [rbp - 0x7cb70090], 1 ; ret 0x8301
0x00000000000c33d9 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x000000000004ea12 : ror dword ptr [rcx + 1], 1 ; ret 0x8d4d
0x00000000001498f7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000091635 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000e02b5 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c6ba9 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000148018 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148724 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001484f6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000149620 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148476 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000001487b4 : ror dword ptr [rdi], -0x7b ; je 0x1487c4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001482ab : ror dword ptr [rdi], -0x7b ; jno 0x1482c0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148373 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147ff0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000117204 : ror dword ptr [rdi], -0x7c ; wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000011b7bb : ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x00000000000dd38c : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000007a5bd : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000000f8d53 : ror eax, 8 ; ret
0x000000000003d33d : ror qword ptr [r8 - 0x3f], -8 ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x000000000006de6c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x6de68 ; ret
0x0000000000075c3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x75c38 ; ret
0x000000000005475c : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10ff43], al ; call qword ptr [rax]
0x0000000000053276 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x000000000011bc96 : sahf ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 5 ; jmp rsp
0x000000000018ef85 : sahf ; add dword ptr [rax], eax ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x0000000000180a6c : sahf ; and edi, ebp ; jmp qword ptr [rdx]
0x000000000015f0cd : sahf ; call qword ptr [rax]
0x000000000015f0c5 : sahf ; call rax
0x000000000018f4f9 : sahf ; cmc ; jmp qword ptr [rcx]
0x0000000000032596 : sahf ; cmp dh, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000018b881 : sahf ; hlt ; call qword ptr [rax]
0x0000000000159479 : sahf ; in eax, dx ; jmp rax
0x00000000000025c2 : sahf ; jl 0x2557 ; loop 0x25a2 ; ret 0x23cb
0x00000000000025c1 : sahf ; jl 0x2558 ; loop 0x25a3 ; ret 0x23cb
0x000000000015f0c1 : sahf ; jmp qword ptr [rax - 0x2f000c62]
0x000000000015f0b1 : sahf ; jmp qword ptr [rax]
0x00000000001885fd : sahf ; jmp qword ptr [rdx]
0x000000000015ec5d : sahf ; jmp rax
0x00000000001251ee : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000015f0c9 : sahf ; push rax ; sahf ; call qword ptr [rax]
0x0000000000182148 : sahf ; ret
0x000000000015abc5 : sahf ; ret 0x38ae
0x00000000000ae35a : sahf ; ret 0xd129
0x00000000000aaeb5 : sahf ; ret 0xe9c1
0x000000000006315f : sahf ; ret 0xffff
0x00000000001956ac : sahf ; sal ch, 1 ; jmp qword ptr [rdx]
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000173eb9 : sahf ; stc ; call rsp
0x000000000016d2a4 : sal al, 1 ; sti ; call rax
0x00000000000adc44 : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000e1d70 : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112d52 : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000113084 : sal bh, 0xd8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000dd406 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006770e : sal bh, 0xd8 ; pop rbx ; ret
0x00000000000225aa : sal bh, 0xd8 ; ret
0x000000000009bc56 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000018c490 : sal bh, 0xf4 ; jmp qword ptr [rcx]
0x00000000000815b7 : sal bh, 1 ; ret 0x8000
0x0000000000081477 : sal bh, 1 ; ret 0xc000
0x0000000000081337 : sal bh, 1 ; ret 0xe000
0x00000000000811f7 : sal bh, 1 ; ret 0xf000
0x00000000000810b7 : sal bh, 1 ; ret 0xf800
0x0000000000080f77 : sal bh, 1 ; ret 0xfc00
0x0000000000080e37 : sal bh, 1 ; ret 0xfe00
0x0000000000080cf7 : sal bh, 1 ; ret 0xff00
0x0000000000080bb7 : sal bh, 1 ; ret 0xff80
0x0000000000080a77 : sal bh, 1 ; ret 0xffc0
0x0000000000080937 : sal bh, 1 ; ret 0xffe0
0x00000000000807f7 : sal bh, 1 ; ret 0xfff0
0x00000000000806b7 : sal bh, 1 ; ret 0xfff8
0x0000000000080577 : sal bh, 1 ; ret 0xfffc
0x0000000000080437 : sal bh, 1 ; ret 0xfffe
0x000000000004be9c : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000438c7 : sal bl, 1 ; ret
0x000000000009d6df : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000001129b5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000010a6c5 : sal byte ptr [rax + rdx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000d1ebe : sal byte ptr [rax + rdx*2 - 0xd], 1 ; ret
0x000000000016e3b4 : sal byte ptr [rax - 0x4faf0004], 1 ; cld ; call rax
0x000000000016d760 : sal byte ptr [rax - 4], 0xff ; push rax ; jo 0x16d76a ; jmp rax
0x0000000000103dcf : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x00000000000da1bc : sal byte ptr [rbp + 0x25], 0x83 ; ret
0x0000000000084f18 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000083d40 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x0000000000067100 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000014c860 : sal byte ptr [rbp + 5], 0x5b ; ret
0x00000000000f45c7 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000034f67 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000010be74 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f4ca4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000010a1b6 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000010bc38 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000081a21 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000031078 : sal byte ptr [rbp + rbp + 0x48], 0x83 ; ret 0xeb04
0x0000000000091248 : sal byte ptr [rbp + rbp*8 + 0x41], 1 ; cmp eax, ecx ; je 0x91241 ; ret
0x000000000003d027 : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x0000000000076e95 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000091135 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000043e8e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000f4eae : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x000000000009b590 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000006de70 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000913fa : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000f74fc : sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x00000000001143f6 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000091467 : sal byte ptr [rbp - 0x1a], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000911da : sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x000000000009200b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000bc6b7 : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000010cce1 : sal byte ptr [rbp - 0x24], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000338c3 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000e22d5 : sal byte ptr [rbp - 0x28], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e2336 : sal byte ptr [rbp - 0x29], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000bc4a6 : sal byte ptr [rbp - 0x2a], cl ; xor eax, eax ; ret
0x000000000009d5ba : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000f4fac : sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x00000000000da750 : sal byte ptr [rbp - 0x60], cl ; mov edx, dword ptr [r12 + 4] ; jmp 0xda725
0x000000000008d33b : sal byte ptr [rbp - 0x63], 0x48 ; mov eax, edi ; ret
0x000000000007fd5a : sal byte ptr [rbp - 0xd], cl ; ret
0x000000000009eb1b : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000f4bb0 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000e3102 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x0000000000081ee2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000b8119 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret
0x00000000000e3815 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000113962 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000010ab1a : sal byte ptr [rbx + rcx*2 + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002fff1 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x000000000016e39c : sal byte ptr [rbx - 0x4caf0004], 1 ; cld ; call rax
0x00000000000efeed : sal byte ptr [rcx + rcx - 0x77], cl ; ret 0xeac1
0x00000000001138ed : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000016e3ac : sal byte ptr [rcx - 0x4eaf0004], 1 ; cld ; call rax
0x000000000016d744 : sal byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x00000000000f45b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000d8f1e : sal byte ptr [rdi + rax + 0x48], 0x83 ; ret
0x00000000000b7fe8 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000021420 : sal byte ptr [rdx + rax*2 - 0xa], cl ; ret 0x7401
0x00000000001243b3 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000081cf3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000924a3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x000000000007ff53 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000917bb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000015edfc : sal byte ptr [rdx - 0x2a6f0003], 0xfd ; call rax
0x000000000016e3a4 : sal byte ptr [rdx - 0x4daf0004], 1 ; cld ; call rax
0x000000000016cfbc : sal byte ptr [rdx - 0x4f8f0003], cl ; std ; jmp qword ptr [rax]
0x00000000001185c7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000010f82a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x10f848 ; call rax
0x000000000011447a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x114498 ; call rax
0x0000000000114ad3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x114af1 ; call rax
0x00000000001114de : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x111554 ; call rax
0x0000000000111f0e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x111f74 ; call rax
0x00000000000f18a7 : sal byte ptr [rsi + rdx + 0x48], 0x83 ; ret
0x00000000000ff647 : sal byte ptr [rsi + rsi*2 + 0x48], 0x83 ; ret
0x0000000000081c97 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x000000000015ec14 : sal byte ptr [rsi - 0xe], 0xff ; sar byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000001070f9 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x000000000007a976 : sal byte ptr [rsp + rcx + 0x48], 0x89 ; push rsp ; and al, 0x28 ; call rax
0x0000000000160125 : sal ch, 0xff ; leave ; sal ch, 0xff ; pop rbp ; ret 0xfff5
0x000000000016001d : sal ch, 0xff ; leave ; sal ch, 0xff ; ret 0xfff5
0x0000000000160129 : sal ch, 0xff ; pop rbp ; ret 0xfff5
0x0000000000160021 : sal ch, 0xff ; ret 0xfff5
0x00000000001955dd : sal ch, 1 ; jmp qword ptr [rdx]
0x000000000016d328 : sal cl, 1 ; sti ; call rax
0x00000000000c3731 : sal dh, 0xc1 ; add dword ptr [rbp - 0x79], esi ; pop rbx ; ret
0x00000000001976c0 : sal dh, 0xf6 ; call qword ptr [rsi]
0x0000000000160851 : sal dh, 0xff ; mov ebx, es ; idiv bh ; std ; ret
0x0000000000160861 : sal dh, 0xff ; test eax, 0x64fff6c2 ; ret
0x0000000000171f59 : sal dh, 1 ; call rsp
0x0000000000196dc1 : sal dh, 1 ; jmp qword ptr [rdi]
0x00000000000e5435 : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xcfeb
0x000000000019a6dd : sal dh, cl ; jmp qword ptr [rdx]
0x0000000000171f99 : sal dh, cl ; jmp rsp
0x000000000015eca5 : sal dl, 0xff ; loopne 0x15ec6f ; jmp rax
0x000000000015ecad : sal dl, 0xff ; mov al, 0xc2 ; call rax
0x000000000015ee34 : sal dl, 1 ; std ; call qword ptr [rax]
0x000000000016d2a8 : sal dl, 1 ; sti ; call rax
0x0000000000091225 : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x0000000000034a51 : sal dword ptr [rbp + 0xc], 0x48 ; add esp, 8 ; ret
0x0000000000075248 : sal dword ptr [rbp + 5], cl ; pop rbx ; ret
0x0000000000034776 : sal dword ptr [rbp + 7], 0x48 ; add esp, 8 ; ret
0x000000000009d108 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; nop ; ret
0x000000000016cff0 : sal dword ptr [rbp - 0x49be0003], -3 ; call rcx
0x0000000000091cf1 : sal dword ptr [rbp - 0xc], 1 ; ret
0x0000000000091357 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000081bdd : sal dword ptr [rcx], 1 ; ret
0x00000000000359c5 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x0000000000076438 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000b6efb : sal dword ptr [rdx], 1 ; or eax, dword ptr [rax] ; call 0x731c6
0x00000000001600a5 : sal ebp, -1 ; push rbx ; ret 0xfff5
0x00000000001944df : sal ebp, -1 ; sbb al, 0xd ; imul eax, eax, -0xb ; jmp qword ptr [rdx]
0x00000000001945bf : sal ebp, -1 ; sbb al, 0xd ; xor cl, al ; cmc ; jmp qword ptr [rdx]
0x00000000000b73c3 : sal ebx, 0x2e ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000017f174 : sal ebx, cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189ae4 : sal esi, 1 ; jmp qword ptr [rdx]
0x000000000019a725 : sal esi, cl ; jmp qword ptr [rdx]
0x0000000000045cc5 : salc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000009cc4e : salc ; add byte ptr [rax], al ; ret
0x0000000000149936 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000050b5f : salc ; add dword ptr [rax], eax ; jmp 0x50b2a
0x000000000001f5b1 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f58d
0x000000000010f7cb : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000129fa6 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000014bed1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078853 : salc ; call qword ptr [rax]
0x00000000000f3599 : salc ; call rax
0x000000000018ab59 : salc ; call rcx
0x0000000000170eb1 : salc ; call rsp
0x0000000000028687 : salc ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e10c5 : salc ; ja 0xe10d4 ; ret
0x000000000000389d : salc ; jb 0x391f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000177871 : salc ; jmp 0x177875
0x00000000000c225b : salc ; jne 0xc2264 ; ret
0x000000000006ead0 : salc ; mov eax, 0xffffffff ; ja 0x6eae9 ; ret
0x000000000008191c : salc ; mov eax, edx ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c3caa : salc ; mov edx, eax ; jmp 0xc3c8c
0x000000000007e923 : salc ; mov qword ptr [rax + 8], rsi ; ret
0x000000000009d6f9 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000b1612 : salc ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000016fbe0 : salc ; out 0xef, al ; jmp rsp
0x000000000016faa1 : salc ; out dx, eax ; jmp rsp
0x00000000000cfd45 : salc ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x00000000001965ac : salc ; std ; cmc ; jmp qword ptr [rdx]
0x00000000000bc4a8 : salc ; xor eax, eax ; ret
0x000000000018c690 : sar ah, 1 ; hlt ; jmp qword ptr [rcx]
0x00000000001788f0 : sar al, 0xeb ; call qword ptr [rcx]
0x0000000000173769 : sar al, 0xff ; mov esp, 0x9400025f ; ret
0x00000000000ba0c9 : sar bl, 1 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ba08d : sar bl, 1 ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d359 : sar bl, cl ; call qword ptr [rax]
0x000000000015edd8 : sar bpl, 0xff ; ret 0xfffd
0x00000000000c51b1 : sar byte ptr [rax + 0x25], 0x89 ; ret 0x8b49
0x000000000011b032 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000116d01 : sar byte ptr [rax + 1], cl ; jne 0x116d18 ; ret
0x0000000000116d41 : sar byte ptr [rax + 1], cl ; jne 0x116d58 ; ret
0x000000000007d2e7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000000713ec : sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000016e184 : sar byte ptr [rax - 0x47af0004], 0xfc ; jmp rax
0x000000000015ec18 : sar byte ptr [rax - 0xe], 1 ; jmp rax
0x00000000000c3705 : sar byte ptr [rax], 0xe ; je 0xc3698 ; pop rbx ; ret
0x000000000018d2a0 : sar byte ptr [rcx], 0xf5 ; jmp qword ptr [rcx]
0x00000000000e85f3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x000000000016e10c : sar byte ptr [rdi - 4], 1 ; call qword ptr [rax]
0x000000000007bd02 : sar byte ptr [rdx - 0x76b7ffce], cl ; ret
0x0000000000002b61 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000badac : sar byte ptr [rsi + 2], 1 ; ret
0x000000000015b55f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000015ff48 : sar byte ptr [rsi - 0x4135000b], 0xf5 ; call rsp
0x000000000016e104 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jle 0x16e10e ; call rax
0x000000000015edd9 : sar ch, 0xff ; ret 0xfffd
0x0000000000178e10 : sar ch, 1 ; jmp 0x178e16
0x000000000016d524 : sar dh, 0xfb ; call qword ptr [rax]
0x00000000000a7052 : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000651a2 : sar dh, 0xff ; push qword ptr [rcx] ; fucomi st(0) ; ret
0x000000000016d518 : sar dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000072168 : sar dl, cl ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000016d00c : sar dword ptr [rcx - 0x45c10003], -3 ; call rsi
0x0000000000056278 : sar dword ptr [rcx], 1 ; ret 0x860f
0x0000000000034b31 : sar eax, 0x10 ; ret
0x00000000000347fb : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000b8839 : sar eax, 0x1f ; pop rbx ; ret
0x00000000000e0fad : sar eax, 0x1f ; ret
0x0000000000034aea : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003443d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003a9d : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000006e8dc : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000070f50 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000006ef99 : sar eax, 2 ; ret
0x00000000000f8a0d : sar eax, 6 ; ret
0x000000000016d355 : sar ebx, 1 ; inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000015b2c3 : sar ecx, 1 ; jnp 0x15b284 ; ret
0x000000000005b2dd : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000381a4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000381b7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000174b69 : sar edx, 1 ; jmp rsp
0x00000000000850e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000006e8db : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003443c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000006ef98 : sar rax, 2 ; ret
0x00000000000f8a0c : sar rax, 6 ; ret
0x00000000000850e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000016d4c5 : sbb ah, bh ; jmp qword ptr [rax]
0x000000000016d465 : sbb ah, bh ; jmp rax
0x0000000000177c48 : sbb ah, bl ; jmp 0x177c4e
0x000000000002280a : sbb ah, byte ptr [rax] ; call rax
0x0000000000182564 : sbb ah, byte ptr [rsi - 0x11] ; jmp qword ptr [rdx]
0x00000000000db209 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000000f359e : sbb al, 0x20 ; je 0xf3606 ; xor eax, eax ; pop rbx ; ret
0x00000000000f359d : sbb al, 0x20 ; je 0xf3607 ; xor eax, eax ; pop rbx ; ret
0x00000000001776b4 : sbb al, 0x26 ; add byte ptr [rax], al ; cwde ; shr ebx, 1 ; call qword ptr [rdx]
0x00000000001905fc : sbb al, 0x41 ; cmc ; jmp qword ptr [rdx]
0x0000000000002f64 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010a94a : sbb al, 0x48 ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000199db4 : sbb al, 0x4d ; add al, byte ptr [rax] ; call 0x21199523
0x0000000000179b2c : sbb al, 0x7f ; in al, dx ; jmp qword ptr [rdx]
0x000000000018d2b4 : sbb al, 0x82 ; add dword ptr [rax], eax ; fdivr dword ptr [rcx] ; cmc ; jmp qword ptr [rcx]
0x00000000000e3b13 : sbb al, 0x83 ; ret
0x000000000018d6b4 : sbb al, 0x86 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000018e2b4 : sbb al, 0x92 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000000ceee9 : sbb al, 0x99 ; add r11, r9 ; jmp r11
0x000000000018f8b4 : sbb al, 0xa8 ; add dword ptr [rax], eax ; js 0x18f866 ; cmc ; jmp qword ptr [rcx]
0x0000000000192e74 : sbb al, 0xac ; cmc ; jmp qword ptr [rdx]
0x000000000017feb4 : sbb al, 0xae ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x00000000000c1fd3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x0000000000191db4 : sbb al, 0xcd ; add dword ptr [rax], eax ; clc ; sub dh, dh ; jmp qword ptr [rsi]
0x0000000000191202 : sbb al, 0xd ; adc al, 0x50 ; cmc ; jmp qword ptr [rdx]
0x000000000017b822 : sbb al, 0xd ; adc al, 0xa4 ; out dx, al ; jmp qword ptr [rdx]
0x000000000018693a : sbb al, 0xd ; adc al, 0xe0 ; int1 ; jmp qword ptr [rdx]
0x000000000017f04a : sbb al, 0xd ; adc al, 0xf4 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017dc6a : sbb al, 0xd ; adc al, cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181902 : sbb al, 0xd ; adc byte ptr [rcx], dh ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017d0b2 : sbb al, 0xd ; adc ch, al ; out dx, al ; jmp qword ptr [rdx]
0x000000000017d732 : sbb al, 0xd ; adc dh, al ; out dx, al ; jmp qword ptr [rdx]
0x000000000018182a : sbb al, 0xd ; adc dh, byte ptr [rdx - 4] ; jmp qword ptr [rdx]
0x000000000019080a : sbb al, 0xd ; adc dword ptr [rdi - 0xb], eax ; jmp qword ptr [rdx]
0x000000000019488a : sbb al, 0xd ; adc esp, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000186982 : sbb al, 0xd ; adc esp, eax ; int1 ; jmp qword ptr [rdx]
0x0000000000190fba : sbb al, 0xd ; add al, 0x4b ; cmc ; jmp qword ptr [rdx]
0x000000000017d502 : sbb al, 0xd ; add al, dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001820e2 : sbb al, 0xd ; add byte ptr [rsi - 0x11], bl ; jmp qword ptr [rdx]
0x0000000000190522 : sbb al, 0xd ; add eax, dword ptr [rcx - 0xb] ; jmp qword ptr [rdx]
0x000000000017cada : sbb al, 0xd ; add eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001948d2 : sbb al, 0xd ; add eax, esp ; cmc ; jmp qword ptr [rdx]
0x00000000001921da : sbb al, 0xd ; add edx, dword ptr [rcx] ; sti ; jmp qword ptr [rdx]
0x000000000017d662 : sbb al, 0xd ; add esi, eax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000186832 : sbb al, 0xd ; add esp, eax ; int1 ; jmp qword ptr [rdx]
0x000000000019104a : sbb al, 0xd ; and al, 0x4b ; cmc ; jmp qword ptr [rdx]
0x000000000017dae2 : sbb al, 0xd ; and cl, al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181cf2 : sbb al, 0xd ; and dword ptr [rax - 0x11], ebx ; jmp qword ptr [rdx]
0x0000000000190a0a : sbb al, 0xd ; and dword ptr [rax - 0xb], ecx ; jmp qword ptr [rdx]
0x0000000000192192 : sbb al, 0xd ; and dword ptr [rcx], edx ; sti ; jmp qword ptr [rdx]
0x00000000001907c2 : sbb al, 0xd ; and dword ptr [rdi - 0xb], eax ; jmp qword ptr [rdx]
0x0000000000178482 : sbb al, 0xd ; call 0x23177071
0x0000000000178512 : sbb al, 0xd ; call 0x23177101
0x000000000017ace2 : sbb al, 0xd ; call 0x23179a35
0x000000000019654a : sbb al, 0xd ; call 0x23195b53
0x0000000000178a8a : sbb al, 0xd ; cdq ; out -0x15, eax ; jmp qword ptr [rdx]
0x0000000000181e5a : sbb al, 0xd ; cdq ; pop rbp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017f9ea : sbb al, 0xd ; clc ; out dx, al ; jmp qword ptr [rdx]
0x000000000019056a : sbb al, 0xd ; cld ; cmc ; jmp qword ptr [rdx]
0x0000000000186fea : sbb al, 0xd ; cld ; int1 ; jmp qword ptr [rdx]
0x000000000017bb42 : sbb al, 0xd ; cld ; mov bh, 0xee ; jmp qword ptr [rdx]
0x000000000019cc12 : sbb al, 0xd ; cld ; xor bh, dh ; jmp qword ptr [rdx]
0x00000000001909c2 : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x0000000000196502 : sbb al, 0xd ; cmc ; std ; cmc ; jmp qword ptr [rdx]
0x0000000000178362 : sbb al, 0xd ; cmp ah, cl ; jmp 0x17836c
0x0000000000181caa : sbb al, 0xd ; cmp al, 0x58 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000179b72 : sbb al, 0xd ; cmp al, 0x7f ; in al, dx ; jmp qword ptr [rdx]
0x0000000000187902 : sbb al, 0xd ; cmp al, 0x8d ; jmp qword ptr [rdx]
0x0000000000194d62 : sbb al, 0xd ; cmp al, 0xc8 ; cmc ; jmp qword ptr [rdx]
0x000000000017dd82 : sbb al, 0xd ; cmp al, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000017d77a : sbb al, 0xd ; cmp dh, al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181a22 : sbb al, 0xd ; cmp dword ptr [rax - 0x11], eax ; jmp qword ptr [rdx]
0x0000000000190932 : sbb al, 0xd ; cmp dword ptr [rax - 0xb], ecx ; jmp qword ptr [rdx]
0x0000000000180caa : sbb al, 0xd ; cmp dword ptr [rdi + rbp*8], esp ; jmp qword ptr [rdx]
0x000000000017a92a : sbb al, 0xd ; cmp r13b, bpl ; jmp qword ptr [rdx]
0x000000000018082a : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc al, 0xef ; jmp qword ptr [rdx]
0x0000000000186612 : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; fcompi st(1) ; jmp qword ptr [rdx]
0x0000000000182712 : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jae 0x18270b ; jmp qword ptr [rdx]
0x00000000001952ea : sbb al, 0xd ; cwde ; iretd ; cmc ; jmp qword ptr [rdx]
0x000000000017ca92 : sbb al, 0xd ; fadd st(0) ; out dx, al ; jmp qword ptr [rdx]
0x000000000017cb6a : sbb al, 0xd ; fadd st(2), st(0) ; out dx, al ; jmp qword ptr [rdx]
0x000000000017d06a : sbb al, 0xd ; fadd st(4), st(0) ; out dx, al ; jmp qword ptr [rdx]
0x00000000001780aa : sbb al, 0xd ; fcmovbe st(0), st(4) ; jmp 0x1780b4
0x000000000018665a : sbb al, 0xd ; fcomp st(7) ; int1 ; jmp qword ptr [rdx]
0x0000000000195532 : sbb al, 0xd ; fmul st(7) ; cmc ; jmp qword ptr [rdx]
0x0000000000180d3a : sbb al, 0xd ; fsub qword ptr [rdi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017e602 : sbb al, 0xd ; fsub st(6), st(0) ; jmp qword ptr [rdx]
0x000000000017f51a : sbb al, 0xd ; hlt ; out dx, al ; jmp qword ptr [rdx]
0x000000000019a6da : sbb al, 0xd ; hlt ; sal dh, cl ; jmp qword ptr [rdx]
0x000000000017fb7a : sbb al, 0xd ; hlt ; stc ; out dx, al ; jmp qword ptr [rdx]
0x000000000017715a : sbb al, 0xd ; hlt ; stosd dword ptr [rdi], eax ; jmp 0x177164
0x000000000017c9c2 : sbb al, 0xd ; imul eax, eax, -0x12 ; jmp qword ptr [rdx]
0x00000000001944e2 : sbb al, 0xd ; imul eax, eax, -0xb ; jmp qword ptr [rdx]
0x000000000019cb3a : sbb al, 0xd ; imul esi, dword ptr [rcx], -9 ; jmp qword ptr [rdx]
0x000000000017cb22 : sbb al, 0xd ; in al, -0x3f ; out dx, al ; jmp qword ptr [rdx]
0x000000000017f0e2 : sbb al, 0xd ; in al, dx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000188e52 : sbb al, 0xd ; in al, dx ; test al, 0xf2 ; jmp qword ptr [rdx]
0x00000000001954ea : sbb al, 0xd ; in eax, -0x31 ; cmc ; jmp qword ptr [rdx]
0x00000000001887ea : sbb al, 0xd ; in eax, dx ; sahf ; jmp qword ptr [rdx]
0x0000000000192e2a : sbb al, 0xd ; in eax, dx ; stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rdx]
0x000000000019491a : sbb al, 0xd ; inc ebx ; cmc ; jmp qword ptr [rdx]
0x000000000017ffba : sbb al, 0xd ; insb byte ptr [rdi], dx ; std ; out dx, al ; jmp qword ptr [rdx]
0x00000000001825f2 : sbb al, 0xd ; insd dword ptr [rdi], dx ; insb byte ptr [rdi], dx ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000188062 : sbb al, 0xd ; insd dword ptr [rdi], dx ; xchg eax, ebp ; jmp qword ptr [rdx]
0x000000000017e64a : sbb al, 0xd ; int1 ; fsubp st(6) ; jmp qword ptr [rdx]
0x0000000000175542 : sbb al, 0xd ; int1 ; out 0xea, al ; jmp qword ptr [rdx]
0x000000000017eb72 : sbb al, 0xd ; int1 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017f92a : sbb al, 0xd ; ja 0x17f92b ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181ea2 : sbb al, 0xd ; ja 0x181f08 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000190172 : sbb al, 0xd ; ja 0x1901b7 ; cmc ; jmp qword ptr [rdx]
0x000000000017ecf2 : sbb al, 0xd ; jae 0x17eced ; out dx, al ; jmp qword ptr [rdx]
0x000000000018df12 : sbb al, 0xd ; jae 0x18df02 ; hlt ; jmp qword ptr [rdx]
0x00000000001817e2 : sbb al, 0xd ; jb 0x1817e8 ; jmp qword ptr [rdx]
0x0000000000182052 : sbb al, 0xd ; jb 0x1820b9 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017d28a : sbb al, 0xd ; jbe 0x17d258 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017cdf2 : sbb al, 0xd ; je 0x17cdc0 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017f8e2 : sbb al, 0xd ; je 0x17f8e3 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181752 : sbb al, 0xd ; je 0x181782 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000188e9a : sbb al, 0xd ; je 0x188e4c ; jmp qword ptr [rdx]
0x0000000000176c92 : sbb al, 0xd ; jg 0x176c87 ; jmp qword ptr [rdx]
0x0000000000187ab2 : sbb al, 0xd ; jg 0x187a48 ; jmp qword ptr [rdx]
0x0000000000188ca2 : sbb al, 0xd ; jg 0x188c4c ; jmp qword ptr [rdx]
0x000000000019540a : sbb al, 0xd ; jg 0x1953e2 ; cmc ; jmp qword ptr [rdx]
0x000000000017ed9a : sbb al, 0xd ; jge 0x17ed95 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193762 : sbb al, 0xd ; jge 0x193719 ; cmc ; jmp qword ptr [rdx]
0x00000000001937e2 : sbb al, 0xd ; jge 0x193799 ; cmc ; jmp qword ptr [rdx]
0x000000000017c372 : sbb al, 0xd ; jl 0x17c337 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017fa7a : sbb al, 0xd ; jl 0x17fa7b ; out dx, al ; jmp qword ptr [rdx]
0x000000000017ad2a : sbb al, 0xd ; jle 0x17accf ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000181d82 : sbb al, 0xd ; jle 0x181de7 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000188832 : sbb al, 0xd ; jle 0x1887da ; jmp qword ptr [rdx]
0x0000000000180bd2 : sbb al, 0xd ; jmp qword ptr [rbx]
0x000000000017f48a : sbb al, 0xd ; jne 0x17f487 ; out dx, al ; jmp qword ptr [rdx]
0x000000000017f4d2 : sbb al, 0xd ; jne 0x17f4cf ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187dc2 : sbb al, 0xd ; jne 0x187d59 ; jmp qword ptr [rdx]
0x0000000000194aaa : sbb al, 0xd ; jne 0x194a79 ; cmc ; jmp qword ptr [rdx]
0x000000000017a7b2 : sbb al, 0xd ; jno 0x17a7da ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000180152 : sbb al, 0xd ; jns 0x180172 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018212a : sbb al, 0xd ; jns 0x182191 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017a4b2 : sbb al, 0xd ; jo 0x17a45e ; in al, dx ; jmp qword ptr [rdx]
0x000000000017ff72 : sbb al, 0xd ; jp 0x17ff78 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000190e4a : sbb al, 0xd ; jrcxz 0x190e9d ; cmc ; jmp qword ptr [rdx]
0x0000000000178ad2 : sbb al, 0xd ; js 0x178ac2 ; jmp 0x178adc
0x0000000000188642 : sbb al, 0xd ; lahf ; jmp qword ptr [rdx]
0x000000000017edfa : sbb al, 0xd ; lahf ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196422 : sbb al, 0xd ; lahf ; std ; cmc ; jmp qword ptr [rdx]
0x0000000000197ada : sbb al, 0xd ; lea ebx, dword ptr [rcx - 0xa] ; jmp qword ptr [rdx]
0x00000000001836f2 : sbb al, 0xd ; lea edi, dword ptr [rbx - 0x11] ; jmp qword ptr [rdx]
0x0000000000196ed2 : sbb al, 0xd ; leave ; sub al, 0xf6 ; jmp qword ptr [rdx]
0x000000000017831a : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; loopne 0x17830f ; jmp qword ptr [rdx]
0x000000000019382a : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000001963da : sbb al, 0xd ; lodsb al, byte ptr [rsi] ; std ; cmc ; jmp qword ptr [rdx]
0x000000000017eeba : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001783aa : sbb al, 0xd ; loop 0x17839f ; jmp qword ptr [rdx]
0x0000000000181ab2 : sbb al, 0xd ; loope 0x181afa ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017bfca : sbb al, 0xd ; loopne 0x17bf8d ; out dx, al ; jmp qword ptr [rdx]
0x000000000018194a : sbb al, 0xd ; loopne 0x181983 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019414a : sbb al, 0xd ; loopne 0x19410c ; cmc ; jmp qword ptr [rdx]
0x000000000017c5aa : sbb al, 0xd ; mov ah, 0xbc ; out dx, al ; jmp qword ptr [rdx]
0x000000000019528a : sbb al, 0xd ; mov al, 0xcf ; cmc ; jmp qword ptr [rdx]
0x0000000000195732 : sbb al, 0xd ; mov al, 0xd0 ; cmc ; jmp qword ptr [rdx]
0x000000000017cd72 : sbb al, 0xd ; mov bl, 0xc4 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194fc2 : sbb al, 0xd ; mov bl, 0xca ; cmc ; jmp qword ptr [rdx]
0x0000000000196392 : sbb al, 0xd ; mov bl, 0xfd ; cmc ; jmp qword ptr [rdx]
0x00000000001946c2 : sbb al, 0xd ; mov bl, al ; cmc ; jmp qword ptr [rdx]
0x0000000000179642 : sbb al, 0xd ; mov ch, 0x63 ; in al, dx ; jmp qword ptr [rdx]
0x00000000001928d2 : sbb al, 0xd ; mov ch, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x000000000019457a : sbb al, 0xd ; mov ch, 0xc0 ; cmc ; jmp qword ptr [rdx]
0x000000000017f2ea : sbb al, 0xd ; mov ch, 0xf3 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196302 : sbb al, 0xd ; mov ch, 0xfd ; cmc ; jmp qword ptr [rdx]
0x00000000001824d2 : sbb al, 0xd ; mov cl, 0x63 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017efba : sbb al, 0xd ; mov cl, 0xf2 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000191292 : sbb al, 0xd ; mov dword ptr [rax - 0xb], edx ; jmp qword ptr [rdx]
0x000000000017ab0a : sbb al, 0xd ; mov dword ptr [rbx], edi ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197a92 : sbb al, 0xd ; mov dword ptr [rcx - 0xa], ebx ; jmp qword ptr [rdx]
0x00000000001953c2 : sbb al, 0xd ; mov edi, cs ; cmc ; jmp qword ptr [rdx]
0x000000000017ecaa : sbb al, 0xd ; mov esi, edx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187032 : sbb al, 0xd ; mov esp, edi ; int1 ; jmp qword ptr [rdx]
0x00000000001797f2 : sbb al, 0xd ; mov fs, word ptr [rbp - 0x14] ; jmp qword ptr [rdx]
0x0000000000181e12 : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019580a : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; sal ch, 1 ; jmp qword ptr [rdx]
0x000000000019077a : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x0000000000181f32 : sbb al, 0xd ; neg byte ptr [rbp - 0x11] ; jmp qword ptr [rdx]
0x00000000001822da : sbb al, 0xd ; neg byte ptr [rdi - 0x11] ; jmp qword ptr [rdx]
0x000000000017fa32 : sbb al, 0xd ; nop ; clc ; out dx, al ; jmp qword ptr [rdx]
0x000000000017e692 : sbb al, 0xd ; nop ; loopne 0x17e68a ; jmp qword ptr [rdx]
0x0000000000181bd2 : sbb al, 0xd ; nop ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019364a : sbb al, 0xd ; nop ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000001784ca : sbb al, 0xd ; or ah, ah ; jmp 0x1784d4
0x000000000019470a : sbb al, 0xd ; or ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000001819da : sbb al, 0xd ; or al, 0x3e ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000181afa : sbb al, 0xd ; or al, byte ptr [rbx - 0x11] ; jmp qword ptr [rdx]
0x000000000017871a : sbb al, 0xd ; or ebp, esp ; jmp 0x178724
0x0000000000190f72 : sbb al, 0xd ; or ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x0000000000178b62 : sbb al, 0xd ; out -0x15, eax ; jmp qword ptr [rdx]
0x000000000018df5a : sbb al, 0xd ; out -0xc, eax ; jmp qword ptr [rdx]
0x0000000000188132 : sbb al, 0xd ; out 0x95, al ; jmp qword ptr [rdx]
0x000000000017843a : sbb al, 0xd ; out 0xe3, al ; jmp 0x178444
0x00000000001905b2 : sbb al, 0xd ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000183662 : sbb al, 0xd ; out dx, eax ; jnp 0x18365b ; jmp qword ptr [rdx]
0x000000000017f12a : sbb al, 0xd ; out dx, eax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000194962 : sbb al, 0xd ; out dx, eax ; ret
0x000000000018275a : sbb al, 0xd ; outsb dx, byte ptr [rsi] ; jae 0x182753 ; jmp qword ptr [rdx]
0x0000000000188a2a : sbb al, 0xd ; pop fs ; jmp qword ptr [rdx]
0x0000000000181eea : sbb al, 0xd ; pop r13 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017f5d2 : sbb al, 0xd ; pop rax ; hlt ; out dx, al ; jmp qword ptr [rdx]
0x0000000000186f5a : sbb al, 0xd ; pop rbp ; cld ; int1 ; jmp qword ptr [rdx]
0x0000000000180b42 : sbb al, 0xd ; pop rbx ; and ch, bh ; jmp qword ptr [rdx]
0x000000000017f972 : sbb al, 0xd ; pop rbx ; clc ; out dx, al ; jmp qword ptr [rdx]
0x00000000001826ca : sbb al, 0xd ; pop rbx ; jb 0x1826c3 ; jmp qword ptr [rdx]
0x00000000001934aa : sbb al, 0xd ; pop rbx ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000017f002 : sbb al, 0xd ; pop rcx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189a9a : sbb al, 0xd ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000017f58a : sbb al, 0xd ; pop rdx ; hlt ; out dx, al ; jmp qword ptr [rdx]
0x0000000000188292 : sbb al, 0xd ; pop rdx ; xchg eax, edi ; jmp qword ptr [rdx]
0x0000000000182172 : sbb al, 0xd ; pop rsi ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000195eda : sbb al, 0xd ; pop rsp ; stc ; cmc ; jmp qword ptr [rdx]
0x000000000017aac2 : sbb al, 0xd ; popfq ; cmp ebp, ebp ; jmp qword ptr [rdx]
0x000000000019236a : sbb al, 0xd ; popfq ; wait ; cmc ; jmp qword ptr [rdx]
0x000000000017c6da : sbb al, 0xd ; push 0xbd ; out dx, al ; jmp qword ptr [rdx]
0x00000000001755d2 : sbb al, 0xd ; push rax ; out -0x16, eax ; jmp qword ptr [rdx]
0x00000000001825aa : sbb al, 0xd ; push rax ; out dx, ax ; jmp qword ptr [rdx]
0x000000000018b61a : sbb al, 0xd ; push rbp ; hlt ; jmp qword ptr [rdx]
0x0000000000195e92 : sbb al, 0xd ; push rbp ; stc ; cmc ; jmp qword ptr [rdx]
0x000000000019097a : sbb al, 0xd ; push rbx ; cmc ; jmp qword ptr [rdx]
0x000000000018b5d2 : sbb al, 0xd ; push rbx ; hlt ; jmp qword ptr [rdx]
0x00000000001783f2 : sbb al, 0xd ; push rcx ; loop 0x1783e7 ; jmp qword ptr [rdx]
0x000000000017971a : sbb al, 0xd ; push rdi ; in al, dx ; jmp qword ptr [rdx]
0x0000000000178b1a : sbb al, 0xd ; push rdi ; out -0x15, eax ; jmp qword ptr [rdx]
0x0000000000195fb2 : sbb al, 0xd ; push rdx ; sti ; cmc ; jmp qword ptr [rdx]
0x0000000000186fa2 : sbb al, 0xd ; push rsi ; cld ; int1 ; jmp qword ptr [rdx]
0x00000000001796d2 : sbb al, 0xd ; push rsi ; in al, dx ; jmp qword ptr [rdx]
0x0000000000188372 : sbb al, 0xd ; push rsi ; xchg eax, edi ; jmp qword ptr [rdx]
0x000000000017ef4a : sbb al, 0xd ; pushfq ; out dx, al ; jmp qword ptr [rdx]
0x000000000019124a : sbb al, 0xd ; pushfq ; push rax ; cmc ; jmp qword ptr [rdx]
0x00000000001780f2 : sbb al, 0xd ; ret
0x000000000017a4fa : sbb al, 0xd ; ret 0xecfa
0x000000000017f1ea : sbb al, 0xd ; ret 0xeef3
0x0000000000180b8a : sbb al, 0xd ; ret 0xef23
0x000000000017b652 : sbb al, 0xd ; retf -0x115d ; jmp qword ptr [rdx]
0x0000000000186f12 : sbb al, 0xd ; retf -0xe05 ; jmp qword ptr [rdx]
0x000000000018676a : sbb al, 0xd ; retf -0xe21 ; jmp qword ptr [rdx]
0x0000000000180ab2 : sbb al, 0xd ; retf ; and edi, ebp ; jmp qword ptr [rdx]
0x00000000001866a2 : sbb al, 0xd ; retf ; fcompi st(1) ; jmp qword ptr [rdx]
0x000000000017cbb2 : sbb al, 0xd ; rol dl, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000017d3ba : sbb al, 0xd ; rol ebp, 1 ; out dx, al ; jmp qword ptr [rdx]
0x0000000000180a6a : sbb al, 0xd ; sahf ; and edi, ebp ; jmp qword ptr [rdx]
0x00000000001956aa : sbb al, 0xd ; sahf ; sal ch, 1 ; jmp qword ptr [rdx]
0x000000000017f172 : sbb al, 0xd ; sal ebx, cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189ae2 : sbb al, 0xd ; sal esi, 1 ; jmp qword ptr [rdx]
0x00000000001965aa : sbb al, 0xd ; salc ; std ; cmc ; jmp qword ptr [rdx]
0x0000000000182562 : sbb al, 0xd ; sbb ah, byte ptr [rsi - 0x11] ; jmp qword ptr [rdx]
0x00000000001905fa : sbb al, 0xd ; sbb al, 0x41 ; cmc ; jmp qword ptr [rdx]
0x0000000000179b2a : sbb al, 0xd ; sbb al, 0x7f ; in al, dx ; jmp qword ptr [rdx]
0x0000000000192e72 : sbb al, 0xd ; sbb al, 0xac ; cmc ; jmp qword ptr [rdx]
0x000000000017db9a : sbb al, 0xd ; sbb al, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000018019a : sbb al, 0xd ; sbb bh, ch ; jmp qword ptr [rdx]
0x0000000000181a6a : sbb al, 0xd ; sbb byte ptr [rax - 0x11], al ; jmp qword ptr [rdx]
0x0000000000190b02 : sbb al, 0xd ; sbb byte ptr [rax - 0xb], cl ; jmp qword ptr [rdx]
0x0000000000180a22 : sbb al, 0xd ; sbb byte ptr [rsi], dl ; out dx, eax ; jmp qword ptr [rdx]
0x000000000017da9a : sbb al, 0xd ; sbb eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189b2a : sbb al, 0xd ; sbb edi, ebp ; jmp qword ptr [rdx]
0x0000000000195452 : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; iretd ; cmc ; jmp qword ptr [rdx]
0x000000000018263a : sbb al, 0xd ; shr dword ptr [rdi - 0x11], cl ; jmp qword ptr [rdx]
0x0000000000193392 : sbb al, 0xd ; stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000017fb32 : sbb al, 0xd ; stc ; out dx, al ; jmp qword ptr [rdx]
0x0000000000186eca : sbb al, 0xd ; std ; sti ; int1 ; jmp qword ptr [rdx]
0x0000000000180afa : sbb al, 0xd ; sti ; and edi, ebp ; jmp qword ptr [rdx]
0x0000000000195ffa : sbb al, 0xd ; sti ; cmc ; jmp qword ptr [rdx]
0x00000000001869ca : sbb al, 0xd ; sti ; fcompi st(1) ; jmp qword ptr [rdx]
0x0000000000181d3a : sbb al, 0xd ; stosb byte ptr [rdi], al ; pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001957c2 : sbb al, 0xd ; stosd dword ptr [rdi], eax ; sal ch, 1 ; jmp qword ptr [rdx]
0x000000000019403a : sbb al, 0xd ; sub al, 0xb8 ; cmc ; jmp qword ptr [rdx]
0x000000000017bc62 : sbb al, 0xd ; sub al, 0xb8 ; out dx, al ; jmp qword ptr [rdx]
0x000000000018dfea : sbb al, 0xd ; sub ch, bl ; hlt ; jmp qword ptr [rdx]
0x000000000017b02a : sbb al, 0xd ; sub dword ptr [rdi], -0x12 ; jmp qword ptr [rdx]
0x00000000001949aa : sbb al, 0xd ; sub eax, esp ; cmc ; jmp qword ptr [rdx]
0x0000000000182292 : sbb al, 0xd ; test al, 0x5e ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000193f3a : sbb al, 0xd ; test al, 0xb4 ; cmc ; jmp qword ptr [rdx]
0x00000000001912da : sbb al, 0xd ; test dword ptr [rax - 0xb], edx ; jmp qword ptr [rdx]
0x000000000018248a : sbb al, 0xd ; test dword ptr [rbx - 0x11], esp ; jmp qword ptr [rdx]
0x000000000017d20a : sbb al, 0xd ; test eax, ebp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000195f22 : sbb al, 0xd ; test edi, ecx ; cmc ; jmp qword ptr [rdx]
0x000000000019226a : sbb al, 0xd ; wait ; cmc ; jmp qword ptr [rdx]
0x000000000017d912 : sbb al, 0xd ; xchg dh, al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000181fc2 : sbb al, 0xd ; xchg dword ptr [rsi - 0x11], ebx ; jmp qword ptr [rdx]
0x000000000019537a : sbb al, 0xd ; xchg eax, ebx ; iretd ; cmc ; jmp qword ptr [rdx]
0x0000000000182682 : sbb al, 0xd ; xchg eax, ebx ; jno 0x18267b ; jmp qword ptr [rdx]
0x00000000001807e2 : sbb al, 0xd ; xchg eax, ecx ; adc al, 0xef ; jmp qword ptr [rdx]
0x000000000017faea : sbb al, 0xd ; xchg eax, ecx ; clc ; out dx, al ; jmp qword ptr [rdx]
0x0000000000188402 : sbb al, 0xd ; xchg eax, edi ; jmp qword ptr [rdx]
0x0000000000195852 : sbb al, 0xd ; xchg eax, edi ; sal ch, 1 ; jmp qword ptr [rdx]
0x00000000001934f2 : sbb al, 0xd ; xchg eax, edi ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000176dfa : sbb al, 0xd ; xchg eax, edx ; xchg bl, ch ; jmp qword ptr [rdx]
0x000000000018817a : sbb al, 0xd ; xchg eax, r14d ; jmp qword ptr [rdx]
0x000000000018832a : sbb al, 0xd ; xchg rax, r15 ; jmp qword ptr [rdx]
0x0000000000187e0a : sbb al, 0xd ; xlatb ; mov dr0, edx ; jmp qword ptr [rdx]
0x000000000018236a : sbb al, 0xd ; xor ah, byte ptr [rax - 0x11] ; jmp qword ptr [rdx]
0x0000000000183542 : sbb al, 0xd ; xor al, 0x78 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000176d6a : sbb al, 0xd ; xor al, 0x86 ; jmp 0x176d74
0x000000000018dfa2 : sbb al, 0xd ; xor bl, ch ; hlt ; jmp qword ptr [rdx]
0x000000000019ce92 : sbb al, 0xd ; xor byte ptr [rax], 0xf7 ; jmp qword ptr [rdx]
0x0000000000180c62 : sbb al, 0xd ; xor byte ptr [rdi + rbp*8], ah ; jmp qword ptr [rdx]
0x00000000001977fa : sbb al, 0xd ; xor byte ptr [rdi - 0xa], cl ; jmp qword ptr [rdx]
0x00000000001974d2 : sbb al, 0xd ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rdx]
0x0000000000181872 : sbb al, 0xd ; xor ch, byte ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001945c2 : sbb al, 0xd ; xor cl, al ; cmc ; jmp qword ptr [rdx]
0x000000000017ebba : sbb al, 0xd ; xor cl, dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000019ceda : sbb al, 0xd ; xor dil, r14b ; jmp qword ptr [rdx]
0x000000000017de12 : sbb al, 0xd ; xor eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001835d2 : sbb al, 0xd ; xor edi, dword ptr [rdx - 0x11] ; jmp qword ptr [rdx]
0x000000000019cb82 : sbb al, 0xd ; xor r15d, esi ; jmp qword ptr [rdx]
0x0000000000183db4 : sbb al, 0xed ; add byte ptr [rax], al ; pop rax ; sti ; out dx, eax ; jmp rdx
0x000000000016f5d1 : sbb al, 0xee ; call rsp
0x000000000015eb61 : sbb al, 0xf2 ; jmp qword ptr [rax]
0x000000000015fba1 : sbb al, 0xf5 ; call rdx
0x000000000015fbb5 : sbb al, 0xf5 ; inc esi ; cmc ; call qword ptr [rcx]
0x000000000015fc35 : sbb al, 0xf5 ; jmp qword ptr [rdi]
0x000000000015fb9d : sbb al, 0xf5 ; lcall ptr [rdi] ; sbb al, 0xf5 ; call rdx
0x000000000017022d : sbb al, 1 ; add byte ptr [rbx + rbx*2 - 0x10], dh ; call rsp
0x00000000000f8ca8 : sbb al, 5 ; sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001759b4 : sbb al, 9 ; add byte ptr [rax], al ; sub byte ptr [rcx - 3], ah ; jmp qword ptr [rdx]
0x000000000007578a : sbb al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000176a9d : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], ah ; jmp 0x176aa9
0x0000000000176afd : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], ah ; jmp 0x176b09
0x0000000000176b45 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], bh ; jmp 0x176b51
0x0000000000176ab5 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], ch ; jmp 0x176ac1
0x0000000000176b15 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], ch ; jmp 0x176b21
0x0000000000176b2d : sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], dh ; jmp 0x176b39
0x000000000000fd29 : sbb al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret 8
0x000000000009d6ec : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000186af5 : sbb al, byte ptr [rcx] ; add byte ptr [rax], ch ; cld ; jmp qword ptr [rbx]
0x0000000000172d35 : sbb al, byte ptr [rdx] ; add byte ptr [rcx], ah ; loope 0x172d38 ; call rsp
0x0000000000172d15 : sbb al, byte ptr [rdx] ; add byte ptr [rdi + rbx*8 - 9], bh ; jmp rsp
0x0000000000176afc : sbb al, byte ptr fs:[rax] ; add byte ptr [rax + 0x7c], ah ; jmp 0x176b0a
0x000000000005f477 : sbb al, ch ; push rbx ; ret
0x0000000000107ee7 : sbb al, ch ; ret
0x00000000000e1418 : sbb al, ch ; ret 0x137
0x00000000000c2898 : sbb al, ch ; ret 0xf5cb
0x000000000017db9c : sbb al, cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000011a0cf : sbb bh, ah ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000016d4c9 : sbb bh, ah ; jmp qword ptr [rax]
0x000000000016d469 : sbb bh, ah ; jmp rax
0x00000000000daed2 : sbb bh, bh ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000c1f8a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000000d464e : sbb bh, byte ptr [rcx] ; ret 0x3574
0x000000000017a926 : sbb bh, byte ptr [rip + 0xd1cffed] ; cmp r13b, bpl ; jmp qword ptr [rdx]
0x000000000018019d : sbb bh, ch ; jmp qword ptr [rdx]
0x0000000000198861 : sbb bh, dh ; call qword ptr [rdi]
0x000000000015a045 : sbb bl, byte ptr [rsi] ; ret
0x00000000000db51b : sbb bl, dh ; ret
0x000000000008b0db : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000116a7d : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000007254e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000116792 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000009b074 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009b096 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0d4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000072563 : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114f09 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000115061 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x000000000007254f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000116761 : sbb byte ptr [rax + 1], bh ; ret
0x000000000010d6eb : sbb byte ptr [rax + 9], cl ; ret 0xb60f
0x0000000000181a6c : sbb byte ptr [rax - 0x11], al ; jmp qword ptr [rdx]
0x000000000007815a : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d64f0 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000075e61 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000117ef7 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000033e27 : sbb byte ptr [rax - 0x77], cl ; ret 0x394d
0x00000000000501a1 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x000000000010c02e : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000dd7b7 : sbb byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010c308 : sbb byte ptr [rax - 0x77], cl ; ret 0xf9e9
0x000000000007433c : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e57e8 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000dd955 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008ac7e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000007c287 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000008ac7d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000190b04 : sbb byte ptr [rax - 0xb], cl ; jmp qword ptr [rdx]
0x000000000018b638 : sbb byte ptr [rax - 0xc], ch ; call qword ptr [rdi]
0x0000000000100881 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000763f3 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000176935 : sbb byte ptr [rax], al ; add byte ptr [rax], bl ; jl 0x17692c ; call qword ptr [rsi]
0x0000000000072dcb : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x000000000009b075 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009b097 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0d5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000016d3d0 : sbb byte ptr [rax], dl ; cld ; jmp rax
0x000000000003c315 : sbb byte ptr [rbp + 0x31], al ; rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x00000000000c7d19 : sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000c7e53 : sbb byte ptr [rbp + rcx*4 + 0x70], cl ; add dword ptr [rcx - 0x77], ecx ; ret 0x6348
0x000000000010d3b2 : sbb byte ptr [rbp - 0x77], cl ; ret
0x000000000009e107 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3662275
0x000000000009dbc2 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000107474 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000724c2 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007fbda : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000116a7e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023c4f : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000359d7 : sbb byte ptr [rbx + 0xb7501e2], al ; xor eax, eax ; nop ; ret
0x0000000000115c17 : sbb byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x0000000000076ed7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000011851e : sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001842a0 : sbb byte ptr [rbx], 0xf0 ; call qword ptr [rax]
0x00000000001166d3 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x000000000003f934 : sbb byte ptr [rcx + 0x39], cl ; ret
0x00000000000d7098 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116998 : sbb byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000006e44b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001177fb : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000072564 : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7d15 : sbb byte ptr [rcx - 0x3f], al ; cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000aa09e : sbb byte ptr [rcx - 0x75], cl ; jge 0xaa0a9 ; call r12
0x0000000000114f0a : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000115062 : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x0000000000090f46 : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x000000000009d6e1 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000193968 : sbb byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x00000000001197a3 : sbb byte ptr [rcx], al ; je 0x1197b6 ; xor eax, eax ; ret
0x00000000000e0f07 : sbb byte ptr [rcx], al ; ret 0x8d48
0x000000000018c978 : sbb byte ptr [rcx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000010ab6b : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f07e7 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000018b4f8 : sbb byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x00000000000676d8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000116bde : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000033b2d : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a46de : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000007c0ee : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000002047 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x0000000000159648 : sbb byte ptr [rdx - 0x5de70013], ah ; in eax, dx ; call rdi
0x0000000000159534 : sbb byte ptr [rdx - 0x5f280013], ah ; in eax, dx ; call rdi
0x000000000016dc4c : sbb byte ptr [rdx - 4], 0xff ; pop rsi ; xchg eax, ecx ; cld ; jmp rax
0x000000000016d3ec : sbb byte ptr [rip + 0x1010fffc], 0xfc ; call rax
0x000000000011abed : sbb byte ptr [rip - 0x3fcf0000], al ; pop rbx ; pop rbp ; ret
0x000000000011abae : sbb byte ptr [rip - 0x76b80000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000015f0c0 : sbb byte ptr [rsi - 0x615f000d], 0xf3 ; call rax
0x00000000000eab35 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000eab34 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000018e288 : sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018d7c8 : sbb byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x0000000000180a24 : sbb byte ptr [rsi], dl ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000027dd8 : sbb ch, al ; ret 0xf5b
0x00000000001934ee : sbb ch, byte ptr [rdi + 0xd1cfff5] ; xchg eax, edi ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000173ab9 : sbb cl, bh ; call rsp
0x0000000000117f05 : sbb cl, byte ptr [rax + 0x39] ; ret
0x000000000011a896 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c152a : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000056eaf : sbb cl, byte ptr [rax - 0x7d] ; ret 0x8001
0x0000000000107e73 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000840ff : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x0000000000097acf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000011f47d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001215ed : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f06d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011eb79 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f389 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012558a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000124daa : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000012519a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001249ba : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012214d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012192d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011edfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012110d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000011f13d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000011f459 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124b59 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f529 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121c6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012144d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120c2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000121e0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011f2dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011eacd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000011eecd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000012504a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012486a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012597a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f3ad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000011eb9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000120f6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ec3f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ef9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000001210a3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121da3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001218c3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124f4b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012587b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f20d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001220e3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001213e3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000120f03 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121c03 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000012509b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001248bb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ec63 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185309 : sbb cl, dh ; jmp qword ptr [rbx]
0x00000000001841b1 : sbb dh, al ; call qword ptr [rcx]
0x0000000000189409 : sbb dh, bl ; jmp qword ptr [rcx]
0x00000000000db681 : sbb dh, bl ; ret
0x000000000018cc49 : sbb dh, ch ; jmp rdi
0x0000000000171c11 : sbb dh, dh ; jmp rsp
0x00000000000f12a2 : sbb dh, dh ; ret 0x7504
0x00000000000f1f62 : sbb dh, dh ; ret 0x8b08
0x000000000015eb59 : sbb dh, dl ; jmp qword ptr [rax - 0x1f000de5]
0x0000000000184331 : sbb dl, bh ; call qword ptr [rax]
0x00000000001228a8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000c1f63 : sbb dword ptr [rax + 1], edi ; ret
0x00000000000e72b6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x0000000000176a3d : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], al ; jmp 0x176a49
0x0000000000176a85 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], bl ; jmp 0x176a91
0x0000000000176a55 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], cl ; jmp 0x176a61
0x0000000000176a6d : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x7c], dl ; jmp 0x176a79
0x0000000000122831 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001228a9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001769dd : sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; jl 0x1769d4 ; call qword ptr [rbx]
0x0000000000176a25 : sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; jl 0x176a1c ; call qword ptr [rbx]
0x00000000001769c5 : sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; jl 0x1769bc ; call qword ptr [rdx]
0x00000000001769f5 : sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; jl 0x1769ec ; call qword ptr [rdx]
0x0000000000176a0d : sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; jl 0x176a04 ; call qword ptr [rbx]
0x00000000001769dc : sbb dword ptr [rax], r8d ; add byte ptr [rax], ah ; jl 0x1769d5 ; call qword ptr [rbx]
0x00000000000bb555 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000015c8fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000103d9a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000991ee : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce1 ; ret
0x0000000000145bfc : sbb eax, -1 ; ret
0x00000000000f553b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000016d3ed : sbb eax, 0x1010fffc ; cld ; call rax
0x000000000016d6d1 : sbb eax, 0x2190fffc ; cld ; jmp rax
0x00000000000ea6c1 : sbb eax, 0x2bab5a ; pop rbx ; ret
0x0000000000026054 : sbb eax, 0x31000001 ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000186df5 : sbb eax, 0x43080001 ; jmp qword ptr [rax]
0x0000000000186e55 : sbb eax, 0x44280001 ; jmp qword ptr [rcx]
0x000000000007324f : sbb eax, 0x48fffac2 ; mov edi, ebx ; call 0x1f479
0x00000000000fef0f : sbb eax, 0x48fffff1 ; sub esp, -0x80 ; pop rbx ; ret
0x0000000000097b59 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000f3592 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000992ad : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000000e733a : sbb eax, 0x7dcab ; mov rax, rbx ; pop rbx ; ret
0x000000000005c22a : sbb eax, 0x83480004 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e987f : sbb eax, 0x89ffffff ; ret 0xfa83
0x000000000006c764 : sbb eax, 0xc2890000 ; jmp 0x6c72e
0x0000000000182486 : sbb eax, dword ptr [rax + 0xd1cffef] ; test dword ptr [rbx - 0x11], esp ; jmp qword ptr [rdx]
0x0000000000122651 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001226c9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000007290 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x0000000000061a89 : sbb eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000040f7c : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000181f2e : sbb eax, dword ptr [rbp + 0xd1cffef] ; neg byte ptr [rbp - 0x11] ; jmp qword ptr [rdx]
0x0000000000057b9c : sbb eax, dword ptr [rcx + 0x29] ; ret 0x8341
0x0000000000186bfd : sbb eax, dword ptr [rcx] ; add byte ptr [rax + 0x3c], al ; call qword ptr [rcx]
0x0000000000170205 : sbb eax, dword ptr [rcx] ; add byte ptr [rsp + rdx*2 - 0x10], al ; jmp rsp
0x0000000000186bfc : sbb eax, dword ptr fs:[rcx] ; add byte ptr [rax + 0x3c], al ; call qword ptr [rcx]
0x000000000010fa80 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000441da : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014b305 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000017da9c : sbb eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000160068 : sbb ebx, eax ; cmc ; jmp qword ptr [rbx]
0x0000000000050270 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000010ab1f : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009e421 : sbb ecx, dword ptr [rcx + 0x30] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000189b2c : sbb edi, ebp ; jmp qword ptr [rdx]
0x000000000016ce4d : sbb edi, ebx ; jmp rax
0x000000000018c7d1 : sbb edi, ecx ; call qword ptr [rax]
0x0000000000174379 : sbb edi, edx ; call rsp
0x000000000016d449 : sbb edi, esp ; call qword ptr [rax]
0x000000000016d429 : sbb edi, esp ; inc dword ptr [rax + 0x1d] ; cld ; call rax
0x000000000016d4ed : sbb edi, esp ; push qword ptr [rax + 0xe] ; cld ; jmp qword ptr [rax]
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000001842a1 : sbb esi, eax ; call qword ptr [rax]
0x00000000001842b9 : sbb esi, eax ; jmp qword ptr [rsi]
0x0000000000189481 : sbb esi, ebx ; jmp qword ptr [rcx]
0x00000000000db628 : sbb esi, ebx ; ret
0x000000000015eb5d : sbb esi, edx ; jmp rax
0x0000000000171c51 : sbb esi, esi ; call rsp
0x000000000018882e : sbb esp, dword ptr [rax + 0xd1cfff2] ; jle 0x1887de ; jmp qword ptr [rdx]
0x000000000016d445 : sbb esp, edi ; call qword ptr [rax]
0x000000000016d4e9 : sbb esp, edi ; jmp rax
0x00000000000a3bab : sbb r8d, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000145bfb : sbb rax, -1 ; ret
0x00000000001841b0 : sbb sil, al ; call qword ptr [rcx]
0x00000000001741f5 : scasb al, byte ptr [rdi] ; add al, byte ptr [rax] ; xor al, 0xeb ; stc ; jmp rsp
0x00000000001205d2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017feb5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; fdiv dword ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018fefd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; ret 0xfff5
0x00000000001255de : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000015ec79 : scasb al, byte ptr [rdi] ; call qword ptr [rax]
0x000000000016e585 : scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000016e3c9 : scasb al, byte ptr [rdi] ; cld ; jmp qword ptr [rax + 0x16fffcad]
0x000000000016e505 : scasb al, byte ptr [rdi] ; cld ; jmp rsp
0x00000000001933dd : scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000171711 : scasb al, byte ptr [rdi] ; hlt ; call rsp
0x0000000000041c1e : scasb al, byte ptr [rdi] ; mov ecx, 0x8948fffe ; ret
0x00000000000e8bb6 : scasb al, byte ptr [rdi] ; ret 0x2b
0x0000000000075789 : scasb al, byte ptr [rdi] ; sbb al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000002f62 : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000038ec5 : scasd eax, dword ptr [rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000001256dd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017422d : scasd eax, dword ptr [rdi] ; add al, byte ptr [rax] ; push rsp ; idiv ecx ; call rsp
0x000000000016f2d5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; sub ebp, r13d ; jmp rsp
0x00000000000ab43f : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x000000000016e43d : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rdx]
0x000000000016e5bd : scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x000000000016e501 : scasd eax, dword ptr [rdi] ; cld ; push qword ptr [rsi + rbp*4 - 4] ; jmp rsp
0x0000000000195454 : scasd eax, dword ptr [rdi] ; iretd ; cmc ; jmp qword ptr [rdx]
0x000000000011392c : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x00000000000366e9 : scasd eax, dword ptr [rdi] ; ret
0x00000000000ab58a : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x000000000009b950 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000034062 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000b21e7 : scasd eax, dword ptr [rdi] ; ret 0x8d44
0x0000000000033b2f : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000160040 : scasd eax, dword ptr [rdi] ; ret 0xfff5
0x0000000000173f69 : scasd eax, dword ptr [rdi] ; stc ; jmp rsp
0x000000000003828d : scasd eax, dword ptr [rdi] ; stosb byte ptr [rdi], al ; add byte ptr ss:[rax + 0x39], cl ; ret
0x0000000000002bab : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efad ; ret
0x000000000000258c : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000eab85 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000dd3a8 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000f45bc : setae al ; ret
0x00000000000eb548 : setbe al ; ret
0x00000000000beb78 : sete al ; movzx eax, al ; ret
0x000000000002e5c5 : sete al ; ret
0x00000000000c2517 : setg dl ; jmp 0xc24a0
0x00000000000d2d40 : setne al ; lea eax, dword ptr [rax + rax*8 + 5] ; ret
0x0000000000067709 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000d1e5d : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000e55ae : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035956 : setne al ; movzx eax, al ; ret
0x0000000000112d50 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x0000000000072dcd : setne al ; ret
0x00000000000d1e7d : setne dl ; cmovbe eax, edx ; ret
0x00000000000e543b : setne dl ; jmp 0xe5411
0x00000000000a5c7e : seto byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000015ee14 : shl al, 1 ; std ; call qword ptr [rax]
0x000000000016d38c : shl bl, 1 ; sti ; call qword ptr [rax]
0x000000000015e28c : shl byte ptr [rax - 0x5f3f0010], 0xf0 ; jmp qword ptr [rax]
0x000000000015f1c8 : shl byte ptr [rbp - 0x5a2f000d], 0xf3 ; jmp rax
0x000000000018e240 : shl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000015f184 : shl byte ptr [rbx + rsi*8 - 0xc5b0f01], 1 ; call qword ptr [rax]
0x000000000015f164 : shl byte ptr [rbx - 0x5c0f000d], 1 ; call qword ptr [rax]
0x000000000015f10c : shl byte ptr [rcx - 0x5e0f000d], 0xf3 ; jmp qword ptr [rax]
0x000000000016dbc8 : shl byte ptr [rcx - 4], 1 ; inc dword ptr [rax + 0x61] ; cld ; jmp rax
0x00000000000348a9 : shl byte ptr [rcx], cl ; ret 0xf66
0x000000000015f13c : shl byte ptr [rdx - 0x5d2f000d], 0xf3 ; jmp rax
0x000000000009b4af : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034513 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00000000001498f3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000080195 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000001489ab : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000001489c2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000034930 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x0000000000083a76 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000083a87 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000915f8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000001488a1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c658d : shl byte ptr [rsi - 0x70], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000009eaed : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x00000000000abd86 : shl byte ptr [rsi - 0x77], cl ; push rbp ; ret 0x6348
0x000000000018b4b0 : shl byte ptr [rsi - 0xc], 1 ; jmp qword ptr [rcx]
0x000000000016d6e4 : shl byte ptr [rsi], 1 ; cld ; jmp qword ptr [rax]
0x00000000001558e0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000015b448 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000148926 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009b30b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000083a72 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001489dd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000001489c6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000001489af : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000014746b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000148941 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000084d3c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000091838 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x0000000000148801 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000010401a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000103e7d : shl eax, 4 ; add eax, 8 ; ret
0x00000000000f8daf : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000035b33 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000004479c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000044727 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000446f6 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000381f6 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000c91ab : shl edx, 2 ; xor esi, esi ; call 0x85629
0x0000000000021bd8 : shl edx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000040cc0 : shl esi, -1 ; dec dword ptr [rax + 0x39] ; ret
0x000000000010404c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000004479b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000044726 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000446f5 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035b32 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000381f5 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021bd7 : shl rdx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000010404b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000d36a8 : shr al, 1 ; ret 0x255
0x000000000011a0a1 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x90eb
0x00000000000f4536 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000016d324 : shr bh, 1 ; sti ; call rax
0x000000000011e241 : shr bl, 0xdb ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000011dba1 : shr bl, cl ; out -1, eax ; push rax ; or byte ptr [rax - 0x77], cl ; ret 0xe8eb
0x00000000000a5c7c : shr bl, cl ; seto byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000011e6e3 : shr byte ptr [rax], 0 ; test eax, eax ; jne 0x11e6f9 ; xor eax, eax ; ret
0x000000000011e713 : shr byte ptr [rax], 0 ; test eax, eax ; jne 0x11e729 ; xor eax, eax ; ret
0x000000000011e743 : shr byte ptr [rax], 0 ; test eax, eax ; jne 0x11e759 ; xor eax, eax ; ret
0x000000000011e773 : shr byte ptr [rax], 0 ; test eax, eax ; jne 0x11e789 ; xor eax, eax ; ret
0x000000000011e7a3 : shr byte ptr [rax], 0 ; test eax, eax ; jne 0x11e7b9 ; xor eax, eax ; ret
0x000000000016e588 : shr byte ptr [rbp - 0x52bf0004], 1 ; cld ; call rax
0x000000000016d978 : shr byte ptr [rbp - 4], 0xff ; push rax ; insd dword ptr [rdi], dx ; cld ; jmp rax
0x000000000009200f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000002aad8 : shr byte ptr [rcx], cl ; ret
0x00000000000850eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000dd3ad : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001920d0 : shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rdi]
0x00000000001920a0 : shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rsi]
0x000000000016d6f0 : shr byte ptr [rdx], 0xfc ; call qword ptr [rax]
0x000000000007a74a : shr byte ptr [rsi + 0x39480032], cl ; ret
0x000000000019375e : shr byte ptr [rsi + 0xd1cfff5], 1 ; jge 0x19371d ; cmc ; jmp qword ptr [rdx]
0x000000000016e118 : shr byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call rax
0x00000000000f121a : shr cl, 0x50 ; out -1, eax ; push rbx ; ret
0x000000000015ee24 : shr cl, 1 ; std ; call qword ptr [rax]
0x000000000017c9bf : shr dh, 0xff ; sbb al, 0xd ; imul eax, eax, -0x12 ; jmp qword ptr [rdx]
0x000000000002b5cb : shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000018263c : shr dword ptr [rdi - 0x11], cl ; jmp qword ptr [rdx]
0x00000000000f96c4 : shr dword ptr [rdx], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000f8de8 : shr eax, 0x18 ; ret
0x0000000000034821 : shr eax, 0x1f ; ret
0x000000000014986c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x14987f ; xor eax, eax ; ret
0x0000000000034470 : shr eax, 0x3f ; ret
0x00000000000e87a8 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000009bb8a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000f4537 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000c21cd : shr eax, 1 ; pop r14 ; and eax, 1 ; pop r15 ; ret
0x0000000000073522 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000104020 : shr eax, 4 ; ret
0x0000000000073532 : shr eax, 5 ; and eax, 1 ; ret
0x000000000009bb69 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000003596f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000eb8d8 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x00000000001776a1 : shr ebx, 1 ; call qword ptr [rdx]
0x0000000000177671 : shr ebx, 1 ; jmp qword ptr [rbx]
0x00000000000448ac : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000044831 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000044800 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000c6a5c : shr ecx, cl ; ret 0xfffc
0x000000000006e983 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000116f4a : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000002e0f9 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2e110 ; ret
0x0000000000071280 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000071380 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x00000000000f96c3 : shr qword ptr [r10], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000448ab : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000044830 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000447ff : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003446f : shr rax, 0x3f ; ret
0x00000000000e87a7 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000010401f : shr rax, 4 ; ret
0x000000000006e982 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000116f49 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000910e1 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000091041 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000d2cae : sldt word ptr [rax] ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000006d240 : sldt word ptr [rax] ; mov edx, eax ; jmp 0x6d207
0x0000000000154aa5 : sldt word ptr [rax] ; ret 0xf
0x0000000000024bd2 : stc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae357 : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x0000000000184242 : stc ; call qword ptr [rax]
0x0000000000173aba : stc ; call rsp
0x0000000000195e95 : stc ; cmc ; jmp qword ptr [rdx]
0x00000000000e72a5 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e2523 : stc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000008bdc0 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e328f : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000d2f6a : stc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x0000000000173eb2 : stc ; dec dword ptr [rdx + rdx*4 - 0x616ffffe] ; stc ; call rsp
0x00000000001740ea : stc ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; and al, 0xd7 ; stc ; jmp rsp
0x0000000000173c82 : stc ; dec esp ; test dword ptr [rdx], eax ; add byte ptr [rdx + rdx*2], ah ; stc ; jmp rsp
0x00000000000f683f : stc ; hlt ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000000e3b59 : stc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000173caa : stc ; inc dword ptr [rsi + rax*4 + 0x56740002] ; stc ; call rsp
0x0000000000124692 : stc ; je 0x12465e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000125d22 : stc ; je 0x125cee ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000007800b : stc ; je 0x77e45 ; ret
0x0000000000178991 : stc ; jmp 0x178995
0x00000000001789d9 : stc ; jmp 0x1789dd
0x0000000000039681 : stc ; jmp 0x395c9
0x0000000000173a5a : stc ; jmp rsp
0x000000000015b2c4 : stc ; jnp 0x15b283 ; ret
0x0000000000174042 : stc ; lcall ptr [rbx + 2] ; add ah, dh ; ret 0xfff9
0x000000000017404a : stc ; lcall ptr [rbx - 0x3c1bfffe] ; stc ; call rsp
0x00000000001741f2 : stc ; lcall ptr [rsi + rbp*4 - 0x14cbfffe] ; stc ; jmp rsp
0x0000000000173ab2 : stc ; ljmp ptr [rdx + rdi*2 + 0x18940002] ; stc ; call rsp
0x0000000000193394 : stc ; lodsd eax, dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x000000000012c788 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000091345 : stc ; mov qword ptr [rdx], rcx ; ret
0x0000000000090fc3 : stc ; mov rax, rdi ; ret
0x0000000000070ba2 : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x00000000000d1ebb : stc ; or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x00000000000d311a : stc ; or cl, byte ptr [rdi] ; test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x000000000017fb35 : stc ; out dx, al ; jmp qword ptr [rdx]
0x0000000000044417 : stc ; pop r15 ; ret
0x0000000000113a57 : stc ; pop rbx ; pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x0000000000174112 : stc ; push qword ptr [rax + rbp*4 - 0x26dbfffe] ; stc ; call rsp
0x00000000000448ed : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009d96d : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000091be2 : stc ; push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x0000000000174182 : stc ; push qword ptr [rbx + rbp*4 - 0x1dfbfffe] ; stc ; jmp rsp
0x0000000000173a52 : stc ; push qword ptr [rsi + rsi*2 + 0x8e40002] ; stc ; jmp rsp
0x000000000001f903 : stc ; ret 0xc
0x00000000000f5913 : stc ; ret 0xfff8
0x000000000016d515 : stc ; sti ; call rax
0x000000000010a57c : stc ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000010a563 : stc ; sub dword ptr [rax], eax ; test eax, eax ; je 0x10a577 ; ret
0x0000000000184e55 : std ; add byte ptr [rax], al ; cwde ; ret
0x000000000015ee2e : std ; call qword ptr [rax - 0x2f000210]
0x000000000015ee1e : std ; call qword ptr [rax - 0x2f000219]
0x000000000015ee0e : std ; call qword ptr [rax - 0x2f000222]
0x000000000015edfe : std ; call qword ptr [rax - 0x2f00022b]
0x000000000015ee06 : std ; call qword ptr [rax]
0x000000000015ee22 : std ; call rax
0x000000000016cff6 : std ; call rcx
0x000000000016cfb6 : std ; call rdx
0x000000000016d012 : std ; call rsi
0x0000000000175022 : std ; call rsp
0x0000000000173a29 : std ; clc ; call rsp
0x0000000000196305 : std ; cmc ; jmp qword ptr [rdx]
0x00000000000daed4 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000b060b : std ; dec dword ptr [rax - 0x77] ; jmp 0x48cd8f63
0x000000000010c5c9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000072407 : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000000daa4c : std ; dec ecx ; ret
0x0000000000034c9d : std ; fstp st(1) ; ret
0x000000000016f589 : std ; in eax, dx ; call rsp
0x000000000015ee3e : std ; inc dword ptr [rax] ; xor ebx, 0xf38110ff ; jmp qword ptr [rax]
0x000000000016cff2 : std ; inc dword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000016cfb2 : std ; inc dword ptr [rdx] ; mov cl, 0xfd ; call rdx
0x000000000016d03a : std ; inc dword ptr [rsi - 0x49] ; std ; call rsi
0x000000000016d046 : std ; inc dword ptr [rsi] ; mov ecx, 0xb9a6fffd ; std ; jmp qword ptr [rdi]
0x000000000015edfa : std ; inc eax ; mov dl, 0xfd ; call qword ptr [rax - 0x2f00022b]
0x000000000016cfee : std ; inc ecx ; mov ch, 0xfd ; inc dword ptr [rcx - 0x4a] ; std ; call rcx
0x000000000016d00a : std ; inc ecx ; mov ecx, 0xba3efffd ; std ; call rsi
0x00000000000ffbaf : std ; jbe 0xffbbc ; pop rbx ; ret
0x00000000000c3ca8 : std ; jge 0xc3c85 ; mov edx, eax ; jmp 0xc3c8e
0x000000000016ea29 : std ; jmp 0x16ea2d
0x0000000000178db1 : std ; jmp 0x178db5
0x0000000000178dc9 : std ; jmp 0x178dcd
0x0000000000178de1 : std ; jmp 0x178de5
0x0000000000178e11 : std ; jmp 0x178e15
0x000000000016d0be : std ; jmp qword ptr [rax + 0x30fffdb7]
0x000000000016cfc2 : std ; jmp qword ptr [rax]
0x000000000016d006 : std ; jmp qword ptr [rcx]
0x000000000016d04e : std ; jmp qword ptr [rdi]
0x00000000001759ba : std ; jmp qword ptr [rdx]
0x000000000016d01e : std ; jmp qword ptr [rsi + 0x26fffdb3]
0x000000000016d026 : std ; jmp qword ptr [rsi + 0x26fffdb4]
0x000000000016d02e : std ; jmp qword ptr [rsi + 0x26fffdb5]
0x000000000016d04a : std ; jmp qword ptr [rsi + 0x27fffdb9]
0x000000000016d022 : std ; jmp qword ptr [rsi]
0x0000000000174fba : std ; jmp rsp
0x00000000000bb50f : std ; jne 0xbb4df ; ret
0x0000000000174fb2 : std ; lcall ptr [rax + rdx*2 - 0x255bffff] ; std ; jmp rsp
0x000000000012bfab : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000017ff2d : std ; out dx, al ; jmp qword ptr [rdx]
0x000000000016cfbe : std ; push qword ptr [rax - 0x50] ; std ; jmp qword ptr [rax]
0x000000000017501a : std ; push qword ptr [rdx*4 - 0x221bfffe] ; std ; call rsp
0x000000000016d036 : std ; push qword ptr [rsi + 0x46fffdb6] ; mov bh, 0xfd ; call rsi
0x000000000003300f : std ; ret
0x0000000000186ecc : std ; sti ; int1 ; jmp qword ptr [rdx]
0x00000000000697d2 : std ; sysenter
0x000000000003dc61 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000280b7 : sti ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000180afc : sti ; and edi, ebp ; jmp qword ptr [rdx]
0x000000000016d2ca : sti ; call qword ptr [rax + 0x20fffbf4]
0x000000000016d55a : sti ; call qword ptr [rax - 0x1f000404]
0x000000000016d37a : sti ; call qword ptr [rax - 0x1f000422]
0x000000000016cf1a : sti ; call qword ptr [rax - 0x1f000484]
0x000000000016ce3a : sti ; call qword ptr [rax]
0x000000000016cf2a : sti ; call rax
0x00000000000c91b3 : sti ; call rcx
0x0000000000174d42 : sti ; call rsp
0x0000000000174cf9 : sti ; cli ; call rsp
0x0000000000195fb5 : sti ; cmc ; jmp qword ptr [rdx]
0x000000000006e37a : sti ; cmp qword ptr [rsi + 0x30], 0 ; je 0x6e391 ; pop rbx ; ret
0x00000000000ba0ca : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d145c : sti ; dec dword ptr [rax + 1] ; ret
0x00000000000cfb2d : sti ; dec dword ptr [rax - 0x77] ; jmp 0x4ccf8485
0x00000000000ba08e : sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000662f3 : sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000162c4e : sti ; dec eax ; sti ; call rax
0x0000000000174dfa : sti ; dec esp ; pop rbx ; add dword ptr [rax], eax ; and bl, r15b ; jmp rsp
0x00000000001869cc : sti ; fcompi st(1) ; jmp qword ptr [rdx]
0x000000000017a545 : sti ; in al, dx ; jmp qword ptr [rdx]
0x000000000014cebd : sti ; in eax, dx ; jmp qword ptr [rax]
0x000000000016ce36 : sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016ce76 : sti ; inc dword ptr [rax + 0x33] ; sti ; push qword ptr [rax] ; xor al, 0xfb ; jmp qword ptr [rax]
0x000000000016ce92 : sti ; inc dword ptr [rax + 0x3c] ; sti ; jmp rax
0x000000000016ceb2 : sti ; inc dword ptr [rax + 0x49] ; sti ; jmp rax
0x000000000016ced2 : sti ; inc dword ptr [rax + 0x58] ; sti ; jmp qword ptr [rax]
0x000000000016cf16 : sti ; inc dword ptr [rax + 0x7b] ; sti ; call qword ptr [rax - 0x1f000484]
0x000000000016d2fe : sti ; inc dword ptr [rax - 0x12] ; sti ; call qword ptr [rax]
0x000000000016d27a : sti ; inc dword ptr [rax - 0x13] ; sti ; jmp qword ptr [rax]
0x000000000016d3ca : sti ; inc dword ptr [rax - 0x1c] ; sti ; lcall ptr [rax] ; adc ah, bh ; jmp rax
0x000000000016d376 : sti ; inc dword ptr [rax - 0x23] ; sti ; call qword ptr [rax - 0x1f000422]
0x000000000016d566 : sti ; inc dword ptr [rax - 0x2f000400] ; add esp, edi ; jmp qword ptr [rax]
0x000000000016d512 : sti ; inc dword ptr [rax - 0x2f000407] ; cli ; sti ; jmp qword ptr [rax]
0x000000000016d386 : sti ; inc dword ptr [rax - 0x2f00041e] ; jrcxz 0x16d393 ; call qword ptr [rax]
0x000000000016ce46 : sti ; inc dword ptr [rax - 0x5f0004d9] ; sbb edi, ebx ; jmp rax
0x000000000016d556 : sti ; inc dword ptr [rax - 5] ; sti ; call qword ptr [rax - 0x1f000404]
0x000000000016ce26 : sti ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016d31e : sti ; inc dword ptr [rax] ; out dx, al ; sti ; call rax
0x000000000016d3aa : sti ; inc eax ; fsincos ; call qword ptr [rax]
0x000000000016d356 : sti ; inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000016cf36 : sti ; inc eax ; test edi, ebx ; call qword ptr [rax]
0x0000000000160df8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000186ecd : sti ; int1 ; jmp qword ptr [rdx]
0x0000000000076168 : sti ; je 0x76174 ; pop rbx ; ret
0x000000000016ce4a : sti ; jmp qword ptr [rax - 0x1f0004e5]
0x000000000016ce7e : sti ; jmp qword ptr [rax]
0x0000000000192196 : sti ; jmp qword ptr [rdx]
0x00000000001923b2 : sti ; jmp qword ptr [rsi]
0x0000000000162c56 : sti ; jmp rax
0x0000000000174e02 : sti ; jmp rsp
0x000000000016d3ce : sti ; lcall ptr [rax] ; adc ah, bh ; jmp rax
0x0000000000069733 : sti ; lcall ptr [rbx - 0x77] ; call 0xffffffffc362d8a1
0x000000000012c388 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000090f8d : sti ; mov rax, rdi ; ret
0x000000000002b991 : sti ; or eax, 0x83492374 ; mov byte ptr [rcx], 0x83 ; ret
0x0000000000183db9 : sti ; out dx, eax ; jmp rdx
0x000000000016ce32 : sti ; push qword ptr [rax + 0x23] ; sti ; inc dword ptr [rax + 0x24] ; sti ; call qword ptr [rax]
0x000000000016cf82 : sti ; push qword ptr [rax + 0x30fffba2] ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000016d3a6 : sti ; push qword ptr [rax - 0x28] ; sti ; inc eax ; fsincos ; call qword ptr [rax]
0x000000000016d352 : sti ; push qword ptr [rax - 0x2f] ; sti ; inc eax ; sar bl, cl ; call qword ptr [rax]
0x000000000016cf32 : sti ; push qword ptr [rax - 0x7c] ; sti ; inc eax ; test edi, ebx ; call qword ptr [rax]
0x000000000016ce22 : sti ; push qword ptr [rax] ; and bl, bh ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x000000000016cf86 : sti ; push qword ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; jmp rax
0x000000000016cef2 : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x000000000016ce7a : sti ; push qword ptr [rax] ; xor al, 0xfb ; jmp qword ptr [rax]
0x000000000016d29e : sti ; push rax ; out dx, al ; sti ; call rax
0x000000000016ceda : sti ; push rax ; pop rbx ; sti ; call rax
0x000000000016cefa : sti ; push rax ; push 0xfb ; call rax
0x000000000015b44a : sti ; ret
0x000000000003e978 : sti ; ret 0xffbf
0x000000000016d559 : sti ; sti ; call qword ptr [rax - 0x1f000404]
0x000000000002ce67 : sti ; test rax, rax ; je 0x2ce75 ; call rax
0x0000000000077c84 : sti ; xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000ea7b1 : stosb byte ptr [edi], al ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003828e : stosb byte ptr [rdi], al ; add byte ptr ss:[rax + 0x39], cl ; ret
0x000000000018fafd : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; mov al, 0xf5 ; call qword ptr [rdx]
0x000000000015b924 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001929a5 : stosb byte ptr [rdi], al ; cmc ; jmp qword ptr [rdx]
0x0000000000033bc2 : stosb byte ptr [rdi], al ; mov eax, 0xc031fffe ; pop rbx ; ret
0x0000000000181d3c : stosb byte ptr [rdi], al ; pop rsp ; out dx, eax ; jmp qword ptr [rdx]
0x000000000006b392 : stosb byte ptr [rdi], al ; ret
0x00000000000fd453 : stosb byte ptr [rdi], al ; ret 0x2a
0x000000000016f990 : stosb byte ptr [rdi], al ; ret 0xffef
0x000000000005b2dc : stosb byte ptr [rdi], al ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000ea7b2 : stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000ea804 : stosb byte ptr [rdi], al ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000174185 : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; add al, 0xe2 ; stc ; jmp rsp
0x000000000017fbfd : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; mov al, 0x31 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000077e39 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x0000000000192e2d : stosd dword ptr [rdi], eax ; cmc ; jmp qword ptr [rdx]
0x000000000017715d : stosd dword ptr [rdi], eax ; jmp 0x177161
0x000000000015ca2c : stosd dword ptr [rdi], eax ; ret
0x00000000001957c4 : stosd dword ptr [rdi], eax ; sal ch, 1 ; jmp qword ptr [rdx]
0x00000000000ea6c3 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000005f649 : str word ptr [rax + 0x63] ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000068f01 : str word ptr [rax + 0x63] ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x0000000000068e37 : str word ptr [rax + 0x63] ; or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000001124fd : str word ptr [rax - 0x77] ; ret 0x8348
0x00000000000680ab : str word ptr [rax - 0x77] ; ret 0x8948
0x000000000002392b : str word ptr [rcx + rcx*4 - 9] ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000005f7eb : str word ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000015ce11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000018c618 : sub ah, bh ; hlt ; jmp qword ptr [rcx]
0x000000000016d729 : sub ah, bh ; jmp rax
0x000000000011d990 : sub al, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000181340 : sub al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000001f90b : sub al, 0 ; add byte ptr [rax], al ; mov r12d, eax ; call 0xebc09
0x00000000000e4ff2 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000e2393 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000e21c4 : sub al, 0 ; jne 0xe21d9 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e3b9c : sub al, 0 ; jne 0xe450a ; ret
0x00000000000e3b9b : sub al, 0 ; jne 0xe450b ; ret
0x00000000000e2429 : sub al, 0 ; mov rdx, rax ; jmp 0xe23c3
0x00000000000e2428 : sub al, 0 ; mov rdx, rax ; jmp 0xe23c4
0x00000000000e383a : sub al, 0 ; mov rdx, rax ; jmp 0xe3814
0x00000000000e3839 : sub al, 0 ; mov rdx, rax ; jmp 0xe3815
0x00000000000e3502 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e49dc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e44fe : sub al, 0 ; ret
0x00000000001861c4 : sub al, 0x11 ; add dword ptr [rax], eax ; test al, 2 ; call qword ptr [rax]
0x00000000001782c4 : sub al, 0x32 ; add byte ptr [rax], al ; sub bh, ch ; jmp 0x1782d2
0x000000000009cbb2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000178cc4 : sub al, 0x3c ; add byte ptr [rax], al ; cli ; jmp 0x178cd2
0x0000000000178dc4 : sub al, 0x3d ; add byte ptr [rax], al ; test al, 0xfd ; jmp 0x178dd2
0x0000000000075b6b : sub al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c3c75 : sub al, 0x48 ; mov ecx, dword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xc3c9b
0x000000000018b4c4 : sub al, 0x64 ; add dword ptr [rax], eax ; call 0x2218a93a
0x000000000009cbb5 : sub al, 0x75 ; pop rax ; ret
0x00000000000c3e86 : sub al, 0x83 ; ret 0x4801
0x0000000000062deb : sub al, 0x83 ; ret 0x8308
0x000000000018d7c4 : sub al, 0x87 ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x0000000000147ff3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001806c4 : sub al, 0xb6 ; add byte ptr [rax], al ; js 0x18071c ; out dx, eax ; jmp qword ptr [rdx]
0x000000000019403c : sub al, 0xb8 ; cmc ; jmp qword ptr [rdx]
0x000000000017bc64 : sub al, 0xb8 ; out dx, al ; jmp qword ptr [rdx]
0x000000000014c364 : sub al, 0xce ; and eax, 0 ; add bl, dh ; ret
0x00000000001137e8 : sub al, 0xe8 ; ret 0xfc89
0x00000000001939c4 : sub al, 0xe9 ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x0000000000196ed5 : sub al, 0xf6 ; jmp qword ptr [rdx]
0x00000000000df002 : sub al, 0xfa ; dec dword ptr [rax + 0x39] ; ret
0x000000000016d735 : sub al, 0xfc ; call rax
0x0000000000172f4d : sub al, 2 ; add byte ptr [rsp + rcx], ah ; clc ; call rsp
0x00000000000f109c : sub al, 7 ; jmp 0xf10af
0x000000000007a35c : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000107ee0 : sub al, bh ; dec dword ptr [rax - 0x75] ; jl 0x107f14 ; sbb al, ch ; ret
0x0000000000177ab5 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x27], ch ; jmp 0x177ac1
0x0000000000117d37 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000033b7a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x00000000000f9d9f : sub al, byte ptr [rax] ; add ecx, ebp ; ret
0x00000000001007a3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000100825 : sub al, byte ptr [rax] ; call rax
0x0000000000104834 : sub al, byte ptr [rax] ; jne 0x1048b0 ; add rsp, 8 ; ret
0x0000000000101075 : sub al, byte ptr [rax] ; ret
0x0000000000106d2e : sub al, byte ptr [rax] ; test eax, eax ; je 0x106d3e ; ret
0x00000000000573da : sub al, byte ptr [rbx - 0x1cf43] ; call qword ptr [rax]
0x0000000000197b8d : sub al, byte ptr [rdx] ; add byte ptr [rax], dl ; sti ; jmp qword ptr [rdx]
0x0000000000106d2d : sub al, byte ptr cs:[rax] ; test eax, eax ; je 0x106d3f ; ret
0x0000000000112691 : sub al, ch ; jns 0x11266a ; lock dec dword ptr [rax - 0x77] ; ret
0x000000000016fea9 : sub al, dh ; call rsp
0x0000000000182487 : sub bh, 0xff ; sbb al, 0xd ; test dword ptr [rbx - 0x11], esp ; jmp qword ptr [rdx]
0x000000000018353f : sub bh, 0xff ; sbb al, 0xd ; xor al, 0x78 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016d6f1 : sub bh, ah ; call qword ptr [rax]
0x00000000001782c8 : sub bh, ch ; jmp 0x1782ce
0x000000000011db41 : sub bl, al ; call qword ptr [rax]
0x00000000000ac24f : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000009cba6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000001169d1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ce9a7 : sub byte ptr [r8 - 0x77], r9b ; ret
0x00000000000c2ed4 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000111dfe : sub byte ptr [rax + 1], bh ; ret
0x00000000001169d2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000159470 : sub byte ptr [rax - 0x5fab0013], ah ; in eax, dx ; jmp rax
0x0000000000116a7a : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000e94f0 : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000af89e : sub byte ptr [rax - 0x77], cl ; jmp 0x48cd81f4
0x00000000000afabe : sub byte ptr [rax - 0x77], cl ; jmp 0x4ccd8414
0x000000000010ef79 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000ce9a8 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000010da74 : sub byte ptr [rax - 0x77], cl ; ret 0x4388
0x00000000000eaa30 : sub byte ptr [rax - 0x77], cl ; ret 0x5172
0x000000000008c2d6 : sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006d658 : sub byte ptr [rax - 0x78], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x0000000000073553 : sub byte ptr [rax - 0x78], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x00000000000c37e3 : sub byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; ret
0x00000000000d5a6f : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000d7024 : sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x0000000000186af8 : sub byte ptr [rax - 4], cl ; jmp qword ptr [rbx]
0x000000000019a140 : sub byte ptr [rax - 9], 0xff ; ret
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000191d40 : sub byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x000000000000d050 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000011bf81 : sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x000000000011b17f : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000011b13a : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000011acda : sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000000efc0c : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000011b295 : sub byte ptr [rax], al ; jmp rax
0x000000000011dac7 : sub byte ptr [rax], al ; jne 0x11dad8 ; add rsp, 0x38 ; ret
0x000000000011da85 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x108] ; jmp rax
0x000000000011b28e : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x287869] ; jmp rax
0x000000000011b1e5 : sub byte ptr [rax], al ; pop r12 ; jmp rax
0x000000000011e6e4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e6f8 ; xor eax, eax ; ret
0x000000000011e714 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e728 ; xor eax, eax ; ret
0x000000000011e744 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e758 ; xor eax, eax ; ret
0x000000000011e774 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e788 ; xor eax, eax ; ret
0x000000000011e7a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e7b8 ; xor eax, eax ; ret
0x000000000011e7d4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x11e7e8 ; xor eax, eax ; ret
0x000000000016d590 : sub byte ptr [rax], bh ; cld ; push rax ; cmp esp, edi ; call rax
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000113da5 : sub byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000009cbaa : sub byte ptr [rbp + 0x63], dh ; ret
0x000000000009cba9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000018e088 : sub byte ptr [rbp - 0xb], bl ; jmp qword ptr [rbx]
0x00000000000c1ff2 : sub byte ptr [rbp - 0xf], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000219cb : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ac250 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006709b : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000011d963 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000011d962 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000018d6b8 : sub byte ptr [rbx - 0xb], al ; jmp qword ptr [rcx]
0x000000000009cba7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000018836e : sub byte ptr [rcx + 0xd1cfff2], bl ; push rsi ; xchg eax, edi ; jmp qword ptr [rdx]
0x0000000000037fd1 : sub byte ptr [rcx + rcx*4 + 0x60], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000007a0c2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000116aa7 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007cbb8 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000007a94e : sub byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000034f55 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x00000000001759b8 : sub byte ptr [rcx - 3], ah ; jmp qword ptr [rdx]
0x000000000017034d : sub byte ptr [rcx], al ; add byte ptr [rdx + rdi*2 - 0x10], dh ; call rsp
0x0000000000070a07 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000005f863 : sub byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000c26cc : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010c4bc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000172eed : sub byte ptr [rdx], al ; add byte ptr [rsi + 3], al ; clc ; call rsp
0x0000000000189408 : sub byte ptr [rdx], bl ; jmp qword ptr [rcx]
0x0000000000002be8 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x000000000018dfec : sub ch, bl ; hlt ; jmp qword ptr [rdx]
0x000000000016f639 : sub ch, dh ; jmp rsp
0x0000000000034775 : sub cl, al ; jne 0x34788 ; add rsp, 8 ; ret
0x0000000000034a50 : sub cl, al ; jne 0x34a68 ; add rsp, 8 ; ret
0x00000000000345f8 : sub cl, al ; ret
0x00000000000ab52e : sub cl, byte ptr [rax + 0x63] ; fld qword ptr [rbx + 0x14809c5] ; ret
0x0000000000056be1 : sub cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000b64ba : sub cl, byte ptr [rax - 0x77] ; loope 0xb644d ; ret 0xf631
0x000000000015f9ac : sub cl, byte ptr [rax] ; cmc ; call qword ptr [rsi]
0x00000000000d800e : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000e633d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019cc0e : sub dh, byte ptr [rdx] ; idiv edi ; sbb al, 0xd ; cld ; xor bh, dh ; jmp qword ptr [rdx]
0x00000000001920d1 : sub dh, dh ; jmp qword ptr [rdi]
0x0000000000191d41 : sub dh, dh ; jmp qword ptr [rsi]
0x000000000011389b : sub dword ptr [eax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000008b856 : sub dword ptr [rax - 0x77], ecx ; jmp 0x4ccb41b0
0x0000000000177a7d : sub dword ptr [rax], eax ; add al, ah ; fsubr st(3) ; jmp qword ptr [rdi]
0x0000000000177a65 : sub dword ptr [rax], eax ; add al, cl ; fsubr st(3) ; jmp qword ptr [rcx]
0x000000000010a57d : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000114395 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x1143a8 ; ret
0x0000000000107135 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x107149 ; ret
0x000000000011389c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000010bba5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000107415 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010a564 : sub dword ptr [rax], eax ; test eax, eax ; je 0x10a576 ; ret
0x00000000001185c4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x1185d8 ; xor eax, eax ; ret
0x000000000007fa1b : sub dword ptr [rbp + 0x32], edx ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000192eb6 : sub dword ptr [rbp + rsi*8 + 0x300d1cff], -0x54 ; cmc ; jmp qword ptr [rdx]
0x0000000000141ae3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000012a5d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a5ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a727 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a73d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a877 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a88d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012a9c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12a9dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ab17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ab2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012ac67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12ac7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012adb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12adcd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012af07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12af1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b057 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b06d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b1a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b1bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b2f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b30d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b447 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b45d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b597 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b5ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b6e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b6fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012b837 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12b84d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012cfa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12cfbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d0f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d10d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d247 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d25d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d397 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d3ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d4e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d4fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d637 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d64d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d787 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d79d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012d8d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12d8ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012da27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12da3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012db77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12db8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012dcc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12dcdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012de17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12de2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012df67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12df7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e0b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e0cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012e207 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12e21d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012f977 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12f98d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fadd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fc17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fc2d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012fd67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fd7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000012feb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x12fecd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13001d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130157 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13016d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001302a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1302bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001303f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13040d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130547 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13055d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130697 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1306ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001307e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1307fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130937 : sub dword ptr [rdi + 0x10], ebx ; jb 0x13094d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130a87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130a9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000130bd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x130bed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001197a1 : sub dword ptr [rdi + 0x18], 1 ; je 0x1197b8 ; xor eax, eax ; ret
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x000000000012a533 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000012a52f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000017b02c : sub dword ptr [rdi], -0x12 ; jmp qword ptr [rdx]
0x00000000000becb0 : sub dword ptr [rdi], ecx ; test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012a5dd : sub dword ptr [rdi], esp ; jmp r9
0x0000000000149649 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001487d6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000113996 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000011689a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cf3b5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000d1a1f : sub eax, 0x480a8900 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000197dd5 : sub eax, 0x6a680002 ; clc ; call qword ptr [rax]
0x0000000000034839 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000004c2d2 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000180a1f : sub eax, 0xd1cffef ; sbb byte ptr [rsi], dl ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000187e75 : sub eax, 0xeac80001 ; jmp qword ptr [rax]
0x00000000001130d2 : sub eax, 1 ; add rsp, 0x18 ; ret
0x00000000000430a7 : sub eax, 1 ; cmp rax, rbx ; jne 0x430a9 ; pop rbx ; ret
0x000000000002b6c4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000108319 : sub eax, 1 ; pop r13 ; ret
0x00000000000c4cb2 : sub eax, 1 ; pop rbp ; ret
0x00000000000441df : sub eax, 1 ; ret
0x000000000009d972 : sub eax, 4 ; ret
0x00000000000f5084 : sub eax, dword ptr [r8] ; test rax, rax ; je 0xf5099 ; ret
0x00000000000ea7b3 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000007379b : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ea805 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000177c45 : sub eax, dword ptr [rax] ; add byte ptr [rax], bl ; fsub st(3), st(0) ; jmp qword ptr [rcx]
0x00000000000f5bc4 : sub eax, dword ptr [rax] ; add byte ptr [rbp + 5], dh ; call 0x21dd7
0x00000000000f5072 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000f8caa : sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000000ea898 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000ee35b : sub eax, dword ptr [rax] ; call 0x6a5f4
0x00000000000f4e2f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0xf4e18 ; ret
0x00000000000eb175 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000eaae5 : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f54bc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x00000000000ea6c4 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000f45f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4608 ; xor eax, eax ; ret
0x00000000000f4624 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4638 ; xor eax, eax ; ret
0x00000000000f4654 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4668 ; xor eax, eax ; ret
0x00000000000f4684 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4698 ; xor eax, eax ; ret
0x00000000000f46b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf46c8 ; xor eax, eax ; ret
0x00000000000f46e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf46f8 ; xor eax, eax ; ret
0x00000000000f4714 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4728 ; xor eax, eax ; ret
0x00000000000f4744 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4758 ; xor eax, eax ; ret
0x00000000000f4774 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4788 ; xor eax, eax ; ret
0x00000000000f47a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf47b8 ; xor eax, eax ; ret
0x00000000000f47d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf47e8 ; xor eax, eax ; ret
0x00000000000f4804 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4818 ; xor eax, eax ; ret
0x00000000000f4834 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4848 ; xor eax, eax ; ret
0x00000000000f4864 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4878 ; xor eax, eax ; ret
0x00000000000f4894 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf48a8 ; xor eax, eax ; ret
0x00000000000f48c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf48d8 ; xor eax, eax ; ret
0x00000000000f48f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4908 ; xor eax, eax ; ret
0x00000000000f4924 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4938 ; xor eax, eax ; ret
0x00000000000f4954 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4968 ; xor eax, eax ; ret
0x00000000000f4984 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4998 ; xor eax, eax ; ret
0x00000000000f49e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf49f8 ; xor eax, eax ; ret
0x00000000000f4a14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a28 ; xor eax, eax ; ret
0x00000000000f4a44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a58 ; xor eax, eax ; ret
0x00000000000f4a74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4a88 ; xor eax, eax ; ret
0x00000000000f4aa4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4ab8 ; xor eax, eax ; ret
0x00000000000f4ad4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4ae8 ; xor eax, eax ; ret
0x00000000000f4b04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b18 ; xor eax, eax ; ret
0x00000000000f4b34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b48 ; xor eax, eax ; ret
0x00000000000f4b64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0xf4b78 ; xor eax, eax ; ret
0x00000000000f5085 : sub eax, dword ptr [rax] ; test rax, rax ; je 0xf5098 ; ret
0x000000000002eeaf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009bd73 : sub eax, dword ptr [rcx + r8*4] ; je 0x9bd57 ; ret
0x000000000009bd74 : sub eax, dword ptr [rcx + rax*4] ; je 0x9bd56 ; ret
0x0000000000187c35 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], bh ; call qword ptr [rbx]
0x0000000000187c05 : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], ch ; call qword ptr [rsi]
0x0000000000187c1d : sub eax, dword ptr [rcx] ; add byte ptr [rax - 0x19], dh ; call qword ptr [rbx]
0x000000000018e085 : sub eax, dword ptr [rcx] ; add byte ptr [rax], ch ; pop rbp ; cmc ; jmp qword ptr [rbx]
0x000000000007796e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000072eb5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000072da5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000181cee : sub eax, dword ptr [rdi + 0xd1cffef] ; and dword ptr [rax - 0x11], ebx ; jmp qword ptr [rdx]
0x000000000006ef95 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072ea6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072d96 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000009bd2c : sub eax, dword ptr [rdx + rcx*4] ; je 0x9bd16 ; ret
0x0000000000076eb3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000e2391 : sub eax, dword ptr [rsp + rbp] ; add rsp, 8 ; ret
0x0000000000045a71 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009d10c : sub eax, eax ; nop ; ret
0x000000000009d0c1 : sub eax, eax ; ret
0x000000000006e7ca : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x0000000000076357 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009e10a : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000015f434 : sub eax, ecx ; jmp qword ptr [rdx]
0x0000000000076779 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008161c : sub eax, ecx ; ret
0x00000000000effe6 : sub eax, edi ; pop r15 ; ret
0x0000000000081dc1 : sub eax, edi ; ret
0x000000000016000c : sub eax, edx ; cmc ; push qword ptr [rip + 0x3ffff5c2] ; ret 0xfff5
0x00000000000381a9 : sub eax, edx ; ret
0x0000000000034b2f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003481f : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003446d : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000ae413 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000070bba : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000012427d : sub eax, esi ; ret
0x00000000001949ac : sub eax, esp ; cmc ; jmp qword ptr [rdx]
0x0000000000074669 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d10b : sub eax, r8d ; nop ; ret
0x000000000009d0c0 : sub eax, r8d ; ret
0x00000000000b0927 : sub ebp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; jmp 0x49cd9281
0x000000000015b6be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000016f2d9 : sub ebp, ebp ; jmp rsp
0x000000000016f2d8 : sub ebp, r13d ; jmp rsp
0x0000000000103d30 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x000000000015a155 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f63 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000016ce51 : sub ebx, edi ; call rax
0x0000000000079184 : sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000001032b2 : sub ecx, dword ptr [rax + 0x5d5b1153] ; pop r12 ; ret
0x00000000000e614c : sub ecx, dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000097811 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000007b5e4 : sub ecx, dword ptr [rax] ; add ebx, ebp ; ret
0x00000000000aaa7a : sub ecx, eax ; lea rax, qword ptr [r8 + rcx] ; ret
0x00000000000ae415 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000173ba9 : sub ecx, edi ; call rsp
0x000000000010cb0b : sub ecx, esi ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000003fd69 : sub edi, -1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001820df : sub edi, -1 ; sbb al, 0xd ; add byte ptr [rsi - 0x11], bl ; jmp qword ptr [rdx]
0x0000000000182127 : sub edi, -1 ; sbb al, 0xd ; jns 0x182194 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000182126 : sub edi, -1 ; sbb al, 0xd ; jns 0x182195 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000009bf3c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000018228f : sub edi, 0xa80d1cff ; pop rsi ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001822d7 : sub edi, 0xf60d1cff ; pop rdi ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000198d39 : sub edi, esi ; call qword ptr [rbx]
0x00000000000f6391 : sub edi, esi ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000091d23 : sub edx, 1 ; mov byte ptr [rcx], r8b ; jne 0x91d19 ; ret
0x000000000009d1e2 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x9d1d9 ; ret
0x0000000000076ee0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000076ed5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000084f64 : sub edx, eax ; jbe 0x84fa7 ; add rax, rdi ; ret
0x0000000000084f74 : sub edx, eax ; jbe 0x84fa9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000084f84 : sub edx, eax ; jbe 0x84fa9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000084f94 : sub edx, eax ; jbe 0x84fa9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000002067f : sub edx, ebx ; inc rdx ; jmp 0x2068e
0x0000000000034aed : sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000073f12 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000008d2fa : sub esi, 1 ; jne 0x8d2f7 ; xor eax, eax ; ret
0x0000000000103bee : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000011d02a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000001f5b0 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f58e
0x0000000000170dc9 : sub esi, edx ; jmp rsp
0x0000000000191dd1 : sub esi, esi ; jmp qword ptr [rsi]
0x0000000000116b8e : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x0000000000107472 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fef14 : sub esp, -0x80 ; pop rbx ; ret
0x00000000000fef21 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000001f8ef : sub esp, 0x68 ; call 0xebb75
0x00000000000b8960 : sub esp, 0x80 ; call 0xf4b98
0x00000000000b897c : sub esp, 0x80 ; call 0xf4bc8
0x00000000000a8f3f : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000016d6ed : sub esp, edi ; inc eax ; sub bh, ah ; call qword ptr [rax]
0x00000000000a8f3e : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000b0926 : sub r13d, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; jmp 0x49cd9282
0x0000000000076778 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000f5bc3 : sub r8d, dword ptr [r8] ; add byte ptr [rbp + 5], dh ; call 0x21dd8
0x000000000007b5e3 : sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x0000000000113995 : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000091be6 : sub rax, 1 ; ret
0x000000000009d971 : sub rax, 4 ; ret
0x000000000007796d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000072eb4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000072da4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000006ef94 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000072ea5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000072d95 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000074668 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e7c9 : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000070bb9 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000009e109 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000081dc0 : sub rax, rdi ; ret
0x00000000000381bd : sub rax, rdx ; ret
0x000000000003446c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000012427c : sub rax, rsi ; ret
0x00000000000aaa79 : sub rcx, rax ; lea rax, qword ptr [r8 + rcx] ; ret
0x000000000009bf3b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000084f63 : sub rdx, rax ; jbe 0x84fa8 ; add rax, rdi ; ret
0x000000000002067e : sub rdx, rbx ; inc rdx ; jmp 0x2068f
0x0000000000073f11 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000008d2f9 : sub rsi, 1 ; jne 0x8d2f8 ; xor eax, eax ; ret
0x0000000000116b8d : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x0000000000107471 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fef13 : sub rsp, -0x80 ; pop rbx ; ret
0x00000000000fef20 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000001f8ee : sub rsp, 0x68 ; call 0xebb76
0x000000000001f8ed : sub rsp, 0x68 ; call 0xebb77
0x00000000000b895f : sub rsp, 0x80 ; call 0xf4b99
0x00000000000b897b : sub rsp, 0x80 ; call 0xf4bc9
0x0000000000192028 : sub sil, sil ; jmp qword ptr [rsi]
0x0000000000034550 : subps xmm0, xmm1 ; ret
0x000000000003454f : subsd xmm0, xmm1 ; ret
0x00000000000348b4 : subss xmm0, xmm1 ; ret
0x0000000000114f82 : syscall ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000104ef0 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000db20d : syscall ; neg eax ; ret
0x00000000000f4bd7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000bade5 : syscall ; ret
0x00000000000e85ef : syscall ; test rax, rax ; jl 0xe863e ; je 0xe8602 ; ret
0x00000000000697d3 : sysenter
0x00000000000e29a8 : test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000183634 : test ah, cl ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffef
0x000000000010c018 : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000b5a54 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000001139f7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010edfa : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000112b29 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002d640 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000008a964 : test al, 0x31 ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000003c82 : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000cbe61 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b6a43 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x000000000000b0c0 : test al, 0x50 ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret
0x0000000000182294 : test al, 0x5e ; out dx, eax ; jmp qword ptr [rdx]
0x000000000018ee88 : test al, 0x96 ; cmc ; jmp qword ptr [rcx]
0x000000000015aa17 : test al, 0x97 ; xchg eax, esp ; ret
0x000000000018f198 : test al, 0x99 ; cmc ; jmp qword ptr [rcx]
0x000000000015958c : test al, 0xa0 ; in eax, dx ; jmp rsp
0x000000000018f758 : test al, 0xa2 ; cmc ; jmp qword ptr [rbx]
0x0000000000193f3c : test al, 0xb4 ; cmc ; jmp qword ptr [rdx]
0x0000000000183d28 : test al, 0xe0 ; out dx, eax ; jmp qword ptr [rax]
0x000000000015e95d : test al, 0xf0 ; jmp qword ptr [rax]
0x000000000015e915 : test al, 0xf0 ; jmp rax
0x000000000009d4d9 : test al, 0xf0 ; jne 0x9d538 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000009d4d8 : test al, 0xf0 ; jne 0x9d539 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000188e55 : test al, 0xf2 ; jmp qword ptr [rdx]
0x00000000001716d1 : test al, 0xf4 ; jmp rsp
0x00000000001729c1 : test al, 0xf7 ; call rsp
0x00000000001789d8 : test al, 0xf9 ; jmp 0x1789de
0x0000000000178dc8 : test al, 0xfd ; jmp 0x178dce
0x000000000018f8fd : test al, 1 ; add al, al ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f915 : test al, 1 ; add al, bl ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f92d : test al, 1 ; add al, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000018f89d : test al, 1 ; add byte ptr [rax - 0x5b], ah ; cmc ; jmp qword ptr [rcx]
0x000000000018f8b5 : test al, 1 ; add byte ptr [rax - 0x5b], bh ; cmc ; jmp qword ptr [rcx]
0x000000000018f945 : test al, 1 ; add byte ptr [rax], cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rcx]
0x0000000000174115 : test al, 2 ; add byte ptr [rcx + rbx*8], ah ; stc ; call rsp
0x00000000001861c8 : test al, 2 ; call qword ptr [rax]
0x000000000015fa64 : test al, 5 ; cmc ; call qword ptr [rsi]
0x000000000015fa3c : test al, 9 ; cmc ; call qword ptr [rsi]
0x00000000000e2947 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000019111c : test al, al ; add dword ptr [rax], eax ; and bl, bl ; cmc ; jmp qword ptr [rdi]
0x000000000008d33a : test al, al ; jne 0x8d2e2 ; mov rax, rdi ; ret
0x00000000000911d9 : test al, al ; jne 0x911c5 ; ret
0x00000000000912d0 : test al, al ; jne 0x912be ; xor eax, eax ; ret
0x000000000009200a : test al, al ; jne 0x91ff8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000f5de9 : test al, al ; mov byte ptr [rdi], al ; jne 0xf5de1 ; mov rax, rdi ; ret
0x00000000000f5fa9 : test al, al ; mov byte ptr [rdi], al ; jne 0xf5fa1 ; mov rax, r10 ; ret
0x000000000006b3d4 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000174a08 : test al, cl ; cli ; call rsp
0x0000000000040cbf : test al, cl ; out 0xff, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d46cb : test bh, bh ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000039935 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x0000000000039965 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x000000000003dc60 : test bh, bl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000016cf35 : test bh, bl ; inc eax ; test edi, ebx ; call qword ptr [rax]
0x000000000016f588 : test bh, ch ; in eax, dx ; call rsp
0x000000000016ea28 : test bh, ch ; jmp 0x16ea2e
0x0000000000024bd1 : test bh, cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011779b : test byte ptr [rax + 0x1000001], al ; ret 0x894c
0x000000000002e586 : test byte ptr [rax + 0x200], bh ; ret
0x000000000018e11c : test byte ptr [rax + 0x62f00001], dl ; cmc ; call qword ptr [rax]
0x00000000000bb89a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000111525 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000111d85 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000aa24c : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000006b415 : test byte ptr [rax + rax], 0 ; jmp 0x6b430
0x0000000000042d69 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x37e9
0x00000000000ca0e9 : test byte ptr [rax + rdi*2], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000bfa8d : test byte ptr [rax + rdi*8 - 1], cl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000290f8 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000f595e : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xfff8
0x00000000000cd635 : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000023bfb : test byte ptr [rax - 0x39], cl ; ret
0x00000000000a4bcd : test byte ptr [rax - 0x47b80000], ch ; ret 0xffff
0x000000000018f11c : test byte ptr [rax - 0x66cfffff], ah ; cmc ; jmp qword ptr [rcx]
0x00000000000273df : test byte ptr [rax - 0x77000000], dh ; ret 0xe281
0x0000000000066705 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017911c : test byte ptr [rax], al ; add byte ptr [rax + 7], dl ; in al, dx ; call qword ptr [rax]
0x00000000001031aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x1f478
0x0000000000149aca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000141c7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x0000000000096f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000097f0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000141caa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x0000000000097f2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x0000000000097f3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000141cea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000097f7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007715a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000b666a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000141c8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000097f1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000021889 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000000000007118a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006710a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000035cca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009178a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000016eb25 : test byte ptr [rax], al ; add byte ptr [rcx + rax - 0x14], dl ; call rsp
0x0000000000021eca : test byte ptr [rax], bh ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000023b26 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x000000000016f29c : test byte ptr [rbp - 0x1e2c0000], ch ; in al, dx ; call rsp
0x00000000000cad0e : test byte ptr [rbp - 0x76000008], dl ; ret 0xe283
0x0000000000170b68 : test byte ptr [rbp - 0xf], ch ; call rsp
0x00000000000f359c : test byte ptr [rbx + 0x1c], 0x20 ; je 0xf3608 ; xor eax, eax ; pop rbx ; ret
0x000000000016f36c : test byte ptr [rbx + 0x47c40000], dh ; in eax, dx ; call rsp
0x000000000016f4ac : test byte ptr [rbx + 0x70e40000], bh ; in eax, dx ; call rsp
0x000000000018f41c : test byte ptr [rbx - 0x630fffff], ah ; cmc ; jmp qword ptr [rcx]
0x000000000009ed40 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000187c1c : test byte ptr [rbx], ch ; add dword ptr [rax], eax ; jo 0x187c10 ; call qword ptr [rbx]
0x0000000000170dc8 : test byte ptr [rbx], ch ; jmp rsp
0x00000000000e2a08 : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000009f1e0 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aab46 : test byte ptr [rcx + 0x5d], 0x41 ; pop rsi ; pop r15 ; jmp rax
0x00000000001706c4 : test byte ptr [rcx + 1], cl ; add ah, al ; in eax, -0x10 ; call rsp
0x00000000000e28e7 : test byte ptr [rcx + rax - 0x7cb80000], bl ; ret 0x3c01
0x00000000001717e4 : test byte ptr [rcx + rax - 0xb3d8c00], ch ; call rsp
0x000000000010535d : test byte ptr [rcx + rbp - 0xe], 0x83 ; ret 0xe82e
0x00000000000c2258 : test byte ptr [rcx + rcx - 0x2a], 0x75 ; add dh, bl ; ret
0x00000000000efd24 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000003b4ed : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000b555a : test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011ec66 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f8dc5 : test byte ptr [rcx], 0xf0 ; bswap eax ; ret
0x000000000018d58d : test byte ptr [rcx], al ; add byte ptr [rax + 0x41], al ; cmc ; jmp qword ptr [rbx]
0x0000000000185a1c : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; push rax ; xchg ecx, esi ; jmp qword ptr [rcx]
0x00000000000a5b01 : test byte ptr [rcx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000081e74 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x0000000000174538 : test byte ptr [rdi - 6], cl ; push rsp ; ret
0x00000000001730c8 : test byte ptr [rdi - 8], bl ; jmp rsp
0x00000000000a6d90 : test byte ptr [rdi], 0x84 ; ret
0x00000000000b4766 : test byte ptr [rdi], 0x85 ; ret
0x00000000000a2f41 : test byte ptr [rdi], 0x8e ; ret
0x000000000008e888 : test byte ptr [rdi], 0x8e ; ret 0
0x0000000000073d32 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x000000000008e97a : test byte ptr [rdi], 0x95 ; ret 0xd029
0x000000000005a212 : test byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000072df2 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072e02 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000978b8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000002e514 : test byte ptr [rdx + 0x200], al ; ret
0x000000000019a31c : test byte ptr [rdx + 2], dl ; add byte ptr [rax], dh ; jno 0x19a321 ; jmp qword ptr [rax]
0x00000000000f8eb4 : test byte ptr [rdx - 0x77000000], ch ; ret 0xe283
0x000000000019d55d : test byte ptr [rdx], al ; add byte ptr [rax], al ; push rdi ; call rcx
0x0000000000173c65 : test byte ptr [rdx], al ; add byte ptr [rsi + rcx*2 - 7], al ; jmp rsp
0x000000000015f83c : test byte ptr [rdx], al ; cmc ; call rax
0x00000000000d311d : test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x0000000000021617 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x0000000000173cac : test byte ptr [rsi + 0x56740002], al ; stc ; call rsp
0x00000000001065f9 : test byte ptr [rsi + rcx*2 + 1], 0x20 ; je 0x1065e8 ; ret
0x0000000000171050 : test byte ptr [rsi], cl ; call rsp
0x000000000017671c : test byte ptr [rsi], dl ; add byte ptr [rax], al ; jo 0x1767a2 ; jmp 0x17672a
0x00000000000e5436 : test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xe5416
0x00000000000433d6 : test byte ptr [rsp + rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000009bb52 : test ch, 0xf0 ; je 0x9bb4b ; movzx eax, cl ; pop rbx ; ret
0x0000000000174c18 : test ch, ah ; cli ; jmp rsp
0x0000000000179c4d : test ch, ah ; jmp qword ptr [rdx]
0x000000000019391c : test ch, al ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xa], cl ; call qword ptr [rax]
0x0000000000032c70 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c3732 : test cl, 1 ; jne 0xc36c4 ; pop rbx ; ret
0x00000000000becb2 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000091b49 : test cl, cl ; je 0x91b11 ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000091180 : test cl, cl ; jne 0x91175 ; ret
0x000000000009b36f : test cl, cl ; jne 0x9b364 ; ret
0x000000000009b41f : test cl, cl ; jne 0x9b414 ; ret
0x000000000009b6df : test cl, cl ; jne 0x9b6d8 ; sub rax, 1 ; ret
0x00000000000efda5 : test cl, cl ; jne 0xefd95 ; ret
0x0000000000056aab : test cl, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000009bb7a : test dh, 0xf0 ; je 0x9bb49 ; movzx eax, dl ; pop rbx ; ret
0x000000000009bb7a : test dh, 0xf0 ; je 0x9bb4b ; movzx eax, dl ; pop rbx ; ret
0x0000000000172759 : test dh, bh ; jmp rsp
0x0000000000091330 : test dh, dh ; jne 0x91327 ; mov qword ptr [rdx], rcx ; ret
0x0000000000024f05 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000149954 : test dl, 0x40 ; jne 0x149919 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000149982 : test dl, 4 ; jne 0x149919 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000008d892 : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000045cc4 : test dl, dh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000c5f69 : test dl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000039949 : test dl, dl ; cmovne eax, ecx ; add rsp, 8 ; ret
0x000000000008d376 : test dl, dl ; cmovne rax, rcx ; ret
0x00000000000338c2 : test dl, dl ; jne 0x338a4 ; ret
0x0000000000091134 : test dl, dl ; jne 0x9112d ; ret
0x000000000009b58f : test dl, dl ; jne 0x9b588 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000bc4a5 : test dl, dl ; jne 0xbc485 ; xor eax, eax ; ret
0x00000000000bc6b6 : test dl, dl ; jne 0xbc69e ; ret
0x0000000000085bb9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x0000000000097beb : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000990fb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x0000000000098ffb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x0000000000116ef5 : test dword ptr [rax + rax], 0x503d8d48 ; ret
0x000000000002f268 : test dword ptr [rax - 0x77], 0x89488845 ; ret
0x000000000003311e : test dword ptr [rax - 0x77], 0xe8082444 ; ret
0x000000000006e942 : test dword ptr [rax - 0x77], 0xe8082474 ; ret
0x00000000000570e2 : test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x0000000000046e43 : test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x0000000000046e9e : test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x00000000001912dc : test dword ptr [rax - 0xb], edx ; jmp qword ptr [rdx]
0x000000000016fc85 : test dword ptr [rax], 0xefef7900 ; jmp rsp
0x000000000016fc9d : test dword ptr [rax], 0xefefd400 ; jmp rsp
0x000000000010d4c8 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; ret 0x8949
0x00000000000f8219 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf81ef
0x000000000007d0c5 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000008b993 : test dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000650e5 : test dword ptr [rax], esp ; ret
0x000000000007d0c4 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000008ab3f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009169e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011b319 : test dword ptr [rbx + 0x48000001], edx ; add esp, 8 ; ret
0x0000000000001b0e : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x000000000009cac0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x000000000009d3c8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000141bc8 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000141ba8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000141ac0 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000991f0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000000fff93 : test dword ptr [rbx + 7], ebx ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001482d7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000148726 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000018248c : test dword ptr [rbx - 0x11], esp ; jmp qword ptr [rdx]
0x0000000000002b5f : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000091608 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000084eda : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x00000000000858d0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000079cae : test dword ptr [rcx + 0x5b000045], esp ; ret
0x00000000001418ca : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x00000000001482ad : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000977d2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001481bd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001480cd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009cb07 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000014b807 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x000000000009cad7 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000141c6a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000119a87 : test dword ptr [rcx - 0x76b7000a], eax ; ret 0x854d
0x000000000018d63d : test dword ptr [rcx], eax ; add al, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000055435 : test dword ptr [rcx], ebx ; ret
0x000000000007c3cd : test dword ptr [rdi + 0x48000021], esp ; mov eax, ebx ; pop rbx ; ret
0x0000000000085aba : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x0000000000035953 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x0000000000097937 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000097917 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x00000000000f1dbb : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000f2254 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x000000000008a955 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000035bb6 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x0000000000038480 : test dword ptr [rdx + 0x48000001], ebp ; add esp, 8 ; ret
0x0000000000097ad1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x0000000000098ed9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000000771f3 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000149622 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000147ff2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000494f2 : test dword ptr [rdx + rdi*8 + 0x1ffff], ebp ; add byte ptr [rax], al ; jmp rax
0x000000000019d685 : test dword ptr [rdx], eax ; add al, bh ; add edi, eax ; call qword ptr [rax]
0x000000000019d615 : test dword ptr [rdx], eax ; add byte ptr [rax + 3], ch ; clc ; call qword ptr [rdi]
0x0000000000141b87 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x0000000000173c85 : test dword ptr [rdx], eax ; add byte ptr [rdx + rdx*2], ah ; stc ; jmp rsp
0x00000000000c7f74 : test dword ptr [rdx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d4815 : test dword ptr [rip + 0xfffffff], esi ; ret 0x8588
0x000000000007bf16 : test dword ptr [rsi + 0x25], esi ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000009d46d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000011bc95 : test dword ptr [rsi + 0xf000000], ebx ; mov bh, 5 ; jmp rsp
0x000000000014b192 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000978f5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000978d5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000977ed : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e3b9f : test dword ptr [rsi + 9], ebx ; add byte ptr [rax], al ; ret
0x00000000000ed6ae : test dword ptr [rsi + rdi*8 - 0x76b70001], ecx ; ret
0x000000000008ac3e : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000787f7 : test dword ptr [rsi - 0xcffffa7], ecx ; ret
0x0000000000075788 : test dword ptr [rsi - 0xcffffe6], ebp ; ret
0x0000000000023055 : test dword ptr [rsi], 0x8b480000 ; jnp 0x2307d ; call rax
0x00000000001484f8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000038356 : test eax, 0x39480036 ; ret
0x0000000000160864 : test eax, 0x64fff6c2 ; ret
0x000000000015c700 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000132026 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000348e1 : test eax, 0x7fffff ; je 0x348de ; ret
0x000000000015f838 : test eax, 0x84fff4f3 ; add dh, ch ; call rax
0x000000000005bd91 : test eax, 0x8d490001 ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000160df6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000106d30 : test eax, eax ; je 0x106d3c ; ret
0x00000000001098e1 : test eax, eax ; je 0x1098f1 ; mov rdi, rsp ; call rax
0x000000000010a1b5 : test eax, eax ; je 0x10a1c5 ; mov rdi, rbp ; call rax
0x000000000010a566 : test eax, eax ; je 0x10a574 ; ret
0x000000000010b123 : test eax, eax ; je 0x10b133 ; mov rdi, r14 ; call rax
0x000000000010b3a1 : test eax, eax ; je 0x10b3b1 ; mov rdi, rbx ; call rax
0x000000000010f64b : test eax, eax ; je 0x10f65b ; mov rdi, r12 ; call rax
0x000000000010f829 : test eax, eax ; je 0x10f83b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011087f : test eax, eax ; je 0x11088f ; mov rdi, rbx ; call rax
0x0000000000110940 : test eax, eax ; je 0x110950 ; mov rdi, rbp ; call rax
0x00000000001114dd : test eax, eax ; je 0x1114ef ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000111b9c : test eax, eax ; je 0x111bac ; mov rdi, r12 ; call rax
0x0000000000111f0d : test eax, eax ; je 0x111f1f ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001138ec : test eax, eax ; je 0x1138ca ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001138bd : test eax, eax ; je 0x1138cd ; pop rbx ; ret
0x0000000000113929 : test eax, eax ; je 0x1138e1 ; pop rbx ; ret
0x0000000000114479 : test eax, eax ; je 0x11448b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000114ad2 : test eax, eax ; je 0x114ae4 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001185c6 : test eax, eax ; je 0x1185d6 ; xor eax, eax ; ret
0x000000000011f673 : test eax, eax ; je 0x11f67f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000120658 : test eax, eax ; je 0x120664 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000021d58 : test eax, eax ; je 0x21d62 ; jmp rax
0x0000000000021d88 : test eax, eax ; je 0x21d92 ; jmp rax
0x000000000002bc9e : test eax, eax ; je 0x2bca8 ; call rax
0x000000000002ce69 : test eax, eax ; je 0x2ce73 ; call rax
0x0000000000073247 : test eax, eax ; je 0x7325c ; mov rdi, qword ptr [rdi] ; call 0x1f479
0x0000000000073a7d : test eax, eax ; je 0x73a8d ; pop rbx ; ret
0x000000000007a975 : test eax, eax ; je 0x7a98e ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x000000000007cfc7 : test eax, eax ; je 0x7cfd1 ; call rax
0x0000000000081a20 : test eax, eax ; je 0x81a31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9fac : test eax, eax ; je 0xb9fb6 ; call rax
0x00000000000ba1a9 : test eax, eax ; je 0xba1b7 ; call rax
0x00000000000e169c : test eax, eax ; je 0xe16a7 ; ret
0x00000000000e3101 : test eax, eax ; je 0xe3110 ; mov qword ptr [rax], rdx ; ret
0x00000000000e69ac : test eax, eax ; je 0xe6a50 ; call rax
0x00000000000e6b23 : test eax, eax ; je 0xe6c28 ; call rax
0x00000000000f5088 : test eax, eax ; je 0xf5095 ; ret
0x00000000000f71fa : test eax, eax ; je 0xf7210 ; add rsp, 8 ; ret
0x00000000000ffbc5 : test eax, eax ; je 0xffbd5 ; mov rdi, rbx ; call rax
0x00000000000e85f2 : test eax, eax ; jl 0xe863b ; je 0xe85ff ; ret
0x000000000010713a : test eax, eax ; jne 0x107144 ; ret
0x000000000010cc80 : test eax, eax ; jne 0x10cc67 ; xor eax, eax ; pop rbx ; ret
0x000000000010fa66 : test eax, eax ; jne 0x10fa74 ; ret
0x0000000000114696 : test eax, eax ; jne 0x1146a4 ; ret
0x000000000011e6e6 : test eax, eax ; jne 0x11e6f6 ; xor eax, eax ; ret
0x000000000011e716 : test eax, eax ; jne 0x11e726 ; xor eax, eax ; ret
0x000000000011e746 : test eax, eax ; jne 0x11e756 ; xor eax, eax ; ret
0x000000000011e776 : test eax, eax ; jne 0x11e786 ; xor eax, eax ; ret
0x000000000011e7a6 : test eax, eax ; jne 0x11e7b6 ; xor eax, eax ; ret
0x000000000011e7d6 : test eax, eax ; jne 0x11e7e6 ; xor eax, eax ; ret
0x000000000014c316 : test eax, eax ; jne 0x14c325 ; ret
0x000000000014c85f : test eax, eax ; jne 0x14c86d ; pop rbx ; ret
0x0000000000034f66 : test eax, eax ; jne 0x34f75 ; ret
0x00000000000670ff : test eax, eax ; jne 0x67118 ; mov rax, rbx ; pop rbx ; ret
0x0000000000076e94 : test eax, eax ; jne 0x76e8d ; ret
0x000000000007fc9f : test eax, eax ; jne 0x7fc96 ; xor eax, eax ; ret
0x0000000000083d3f : test eax, eax ; jne 0x83d58 ; add rsp, 8 ; ret
0x0000000000084f17 : test eax, eax ; jne 0x84f77 ; xor rax, rax ; ret
0x00000000000916d8 : test eax, eax ; jne 0x91756 ; xor eax, eax ; ret
0x000000000009d5b9 : test eax, eax ; jne 0x9d58d ; ret
0x000000000009d686 : test eax, eax ; jne 0x9d67e ; xor eax, eax ; ret
0x000000000009ead9 : test eax, eax ; jne 0x9ea98 ; nop dword ptr [rax] ; ret
0x00000000000f45c6 : test eax, eax ; jne 0xf45d9 ; mov eax, 1 ; ret
0x00000000000f45f6 : test eax, eax ; jne 0xf4606 ; xor eax, eax ; ret
0x00000000000f4626 : test eax, eax ; jne 0xf4636 ; xor eax, eax ; ret
0x00000000000f4656 : test eax, eax ; jne 0xf4666 ; xor eax, eax ; ret
0x00000000000f4686 : test eax, eax ; jne 0xf4696 ; xor eax, eax ; ret
0x00000000000f46b6 : test eax, eax ; jne 0xf46c6 ; xor eax, eax ; ret
0x00000000000f46e6 : test eax, eax ; jne 0xf46f6 ; xor eax, eax ; ret
0x00000000000f4716 : test eax, eax ; jne 0xf4726 ; xor eax, eax ; ret
0x00000000000f4746 : test eax, eax ; jne 0xf4756 ; xor eax, eax ; ret
0x00000000000f4776 : test eax, eax ; jne 0xf4786 ; xor eax, eax ; ret
0x00000000000f47a6 : test eax, eax ; jne 0xf47b6 ; xor eax, eax ; ret
0x00000000000f47d6 : test eax, eax ; jne 0xf47e6 ; xor eax, eax ; ret
0x00000000000f4806 : test eax, eax ; jne 0xf4816 ; xor eax, eax ; ret
0x00000000000f4836 : test eax, eax ; jne 0xf4846 ; xor eax, eax ; ret
0x00000000000f4866 : test eax, eax ; jne 0xf4876 ; xor eax, eax ; ret
0x00000000000f4896 : test eax, eax ; jne 0xf48a6 ; xor eax, eax ; ret
0x00000000000f48c6 : test eax, eax ; jne 0xf48d6 ; xor eax, eax ; ret
0x00000000000f48f6 : test eax, eax ; jne 0xf4906 ; xor eax, eax ; ret
0x00000000000f4926 : test eax, eax ; jne 0xf4936 ; xor eax, eax ; ret
0x00000000000f4956 : test eax, eax ; jne 0xf4966 ; xor eax, eax ; ret
0x00000000000f4986 : test eax, eax ; jne 0xf4996 ; xor eax, eax ; ret
0x00000000000f49e6 : test eax, eax ; jne 0xf49f6 ; xor eax, eax ; ret
0x00000000000f4a16 : test eax, eax ; jne 0xf4a26 ; xor eax, eax ; ret
0x00000000000f4a46 : test eax, eax ; jne 0xf4a56 ; xor eax, eax ; ret
0x00000000000f4a76 : test eax, eax ; jne 0xf4a86 ; xor eax, eax ; ret
0x00000000000f4aa6 : test eax, eax ; jne 0xf4ab6 ; xor eax, eax ; ret
0x00000000000f4ad6 : test eax, eax ; jne 0xf4ae6 ; xor eax, eax ; ret
0x00000000000f4b06 : test eax, eax ; jne 0xf4b16 ; xor eax, eax ; ret
0x00000000000f4b36 : test eax, eax ; jne 0xf4b46 ; xor eax, eax ; ret
0x00000000000f4b66 : test eax, eax ; jne 0xf4b76 ; xor eax, eax ; ret
0x00000000000f4baf : test eax, eax ; jne 0xf4bab ; pop rdx ; pop r10 ; ret
0x00000000000f4ca3 : test eax, eax ; jne 0xf4cb5 ; ret
0x00000000000f4fab : test eax, eax ; jne 0xf4f75 ; leave ; ret
0x00000000000f74fb : test eax, eax ; jne 0xf74ed ; ret
0x00000000000713eb : test eax, eax ; js 0x713fd ; ret
0x000000000007d2e6 : test eax, eax ; js 0x7d2f5 ; ret
0x000000000010c5c7 : test eax, eax ; std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000017d20c : test eax, ebp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000160030 : test eax, edx ; cmc ; dec dword ptr [rdi - 0x66000a3e] ; ret 0xfff5
0x000000000006b563 : test eax, esi ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000000c65c6 : test ebp, ebp ; je 0xc658c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084e40 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000001058fb : test ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014be7b : test ebx, ebx ; jne 0x14be70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c2cf : test ebx, ebx ; jne 0x14c2c6 ; pop rbx ; ret
0x0000000000073784 : test ebx, ebx ; jne 0x73798 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7446 : test ebx, ebx ; jne 0xf7458 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000149942 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000014994f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002c025 : test ecx, ecx ; je 0x2c02f ; call rcx
0x0000000000067828 : test ecx, ecx ; je 0x67835 ; ret
0x000000000008ea17 : test ecx, ecx ; jg 0x8ea07 ; or byte ptr [rdi], sil ; ret
0x000000000009d5a3 : test ecx, ecx ; jne 0x9d59d ; ret
0x000000000009cff8 : test ecx, ecx ; mov dword ptr [r8 + 4], ecx ; jne 0x9cfd1 ; ret
0x000000000009bdc3 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0x9bdbf ; ret
0x0000000000081687 : test ecx, edi ; or eax, dword ptr [rax] ; ret
0x000000000016cf39 : test edi, ebx ; call qword ptr [rax]
0x0000000000195f24 : test edi, ecx ; cmc ; jmp qword ptr [rdx]
0x000000000014c00b : test edi, edi ; jne 0x14bfff ; pop rbx ; ret
0x00000000000e6031 : test edi, edi ; jne 0xe6045 ; ret
0x00000000000f8de2 : test edi, edi ; js 0xf8df9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000007c3f8 : test edx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007dfa3 : test edx, edi ; je 0x7dfb6 ; pop rbx ; ret
0x00000000000c6104 : test edx, edx ; cmovne eax, edx ; jmp 0xc60e6
0x00000000000e750f : test edx, edx ; cmovne eax, edx ; ret
0x0000000000038257 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000e5254 : test edx, edx ; cmovns rax, rdx ; jmp 0xe5263
0x000000000010bc37 : test edx, edx ; je 0x10bc47 ; mov rdi, rbp ; call rdx
0x000000000014bc04 : test edx, edx ; je 0x14bc0e ; call rdx
0x000000000014bd0d : test edx, edx ; je 0x14bd1c ; call rdx
0x00000000000731ea : test edx, edx ; je 0x73201 ; mov eax, 0xffffffff ; ret
0x0000000000078fb3 : test edx, edx ; je 0x78fbd ; call rdx
0x0000000000081c49 : test edx, edx ; je 0x81c57 ; bsf eax, edx ; ret
0x0000000000081c49 : test edx, edx ; je 0x81c58 ; bsf eax, edx ; ret
0x0000000000081cf2 : test edx, edx ; je 0x81d07 ; bsf rax, rdx ; ret
0x0000000000081cf2 : test edx, edx ; je 0x81d08 ; bsf rax, rdx ; ret
0x0000000000081c96 : test edx, edx ; je 0x81d18 ; bsf rax, rdx ; ret
0x0000000000081ee1 : test edx, edx ; je 0x81f07 ; bsf rax, rdx ; ret
0x0000000000081ee1 : test edx, edx ; je 0x81f08 ; bsf rax, rdx ; ret
0x00000000000ba129 : test edx, edx ; je 0xba137 ; call rdx
0x00000000001143f5 : test edx, edx ; jne 0x1143e5 ; pop rbx ; ret
0x000000000006de6f : test edx, edx ; jne 0x6de65 ; ret
0x0000000000075c3f : test edx, edx ; jne 0x75c35 ; ret
0x000000000007fd59 : test edx, edx ; jne 0x7fd55 ; ret
0x000000000009eb1a : test edx, edx ; jne 0x9eb15 ; ret
0x00000000000f4ead : test edx, edx ; jne 0xf4ea5 ; leave ; ret
0x00000000000217db : test edx, edx ; jns 0x216c2 ; jmp 0x217b0
0x000000000009d8cf : test edx, edx ; mov dword ptr [rax], edx ; jne 0x9d8cf ; ret
0x00000000000aa30f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xaa310 ; ret
0x0000000000116d00 : test edx, edx ; mov eax, 1 ; jne 0x116d19 ; ret
0x0000000000116d40 : test edx, edx ; mov eax, 1 ; jne 0x116d59 ; ret
0x0000000000075243 : test edx, edx ; push rbx ; mov rbx, rdx ; jne 0x75259 ; pop rbx ; ret
0x000000000009dd19 : test edx, edx ; sete al ; ret
0x0000000000149935 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000028686 : test edx, esi ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002b6b0 : test esi, esi ; je 0x2b67e ; pop rbx ; ret
0x0000000000081dd1 : test esi, esi ; jne 0x81de0 ; xor rax, rax ; ret
0x000000000008cade : test esi, esi ; jne 0x8caf1 ; jmp 0x8caab
0x00000000000f7598 : test esi, esi ; mov dword ptr [rax], esi ; jne 0xf758f ; ret
0x00000000000c9309 : test esi, esi ; ret 0x7408
0x000000000007fd12 : test esp, esp ; jne 0x7fd3d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035bb5 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000007fd11 : test r12, r12 ; jne 0x7fd3e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f4faa : test r8, r8 ; jne 0xf4f76 ; leave ; ret
0x000000000008d339 : test r8b, r8b ; jne 0x8d2e3 ; mov rax, rdi ; ret
0x00000000000911d8 : test r8b, r8b ; jne 0x911c6 ; ret
0x00000000000912cf : test r8b, r8b ; jne 0x912bf ; xor eax, eax ; ret
0x000000000011f672 : test r8d, r8d ; je 0x11f680 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000120657 : test r8d, r8d ; je 0x120665 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000009d5b8 : test r8d, r8d ; jne 0x9d58e ; ret
0x000000000009ead8 : test r8d, r8d ; jne 0x9ea99 ; nop dword ptr [rax] ; ret
0x00000000000f74fa : test r8d, r8d ; jne 0xf74ee ; ret
0x00000000001098e0 : test rax, rax ; je 0x1098f2 ; mov rdi, rsp ; call rax
0x000000000010a1b4 : test rax, rax ; je 0x10a1c6 ; mov rdi, rbp ; call rax
0x000000000010b122 : test rax, rax ; je 0x10b134 ; mov rdi, r14 ; call rax
0x000000000010b3a0 : test rax, rax ; je 0x10b3b2 ; mov rdi, rbx ; call rax
0x000000000010f64a : test rax, rax ; je 0x10f65c ; mov rdi, r12 ; call rax
0x000000000010f828 : test rax, rax ; je 0x10f83c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000011087e : test rax, rax ; je 0x110890 ; mov rdi, rbx ; call rax
0x000000000011093f : test rax, rax ; je 0x110951 ; mov rdi, rbp ; call rax
0x00000000001114dc : test rax, rax ; je 0x1114f0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000111b9b : test rax, rax ; je 0x111bad ; mov rdi, r12 ; call rax
0x0000000000111f0c : test rax, rax ; je 0x111f20 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001138bc : test rax, rax ; je 0x1138ce ; pop rbx ; ret
0x0000000000113928 : test rax, rax ; je 0x1138e2 ; pop rbx ; ret
0x0000000000114478 : test rax, rax ; je 0x11448c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000114ad1 : test rax, rax ; je 0x114ae5 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000021d57 : test rax, rax ; je 0x21d63 ; jmp rax
0x0000000000021d87 : test rax, rax ; je 0x21d93 ; jmp rax
0x000000000002bc9d : test rax, rax ; je 0x2bca9 ; call rax
0x000000000002ce68 : test rax, rax ; je 0x2ce74 ; call rax
0x0000000000073a7c : test rax, rax ; je 0x73a8e ; pop rbx ; ret
0x000000000007cfc6 : test rax, rax ; je 0x7cfd2 ; call rax
0x0000000000081a1f : test rax, rax ; je 0x81a32 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9fab : test rax, rax ; je 0xb9fb7 ; call rax
0x00000000000ba1a8 : test rax, rax ; je 0xba1b8 ; call rax
0x00000000000e169b : test rax, rax ; je 0xe16a8 ; ret
0x00000000000e3100 : test rax, rax ; je 0xe3111 ; mov qword ptr [rax], rdx ; ret
0x00000000000e69ab : test rax, rax ; je 0xe6a51 ; call rax
0x00000000000e6b22 : test rax, rax ; je 0xe6c29 ; call rax
0x00000000000f5087 : test rax, rax ; je 0xf5096 ; ret
0x00000000000f71f9 : test rax, rax ; je 0xf7211 ; add rsp, 8 ; ret
0x00000000000ffbc4 : test rax, rax ; je 0xffbd6 ; mov rdi, rbx ; call rax
0x00000000000e85f1 : test rax, rax ; jl 0xe863c ; je 0xe8600 ; ret
0x0000000000076e93 : test rax, rax ; jne 0x76e8e ; ret
0x000000000007fc9e : test rax, rax ; jne 0x7fc97 ; xor eax, eax ; ret
0x000000000014be7a : test rbx, rbx ; jne 0x14be71 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c2ce : test rbx, rbx ; jne 0x14c2c7 ; pop rbx ; ret
0x0000000000073783 : test rbx, rbx ; jne 0x73799 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7445 : test rbx, rbx ; jne 0xf7459 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c024 : test rcx, rcx ; je 0x2c030 ; call rcx
0x000000000014c00a : test rdi, rdi ; jne 0x14c000 ; pop rbx ; ret
0x00000000000e6030 : test rdi, rdi ; jne 0xe6046 ; ret
0x000000000007dfa2 : test rdx, rdi ; je 0x7dfb7 ; pop rbx ; ret
0x000000000010bc36 : test rdx, rdx ; je 0x10bc48 ; mov rdi, rbp ; call rdx
0x000000000014bc03 : test rdx, rdx ; je 0x14bc0f ; call rdx
0x000000000014bd0c : test rdx, rdx ; je 0x14bd1d ; call rdx
0x0000000000078fb2 : test rdx, rdx ; je 0x78fbe ; call rdx
0x0000000000081cf1 : test rdx, rdx ; je 0x81d08 ; bsf rax, rdx ; ret
0x0000000000081cf1 : test rdx, rdx ; je 0x81d09 ; bsf rax, rdx ; ret
0x0000000000081c95 : test rdx, rdx ; je 0x81d19 ; bsf rax, rdx ; ret
0x0000000000081ee0 : test rdx, rdx ; je 0x81f08 ; bsf rax, rdx ; ret
0x0000000000081ee0 : test rdx, rdx ; je 0x81f09 ; bsf rax, rdx ; ret
0x00000000000ba128 : test rdx, rdx ; je 0xba138 ; call rdx
0x00000000001143f4 : test rdx, rdx ; jne 0x1143e6 ; pop rbx ; ret
0x000000000006de6e : test rdx, rdx ; jne 0x6de66 ; ret
0x0000000000075c3e : test rdx, rdx ; jne 0x75c36 ; ret
0x000000000007fd58 : test rdx, rdx ; jne 0x7fd56 ; ret
0x00000000000f4eac : test rdx, rdx ; jne 0xf4ea6 ; leave ; ret
0x0000000000081dd0 : test rsi, rsi ; jne 0x81de1 ; xor rax, rax ; ret
0x000000000008cadd : test rsi, rsi ; jne 0x8caf2 ; jmp 0x8caac
0x000000000009132f : test sil, sil ; jne 0x91328 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b5e : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007551d : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000124691 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000018d35c : vpshufb xmm0, xmm15, xmmword ptr [r8 + 0x3b] ; cmc ; jmp rdi
0x0000000000117207 : wait ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001715ad : wait ; add dword ptr [rax], eax ; ret 0xf490
0x000000000018f2d1 : wait ; cmc ; jmp qword ptr [rcx]
0x000000000019226d : wait ; cmc ; jmp qword ptr [rdx]
0x0000000000171b49 : wait ; cmc ; jmp rsp
0x000000000006b3a5 : wait ; ret
0x000000000009afad : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009b02f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009b131 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb0 : xabort -0xd ; ret
0x0000000000002bac : xbegin 0xfffffffff8c6efac ; ret
0x000000000016df11 : xchg ah, bh ; call qword ptr [rdx + 0x12fffc8e]
0x000000000011f47f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fca3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001215ef : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f06f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x000000000011fd93 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fbb3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011eb7b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000033ecf : xchg al, al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000002d02b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000011f38b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000016efe8 : xchg ax, bx ; in al, dx ; jmp rsp
0x000000000012558c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000124dac : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000012519c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001249bc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001274bd : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000176d6d : xchg bl, ch ; jmp qword ptr [rdx]
0x0000000000125fc1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001271c1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001268c1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000126bc1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001262b9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001205fb : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000012214f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012192f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000011edff : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012110f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000000c17a1 : xchg byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0x000000000011f13f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000120153 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000518bf : xchg byte ptr [rax - 0x7d], cl ; ret
0x0000000000022307 : xchg byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000010bccf : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xf077
0x000000000011f45b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124b5b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f52b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121c6f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f8e3 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000012144f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000120c2f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000121e0f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000011f2df : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000120333 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011fac3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000011eacf : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000120513 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000016d798 : xchg byte ptr [rcx - 4], dh ; call qword ptr [rsi]
0x0000000000171265 : xchg byte ptr [rcx], al ; add ah, ah ; ret 0xfff3
0x0000000000171255 : xchg byte ptr [rcx], al ; add ah, al ; ret 0xfff3
0x000000000017125d : xchg byte ptr [rcx], al ; add ah, dl ; ret 0xfff3
0x000000000018d715 : xchg byte ptr [rcx], al ; add al, ch ; cmc ; jmp qword ptr [rcx]
0x000000000018d6b5 : xchg byte ptr [rcx], al ; add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x000000000018d69d : xchg byte ptr [rcx], al ; add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000033f43 : xchg byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007c08e : xchg byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000171264 : xchg byte ptr [rcx], r8b ; add ah, ah ; ret 0xfff3
0x000000000011eecf : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000012504c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012486c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012597c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000033fbb : xchg byte ptr [rdi], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000011f3af : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000120423 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011eb9f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000120f6f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000170098 : xchg byte ptr [rdx - 0x10], al ; call rsp
0x000000000019d77d : xchg byte ptr [rdx], al ; add byte ptr [rax], dh ; add al, 0xf8 ; jmp qword ptr [rcx]
0x0000000000173cad : xchg byte ptr [rdx], al ; add byte ptr [rsi + rdx*2 - 7], dh ; call rsp
0x000000000011ec41 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fd65 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fe55 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fc75 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011ef9f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000126566 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001210a5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121da5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000127466 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126b66 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000126866 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001218c5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000124f4d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012625e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012587d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011f20f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000011f9d3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001238ff : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000012371f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001240f7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123017 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123f17 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001220e5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001213e5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000120f05 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000121c05 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000017d914 : xchg dh, al ; out dx, al ; jmp qword ptr [rdx]
0x000000000012509d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002591 : xchg dh, ch ; ret 0x88ad
0x00000000001248bd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011ec65 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001748f1 : xchg dl, bh ; jmp rsp
0x000000000011fb85 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f9a5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011fa95 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000011f8b5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000001748f0 : xchg dl, r15b ; jmp rsp
0x00000000000235c4 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000009d5b7 : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000058326 : xchg dword ptr [rbp - 0x7cfffff5], ebp ; ret 0x8308
0x00000000000ca3a8 : xchg dword ptr [rbx - 0x76fffff7], esp ; ret 0x8d48
0x000000000015a3cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000db0f1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000058295 : xchg dword ptr [rcx - 0x7cffffe3], ecx ; ret 0x8308
0x000000000018d7f5 : xchg dword ptr [rcx], eax ; add byte ptr [rax + 0x46], cl ; cmc ; jmp qword ptr [rcx]
0x000000000018d7c5 : xchg dword ptr [rcx], eax ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x000000000018d7dd : xchg dword ptr [rcx], eax ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001712a5 : xchg dword ptr [rcx], eax ; add byte ptr [rsp + rcx*8], dl ; jmp rsp
0x000000000018d7dc : xchg dword ptr [rcx], r8d ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000f4e2d : xchg dword ptr [rdi + 0x2b], edx ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000063a8c : xchg dword ptr [rdi - 0x76fffff0], esp ; ret 0x348
0x00000000000f4bad : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xf4bad ; pop rdx ; pop r10 ; ret
0x00000000000e50fc : xchg dword ptr [rdi], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e4b3c : xchg dword ptr [rdi], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000181946 : xchg dword ptr [rdx + 0xd1cffef], ecx ; loopne 0x181987 ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000062830 : xchg dword ptr [rdx - 0x76fffffd], esi ; ret 0x348
0x0000000000060985 : xchg dword ptr [rdx - 0x7cfffff4], ecx ; ret 0x8308
0x0000000000173ced : xchg dword ptr [rdx], eax ; add ah, dl ; pop rax ; stc ; call rsp
0x000000000019d815 : xchg dword ptr [rdx], eax ; add byte ptr [rax + 9], ch ; clc ; call qword ptr [rcx]
0x0000000000181fc4 : xchg dword ptr [rsi - 0x11], ebx ; jmp qword ptr [rdx]
0x00000000000629a9 : xchg dword ptr [rsi - 0x76fffffe], ebx ; ret 0x348
0x000000000005d17f : xchg dword ptr [rsi - 0x77000000], esi ; ret 0x348
0x000000000015a56b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000122c58 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x000000000017501d : xchg eax, ebp ; add al, byte ptr [rax] ; in al, -0x23 ; std ; call rsp
0x00000000000b6ae3 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f900d : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x0000000000051bca : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000016ee45 : xchg eax, ebp ; add byte ptr [rax], al ; hlt ; jno 0x16ee3d ; call rsp
0x000000000016dd29 : xchg eax, ebp ; cld ; call qword ptr [rdx]
0x000000000016dc6d : xchg eax, ebp ; cld ; call rax
0x000000000016dc69 : xchg eax, ebp ; cld ; inc dword ptr [rax - 0x6b] ; cld ; call rax
0x000000000016dca9 : xchg eax, ebp ; cld ; jmp qword ptr [rsi]
0x000000000016de69 : xchg eax, ebp ; cld ; jmp rax
0x0000000000176f81 : xchg eax, ebp ; jmp 0x176f85
0x0000000000176fb1 : xchg eax, ebp ; jmp 0x176fb5
0x0000000000187fbd : xchg eax, ebp ; jmp qword ptr [rdx]
0x000000000018a031 : xchg eax, ebp ; jmp rdx
0x00000000000020c3 : xchg eax, ebp ; ret
0x00000000000cd03c : xchg eax, ebp ; ret 0x2041
0x00000000000d1e7e : xchg eax, ebp ; ret 0x460f
0x000000000003a178 : xchg eax, ebp ; ret 0x53c
0x00000000000705b3 : xchg eax, ebp ; ret 0x60e9
0x00000000000435f5 : xchg eax, ebp ; ret 0x8348
0x0000000000077ef7 : xchg eax, ebp ; ret 0x8441
0x0000000000073d34 : xchg eax, ebp ; ret 0x8445
0x0000000000039c47 : xchg eax, ebp ; ret 0x8545
0x00000000000435fe : xchg eax, ebp ; ret 0x854d
0x000000000007b5ce : xchg eax, ebp ; ret 0x948
0x00000000000309d5 : xchg eax, ebp ; ret 0x953d
0x0000000000039aa5 : xchg eax, ebp ; ret 0xb60f
0x00000000000434d9 : xchg eax, ebp ; ret 0xc031
0x00000000000a9754 : xchg eax, ebp ; ret 0xc0e9
0x0000000000039b4d : xchg eax, ebp ; ret 0xc748
0x000000000010152a : xchg eax, ebp ; ret 0xc985
0x00000000000e543c : xchg eax, ebp ; ret 0xcfeb
0x000000000008e97c : xchg eax, ebp ; ret 0xd029
0x000000000010c434 : xchg eax, ebp ; ret 0xd089
0x000000000010145b : xchg eax, ebp ; ret 0xd120
0x00000000000aae3d : xchg eax, ebp ; ret 0xd138
0x0000000000070518 : xchg eax, ebp ; ret 0xd284
0x0000000000039ba4 : xchg eax, ebp ; ret 0xd348
0x0000000000069b27 : xchg eax, ebp ; ret 0xdaf7
0x00000000000cf031 : xchg eax, ebp ; ret 0xe083
0x000000000009e5d3 : xchg eax, ebp ; ret 0xf883
0x00000000000434a8 : xchg eax, ebp ; ret 0xff31
0x00000000000e2242 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000006770a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000d1e5e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000e1d6f : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000112d51 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000072167 : xchg eax, ebp ; sar dl, cl ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e2427 : xchg eax, ebp ; sub al, 0 ; mov rdx, rax ; jmp 0xe23c5
0x0000000000002b5d : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000762c2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000005ed7f : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147440 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003905 : xchg eax, ebx ; and cl, ah ; ret
0x000000000016dc7d : xchg eax, ebx ; cld ; call qword ptr [rax]
0x000000000016de79 : xchg eax, ebx ; cld ; jmp qword ptr [rax]
0x000000000016dd3d : xchg eax, ebx ; cld ; jmp rdx
0x000000000015ed65 : xchg eax, ebx ; cld ; push rax ; xchg eax, esp ; cld ; call qword ptr [rax]
0x00000000000f7d5f : xchg eax, ebx ; cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x00000000001715e1 : xchg eax, ebx ; hlt ; call rsp
0x00000000000c8157 : xchg eax, ebx ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x000000000016efe9 : xchg eax, ebx ; in al, dx ; jmp rsp
0x000000000019537c : xchg eax, ebx ; iretd ; cmc ; jmp qword ptr [rdx]
0x0000000000182684 : xchg eax, ebx ; jno 0x182679 ; jmp qword ptr [rdx]
0x0000000000096dfc : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000012a0e2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000010bf7e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x00000000001807e4 : xchg eax, ecx ; adc al, 0xef ; jmp qword ptr [rdx]
0x000000000016ed65 : xchg eax, ecx ; add byte ptr [rax], al ; mov ah, 0x67 ; in al, dx ; jmp rsp
0x000000000002436b : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000018e255 : xchg eax, ecx ; add dword ptr [rax], eax ; call 0x2218d7c8
0x0000000000171445 : xchg eax, ecx ; add dword ptr [rax], eax ; je 0x1714c7 ; hlt ; call rsp
0x000000000018e20d : xchg eax, ecx ; add dword ptr [rax], eax ; jo 0x18e27d ; cmc ; jmp qword ptr [rcx]
0x000000000018e1f5 : xchg eax, ecx ; add dword ptr [rax], eax ; pop rax ; cmc ; jmp qword ptr [rcx]
0x000000000018e285 : xchg eax, ecx ; add dword ptr [rax], eax ; sbb byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018e23d : xchg eax, ecx ; add dword ptr [rax], eax ; shl byte ptr [rbp - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000056d5e : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000007c28 : xchg eax, ecx ; and eax, dword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000017faec : xchg eax, ecx ; clc ; out dx, al ; jmp qword ptr [rdx]
0x000000000016de4d : xchg eax, ecx ; cld ; call qword ptr [rax]
0x000000000016dc51 : xchg eax, ecx ; cld ; jmp rax
0x000000000016de49 : xchg eax, ecx ; cld ; ljmp ptr [rdx - 0x6f] ; cld ; call qword ptr [rax]
0x0000000000119755 : xchg eax, ecx ; dec dword ptr [rax + 0x29] ; ret
0x00000000001221f1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000002187e : xchg eax, ecx ; push -0xcfffff7 ; ret
0x000000000010ff1b : xchg eax, ecx ; ret 0xfffc
0x00000000000662f2 : xchg eax, ecx ; sti ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000012091f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000054483 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10ff43], al ; call qword ptr [rax]
0x00000000000530a6 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x113743], al ; call qword ptr [rax]
0x00000000000db1bc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000018e79d : xchg eax, edi ; add dword ptr [rax], eax ; mov al, 0x78 ; cmc ; call qword ptr [rdx]
0x00000000000ae63e : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000016dc5d : xchg eax, edi ; cld ; call qword ptr [rax + 0x20fffc96]
0x000000000016de55 : xchg eax, edi ; cld ; call qword ptr [rax]
0x000000000016dd19 : xchg eax, edi ; cld ; call rdx
0x000000000016dd15 : xchg eax, edi ; cld ; inc dword ptr [rdx - 0x69] ; cld ; call rdx
0x000000000016dc99 : xchg eax, edi ; cld ; jmp rsi
0x000000000018efd1 : xchg eax, edi ; cmc ; call qword ptr [rax]
0x000000000018ef11 : xchg eax, edi ; cmc ; call qword ptr [rcx]
0x000000000018ef59 : xchg eax, edi ; cmc ; jmp qword ptr [rcx]
0x00000000000b5cfa : xchg eax, edi ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018824d : xchg eax, edi ; jmp qword ptr [rdx]
0x000000000017d2ff : xchg eax, edi ; ret
0x00000000000a8b49 : xchg eax, edi ; ret 0x8941
0x00000000000bb41e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000eab86 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000dd3a9 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000e02b4 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c6ba8 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000195854 : xchg eax, edi ; sal ch, 1 ; jmp qword ptr [rdx]
0x00000000001934f4 : xchg eax, edi ; scasb al, byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x000000000015aa18 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000173eb5 : xchg eax, edx ; add al, byte ptr [rax] ; nop ; sahf ; stc ; call rsp
0x00000000000fa36b : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2aef
0x000000000018e2b5 : xchg eax, edx ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x000000000018e29d : xchg eax, edx ; add dword ptr [rax], eax ; xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000016dcc5 : xchg eax, edx ; cld ; call qword ptr [rsi]
0x000000000015ed61 : xchg eax, edx ; cld ; call rax
0x000000000016de81 : xchg eax, edx ; cld ; inc dword ptr [rax - 0x6e] ; cld ; call rax
0x000000000016de05 : xchg eax, edx ; cld ; jmp rsp
0x00000000000e49da : xchg eax, edx ; cmp byte ptr [rax + rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015c2dd : xchg eax, edx ; jae 0x15c2ba ; push rsi ; pop rdx ; je 0x15c2af ; ret 0xacfc
0x000000000017705d : xchg eax, edx ; jmp 0x177061
0x00000000001770a5 : xchg eax, edx ; jmp 0x1770a9
0x000000000016d820 : xchg eax, edx ; jo 0x16d822 ; jmp qword ptr [rdx]
0x000000000016df14 : xchg eax, edx ; mov dr1, esp ; call qword ptr [rdx]
0x00000000001032c4 : xchg eax, edx ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000dd38e : xchg eax, edx ; ret 0x970f
0x00000000000e02b7 : xchg eax, edx ; ret 0xcc80
0x00000000000bb421 : xchg eax, edx ; ret 0xd029
0x00000000000c6bab : xchg eax, edx ; ret 0xd138
0x000000000015a3cf : xchg eax, edx ; ret 0xf869
0x000000000012426d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000011f677 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000176dfc : xchg eax, edx ; xchg bl, ch ; jmp qword ptr [rdx]
0x0000000000147740 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000133823 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000016ee95 : xchg eax, esi ; add byte ptr [rax], al ; je 0x16ef15 ; in al, dx ; jmp rsp
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000016dca5 : xchg eax, esi ; cld ; call qword ptr [rsi + 0x26fffc95]
0x000000000016dde1 : xchg eax, esi ; cld ; call rsp
0x000000000016dddd : xchg eax, esi ; cld ; inc dword ptr [rsi + rdx*4 - 4] ; call rsp
0x000000000016dc61 : xchg eax, esi ; cld ; jmp qword ptr [rax]
0x00000000000f7a05 : xchg eax, esi ; cmc ; inc dword ptr [rbp - 0x7b] ; in al, -0x77 ; ret 0x87e
0x000000000018ee71 : xchg eax, esi ; cmc ; jmp qword ptr [rcx]
0x000000000016d7bc : xchg eax, esi ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rsi]
0x000000000018817d : xchg eax, esi ; jmp qword ptr [rdx]
0x00000000001477fd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014775b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000fd4af : xchg eax, esi ; ret
0x00000000000818fc : xchg eax, esi ; ret 0x144
0x00000000000f6e0c : xchg eax, esi ; ret 0x394c
0x0000000000077ef0 : xchg eax, esi ; ret 0x8348
0x000000000015cc6c : xchg eax, esi ; ret 0xcd11
0x00000000001477ac : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b5428 : xchg eax, esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000016dca8 : xchg eax, esi ; xchg eax, ebp ; cld ; jmp qword ptr [rsi]
0x0000000000021c33 : xchg eax, esp ; adc byte ptr [rax + rax], dl ; ret
0x000000000017622c : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], dl ; push rsp ; jmp 0x17623a
0x000000000018432c : xchg eax, esp ; add byte ptr [rax], al ; loopne 0x184351 ; cli ; call qword ptr [rax]
0x000000000016ee0d : xchg eax, esp ; add byte ptr [rax], al ; xor al, 0x6f ; in al, dx ; call rsp
0x0000000000170d5c : xchg eax, esp ; add dword ptr gs:[rax], eax ; xchg eax, esp ; out dx, eax ; int1 ; call rsp
0x00000000000a3ba9 : xchg eax, esp ; and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000040f79 : xchg eax, esp ; and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000266d6 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002704e : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006dab8 : xchg eax, esp ; and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001734d9 : xchg eax, esp ; clc ; jmp rsp
0x000000000016de75 : xchg eax, esp ; cld ; call qword ptr [rax + 0x20fffc93]
0x000000000015ed69 : xchg eax, esp ; cld ; call qword ptr [rax]
0x000000000016dcb5 : xchg eax, esp ; cld ; call rsi
0x000000000016dcb1 : xchg eax, esp ; cld ; inc dword ptr [rsi - 0x6c] ; cld ; call rsi
0x00000000001706a8 : xchg eax, esp ; fcompi st(0) ; call rsp
0x000000000017492c : xchg eax, esp ; fld dword ptr [rdx] ; add ah, al ; mov dl, bh ; jmp rsp
0x0000000000172674 : xchg eax, esp ; inc byte ptr [rcx] ; add byte ptr [rsi + rbp*2 - 9], dh ; jmp rsp
0x000000000018c62c : xchg eax, esp ; jne 0x18c637 ; add byte ptr [rax - 4], al ; hlt ; jmp qword ptr [rcx]
0x000000000017cc2c : xchg eax, esp ; jnp 0x17cc36 ; add byte ptr [rax - 0x17], al ; out dx, al ; jmp rsp
0x000000000016ec54 : xchg eax, esp ; lea eax, dword ptr [rax] ; add byte ptr [rcx + rdx*2], dh ; in al, dx ; jmp rsp
0x0000000000172ae0 : xchg eax, esp ; mov bl, 0xf7 ; jmp rsp
0x000000000018dc2c : xchg eax, esp ; mov eax, dword ptr [rcx] ; add al, dl ; push rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000171a3c : xchg eax, esp ; mov ebx, 0x5b640001 ; cmc ; jmp rsp
0x000000000017448c : xchg eax, esp ; mov edi, 0x42b40002 ; cli ; jmp rsp
0x0000000000171354 : xchg eax, esp ; mov word ptr [rcx], es ; add ah, ah ; hlt ; jmp rsp
0x00000000000f607b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000000bc4e3 : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000182f01 : xchg eax, esp ; out dx, eax ; call qword ptr [rdi]
0x0000000000170d60 : xchg eax, esp ; out dx, eax ; int1 ; call rsp
0x0000000000173dec : xchg eax, esp ; pop qword ptr [rdx] ; add byte ptr [rbx + rax*4], dl ; stc ; jmp rsp
0x0000000000174620 : xchg eax, esp ; pop rbp ; cli ; jmp rsp
0x00000000000db303 : xchg eax, esp ; pop rbx ; ret
0x000000000015ce7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x15ce10 ; ret 0x48f
0x000000000003a2a7 : xchg eax, esp ; ret
0x000000000018132c : xchg eax, esp ; ret 0
0x00000000000797ef : xchg eax, esp ; ret 0x1589
0x0000000000079c07 : xchg eax, esp ; ret 0x22e9
0x00000000000ab986 : xchg eax, esp ; ret 0x2b3c
0x0000000000032ab7 : xchg eax, esp ; ret 0x2ce9
0x00000000000d2673 : xchg eax, esp ; ret 0x38b
0x00000000000cccb4 : xchg eax, esp ; ret 0x3d
0x0000000000112cd1 : xchg eax, esp ; ret 0x3d83
0x00000000000d8010 : xchg eax, esp ; ret 0x403c
0x00000000000ab07b : xchg eax, esp ; ret 0x543a
0x00000000000d42ef : xchg eax, esp ; ret 0x59e9
0x00000000000b09d4 : xchg eax, esp ; ret 0x6348
0x0000000000042347 : xchg eax, esp ; ret 0x8341
0x00000000000d2f6d : xchg eax, esp ; ret 0x840f
0x00000000000bcee5 : xchg eax, esp ; ret 0x8548
0x000000000005d4f5 : xchg eax, esp ; ret 0x8941
0x00000000000abd1c : xchg eax, esp ; ret 0x894c
0x0000000000104bf1 : xchg eax, esp ; ret 0x8b44
0x00000000000d4dc5 : xchg eax, esp ; ret 0x8b48
0x00000000000d502d : xchg eax, esp ; ret 0x8ce9
0x0000000000021a87 : xchg eax, esp ; ret 0x8d48
0x000000000002f7b8 : xchg eax, esp ; ret 0xb60f
0x0000000000021b81 : xchg eax, esp ; ret 0xc031
0x0000000000124270 : xchg eax, esp ; ret 0xc085
0x00000000000671ae : xchg eax, esp ; ret 0xd089
0x00000000000479c9 : xchg eax, esp ; ret 0xd284
0x000000000006c19c : xchg eax, esp ; ret 0xdaf7
0x00000000000be73e : xchg eax, esp ; ret 0xe283
0x000000000011730e : xchg eax, esp ; ret 0xea83
0x00000000000c224a : xchg eax, esp ; ret 0xf631
0x00000000000c2497 : xchg eax, esp ; ret 0xfd83
0x0000000000171248 : xchg eax, esp ; ret 0xfff3
0x00000000001744fc : xchg eax, esp ; ret 2
0x000000000009dd1c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x0000000000171d9c : xchg eax, esp ; rol dword ptr [rcx], cl ; add byte ptr [rax + rcx*4 - 0xa], ah ; jmp rsp
0x00000000000b0b27 : xchg eax, esp ; ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000dd1bf : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000414b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000116bd9 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000aa9b4 : xchg eax, esp ; ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x0000000000176b2c : xchg eax, esp ; sbb al, byte ptr [rax] ; add byte ptr [rax + 0x7c], dh ; jmp 0x176b3a
0x0000000000173ab8 : xchg eax, esp ; sbb cl, bh ; call rsp
0x0000000000106d2c : xchg eax, esp ; sub al, byte ptr cs:[rax] ; test eax, eax ; je 0x106d40 ; ret
0x000000000018f92c : xchg eax, esp ; test al, 1 ; add al, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000173c64 : xchg eax, esp ; test byte ptr [rdx], al ; add byte ptr [rsi + rcx*2 - 7], al ; jmp rsp
0x000000000018817c : xchg eax, r14d ; jmp qword ptr [rdx]
0x00000000000f445a : xchg eax, r8d ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000004ffc6 : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aea60 : xchg ebx, ebx ; and al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000185a21 : xchg ecx, esi ; jmp qword ptr [rcx]
0x000000000019a8b9 : xchg edi, esi ; call rdi
0x000000000016e0c9 : xchg esp, edi ; call qword ptr [rax]
0x000000000016e089 : xchg esp, edi ; jmp qword ptr [rax]
0x000000000016df4d : xchg esp, edi ; jmp rdx
0x000000000018832c : xchg rax, r15 ; jmp qword ptr [rdx]
0x0000000000157909 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000129fa9 : xlatb ; add r9, r11 ; jmp r9
0x0000000000170ca1 : xlatb ; int1 ; jmp rsp
0x0000000000045deb : xlatb ; jbe 0x45de8 ; nop ; mov rax, rsi ; ret
0x000000000007dfa4 : xlatb ; je 0x7dfb5 ; pop rbx ; ret
0x00000000000f4cb9 : xlatb ; jmp rax
0x00000000000e7796 : xlatb ; jne 0xe778f ; mov rax, qword ptr [rax + 8] ; ret
0x000000000015b443 : xlatb ; jo 0x15b4bf ; mov ebp, 0xfb67d10d ; ret
0x0000000000077daa : xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x00000000000460a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x46088 ; mov rax, rsi ; ret
0x0000000000187e0c : xlatb ; mov dr0, edx ; jmp qword ptr [rdx]
0x000000000007887f : xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000e2338 : xlatb ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000800e9 : xlatb ; ret
0x0000000000081c6f : xlatb ; ret 0x4166
0x000000000015c8e6 : xlatb ; ret 0x4e27
0x0000000000003230 : xlatb ; ret 0x5a51
0x0000000000083ad7 : xlatb ; ret 0x94c
0x0000000000084d3f : xlatb ; ret 0xc085
0x00000000000800e0 : xlatb ; ret 0xc148
0x0000000000067255 : xlatb ; ret 0xf
0x000000000009183b : xlatb ; ret 0xf188
0x000000000008c6c1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000916d6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009726e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001498f6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000091634 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000815b6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000081476 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000081336 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000811f6 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000810b6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000080f76 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000080e36 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000080cf6 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000080bb6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000080a76 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000080936 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000807f6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000000806b6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000080576 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000080436 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000001945be : xlatb ; sal ebp, -1 ; sbb al, 0xd ; xor cl, al ; cmc ; jmp qword ptr [rdx]
0x00000000001498f2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000083a75 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000083a86 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000001740f1 : xlatb ; stc ; jmp rsp
0x000000000015ee05 : xlatb ; std ; call qword ptr [rax]
0x0000000000035998 : xlatb ; xor eax, eax ; ret
0x000000000018c230 : xor ah, 0xf4 ; jmp qword ptr [rcx]
0x0000000000096a68 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000969fe : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000016d741 : xor ah, bh ; inc eax ; xor esp, edi ; call qword ptr [rax]
0x000000000018236c : xor ah, byte ptr [rax - 0x11] ; jmp qword ptr [rdx]
0x000000000016da40 : xor ah, byte ptr [rbx - 4] ; jmp qword ptr [rdx + 0x12fffc62]
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2559 ; loop 0x25a4 ; ret 0x23cb
0x000000000017b5a0 : xor al, 0 ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; clc ; ret 0xffee
0x00000000001913f0 : xor al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x0000000000056897 : xor al, 0 ; call rax
0x000000000016ead8 : xor al, 0 ; in al, dx ; jmp rsp
0x00000000000670c7 : xor al, 0 ; pop rbx ; pop rbp ; ret
0x00000000001765cc : xor al, 0x15 ; add byte ptr [rax], al ; add byte ptr [rax - 0x15], dh ; call qword ptr [rax]
0x000000000015a3ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000174378 : xor al, 0x1b ; cli ; call rsp
0x000000000007c684 : xor al, 0x24 ; jmp rax
0x00000000000fd5e2 : xor al, 0x24 ; mov rdi, r12 ; call rax
0x000000000008cadb : xor al, 0x24 ; test rsi, rsi ; jne 0x8caf4 ; jmp 0x8caae
0x00000000000badd4 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000c23b0 : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000d0d4f : xor al, 0x39 ; ret 0x840f
0x0000000000178ecc : xor al, 0x3e ; add byte ptr [rax], al ; xor dh, bh ; jmp 0x178eda
0x00000000001891cc : xor al, 0x41 ; add dword ptr [rax], eax ; adc ebx, esi ; jmp qword ptr [rdx]
0x000000000009175b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000000e3838 : xor al, 0x49 ; sub al, 0 ; mov rdx, rax ; jmp 0xe3816
0x000000000016ec58 : xor al, 0x51 ; in al, dx ; jmp rsp
0x000000000016ee10 : xor al, 0x6f ; in al, dx ; call rsp
0x000000000018c7cc : xor al, 0x77 ; add dword ptr [rax], eax ; and byte ptr [rbx], bl ; stc ; call qword ptr [rax]
0x0000000000183544 : xor al, 0x78 ; out dx, eax ; jmp qword ptr [rdx]
0x000000000009bc11 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x000000000009bbd1 : xor al, 0x82 ; add rdx, rsi ; jmp rdx
0x0000000000176d6c : xor al, 0x86 ; jmp 0x176d72
0x000000000017501c : xor al, 0x95 ; add al, byte ptr [rax] ; in al, -0x23 ; std ; call rsp
0x0000000000170978 : xor al, 0xa ; int1 ; call rsp
0x0000000000171700 : xor al, 0xa9 ; hlt ; jmp rsp
0x000000000017fccc : xor al, 0xac ; add byte ptr [rax], al ; add dl, ch ; call rdx
0x0000000000111528 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x0000000000180ecc : xor al, 0xbe ; add byte ptr [rax], al ; push rax ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000016f634 : xor al, 0xc7 ; add byte ptr [rax], al ; push rsp ; sub ch, dh ; jmp rsp
0x00000000001920cc : xor al, 0xd0 ; add dword ptr [rax], eax ; shr byte ptr [rdx], 0xf6 ; jmp qword ptr [rdi]
0x0000000000174b68 : xor al, 0xd1 ; cli ; jmp rsp
0x0000000000174b90 : xor al, 0xd5 ; cli ; jmp rsp
0x0000000000170eb0 : xor al, 0xd6 ; call rsp
0x000000000015b5aa : xor al, 0xd8 ; ret
0x00000000001712e0 : xor al, 0xd9 ; jmp rsp
0x00000000001741f8 : xor al, 0xeb ; stc ; jmp rsp
0x000000000017fd41 : xor al, 0xef ; jmp qword ptr [rax]
0x00000000001990e9 : xor al, 0xf7 ; call qword ptr [rdi]
0x0000000000174cf8 : xor al, 0xfb ; cli ; call rsp
0x000000000016ce7d : xor al, 0xfb ; jmp qword ptr [rax]
0x00000000001884dd : xor al, 1 ; add al, dh ; call rsp
0x000000000009cad8 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000f265c : xor al, 7 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e87ab : xor al, al ; or eax, edi ; ret
0x00000000000d65c7 : xor al, al ; pop rbx ; ret
0x00000000000da943 : xor al, al ; ret
0x0000000000077d26 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001782c5 : xor al, byte ptr [rax] ; add byte ptr [rax], ch ; out dx, eax ; jmp 0x1782d1
0x0000000000060fca : xor al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000007e8ac : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000007e988 : xor al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000077c85 : xor al, byte ptr [rax] ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000084b3c : xor al, byte ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000083d28 : xor al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000787f4 : xor al, byte ptr [rax] ; jne 0x7e193 ; ret
0x0000000000079cab : xor al, byte ptr [rax] ; jne 0x7e25d ; pop rbx ; ret
0x000000000007bea4 : xor al, byte ptr [rax] ; mov edi, 0x8b8 ; call 0x780c9
0x000000000007bfa3 : xor al, byte ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000083cdf : xor al, byte ptr [rax] ; mov qword ptr [rip + 0x323c20], rax ; ret
0x000000000007fa1d : xor al, byte ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000007bc8f : xor al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000077135 : xor al, byte ptr [rax] ; ret
0x000000000007d2e4 : xor al, byte ptr [rax] ; test eax, eax ; js 0x7d2f7 ; ret
0x000000000007ac03 : xor al, byte ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x000000000007889e : xor al, byte ptr [rax] ; xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007884d : xor al, byte ptr [rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x00000000000e5951 : xor al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x00000000001882ad : xor al, byte ptr [rcx] ; add byte ptr [rax - 0xe], al ; jmp qword ptr [rbx]
0x000000000004af81 : xor al, byte ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000000df928 : xor ax, ax ; ret
0x000000000018194d : xor bh, ch ; jmp qword ptr [rdx]
0x0000000000178830 : xor bh, dh ; jmp 0x178836
0x000000000019cc15 : xor bh, dh ; jmp qword ptr [rdx]
0x0000000000084f9c : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000000f44e2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018dfa4 : xor bl, ch ; hlt ; jmp qword ptr [rdx]
0x000000000016d298 : xor bl, ch ; sti ; call qword ptr [rax]
0x0000000000077dae : xor bl, dh ; ret
0x000000000009cbcc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000084e5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000043ae7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x43b5d ; xor eax, eax ; ret
0x0000000000110b22 : xor byte ptr [r8], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000007214b : xor byte ptr [rax + 0x29], cl ; ret
0x00000000000b1ed7 : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x000000000008010f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000007fff1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000091736 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000019d780 : xor byte ptr [rax + rdi*8], al ; jmp qword ptr [rcx]
0x0000000000099947 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000043e28 : xor byte ptr [rax - 0x75], cl ; jbe 0x43ea4 ; xor eax, eax ; ret
0x0000000000043ae8 : xor byte ptr [rax - 0x75], cl ; jg 0x43b5c ; xor eax, eax ; ret
0x0000000000043e27 : xor byte ptr [rax - 0x75], r9b ; jbe 0x43ea5 ; xor eax, eax ; ret
0x000000000007ff1f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000116b6a : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000af9b7 : xor byte ptr [rax - 0x77], cl ; jmp 0x48cd830d
0x00000000000aee49 : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccd779f
0x00000000000aeed5 : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccd782b
0x00000000000aef56 : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccd78ac
0x00000000000b0673 : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccd8fc9
0x00000000000cc98c : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000b02d9 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000016e0c4 : xor byte ptr [rax - 0x785f0004], cl ; cld ; call qword ptr [rax]
0x0000000000107971 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x00000000000efd93 : xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000019ce94 : xor byte ptr [rax], 0xf7 ; jmp qword ptr [rdx]
0x000000000016ce24 : xor byte ptr [rax], ah ; sti ; inc dword ptr [rax] ; and ebx, edi ; call rax
0x0000000000110b23 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x0000000000083d68 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021b63 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030419 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000002eabd : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000d908a : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000009bc35 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006e37e : xor byte ptr [rax], al ; je 0x6e38d ; pop rbx ; ret
0x000000000016d6b4 : xor byte ptr [rax], bh ; cld ; inc dword ptr [rax] ; cmp bh, ah ; jmp rax
0x000000000009b1c7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009cbd0 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009cbcf : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000818b9 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000f759b : xor byte ptr [rbp - 0x16], dh ; ret
0x000000000007cfda : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bbc53 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000182c97 : xor byte ptr [rbx + 0xae60206], al ; ret
0x0000000000085b1b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000016ce7c : xor byte ptr [rbx + rdi*8], dh ; jmp qword ptr [rax]
0x000000000007672e : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000015ec64 : xor byte ptr [rbx - 0x5a7f000e], ah ; call rax
0x0000000000184270 : xor byte ptr [rbx], al ; cli ; call qword ptr [rax]
0x000000000009cbcd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000a63ca : xor byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000d07cb : xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x000000000009e580 : xor byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x000000000009de29 : xor byte ptr [rcx + rcx*4 - 0xf], cl ; mov rdi, qword ptr [r13] ; call r12
0x00000000000d0d4b : xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x840f
0x000000000016dec0 : xor byte ptr [rcx - 0x775f0004], cl ; cld ; call qword ptr [rax]
0x000000000019a320 : xor byte ptr [rcx - 9], dh ; jmp qword ptr [rax]
0x00000000000c2a7e : xor byte ptr [rcx], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fef23 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000e06dc : xor byte ptr [rcx], 0xc0 ; ret
0x00000000000cdb29 : xor byte ptr [rcx], bh ; ret 0x1772
0x00000000000c34ef : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000eb542 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000016d474 : xor byte ptr [rcx], dl ; cld ; call qword ptr [rax]
0x00000000000c1fe2 : xor byte ptr [rcx], dl ; je 0xc1ff6 ; xor eax, eax ; ret
0x0000000000180c64 : xor byte ptr [rdi + rbp*8], ah ; jmp qword ptr [rdx]
0x000000000016e38c : xor byte ptr [rdi - 0x52df0004], 0xfc ; jmp rax
0x00000000001977fc : xor byte ptr [rdi - 0xa], cl ; jmp qword ptr [rdx]
0x000000000018b510 : xor byte ptr [rdi - 0xc], ah ; jmp qword ptr [rcx]
0x000000000016cef4 : xor byte ptr [rdi - 5], ah ; call qword ptr [rax]
0x000000000016d630 : xor byte ptr [rdi], 0xfc ; inc dword ptr [rax + 0x39] ; cld ; jmp qword ptr [rax]
0x00000000000ab192 : xor byte ptr [rdi], al ; add byte ptr [rax - 0x39], cl ; ret 0x400
0x000000000017ea10 : xor byte ptr [rdi], bl ; out dx, eax ; call rcx
0x000000000016d490 : xor byte ptr [rdi], cl ; cld ; push rax ; adc ah, bh ; call rax
0x00000000000f8eb2 : xor byte ptr [rdi], cl ; test byte ptr [rdx - 0x77000000], ch ; ret 0xe283
0x000000000016d440 : xor byte ptr [rdi], dl ; cld ; call qword ptr [rax]
0x0000000000031c8f : xor byte ptr [rdx + 0x13], cl ; add cl, ch ; ret
0x00000000001785b7 : xor byte ptr [rdx], al ; ret
0x00000000001474ef : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000083a3c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000084e5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016e3c8 : xor byte ptr [rsi - 0x525f0004], ch ; cld ; call qword ptr [rsi]
0x000000000015ed9c : xor byte ptr [rsi - 0x585f0004], ah ; cld ; call qword ptr [rax]
0x00000000001974d4 : xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rdx]
0x000000000018e2a0 : xor byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000018d7e0 : xor byte ptr [rsi - 0xb], al ; jmp qword ptr [rcx]
0x0000000000041d74 : xor byte ptr [rsi], dh ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x000000000016d69c : xor byte ptr [rsp + rdi*8], bh ; jmp qword ptr [rax]
0x00000000000e4ff1 : xor ch, byte ptr [rax + rax] ; add rsp, 0x18 ; ret
0x0000000000181874 : xor ch, byte ptr [rsi] ; out dx, eax ; jmp qword ptr [rdx]
0x000000000016d848 : xor ch, byte ptr [rsp + rdi*8 - 1] ; ret 0xfc6b
0x000000000009af58 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000009af6e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009af90 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009afae : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x000000000009afce : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009aff4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000009b010 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009b030 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000009b050 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009b076 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009b098 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000009b0b6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000009b0d6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000009b0f2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000009b112 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000009b132 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000009b152 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009b178 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000009b1c8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000009ae9e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009aebc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x000000000009aedc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x000000000009aefe : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009af1e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009af3e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000009add4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009ade6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009adfc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x000000000009ae14 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009ae2a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x000000000009ae3c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ae5a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ae66 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009ae7c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x000000000009adc0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001945c4 : xor cl, al ; cmc ; jmp qword ptr [rdx]
0x000000000011156f : xor cl, byte ptr [rax - 0x77] ; jp 0x111581 ; ret
0x0000000000111587 : xor cl, byte ptr [rax - 0x77] ; jp 0x111599 ; ret
0x0000000000111dcf : xor cl, byte ptr [rax - 0x77] ; jp 0x111de1 ; ret
0x0000000000111de7 : xor cl, byte ptr [rax - 0x77] ; jp 0x111df9 ; ret
0x0000000000111e17 : xor cl, byte ptr [rax - 0x77] ; jp 0x111e29 ; ret
0x000000000004304d : xor cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000000aa4c6 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000b5891 : xor cl, byte ptr [rax - 0x77] ; ret 0xdb31
0x00000000000b117a : xor cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000010e6e8 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c1ff7 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000002796a : xor cl, byte ptr [rbp + 0x39] ; ret 0x3672
0x00000000000bcf7d : xor cl, byte ptr [rdi] ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000797ed : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000061b0a : xor cl, ch ; ret
0x00000000000968e0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000017ebbc : xor cl, dh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000178ed0 : xor dh, bh ; jmp 0x178ed6
0x00000000000dbf59 : xor dh, bl ; ret
0x000000000016e418 : xor dh, byte ptr [rsp + rdi*8 - 0x34c5d01] ; jmp qword ptr [rdx]
0x000000000019cedc : xor dil, r14b ; jmp qword ptr [rdx]
0x000000000016d318 : xor dl, ch ; sti ; call qword ptr [rax]
0x0000000000021c44 : xor dword ptr [rax + rax], edx ; ret
0x000000000009132e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000117541 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000048ae5 : xor dword ptr [rcx - 3], 0xffffffff ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000606d0 : xor dword ptr [rcx], ebp ; ret
0x0000000000041230 : xor eax, 0x19b ; call rax
0x00000000000e04f2 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000006b4fb : xor eax, 0x30 ; call rax
0x000000000007e932 : xor eax, 0x328f39 ; ret
0x0000000000060a87 : xor eax, 0x3444d4 ; call rax
0x000000000005810b : xor eax, 0x34ce50 ; call rax
0x0000000000056894 : xor eax, 0x34e6c7 ; call rax
0x0000000000051308 : xor eax, 0x353c53 ; call rax
0x000000000004bc54 : xor eax, 0x359307 ; call rax
0x0000000000046408 : xor eax, 0x35eb53 ; call rax
0x0000000000160010 : xor eax, 0x3ffff5c2 ; ret 0xfff5
0x00000000000d1ae7 : xor eax, 0x48ffffed ; add esp, 0x18 ; ret
0x00000000000fd1c4 : xor eax, 0x68c77 ; xor edx, edx ; call 0x109459
0x000000000010d942 : xor eax, 0x7d8041 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x00000000000ffa27 : xor eax, 0x8b002a9d ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000039922 : xor eax, 0x8c48348 ; ret
0x000000000004f843 : xor eax, 0xbe0f4800 ; ret 0x4d64
0x000000000000245d : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x0000000000076dfb : xor eax, 0xffffe910 ; call rax
0x00000000000769fb : xor eax, 0xffffed10 ; call rax
0x0000000000075bdb : xor eax, 0xfffffb30 ; call rax
0x000000000006b7a3 : xor eax, 0xfffffd88 ; call rax
0x0000000000075973 : xor eax, 0xfffffd98 ; call rax
0x00000000000d4816 : xor eax, 0xfffffff ; ret 0x8588
0x0000000000021b60 : xor eax, dword ptr [0x30] ; call rax
0x000000000002eaba : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000077219 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000771b4 : xor eax, dword ptr [rax] ; add dword ptr [rip + 0x3305c7], 1 ; ret
0x000000000006b560 : xor eax, dword ptr [rax] ; jne 0x6b937 ; ret
0x0000000000075785 : xor eax, dword ptr [rax] ; jne 0x77244 ; ret
0x00000000000771f0 : xor eax, dword ptr [rax] ; jne 0x7746d ; ret
0x000000000004ae64 : xor eax, dword ptr [rip - 0x77cb800] ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000076f1b : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000043139 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007d9ce : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000adcd2 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001025e5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000112ee1 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011e230 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000037bbc : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000354b0 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x000000000007cc80 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002e5c0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000e41f9 : xor eax, eax ; call 0x50c68
0x0000000000070ba7 : xor eax, eax ; call r12
0x0000000000116b70 : xor eax, eax ; call rdx
0x0000000000038226 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x38238 ; pop rbx ; ret
0x00000000000c3704 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xc3699 ; pop rbx ; ret
0x00000000000eb543 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c41d3 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xc41e8 ; ret
0x00000000000e552d : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xe5540 ; pop rbx ; ret
0x00000000000b9a4d : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x00000000000e9c74 : xor eax, eax ; cmp rdx, rcx ; cmovae rax, rsi ; ret
0x00000000000f45b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000e10c1 : xor eax, eax ; cmp rsi, rdx ; ja 0xe10d8 ; ret
0x00000000000b600f : xor eax, eax ; jmp 0xb5fd8
0x00000000000d12e6 : xor eax, eax ; jmp 0xd0bf5
0x000000000010be10 : xor eax, eax ; jmp rcx
0x00000000000fd818 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000103373 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000038847 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000038857 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000103334 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000091358 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f53a1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000010f7c7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000038edd : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000c658c : xor eax, eax ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000359dd : xor eax, eax ; nop ; ret
0x0000000000075232 : xor eax, eax ; pop r12 ; ret
0x00000000000a9054 : xor eax, eax ; pop r14 ; ret
0x00000000000c27bc : xor eax, eax ; pop r15 ; ret
0x0000000000109ef3 : xor eax, eax ; pop rbp ; jmp rcx
0x000000000010b598 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000004312c : xor eax, eax ; pop rbp ; ret
0x00000000000f5411 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000023fed : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002b18a : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000241f3 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033bc6 : xor eax, eax ; pop rbx ; ret
0x00000000000b5f2e : xor eax, eax ; pop rdx ; ret
0x0000000000035976 : xor eax, eax ; ret
0x000000000009200e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000072df0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000072e00 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000c3730 : xor eax, eax ; test cl, 1 ; jne 0xc36c6 ; pop rbx ; ret
0x000000000009bb78 : xor eax, eax ; test dh, 0xf0 ; je 0x9bb4b ; movzx eax, dl ; pop rbx ; ret
0x000000000008d374 : xor eax, eax ; test dl, dl ; cmovne rax, rcx ; ret
0x00000000000e5252 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xe5265
0x000000000009dd17 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000017de14 : xor eax, ecx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000038b3d : xor eax, edx ; ret
0x00000000000381a7 : xor eax, edx ; sub eax, edx ; ret
0x00000000000381bb : xor eax, edx ; sub rax, rdx ; ret
0x00000000000e4f8e : xor ebp, dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002dd0c : xor ebp, ebp ; jmp 0x2dd18
0x000000000009f574 : xor ebp, ebp ; mov edx, eax ; jmp 0x9f523
0x00000000000a1ac4 : xor ebp, ebp ; mov edx, eax ; jmp 0xa1a73
0x00000000000a3f24 : xor ebp, ebp ; mov edx, eax ; jmp 0xa3ed3
0x000000000014c077 : xor ebp, ebp ; push rbx ; ret
0x000000000015ee41 : xor ebx, 0xf38110ff ; jmp qword ptr [rax]
0x000000000015ee6d : xor ebx, 0xf381c0ff ; call rax
0x000000000015ee71 : xor ebx, 0xf381d0ff ; jmp rax
0x000000000015ee7d : xor ebx, 0xf38200ff ; call qword ptr [rax]
0x000000000006a1f9 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010a727 : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000bb61e : xor ebx, esi ; ret
0x0000000000181aae : xor ecx, dword ptr [rcx + 0xd1cffef] ; loope 0x181afe ; out dx, eax ; jmp qword ptr [rdx]
0x000000000006d3e9 : xor ecx, dword ptr [rsi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x6d3aa
0x0000000000107b25 : xor edi, dword ptr [0x30] ; call rax
0x000000000017bfc6 : xor edi, dword ptr [rbx + 0xd1cffee] ; loopne 0x17bf91 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001835d4 : xor edi, dword ptr [rdx - 0x11] ; jmp qword ptr [rdx]
0x000000000017fc01 : xor edi, ebp ; jmp qword ptr [rdx]
0x000000000016ce79 : xor edi, ebx ; push qword ptr [rax] ; xor al, 0xfb ; jmp qword ptr [rax]
0x000000000007ac05 : xor edi, edi ; call qword ptr [rax]
0x00000000000788a0 : xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007884f : xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x0000000000077da9 : xor edi, edx ; mov byte ptr [rax + rsi], dil ; ret
0x000000000019caad : xor edi, esi ; jmp qword ptr [rdx]
0x0000000000172359 : xor edi, esi ; jmp rsp
0x0000000000030416 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b0c : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000010d50a : xor edx, ecx ; mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x0000000000022f20 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000ae311 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000fd1c9 : xor edx, edx ; call 0x109454
0x00000000000737e9 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000257ba : xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000081920 : xor edx, edx ; mov eax, edx ; ret
0x00000000000913fd : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000076439 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010871e : xor edx, edx ; mov rdi, rbx ; call r10
0x0000000000083cc3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000006bdc0 : xor edx, edx ; pop r12 ; jmp rax
0x00000000000737ac : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000e5434 : xor edx, edx ; test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xe5418
0x000000000003b0c6 : xor esi, 0x6348ffff ; ret 0x21e9
0x000000000016ff79 : xor esi, eax ; call rsp
0x000000000007e922 : xor esi, edx ; mov qword ptr [rax + 8], rsi ; ret
0x0000000000022563 : xor esi, esi ; call 0x22d78
0x00000000000c91ae : xor esi, esi ; call 0x85626
0x00000000000c3c7a : xor esi, esi ; mov edx, r8d ; jmp 0xc3c96
0x000000000016d745 : xor esp, edi ; call qword ptr [rax]
0x00000000000e4f8d : xor r13, qword ptr [r8 + r8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019cb84 : xor r15d, esi ; jmp qword ptr [rdx]
0x0000000000070ba6 : xor r8d, r8d ; call r12
0x00000000000c1ff6 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000e04f1 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021b5f : xor rax, qword ptr [0x30] ; call rax
0x000000000002eab9 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021b5e : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000002eab8 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000081dd5 : xor rax, rax ; ret
0x00000000000381ba : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000107b24 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000107b23 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000030415 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000030414 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000010d509 : xor rdx, rcx ; mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x000000000006bdbf : xor rdx, rdx ; pop r12 ; jmp rax
0x000000000007e921 : xor rsi, rdx ; mov qword ptr [rax + 8], rsi ; ret

Unique gadgets found: 20976
